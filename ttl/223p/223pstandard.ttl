@prefix afn: <http://jena.hpl.hp.com/ARQ/function#> .
@prefix arg: <http://spinrdf.org/arg#> .
@prefix bacnet: <http://data.ashrae.org/bacnet/2020#> .
@prefix brick: <https://brickschema.org/schema/Brick#> .
@prefix bsh: <https://brickschema.org/schema/BrickShape#> .
@prefix constant: <http://qudt.org/vocab/constant/> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix dcterms1: <http://purl.org/dc/terms#> .
@prefix domain: <http://data.ashrae.org/standard223/1.0/vocab/domain#> .
@prefix dtype: <http://www.linkedmodel.org/schema/dtype#> .
@prefix enum: <http://data.ashrae.org/standard223/1.0/vocab/enumeration#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix g36: <http://data.ashrae.org/standard223/1.0/extension/g36#> .
@prefix graphql: <http://datashapes.org/graphql#> .
@prefix ifc: <https://brickschema.org/extension/ifc#> .
@prefix ns1: <http://datashapes.org/owl2shacl#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix pfx: <http://qudt.org/vocab/prefix/> .
@prefix prefix: <http://qudt.org/2.1/vocab/prefix/> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix qkdv: <http://qudt.org/vocab/dimensionvector/> .
@prefix quantitykind: <http://qudt.org/vocab/quantitykind/> .
@prefix qudt: <http://qudt.org/schema/qudt/> .
@prefix qudt.type: <http://qudt.org/vocab/type/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix role: <http://data.ashrae.org/standard223/1.0/vocab/role#> .
@prefix s223: <http://data.ashrae.org/standard223#> .
@prefix sdo1: <http://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix sosa: <http://www.w3.org/ns/sosa/> .
@prefix sou: <http://qudt.org/vocab/sou/> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix spl: <http://spinrdf.org/spl#> .
@prefix tag: <https://brickschema.org/schema/BrickTag#> .
@prefix time: <http://www.w3.org/2006/time#> .
@prefix unit: <http://qudt.org/vocab/unit/> .
@prefix vaem: <http://www.linkedmodel.org/schema/vaem#> .
@prefix vann: <http://purl.org/vocab/vann/> .
@prefix vcard: <http://www.w3.org/2006/vcard/ns#> .
@prefix voaf: <http://purl.org/vocommons/voaf#> .
@prefix voag: <http://voag.linkedmodel.org/schema/voag#> .
@prefix voag1: <http://voag.linkedmodel.org/voag#> .
@prefix voag2: <http://voag.linkedmodel.org/voag/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

s223:Class a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Class" ;
    rdfs:subClassOf rdfs:Class ;
    sh:property [ sh:path rdfs:label ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    sh:message "{$this} must have an rdfs:label" ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/validation/schema> ;
                    sh:select """
SELECT $this
WHERE {
FILTER (NOT EXISTS {$this rdfs:label ?something}) .
}
""" ] ] .

qudt:Statement a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Statement" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf rdf:Statement .

sp:Add a rdfs:Class ;
    rdfs:label "Add" ;
    rdfs:comment "A SPARQL UPDATE ADD operation. Uses sp:source and sp:target to represent \"from\" and \"to\" graphs, respectively. Also sp:silent may be true." ;
    rdfs:seeAlso <https://www.w3.org/TR/sparql11-update/#add> ;
    rdfs:subClassOf sp:Update .

sp:Aggregation a rdfs:Class ;
    rdfs:label "Aggregation" ;
    rdfs:comment "Base class of aggregation types (not part of the SPARQL 1.0 standard but supported by ARQ and other engines)." ;
    rdfs:subClassOf sp:SystemClass .

sp:AltPath a rdfs:Class ;
    rdfs:label "Alt path" ;
    rdfs:comment "An alternative path with the union of sp:path1 and sp:path2." ;
    rdfs:subClassOf sp:Path .

sp:Asc a rdfs:Class ;
    rdfs:label "Asc" ;
    rdfs:comment "Marker to indicate ascending order." ;
    rdfs:subClassOf sp:OrderByCondition .

sp:Ask a rdfs:Class ;
    rdfs:label "Ask" ;
    rdfs:comment "An ASK query that returns true if the condition in the body is met by at least one result set." ;
    rdfs:subClassOf sp:Query .

sp:Avg a rdfs:Class ;
    rdfs:label "AVG" ;
    rdfs:comment "Represents AVG aggregations." ;
    rdfs:subClassOf sp:Aggregation .

sp:Bind a rdfs:Class ;
    rdfs:label "Bind" ;
    rdfs:comment "A BIND element." ;
    rdfs:subClassOf sp:Element .

sp:Clear a rdfs:Class ;
    rdfs:label "Clear" ;
    rdfs:comment "An Update operation that removes all triples from a specified graph. Must specify the graph using sp:graphIRI, or sp:default, sp:named or sp:all. May have the SILENT flag, encoded using sp:silent." ;
    rdfs:subClassOf sp:Update .

sp:Command a rdfs:Class ;
    rdfs:label "Command" ;
    rdfs:comment "A shared superclass for sp:Query and sp:Update that can be used to specify that the range of property can be either one." ;
    rdfs:subClassOf sp:SystemClass .

sp:Construct a rdfs:Class ;
    rdfs:label "Construct" ;
    rdfs:comment "A CONSTRUCT-type query that can be used to construct new triples from template triples (head) that use variable bindings from the match patterns (body)." ;
    rdfs:subClassOf sp:Query,
        spin:Rule .

sp:Count a rdfs:Class ;
    rdfs:label "COUNT" ;
    rdfs:comment "Counts the number of times a variable is used. The variable is stored in the variable property. This might be left blank to indicate COUNT(*)." ;
    rdfs:subClassOf sp:Aggregation .

sp:Create a rdfs:Class ;
    rdfs:label "Create" ;
    rdfs:comment "An Update operation that creates a new empty graph with a name specified by sp:graphIRI. May have sp:silent set to true." ;
    rdfs:subClassOf sp:Update .

sp:Delete a rdfs:Class,
        owl:DeprecatedClass ;
    rdfs:label "Delete" ;
    rdfs:comment """Deprecated - use sp:Modify instead.

Represents a DELETE FROM (part of SPARQL UPDATE language). The graph IRIs are stored in sp:graphIRI. The template patterns to delete are stored in sp:deletePattern. The WHERE clause is represented using sp:where.""" ;
    rdfs:subClassOf sp:Modify .

sp:DeleteData a rdfs:Class ;
    rdfs:label "Delete data" ;
    rdfs:comment "An Update operation to delete specific triples. The graph triples are represented using sp:data, which points to an rdf:List of sp:Triples or sp:NamedGraphs." ;
    rdfs:subClassOf sp:Update .

sp:DeleteWhere a rdfs:Class ;
    rdfs:label "Delete where" ;
    rdfs:comment "An Update operation where the triples matched by the WHERE clause (sp:where) will be the triples deleted." ;
    rdfs:subClassOf sp:Update,
        spin:Rule .

sp:Desc a rdfs:Class ;
    rdfs:label "Desc" ;
    rdfs:comment "Marker to indicate descending order." ;
    rdfs:subClassOf sp:OrderByCondition .

sp:Describe a rdfs:Class ;
    rdfs:label "Describe" ;
    rdfs:comment "A DESCRIBE-type Query." ;
    rdfs:subClassOf sp:Query .

sp:Drop a rdfs:Class ;
    rdfs:label "Drop" ;
    rdfs:comment "An Update operation that removes a specified graph from the Graph Store. Must specify the graph using sp:graphIRI, or sp:default, sp:named or sp:all. May have the SILENT flag, encoded using sp:silent." ;
    rdfs:subClassOf sp:Update .

sp:Element a rdfs:Class ;
    rdfs:label "Element" ;
    rdfs:comment "An abstract base class for all pattern elements." ;
    rdfs:subClassOf sp:SystemClass .

sp:ElementGroup a rdfs:Class ;
    rdfs:label "Element group" ;
    rdfs:comment "Abstract base class of group patterns." ;
    rdfs:subClassOf sp:Element .

sp:ElementList a rdfs:Class ;
    rdfs:label "Element list" ;
    rdfs:comment "A list of Elements. This class is never instantiated directly as SPIN will use plain rdf:Lists to store element lists." ;
    rdfs:subClassOf sp:ElementGroup,
        rdf:List .

sp:Exists a rdfs:Class ;
    rdfs:label "Exists" ;
    rdfs:comment "An EXISTS element group." ;
    rdfs:subClassOf sp:ElementGroup .

sp:Filter a rdfs:Class ;
    rdfs:label "Filter" ;
    rdfs:comment "A constraint element that evaluates a given expression to true or false." ;
    rdfs:subClassOf sp:Element .

sp:GroupConcat a rdfs:Class ;
    rdfs:label "GROUP_CONCAT" ;
    rdfs:comment "Represents GROUP_CONCAT aggregations." ;
    rdfs:subClassOf sp:Aggregation .

sp:Insert a rdfs:Class,
        owl:DeprecatedClass ;
    rdfs:label "Insert" ;
    rdfs:comment """Deprecated - use sp:Modify instead.

Represents a INSERT INTO (part of SPARQL UPDATE language). The graph IRIs are stored in sp:graphIRI. The template patterns to delete are stored in sp:insertPattern. The WHERE clause is represented using sp:where.""" ;
    rdfs:subClassOf sp:Modify .

sp:InsertData a rdfs:Class ;
    rdfs:label "Insert data" ;
    rdfs:comment "An Update operation to insert specific triples. The graph triples are represented using sp:data, which points to an rdf:List of sp:Triples or sp:NamedGraphs." ;
    rdfs:subClassOf sp:Update .

sp:Let a rdfs:Class,
        owl:DeprecatedClass ;
    rdfs:label "Let" ;
    rdfs:comment """Deprecated: use sp:Bind instead.

A variable assignment (LET (?<varName> := <expression>)). Not part of the SPARQL 1.0 standard, but (for example) ARQ.""" ;
    rdfs:subClassOf sp:Bind .

sp:Load a rdfs:Class ;
    rdfs:label "Load" ;
    rdfs:comment "A LOAD Update operation. The document to load is specified using sp:document, and the (optional) target graph using sp:into." ;
    rdfs:subClassOf sp:Update .

sp:Max a rdfs:Class ;
    rdfs:label "MAX" ;
    rdfs:comment "Represents MAX aggregations." ;
    rdfs:subClassOf sp:Aggregation .

sp:Min a rdfs:Class ;
    rdfs:label "MIN" ;
    rdfs:comment "Represents MIN aggregations." ;
    rdfs:subClassOf sp:Aggregation .

sp:Minus a rdfs:Class ;
    rdfs:label "Minus" ;
    rdfs:comment "A MINUS element group." ;
    rdfs:subClassOf sp:ElementGroup .

sp:ModPath a rdfs:Class ;
    rdfs:label "Mod path" ;
    rdfs:comment "A modified path such as rdfs:subClassOf*." ;
    rdfs:subClassOf sp:Path .

sp:Modify a rdfs:Class ;
    rdfs:label "Modify" ;
    rdfs:comment "Represents a MODIFY (part of SPARQL UPDATE language). The graph IRIs are stored in sp:graphIRI. The template patterns are stored in sp:deletePattern and sp:insertPattern. The WHERE clause is represented using sp:where." ;
    rdfs:subClassOf sp:Update,
        spin:Rule .

sp:NamedGraph a rdfs:Class ;
    rdfs:label "Named graph" ;
    rdfs:comment "A named Graph element such as GRAPH <uri> {...}." ;
    rdfs:subClassOf sp:ElementGroup .

sp:NotExists a rdfs:Class ;
    rdfs:label "Not exists" ;
    rdfs:comment "A NOT EXISTS element group." ;
    rdfs:subClassOf sp:ElementGroup .

sp:Optional a rdfs:Class ;
    rdfs:label "Optional" ;
    rdfs:comment "An optional element in a query." ;
    rdfs:subClassOf sp:ElementGroup .

sp:OrderByCondition a rdfs:Class ;
    rdfs:label "Order by condition" ;
    rdfs:comment "An abstract base class for ascending or descending order conditions. Instances of this class (typically bnodes) must have a value for expression to point to the actual values." ;
    rdfs:subClassOf sp:SystemClass .

sp:Path a rdfs:Class ;
    rdfs:label "Path" ;
    rdfs:comment "The base class of SPARQL property path expressions. Paths are used by sp:TriplePath triple paths." ;
    rdfs:subClassOf sp:SystemClass .

sp:Query a rdfs:Class ;
    rdfs:label "Query" ;
    rdfs:comment "Abstract base class of the various types of supported queries. Common to all types of queries is that they can have a body (\"WHERE clause\")." ;
    rdfs:subClassOf sp:Command .

sp:ReverseLinkPath a rdfs:Class ;
    rdfs:label "Reverse link path" ;
    rdfs:subClassOf sp:Path .

sp:ReversePath a rdfs:Class ;
    rdfs:label "Reverse path" ;
    rdfs:comment "A path with reversed direction." ;
    rdfs:subClassOf sp:Path .

sp:Sample a rdfs:Class ;
    rdfs:label "SAMPLE" ;
    rdfs:comment "Represents SAMPLE aggregations" ;
    rdfs:subClassOf sp:Aggregation .

sp:Select a rdfs:Class ;
    rdfs:label "Select query" ;
    rdfs:comment "A SELECT-type query that returns variable bindings as its result." ;
    rdfs:subClassOf sp:Query .

sp:SeqPath a rdfs:Class ;
    rdfs:label "Seq path" ;
    rdfs:comment "A sequence of multiple paths." ;
    rdfs:subClassOf sp:Path .

sp:Service a rdfs:Class ;
    rdfs:label "Service" ;
    rdfs:comment "A SERVICE call that matches a nested sub-pattern against a SPARQL end point specified by a URI." ;
    rdfs:subClassOf sp:ElementGroup .

sp:SubQuery a rdfs:Class ;
    rdfs:label "Sub query" ;
    rdfs:comment "A nested SELECT query inside of an element list. The query is stored in sp:query." ;
    rdfs:subClassOf sp:Element .

sp:Sum a rdfs:Class ;
    rdfs:label "SUM" ;
    rdfs:comment "Represents sum aggregations, e.g. SELECT SUM(?varName)..." ;
    rdfs:subClassOf sp:Aggregation .

sp:SystemClass a rdfs:Class ;
    rdfs:label "SP System class" ;
    rdfs:comment "An \"artificial\" root class that groups all SP classes. This makes them look much less overwhelming in UI tools. Typical end users don't need to see those classes anyway." ;
    rdfs:subClassOf rdfs:Resource .

sp:Triple a rdfs:Class ;
    rdfs:label "Triple" ;
    rdfs:comment "A base class for TriplePattern and TripleTemplate. This basically specifies that subject, predicate and object must be present." ;
    rdfs:subClassOf sp:Tuple .

sp:TriplePath a rdfs:Class ;
    rdfs:label "Triple path" ;
    rdfs:comment "Similar to a TriplePattern, but with a path expression as its predicate. For example, this can be used to express transitive sub-class relationships (?subClass rdfs:subClassOf* ?superClass)." ;
    rdfs:subClassOf sp:Element,
        sp:Tuple .

sp:TriplePattern a rdfs:Class ;
    rdfs:label "Triple pattern" ;
    rdfs:comment "A triple pattern used in the body of a query." ;
    rdfs:subClassOf sp:Element,
        sp:Triple .

sp:TripleTemplate a rdfs:Class ;
    rdfs:label "Triple template" ;
    rdfs:comment "A prototypical triple used as template in the head of a Construct query. May contain variables." ;
    rdfs:subClassOf sp:Triple .

sp:Tuple a rdfs:Class ;
    rdfs:label "Tuple" ;
    rdfs:comment "Abstract base class for things that have subject and object." ;
    rdfs:subClassOf sp:SystemClass .

sp:Union a rdfs:Class ;
    rdfs:label "Union" ;
    rdfs:comment "A UNION group." ;
    rdfs:subClassOf sp:ElementGroup .

sp:Update a rdfs:Class ;
    rdfs:label "Update" ;
    rdfs:comment "Abstract base class to group the various SPARQL UPDATE commands." ;
    rdfs:subClassOf sp:Command .

sp:Values a rdfs:Class ;
    rdfs:label "Values" ;
    rdfs:comment "A VALUES element. sp:varNames points to an rdf:List of strings for the variables, sp:values to an rdf:List of rdf:Lists with nodes for each variable, in the order defined by the variables list." ;
    rdfs:subClassOf sp:Element .

sp:Variable a rdfs:Class ;
    rdfs:label "Variable" ;
    rdfs:comment "A variable mentioned in a Triple or expression. Variables are often blank nodes with the variable name stored in ts:name. Variables can also be supplied with a URI in which case the system will attempt to reuse the same variable instance across multiple query definitions." ;
    rdfs:subClassOf sp:SystemClass .

spin:AskTemplate a rdfs:Class ;
    rdfs:label "Ask template" ;
    spin:constraint [ a spl:Attribute ;
            spl:maxCount 1 ;
            spl:minCount 0 ;
            spl:predicate spin:body ;
            spl:valueType sp:Ask ;
            rdfs:comment "The ASK query wrapped by this template." ] ;
    rdfs:comment "A SPIN template that wraps an ASK query." ;
    rdfs:subClassOf spin:Template .

spin:Column a rdfs:Class ;
    rdfs:label "Column" ;
    rdfs:comment "Provides metadata about a column in the result set of a (SPARQL) query, for example of the body queries of SPIN templates. Columns can define human-readable labels that serve as column titles, using rdfs:label." ;
    rdfs:subClassOf rdfs:Resource .

spin:ConstraintViolation a rdfs:Class ;
    rdfs:label "Constraint violation" ;
    rdfs:comment "An object that can be created by spin:constraints to provide information about a constraint violation." ;
    rdfs:subClassOf rdfs:Resource .

spin:ConstraintViolationLevel a rdfs:Class ;
    rdfs:label "Constraint violation level" ;
    rdfs:comment "The type of the supported levels of constraint violations, including spin:Error and spin:Warning." ;
    rdfs:subClassOf rdfs:Resource .

spin:ConstructTemplate a rdfs:Class ;
    rdfs:label "Construct template" ;
    spin:constraint [ a spl:Attribute ;
            spl:maxCount 1 ;
            spl:minCount 0 ;
            spl:predicate spin:body ;
            spl:valueType sp:Construct ;
            rdfs:comment "The CONSTRUCT query wrapped by this template." ] ;
    rdfs:subClassOf spin:Template .

spin:Function a rdfs:Class ;
    rdfs:label "Function" ;
    spin:constraint [ a spl:Attribute ;
            spl:maxCount 1 ;
            spl:minCount 0 ;
            spl:predicate spin:body ;
            rdfs:comment "the body of the function" ] ;
    rdfs:comment "Metaclass for functions that can be used in SPARQL expressions (e.g. FILTER or BIND). The function themselves are classes that are instances of this metaclass. Function calls are instances of the function classes, with property values for the arguments." ;
    rdfs:subClassOf spin:Module .

spin:LibraryOntology a rdfs:Class ;
    rdfs:label "Library ontology" ;
    rdfs:comment "A marker class that can be attached to base URIs (ontologies) to instruct SPIN engines that this ontology only contains a library of SPIN declarations. Library Ontologies should be ignored by SPIN inference engines even if they have been imported by a domain model. For example, a SPIN version of OWL RL may contain all the OWL RL axioms, attached to owl:Thing, but nothing else. However, when executed, these axioms should not be executed over themselves, because we don't want the system to reason about the SPIN triples to speed up things." ;
    rdfs:subClassOf owl:Ontology .

spin:MagicProperty a rdfs:Class ;
    rdfs:label "Magic property" ;
    rdfs:subClassOf spin:Function,
        rdf:Property .

spin:Module a rdfs:Class ;
    rdfs:label "Module" ;
    rdfs:comment "An abstract building block of a SPARQL system. A Module can take Arguments as input and applies them on an input RDF Graph. The Arguments should be declared as spin:constraints." ;
    rdfs:subClassOf rdfs:Class .

spin:Modules a rdfs:Class ;
    rdfs:label "Modules" ;
    spin:constructor [ a spl:ConstructDefaultValues ] ;
    rdfs:comment "An \"artificial\" parent class for all Functions and Templates." ;
    rdfs:subClassOf rdfs:Resource .

spin:Rule a rdfs:Class ;
    rdfs:label "Rule" ;
    rdfs:comment "Groups together the kinds of SPARQL commands that can appear as SPIN rules and constructors: CONSTRUCT, DELETE WHERE and DELETE/INSERT. This class is never to be instantiated directly." ;
    rdfs:subClassOf sp:Command .

spin:RuleProperty a rdfs:Class ;
    rdfs:label "Rule property" ;
    rdfs:comment "The metaclass of spin:rule and its subproperties. spin:RuleProperties can have additional metadata attached to them." ;
    rdfs:subClassOf rdf:Property .

spin:SelectTemplate a rdfs:Class ;
    rdfs:label "Select template" ;
    spin:constraint [ a spl:Attribute ;
            spl:maxCount 1 ;
            spl:minCount 0 ;
            spl:predicate spin:body ;
            spl:valueType sp:Select ;
            rdfs:comment "The SELECT query wrapped by this template." ] ;
    rdfs:comment "A SPIN template that wraps a SELECT query." ;
    rdfs:subClassOf spin:TableDataProvider,
        spin:Template .

spin:TableDataProvider a rdfs:Class ;
    rdfs:label "Table data provider" ;
    rdfs:comment """An abstraction of objects that can produce tabular data. This serves as a base class of spin:SelectTemplate, because SELECT queries can produce tables with columns for each result variable. However, other types of TableDataProviders are conceivable by other frameworks, and this class may prove as a useful shared foundation.

TableDataProviders can link to definitions of columns via spin:column, and these definitions can inform rendering engines.""" ;
    rdfs:subClassOf rdfs:Class .

spin:Template a rdfs:Class ;
    rdfs:label "Template" ;
    spin:constraint [ a spl:Attribute ;
            spl:maxCount 1 ;
            spl:minCount 0 ;
            spl:predicate spin:body ;
            rdfs:comment "the body of the Template" ] ;
    rdfs:comment "The metaclass of SPIN templates. Templates are classes that are instances of this class. A template represents a reusable SPARQL query or update request that can be parameterized with arguments. Templates can be instantiated in places where normally a SPARQL query or update request is used, in particular as spin:rules and spin:constraints." ;
    rdfs:subClassOf spin:Module .

spin:UpdateTemplate a rdfs:Class ;
    rdfs:label "Update template" ;
    spin:constraint [ a spl:Attribute ;
            spl:maxCount 1 ;
            spl:minCount 0 ;
            spl:predicate spin:body ;
            spl:valueType sp:Update ;
            rdfs:comment "The UPDATE command wrapped by this template." ] ;
    rdfs:comment "A SPIN template that has an UPDATE command as its body." ;
    rdfs:subClassOf spin:Template .

spl:ConstraintTemplate a rdfs:Class ;
    rdfs:label "Constraint template" ;
    rdfs:comment "Metaclass for CONSTRUCT templates that create spin:ConstraintViolations and can be used as values of spin:constraint." ;
    rdfs:subClassOf spin:ConstructTemplate .

spl:TestCase a rdfs:Class ;
    rdfs:label "Test case" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate spl:testExpression ;
            rdfs:comment "The test expression or SELECT query (anything that can be evaluated with spin:eval)." ],
        [ a spl:Argument ;
            spl:optional true ;
            spl:predicate spl:testResult ;
            rdfs:comment "The expected result of the test case, or nothing to indicate that an error is expected." ] ;
    rdfs:comment "A test to verify that a SPIN function or magic property works as expected, and to generate documentation of example uses of the function. Each TestCase consists of a SPARQL function call or an expression that can be executed with spin:eval, and an expected result. The test framework only needs to execute spin:eval on the expression and compare it with the expected result." ;
    rdfs:subClassOf rdfs:Resource .

spl:UnionTemplate a rdfs:Class ;
    rdfs:label "Union template" ;
    rdfs:comment "This type can be used for templates that serve as the union (or \"collector\") of other templates. Union templates differ from other templates in that all spl:Arguments are optional. This means that union templates can be declared as subclasses of multiple other templates, yet when instantiated, only some of the arguments defined by the superclasses need to be filled in." ;
    rdfs:subClassOf spin:Template .

sh:AbstractResult a rdfs:Class ;
    rdfs:label "Abstract result"@en ;
    rdfs:comment "The base class of validation results, typically not instantiated directly."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Resource .

sh:ConstraintComponent a rdfs:Class ;
    rdfs:label "Constraint component"@en ;
    rdfs:comment "The class of constraint components."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:Parameterizable .

sh:Function a rdfs:Class ;
    rdfs:label "Function"@en ;
    rdfs:comment "The class of SHACL functions."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:Parameterizable .

sh:JSConstraint a rdfs:Class ;
    rdfs:label "JavaScript-based constraint"@en ;
    rdfs:comment "The class of constraints backed by a JavaScript function."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:JSExecutable .

sh:JSExecutable a rdfs:Class ;
    rdfs:label "JavaScript executable"@en ;
    rdfs:comment "Abstract base class of resources that declare an executable JavaScript."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Resource .

sh:JSFunction a rdfs:Class ;
    rdfs:label "JavaScript function"@en ;
    rdfs:comment "The class of SHACL functions that execute a JavaScript function when called."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:Function,
        sh:JSExecutable .

sh:JSLibrary a rdfs:Class ;
    rdfs:label "JavaScript library"@en ;
    rdfs:comment "Represents a JavaScript library, typically identified by one or more URLs of files to include."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Resource .

sh:JSRule a rdfs:Class ;
    rdfs:label "JavaScript rule"@en ;
    rdfs:comment "The class of SHACL rules expressed using JavaScript."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:JSExecutable,
        sh:Rule .

sh:JSTarget a rdfs:Class ;
    rdfs:label "JavaScript target"@en ;
    rdfs:comment "The class of targets that are based on JavaScript functions."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:JSExecutable,
        sh:Target .

sh:JSTargetType a rdfs:Class ;
    rdfs:label "JavaScript target type"@en ;
    rdfs:comment "The (meta) class for parameterizable targets that are based on JavaScript functions."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:JSExecutable,
        sh:TargetType .

sh:JSValidator a rdfs:Class ;
    rdfs:label "JavaScript validator"@en ;
    rdfs:comment "A SHACL validator based on JavaScript. This can be used to declare SHACL constraint components that perform JavaScript-based validation when used."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:JSExecutable,
        sh:Validator .

sh:NodeKind a rdfs:Class ;
    rdfs:label "Node kind"@en ;
    rdfs:comment "The class of all node kinds, including sh:BlankNode, sh:IRI, sh:Literal or the combinations of these: sh:BlankNodeOrIRI, sh:BlankNodeOrLiteral, sh:IRIOrLiteral."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Resource .

sh:NodeShape a rdfs:Class ;
    rdfs:label "Node shape"@en ;
    rdfs:comment "A node shape is a shape that specifies constraint that need to be met with respect to focus nodes."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:Shape .

sh:Parameter a rdfs:Class ;
    rdfs:label "Parameter"@en ;
    rdfs:comment "The class of parameter declarations, consisting of a path predicate and (possibly) information about allowed value type, cardinality and other characteristics."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:PropertyShape .

sh:Parameterizable a rdfs:Class ;
    rdfs:label "Parameterizable"@en ;
    rdfs:comment "Superclass of components that can take parameters, especially functions and constraint components."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Resource .

sh:PrefixDeclaration a rdfs:Class ;
    rdfs:label "Prefix declaration"@en ;
    rdfs:comment "The class of prefix declarations, consisting of pairs of a prefix with a namespace."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Resource .

sh:PropertyGroup a rdfs:Class ;
    rdfs:label "Property group"@en ;
    rdfs:comment "Instances of this class represent groups of property shapes that belong together."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Resource .

sh:PropertyShape a rdfs:Class ;
    rdfs:label "Property shape"@en ;
    rdfs:comment "A property shape is a shape that specifies constraints on the values of a focus node for a given property or path."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:Shape .

sh:ResultAnnotation a rdfs:Class ;
    rdfs:label "Result annotation"@en ;
    rdfs:comment "A class of result annotations, which define the rules to derive the values of a given annotation property as extra values for a validation result."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Resource .

sh:Rule a rdfs:Class ;
    rdfs:label "Rule"@en ;
    rdfs:comment "The class of SHACL rules. Never instantiated directly."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Resource .

sh:SPARQLAskExecutable a rdfs:Class ;
    rdfs:label "SPARQL ASK executable"@en ;
    rdfs:comment "The class of SPARQL executables that are based on an ASK query."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:SPARQLExecutable .

sh:SPARQLAskValidator a rdfs:Class ;
    rdfs:label "SPARQL ASK validator"@en ;
    rdfs:comment "The class of validators based on SPARQL ASK queries. The queries are evaluated for each value node and are supposed to return true if the given node conforms."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:SPARQLAskExecutable,
        sh:Validator .

sh:SPARQLConstraint a rdfs:Class ;
    rdfs:label "SPARQL constraint"@en ;
    rdfs:comment "The class of constraints based on SPARQL SELECT queries."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:SPARQLSelectExecutable .

sh:SPARQLConstructExecutable a rdfs:Class ;
    rdfs:label "SPARQL CONSTRUCT executable"@en ;
    rdfs:comment "The class of SPARQL executables that are based on a CONSTRUCT query."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:SPARQLExecutable .

sh:SPARQLExecutable a rdfs:Class ;
    rdfs:label "SPARQL executable"@en ;
    rdfs:comment "The class of resources that encapsulate a SPARQL query."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Resource .

sh:SPARQLFunction a rdfs:Class ;
    rdfs:label "SPARQL function"@en ;
    rdfs:comment "A function backed by a SPARQL query - either ASK or SELECT."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:Function,
        sh:SPARQLAskExecutable,
        sh:SPARQLSelectExecutable .

sh:SPARQLRule a rdfs:Class ;
    rdfs:label "SPARQL CONSTRUCT rule"@en ;
    rdfs:comment "The class of SHACL rules based on SPARQL CONSTRUCT queries."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:Rule,
        sh:SPARQLConstructExecutable .

sh:SPARQLSelectExecutable a rdfs:Class ;
    rdfs:label "SPARQL SELECT executable"@en ;
    rdfs:comment "The class of SPARQL executables based on a SELECT query."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:SPARQLExecutable .

sh:SPARQLSelectValidator a rdfs:Class ;
    rdfs:label "SPARQL SELECT validator"@en ;
    rdfs:comment "The class of validators based on SPARQL SELECT queries. The queries are evaluated for each focus node and are supposed to produce bindings for all focus nodes that do not conform."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:SPARQLSelectExecutable,
        sh:Validator .

sh:SPARQLTarget a rdfs:Class ;
    rdfs:label "SPARQL target"@en ;
    rdfs:comment "The class of targets that are based on SPARQL queries."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:SPARQLAskExecutable,
        sh:SPARQLSelectExecutable,
        sh:Target .

sh:SPARQLTargetType a rdfs:Class ;
    rdfs:label "SPARQL target type"@en ;
    rdfs:comment "The (meta) class for parameterizable targets that are based on SPARQL queries."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:SPARQLAskExecutable,
        sh:SPARQLSelectExecutable,
        sh:TargetType .

sh:SPARQLUpdateExecutable a rdfs:Class ;
    rdfs:label "SPARQL UPDATE executable"@en ;
    rdfs:comment "The class of SPARQL executables based on a SPARQL UPDATE."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:SPARQLExecutable .

sh:Severity a rdfs:Class ;
    rdfs:label "Severity"@en ;
    rdfs:comment "The class of validation result severity levels, including violation and warning levels."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Resource .

sh:Shape a rdfs:Class ;
    rdfs:label "Shape"@en ;
    rdfs:comment "A shape is a collection of constraints that may be targeted for certain nodes."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Resource .

sh:Target a rdfs:Class ;
    rdfs:label "Target"@en ;
    rdfs:comment "The base class of targets such as those based on SPARQL queries."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Resource .

sh:TargetType a rdfs:Class ;
    rdfs:label "Target type"@en ;
    rdfs:comment "The (meta) class for parameterizable targets.	Instances of this are instantiated as values of the sh:target property."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Class,
        sh:Parameterizable .

sh:TripleRule a rdfs:Class ;
    rdfs:label "A rule based on triple (subject, predicate, object) pattern."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:Rule .

sh:ValidationReport a rdfs:Class ;
    rdfs:label "Validation report"@en ;
    rdfs:comment "The class of SHACL validation reports."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Resource .

sh:ValidationResult a rdfs:Class ;
    rdfs:label "Validation result"@en ;
    rdfs:comment "The class of validation results."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:AbstractResult .

sh:Validator a rdfs:Class ;
    rdfs:label "Validator"@en ;
    rdfs:comment "The class of validators, which provide instructions on how to process a constraint definition. This class serves as base class for the SPARQL-based validators and other possible implementations."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Resource .

sosa:ActuatableProperty a rdfs:Class,
        owl:Class ;
    rdfs:label "Actuatable Property"@en ;
    rdfs:comment "An actuatable quality (property, characteristic) of a FeatureOfInterest."@en ;
    rdfs:isDefinedBy sosa: ;
    skos:definition "An actuatable quality (property, characteristic) of a FeatureOfInterest."@en ;
    skos:example "A window actuator acts by changing the state between a frame and a window. The ability of the window to be opened and closed is its ActuatableProperty."@en .

sosa:Actuation a rdfs:Class,
        owl:Class ;
    rdfs:label "Actuation"@en ;
    rdfs:comment "An Actuation carries out an (Actuation) Procedure to change the state of the world using an Actuator."@en ;
    rdfs:isDefinedBy sosa: ;
    skos:definition "An Actuation carries out an (Actuation) Procedure to change the state of the world using an Actuator."@en ;
    skos:example "The activity of automatically closing a window if the temperature in a room drops below 20 degree Celsius. The activity is the Actuation and the device that closes the window is the Actuator. The Procedure is the rule, plan, or specification that defines the conditions that triggers the Actuation, here a drop in temperature. "@en .

sosa:Actuator a rdfs:Class,
        owl:Class ;
    rdfs:label "Actuator"@en ;
    rdfs:comment "A device that is used by, or implements, an (Actuation) Procedure that changes the state of the world."@en ;
    rdfs:isDefinedBy sosa: ;
    skos:definition "A device that is used by, or implements, an (Actuation) Procedure that changes the state of the world."@en ;
    skos:example "A window actuator for automatic window control, i.e., opening or closing the window."@en .

sosa:FeatureOfInterest a rdfs:Class,
        owl:Class ;
    rdfs:label "Feature Of Interest"@en ;
    rdfs:comment "The thing whose property is being estimated or calculated in the course of an Observation to arrive at a Result or whose property is being manipulated by an Actuator, or which is being sampled or transformed in an act of Sampling."@en ;
    rdfs:isDefinedBy sosa: ;
    skos:definition "The thing whose property is being estimated or calculated in the course of an Observation to arrive at a Result or whose property is being manipulated by an Actuator, or which is being sampled or transformed in an act of Sampling."@en ;
    skos:example "When measuring the height of a tree, the height is the observed ObservableProperty, 20m may be the Result of the Observation, and the tree is the FeatureOfInterest. A window is a FeatureOfInterest for an automatic window control Actuator."@en .

sosa:ObservableProperty a rdfs:Class,
        owl:Class ;
    rdfs:label "Observable Property"@en ;
    rdfs:comment "An observable quality (property, characteristic) of a FeatureOfInterest."@en ;
    rdfs:isDefinedBy sosa: ;
    skos:definition "An observable quality (property, characteristic) of a FeatureOfInterest."@en ;
    skos:example "The height of a tree, the depth of a water body, or the temperature of a surface are examples of observable properties, while the value of a classic car is not (directly) observable but asserted."@en .

sosa:Observation a rdfs:Class,
        owl:Class ;
    rdfs:label "Observation"@en ;
    rdfs:comment "Act of carrying out an (Observation) Procedure to estimate or calculate a value of a property of a FeatureOfInterest. Links to a Sensor to describe what made the Observation and how; links to an ObservableProperty to describe what the result is an estimate of, and to a FeatureOfInterest to detail what that property was associated with."@en ;
    rdfs:isDefinedBy sosa: ;
    skos:definition "Act of carrying out an (Observation) Procedure to estimate or calculate a value of a property of a FeatureOfInterest. Links to a Sensor to describe what made the Observation and how; links to an ObservableProperty to describe what the result is an estimate of, and to a FeatureOfInterest to detail what that property was associated with."@en ;
    skos:example "The activity of estimating the intensity of an Earthquake using the Mercalli intensity scale is an Observation as is measuring the moment magnitude, i.e., the energy released by said earthquake."@en .

sosa:Platform a rdfs:Class,
        owl:Class ;
    rdfs:label "Platform"@en ;
    rdfs:comment "A Platform is an entity that hosts other entities, particularly Sensors, Actuators, Samplers, and other Platforms."@en ;
    rdfs:isDefinedBy sosa: ;
    skos:definition "A Platform is an entity that hosts other entities, particularly Sensors, Actuators, Samplers, and other Platforms."@en ;
    skos:example "A post, buoy, vehicle, ship, aircraft, satellite, cell-phone, human or animal may act as platforms for (technical or biological) sensors or actuators."@en .

sosa:Procedure a rdfs:Class,
        owl:Class ;
    rdfs:label "Procedure"@en ;
    rdfs:comment "A workflow, protocol, plan, algorithm, or computational method specifying how to make an Observation, create a Sample, or make a change to the state of the world (via an Actuator). A Procedure is re-usable, and might be involved in many Observations, Samplings, or Actuations. It explains the steps to be carried out to arrive at reproducible results."@en ;
    rdfs:isDefinedBy sosa: ;
    skos:definition "A workflow, protocol, plan, algorithm, or computational method specifying how to make an Observation, create a Sample, or make a change to the state of the world (via an Actuator). A Procedure is re-usable, and might be involved in many Observations, Samplings, or Actuations. It explains the steps to be carried out to arrive at reproducible results."@en ;
    skos:example "The measured wind speed differs depending on the height of the sensor above the surface, e.g., due to friction. Consequently, procedures for measuring wind speed define a standard height for anemometers above ground, typically 10m for meteorological measures and 2m in Agrometeorology. This definition of height, sensor placement, and so forth are defined by the Procedure."@en ;
    skos:note "Many observations may be created via the same Procedure, the same way as many tables are assembled using the same instructions (as information objects, not their concrete realization)."@en .

sosa:Result a rdfs:Class,
        owl:Class ;
    rdfs:label "Result"@en ;
    rdfs:comment "The Result of an Observation, Actuation, or act of Sampling. To store an observation's simple result value one can use the hasSimpleResult property."@en ;
    rdfs:isDefinedBy sosa: ;
    skos:definition "The Result of an Observation, Actuation, or act of Sampling. To store an observation's simple result value one can use the hasSimpleResult property."@en ;
    skos:example "The value 20 as the height of a certain tree together with the unit, e.g., Meter."@en .

sosa:Sample a rdfs:Class,
        owl:Class ;
    rdfs:label "Sample"@en ;
    rdfs:comment "A Sample is the result from an act of Sampling."@en,
        "Feature which is intended to be representative of a FeatureOfInterest on which Observations may be made."@en,
        "Physical samples are sometimes known as 'specimens'."@en,
        """Samples are artifacts of an observational strategy, and have no significant function outside of their role in the observation process. The characteristics of the samples themselves are of little interest, except perhaps to the manager of a sampling campaign.

A Sample is intended to sample some FatureOfInterest, so there is an expectation of at least one isSampleOf property. However, in some cases the identity, and even the exact type, of the sampled feature may not be known when observations are made using the sampling features."""@en ;
    rdfs:isDefinedBy sosa: ;
    skos:definition "Feature which is intended to be representative of a FeatureOfInterest on which Observations may be made."@en ;
    skos:example "A 'station' is essentially an identifiable locality where a sensor system or Procedure may be deployed and an observation made. In the context of the observation model, it connotes the 'world in the vicinity of the station', so the observed properties relate to the physical medium at the station, and not to any physical artifact such as a mooring, buoy, benchmark, monument, well, etc."@en,
        "A statistical sample is often designed to be characteristic of an entire population, so that observations can be made regarding the sample that provide a good estimate of the properties of the population."@en ;
    skos:note "A transient sample, such as a ships-track or flight-line, might be identified and described, but is unlikely to be revisited exactly."@en .

sosa:Sampler a rdfs:Class,
        owl:Class ;
    rdfs:label "Sampler"@en ;
    rdfs:comment "A device that is used by, or implements, a Sampling Procedure to create or transform one or more samples."@en ;
    rdfs:isDefinedBy sosa: ;
    skos:definition "A device that is used by, or implements, a Sampling Procedure to create or transform one or more samples."@en ;
    skos:example "A ball mill, diamond drill, hammer, hypodermic syringe and needle, image Sensor or a soil auger can all act as sampling devices (i.e., be Samplers). However, sometimes the distinction between the Sampler and the Sensor is not evident, as they are packaged as a unit. A Sampler need not be a physical device."@en .

sosa:Sampling a rdfs:Class,
        owl:Class ;
    rdfs:label "Sampling"@en ;
    rdfs:comment "An act of Sampling carries out a sampling Procedure to create or transform one or more samples."@en ;
    rdfs:isDefinedBy sosa: ;
    skos:definition "An act of Sampling carries out a sampling Procedure to create or transform one or more samples."@en ;
    skos:example "Crushing a rock sample in a ball mill."@en,
        "Digging a pit through a soil sequence."@en,
        "Dividing a field site into quadrants."@en,
        "Drawing blood from a patient."@en,
        "Drilling an observation well."@en,
        "Establishing a station for environmental monitoring."@en,
        "Registering an image of the landscape."@en,
        "Selecting a subset of a population."@en,
        "Sieving a powder to separate the subset finer than 100-mesh."@en,
        "Splitting a piece of drill-core to create two new samples."@en,
        "Taking a diamond-drill core from a rock outcrop."@en .

sosa:Sensor a rdfs:Class,
        owl:Class ;
    rdfs:label "Sensor"@en ;
    rdfs:comment "Device, agent (including humans), or software (simulation) involved in, or implementing, a Procedure. Sensors respond to a stimulus, e.g., a change in the environment, or input data composed from the results of prior Observations, and generate a Result. Sensors can be hosted by Platforms."@en ;
    rdfs:isDefinedBy sosa: ;
    skos:definition "Device, agent (including humans), or software (simulation) involved in, or implementing, a Procedure. Sensors respond to a stimulus, e.g., a change in the environment, or input data composed from the results of prior Observations, and generate a Result. Sensors can be hosted by Platforms."@en ;
    skos:example "Accelerometers, gyroscopes, barometers, magnetometers, and so forth are Sensors that are typically mounted on a modern smart phone (which acts as Platform). Other examples of sensors include the human eyes."@en .

s223:AHU a s223:Class,
        sh:NodeShape ;
    rdfs:label "AHU" ;
    rdfs:subClassOf s223:System .

s223:Actuator a s223:Class,
        sh:NodeShape ;
    rdfs:label "Actuator" ;
    rdfs:subClassOf s223:Device ;
    sh:property [ sh:class s223:ActuatableProperty ;
            sh:path s223:actuatesProperty ] .

s223:BidirectionalZoneConnectionPoint a s223:Class,
        sh:NodeShape ;
    rdfs:label "Bidirectional Zone Connection Point" ;
    rdfs:comment "This class is analogous to the BidirectionalConnectionPoint class, but for ZoneConnectionPoints." ;
    rdfs:subClassOf s223:ZoneConnectionPoint ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue s223:Bidirectional ;
            sh:path s223:hasDirection ] .

s223:Chiller a s223:Class,
        sh:NodeShape ;
    rdfs:label "Chiller" ;
    rdfs:subClassOf s223:Device .

s223:CoolingCoil a s223:Class,
        sh:NodeShape ;
    rdfs:label "Cooling coil" ;
    rdfs:subClassOf s223:Coil .

s223:Deadband a s223:Class,
        sh:NodeShape ;
    rdfs:label "Deadband" ;
    rdfs:subClassOf s223:SetpointAspect .

s223:DiffPress a s223:Class,
        sh:NodeShape ;
    rdfs:label "Diff press" ;
    rdfs:subClassOf s223:DifferentialSensor .

s223:DischargeContext a s223:Class ;
    rdfs:label "Discharge Context" ;
    rdfs:subClassOf s223:Context .

s223:Duct a s223:Class,
        sh:NodeShape ;
    rdfs:label "Duct" ;
    rdfs:comment "A predefined subClassOf Connection typically used to convey air in a building." ;
    rdfs:subClassOf s223:Connection ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( enum:Substance-Air ) ;
            sh:maxCount 1 ;
            sh:name "substance" ;
            sh:path s223:hasSubstance ] .

s223:Economizer a s223:Class,
        sh:NodeShape ;
    rdfs:label "Economizer" ;
    rdfs:subClassOf s223:Device .

s223:Effectiveness a s223:Class,
        sh:NodeShape ;
    rdfs:label "Effectiveness" ;
    rdfs:subClassOf s223:SetpointAspect .

s223:ExhaustContext a s223:Class ;
    rdfs:label "Exhaust Context" ;
    rdfs:subClassOf s223:Context .

s223:Fan a s223:Class,
        sh:NodeShape ;
    rdfs:label "Fan" ;
    rdfs:subClassOf s223:FlowDevice,
        brick:Fan ;
    sh:property [ a sh:PropertyShape ;
            sh:class s223:ConnectionPoint ;
            sh:minCount 2 ;
            sh:name "Air inlet point" ;
            sh:path s223:hasConnectionPoint ] ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "Infer the hasInletPressure property value" ;
            sh:object [ sh:filterShape [ sh:property [ sh:hasValue quantitykind:Pressure ;
                                    sh:path qudt:hasQuantityKind ] ] ;
                    sh:nodes [ sh:nodes [ sh:filterShape [ sh:hasValue s223:Inlet ;
                                            sh:path s223:hasDirection ] ;
                                    sh:nodes [ sh:path s223:hasConnectionPoint ] ] ;
                            sh:path s223:hasProperty ] ] ;
            sh:predicate s223:hasInletPressure ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            rdfs:comment "Infer the hasOutletPressure property value" ;
            sh:object [ sh:filterShape [ sh:property [ sh:hasValue quantitykind:Pressure ;
                                    sh:path qudt:hasQuantityKind ] ] ;
                    sh:nodes [ sh:nodes [ sh:filterShape [ sh:hasValue s223:Outlet ;
                                            sh:path s223:hasDirection ] ;
                                    sh:nodes [ sh:path s223:hasConnectionPoint ] ] ;
                            sh:path s223:hasProperty ] ] ;
            sh:predicate s223:hasOutletPressure ;
            sh:subject sh:this ] .

s223:FinnedHeatExchanger a s223:Class ;
    rdfs:label "Finned heat exchanger" ;
    rdfs:subClassOf s223:HeatExchanger .

s223:FlowSensor a s223:Class,
        sh:NodeShape ;
    rdfs:label "Flow sensor" ;
    rdfs:subClassOf s223:Sensor .

s223:HasDomainLookingUpRule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "Traverse up the contains hierarchy to determine the domain" ;
            sh:object [ sh:path ( [ sh:zeroOrMorePath s223:isContainedIn ] s223:hasDomain ) ] ;
            sh:predicate s223:hasDomain ;
            sh:subject sh:this ] ;
    sh:targetClass s223:DomainSpace,
        s223:Zone .

s223:HeatingCoil a s223:Class,
        sh:NodeShape ;
    rdfs:label "Heating coil" ;
    rdfs:subClassOf s223:Coil .

s223:HumiditySensor a s223:Class,
        sh:NodeShape ;
    rdfs:label "Humidity sensor" ;
    rdfs:subClassOf s223:Sensor .

s223:InletZoneConnectionPoint a s223:Class,
        sh:NodeShape ;
    rdfs:label "Inlet Zone Connection Point" ;
    rdfs:comment "This class is analogous to the InletConnectionPoint class, but for ZoneConnectionPoints." ;
    rdfs:subClassOf s223:ZoneConnectionPoint ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue s223:Inlet ;
            sh:path s223:hasDirection ] ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "If an instance of InletZoneConnectionPoint doesn't have a value for hasDirection, then set it." ;
            sh:object s223:Inlet ;
            sh:predicate s223:hasDirection ;
            sh:subject sh:this ] .

s223:InversePropertyShape a sh:NodeShape ;
    sh:rule [ a sh:SPARQLRule ;
            sh:construct """
CONSTRUCT {
?o ?invP $this .
}
WHERE {
  $this ?p ?o .
  ?p s223:inverseOf ?invP .
}
			""" ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/inference/owl-subset> ] ;
    sh:targetClass s223:Concept .

s223:Luminaire a s223:Class ;
    rdfs:label "Luminaire" ;
    rdfs:subClassOf s223:Device .

s223:ManualDamper a s223:Class ;
    rdfs:label "Manual damper" ;
    rdfs:subClassOf s223:Damper .

s223:MeasuredPropertyRule a sh:NodeShape ;
    rdfs:comment "Associate the object of hasMeasurementLocation directly with the observed Property." ;
    sh:rule [ a sh:TripleRule ;
            sh:object [ sh:path ( [ sh:inversePath s223:hasMeasurementLocation ] s223:observesProperty ) ] ;
            sh:predicate s223:hasProperty ;
            sh:subject sh:this ] ;
    sh:targetClass s223:Concept .

s223:MororizedThreeWayValve a s223:Class,
        sh:NodeShape ;
    rdfs:label "Mororized three way valve" ;
    rdfs:subClassOf s223:Motorized_Valve .

s223:MotorizedDamper a s223:Class ;
    rdfs:label "Motorized damper" ;
    rdfs:subClassOf s223:Damper .

s223:MotorizedTwoWayValve a s223:Class,
        sh:NodeShape ;
    rdfs:label "Motorized two way valve" ;
    rdfs:subClassOf s223:Motorized_Valve .

s223:Occupancy a s223:Class,
        sh:NodeShape ;
    rdfs:label "Occupancy" ;
    rdfs:subClassOf s223:Enumerable,
        s223:SetpointAspect .

s223:OutletZoneConnectionPoint a s223:Class,
        sh:NodeShape ;
    rdfs:label "Outlet Zone Connection Point" ;
    rdfs:comment "This class is analogous to the OutletConnectionPoint class, but for ZoneConnectionPoints." ;
    rdfs:subClassOf s223:ZoneConnectionPoint ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue s223:Outlet ;
            sh:path s223:hasDirection ] ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "If an instance of OutletZoneConnectionPoint doesn't have a value for hasDirection, then set it." ;
            sh:object s223:Outlet ;
            sh:predicate s223:hasDirection ;
            sh:subject sh:this ] .

s223:Pipe a s223:Class,
        sh:NodeShape ;
    rdfs:label "Pipe" ;
    rdfs:comment "A predefined subClassOf Connection typically used to convey a liquid or compressed gas in a building." ;
    rdfs:subClassOf s223:Connection ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( enum:Water-ChilledWater enum:Water-HotWater enum:Substance-Air ) ;
            sh:maxCount 1 ;
            sh:name "substance" ;
            sh:path s223:hasSubstance ] .

s223:PlateHeatExchanger a s223:Class ;
    rdfs:label "Plate heat exchanger" ;
    rdfs:subClassOf s223:HeatExchanger .

s223:PressureSensor a s223:Class,
        sh:NodeShape ;
    rdfs:label "Pressure sensor" ;
    rdfs:subClassOf s223:Sensor .

s223:Pump a s223:Class,
        sh:NodeShape ;
    rdfs:label "Pump" ;
    rdfs:subClassOf s223:FlowDevice,
        brick:Pump .

s223:ReturnContext a s223:Class ;
    rdfs:label "Return Context" ;
    rdfs:subClassOf s223:Context .

s223:ShellTubeHeatExchanger a s223:Class ;
    rdfs:label "Shell tube heat exchanger" ;
    rdfs:subClassOf s223:HeatExchanger .

s223:StorageTank a s223:Class,
        sh:NodeShape ;
    rdfs:label "Storage tank" ;
    rdfs:subClassOf s223:Device .

s223:SupplyContext a s223:Class ;
    rdfs:label "Supply Context" ;
    rdfs:subClassOf s223:Context .

s223:SymmetricPropertyShape a sh:NodeShape ;
    sh:rule [ a sh:SPARQLRule ;
            sh:construct """
CONSTRUCT {
?o ?p $this .
}
WHERE {
  $this ?p ?o .
  ?p a s223:SymmetricProperty .
}
			""" ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/inference/owl-subset> ] ;
    sh:targetClass s223:Concept .

s223:TemperatureSensor a s223:Class,
        sh:NodeShape ;
    rdfs:label "Temp sensor" ;
    rdfs:subClassOf s223:Sensor .

s223:ThreeWayValve a s223:Class,
        sh:NodeShape ;
    rdfs:label "Three way valve" ;
    rdfs:subClassOf s223:Manual_Valve .

s223:TwoWayValve a s223:Class,
        sh:NodeShape ;
    rdfs:label "Two way valve" ;
    rdfs:subClassOf s223:Manual_Valve .

s223:VAV a s223:Class,
        sh:NodeShape ;
    rdfs:label "VAV" ;
    rdfs:subClassOf s223:Device,
        s223:System ;
    sh:property [ a sh:PropertyShape ;
            sh:class s223:Device ;
            sh:minCount 0 ;
            sh:path s223:contains ] .

s223:VFD a s223:Class,
        sh:NodeShape ;
    rdfs:label "VFD" ;
    rdfs:subClassOf s223:Device .

s223:connectedAt a rdf:Property ;
    rdfs:label "connected at" ;
    rdfs:domain s223:Connection ;
    rdfs:range s223:ConnectionPoint .

s223:hasActuatorPosition a rdf:Property ;
    rdfs:label "Actuator Position" ;
    rdfs:subPropertyOf s223:hasProperty .

s223:hasBrickReference a rdf:Property ;
    rdfs:label "has Brick reference" .

s223:hasDamperPosition a rdf:Property ;
    rdfs:label "has damper position" ;
    rdfs:range xsd:decimal .

s223:hasJunction a rdf:Property ;
    rdfs:label "has junction" ;
    rdfs:subPropertyOf s223:contains .

s223:hasMaxActuatorTorque a rdf:Property ;
    rdfs:label "Maximum torque for the actuator" ;
    rdfs:subPropertyOf s223:hasProperty .

s223:hasSimpleValue a rdf:Property ;
    rdfs:label "has Simple Value" ;
    rdfs:comment "hasSimpleValue is used to contain a fixed value that is part of a 223 model, rather than a computed, measured, or externally derived variable." .

s223:hasTemperature a rdf:Property ;
    rdfs:label "hasTemperature" ;
    rdfs:subPropertyOf s223:hasProperty .

s223:hasTimestamp a rdf:Property ;
    rdfs:label "has timestamp" ;
    rdfs:range xsd:dateTime .

s223:inContextOf a rdf:Property ;
    rdfs:label "in context of" .

s223:inverseOf a rdf:Property ;
    rdfs:label "inverse of" .

g36:AnalogIn a s223:Class,
        sh:NodeShape ;
    rdfs:label "Analog in" ;
    rdfs:subClassOf s223:QuantifiableObservableProperty .

g36:AnalogOut a s223:Class,
        sh:NodeShape ;
    rdfs:label "Analog out" ;
    rdfs:subClassOf s223:QuantifiableActuatableProperty .

g36:BinaryIn a s223:Class,
        sh:NodeShape ;
    rdfs:label "Binary in" ;
    rdfs:subClassOf s223:EnumeratedObservableProperty ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "An instance of g36:BinaryIn has a value that is a member of the EnumerationKind g36:RunStatus." ;
            sh:object g36:RunStatus ;
            sh:predicate s223:hasEnumerationKind ;
            sh:subject sh:this ] .

g36:BinaryOut a s223:Class,
        sh:NodeShape ;
    rdfs:label "Binary out" ;
    rdfs:subClassOf s223:EnumeratedActuatableProperty ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "An instance of g36:BinaryOut has a value that is a member of the EnumerationKind g36:RunCommand." ;
            sh:object g36:RunCommand ;
            sh:predicate s223:hasEnumerationKind ;
            sh:subject sh:this ] .

domain:ConveyanceSystems a s223:Domain ;
    rdfs:label "ConveyanceSystems" .

domain:Electrical a s223:Domain ;
    rdfs:label "Electrical" .

domain:Fire a s223:Domain ;
    rdfs:label "Fire" .

domain:HVAC a s223:Domain ;
    rdfs:label "HVAC" .

domain:Lighting a s223:Domain ;
    rdfs:label "Lighting" .

domain:Networking a s223:Domain ;
    rdfs:label "Networking" .

domain:Occupancy a s223:Domain ;
    rdfs:label "Occupancy" .

domain:Plumbing a s223:Domain ;
    rdfs:label "Plumbing" .

domain:Refrigeration a s223:Domain ;
    rdfs:label "Refrigeration" .

domain:Security a s223:Domain ;
    rdfs:label "Security" .

enum:DayOfWeek a s223:EnumerationKind ;
    s223:hasMember enum:DayOfWeek-Weekday,
        enum:DayOfWeek-Weekend ;
    s223:includes enum:Weekday,
        enum:Weekend .

enum:Effectiveness a s223:EnumerationKind ;
    rdfs:label "Effectiveness" ;
    s223:hasMember enum:Effectiveness-Active .

enum:HVACOperatingMode a s223:EnumerationKind ;
    rdfs:label "HVAC system/equipment operating mode. The policy under which the system is operating." ;
    s223:hasMember enum:HVACOperatingMode-Auto,
        enum:HVACOperatingMode-CoolOnly,
        enum:HVACOperatingMode-FanOnly,
        enum:HVACOperatingMode-HeatOnly,
        enum:HVACOperatingMode-Off .

enum:HVACOperatingStatus a s223:EnumerationKind ;
    rdfs:label "HVAC system/equipment operating status. What the system is currently doing." ;
    s223:hasMember enum:HVACOperatingStatus-Cooling,
        enum:HVACOperatingStatus-Dehumidifying,
        enum:HVACOperatingStatus-Heating,
        enum:HVACOperatingStatus-Off,
        enum:HVACOperatingStatus-Ventilating .

enum:OccupancyStatus a s223:EnumerationKind ;
    rdfs:label "Occupancy status" ;
    s223:hasMember enum:OccupancyStatus-Occupied,
        enum:OccupancyStatus-Unknown,
        enum:OccupancyStatus-Unoccupied .

enum:PositionStatus a s223:EnumerationKind ;
    rdfs:label "Position status" ;
    s223:hasMember enum:PositionStatus-Closed,
        enum:PositionStatus-Open,
        enum:PositionStatus-Unknown .

enum:RunStatus a s223:EnumerationKind ;
    rdfs:label "Run status" ;
    s223:hasMember enum:RunStatus-Off,
        enum:RunStatus-On,
        enum:RunStatus-Unknown .

enum:Substance a s223:EnumerationKind ;
    rdfs:label "Substance" ;
    s223:hasMember enum:Substance-Air,
        enum:Substance-Glycol,
        enum:Substance-Water ;
    s223:includes enum:Water .

enum:ThreeSpeedSetting a s223:EnumerationKind ;
    rdfs:label "Three speed setting" ;
    s223:hasMember enum:ThreeSpeedSetting-High,
        enum:ThreeSpeedSetting-Low,
        enum:ThreeSpeedSetting-Medium,
        enum:ThreeSpeedSetting-Off .

role:Cooling a s223:Role ;
    rdfs:label "Cooling" .

role:Discharge a s223:Role ;
    rdfs:label "Discharge" .

role:Exhaust a s223:Role ;
    rdfs:label "Exhaust" .

role:Generator a s223:Role ;
    rdfs:label "Generator" .

role:Heating a s223:Role ;
    rdfs:label "Heating" .

role:Load a s223:Role ;
    rdfs:label "Load" .

role:Primary a s223:Role ;
    rdfs:label "Primary" .

role:Return a s223:Role ;
    rdfs:label "Return" .

role:Secondary a s223:Role ;
    rdfs:label "Secondary" .

role:Supply a s223:Role ;
    rdfs:label "Supply" .

dcterms:license a owl:AnnotationProperty .

dcterms:replaces a owl:AnnotationProperty ;
    rdfs:label "replaces"^^xsd:string ;
    rdfs:isDefinedBy dcterms: ;
    rdfs:range rdfs:Resource .

vann:preferredNamespacePrefix a owl:AnnotationProperty .

vann:preferredNamespaceUri a owl:AnnotationProperty .

qudt:BaseDimensionMagnitude a owl:Class,
        sh:NodeShape ;
    rdfs:label "Base Dimension Magnitude" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Dimensional_analysis"^^xsd:anyURI,
        "http://web.mit.edu/2.25/www/pdf/DA_unified.pdf"^^xsd:anyURI ;
    rdfs:comment """<p class="lm-para">A <em>Dimension</em> expresses a magnitude for a base quantiy kind such as mass, length and time.</p>
<p class="lm-para">DEPRECATED - each exponent is expressed as a property. Keep until a validaiton of this has been done.</p>"""^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Concept ;
    sh:property qudt:BaseDimensionMagnitude-qudt_hasBaseQuantityKind,
        qudt:BaseDimensionMagnitude-qudt_vectorMagnitude .

qudt:BigEndian a qudt:EndianType ;
    rdfs:label "Big Endian" ;
    dtype:literal "big" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:BitEncodingType a owl:Class,
        sh:NodeShape ;
    rdfs:label "Bit Encoding" ;
    dcterms:description "A bit encoding is a correspondence between the two possible values of a bit, 0 or 1, and some interpretation. For example, in a boolean encoding, a bit denotes a truth value, where 0 corresponds to False and 1 corresponds to True." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Encoding .

qudt:BooleanEncoding a qudt:BooleanEncodingType ;
    rdfs:label "Boolean Encoding" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:CT_UNCOUNTABLE a qudt:CardinalityType ;
    rdfs:label "Uncountable Cardinality Type" ;
    dcterms:description "Any set with cardinality greater than that of the natural numbers, or \\(| X | \\; >  \\; | \\mathbb N | \\),  for example \\(| R| \\; =  \\;  c  \\; > |\\mathbb N |\\), is said to be uncountable."^^qudt:LatexString ;
    qudt:literal "uncountable" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:CharEncoding a qudt:BooleanEncodingType,
        qudt:CharEncodingType ;
    rdfs:label "Char Encoding" ;
    dc:description "7 bits of 1 octet" ;
    qudt:bytes 1 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:Citation a owl:Class,
        sh:NodeShape ;
    rdfs:label "Citation" ;
    rdfs:comment "Provides a simple way of making citations."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Concept ;
    sh:property qudt:Citation-qudt_description,
        qudt:Citation-qudt_url .

qudt:ConstantValue a owl:Class,
        sh:NodeShape ;
    rdfs:label "Constant value" ;
    rdfs:comment "Used to specify the values of a constant."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.0/schema/qudt/mathematics>,
        <http://qudt.org/2.1/schema/qudt>,
        qudt:mathematics ;
    rdfs:subClassOf qudt:QuantityValue ;
    sh:property qudt:ConstantValue-qudt_exactConstant .

qudt:Discipline a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discipline" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Concept .

qudt:DoublePrecisionEncoding a qudt:FloatingPointEncodingType ;
    rdfs:label "Single Precision Real Encoding" ;
    qudt:bytes 64 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:EnumerationScale a owl:Class,
        sh:NodeShape ;
    rdfs:label "Enumeration scale" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Scale,
        dtype:Enumeration .

qudt:Figure a owl:Class,
        sh:NodeShape ;
    rdfs:label "Figure" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Concept ;
    sh:property qudt:Figure-qudt_figureCaption,
        qudt:Figure-qudt_figureLabel,
        qudt:Figure-qudt_height,
        qudt:Figure-qudt_image,
        qudt:Figure-qudt_imageLocation,
        qudt:Figure-qudt_landscape,
        qudt:Figure-qudt_width .

qudt:GreekCharacter a owl:Class ;
    rdfs:label "Greek character" ;
    dc:source "http://www.charbase.com/block/greek-and-coptic" ;
    rdfs:isDefinedBy <http://qudt.org/2.0/schema/qudt/mathematics>,
        qudt:mathematics ;
    rdfs:subClassOf qudt:Symbol ;
    skos:prefLabel "Greek character" .

qudt:IEEE754_1985RealEncoding a qudt:FloatingPointEncodingType ;
    rdfs:label "IEEE 754 1985 Real Encoding" ;
    qudt:bytes 32 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:ISO8601-UTCDateTime-BasicFormat a qudt:DateTimeStringEncodingType ;
    rdfs:label "ISO 8601 UTC Date Time - Basic Format" ;
    qudt:allowedPattern "[0-9]{4}[0-9]{2}[0-9]{2}T[0-9]{2}[0-9]{2}[0-9]{2}.[0-9]+Z",
        "[0-9]{4}[0-9]{2}[0-9]{2}T[0-9]{2}[0-9]{2}[0-9]{2}Z" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:LittleEndian a qudt:EndianType ;
    rdfs:label "Little Endian" ;
    dtype:literal "little" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:LongUnsignedIntegerEncoding a qudt:IntegerEncodingType ;
    rdfs:label "Long Unsigned Integer Encoding" ;
    qudt:bytes 8 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:MathFunctionType a owl:Class,
        sh:NodeShape ;
    rdfs:label "Math Function Type" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Concept .

qudt:NIST_SP811_Comment a owl:Class,
        sh:NodeShape ;
    rdfs:label "NIST SP~811 Comment" ;
    dc:description "National Institute of Standards and Technology (NIST) Special Publication 811 Comments on some quantities and their units" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Comment .

qudt:OctetEncoding a qudt:BooleanEncodingType,
        qudt:ByteEncodingType ;
    rdfs:label "OCTET Encoding" ;
    qudt:bytes 1 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:PlaneAngleUnit a owl:Class ;
    rdfs:label "Plane Angle Unit" ;
    rdfs:isDefinedBy <http://qudt.org/2.0/schema/qudt/mathematics>,
        qudt:mathematics ;
    rdfs:subClassOf qudt:AngleUnit .

qudt:Quantity-qudt_description sh:or qudt:HTMLOrStringOrLangStringOrLatexString .

qudt:QuantityKindDimensionVector-dimensionExponentForAmountOfSubstance sh:or qudt:NumericUnionList .

qudt:QuantityKindDimensionVector-dimensionExponentForLength sh:or qudt:NumericUnionList .

qudt:QuantityKindDimensionVector-dimensionExponentForLuminousIntensity sh:or qudt:NumericUnionList .

qudt:QuantityKindDimensionVector-dimensionExponentForMass sh:or qudt:NumericUnionList .

qudt:QuantityKindDimensionVector-dimensionExponentForThermodynamicTemperature sh:or qudt:NumericUnionList .

qudt:QuantityKindDimensionVector-dimensionExponentForTime sh:or qudt:NumericUnionList .

qudt:QuantityKindDimensionVector-dimensionlessExponent sh:or qudt:NumericUnionList .

qudt:QuantityKindDimensionVector_CGS-EMU a owl:Class,
        sh:NodeShape ;
    rdfs:label "CGS EMU Dimension vector" ;
    rdfs:comment "A <em>CGS EMU Dimension Vector</em> is used to specify the dimensions for EMU C.G.S. quantity kind."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:QuantityKindDimensionVector_CGS .

qudt:QuantityKindDimensionVector_CGS-ESU a owl:Class,
        sh:NodeShape ;
    rdfs:label "CGS ESU Dimension vector" ;
    rdfs:comment "A <em>CGS ESU Dimension Vector</em> is used to specify the dimensions for ESU C.G.S. quantity kind."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:QuantityKindDimensionVector_CGS .

qudt:QuantityKindDimensionVector_CGS-GAUSS a owl:Class,
        sh:NodeShape ;
    rdfs:label "CGS GAUSS Dimension vector" ;
    rdfs:comment "A <em>CGS GAUSS Dimension Vector</em> is used to specify the dimensions for Gaussioan C.G.S. quantity kind."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:QuantityKindDimensionVector_CGS .

qudt:QuantityKindDimensionVector_CGS-LH a owl:Class,
        sh:NodeShape ;
    rdfs:label "CGS LH Dimension vector" ;
    rdfs:comment "A <em>CGS LH Dimension Vector</em> is used to specify the dimensions for Lorentz-Heaviside C.G.S. quantity kind."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:QuantityKindDimensionVector_CGS .

qudt:QuantityKindDimensionVector_dimensionExponentForElectricCurrent sh:or qudt:NumericUnionList .

qudt:QuantityType a owl:Class,
        sh:NodeShape ;
    rdfs:label "Quantity type" ;
    dcterms:description "\\(\\textit{Quantity Type}\\) is an enumeration of quanity kinds. It specializes \\(\\boxed{dtype:EnumeratedValue}\\) by constrinaing \\(\\boxed{dtype:value}\\) to instances of \\(\\boxed{qudt:QuantityKind}\\)."^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:EnumeratedValue ;
    sh:property qudt:QuantityType-dtype_value .

qudt:QuantityValue-value sh:or qudt:NumericUnionList .

qudt:Rule-example sh:or qudt:HTMLOrStringOrLangStringOrLatexString .

qudt:STATS_CHI-SQUARED a qudt:MathsFunctionType ;
    rdfs:label "Chi-squared" ;
    qudt:literal "chi-squared" ;
    rdfs:isDefinedBy <http://qudt.org/2.0/schema/qudt/mathematics>,
        qudt:mathematics ;
    skos:prefLabel "Chi-squared" .

qudt:STATS_COEFFICIENT-OF-VARIATION a qudt:MathsFunctionType ;
    rdfs:label "Coefficient of Variation" ;
    qudt:literal "coefficient-of-variation" ;
    rdfs:isDefinedBy <http://qudt.org/2.0/schema/qudt/mathematics>,
        qudt:mathematics ;
    skos:prefLabel "Coefficient of Variation" .

qudt:STATS_CORRELATION a qudt:MathsFunctionType ;
    rdfs:label "Correlation" ;
    qudt:literal "correlation" ;
    rdfs:isDefinedBy <http://qudt.org/2.0/schema/qudt/mathematics>,
        qudt:mathematics ;
    skos:prefLabel "Correlation" .

qudt:STATS_GEOMETRIC-MEAN a qudt:MathsFunctionType ;
    rdfs:label "Geometric Mean" ;
    qudt:literal "geometric-mean" ;
    rdfs:isDefinedBy <http://qudt.org/2.0/schema/qudt/mathematics>,
        qudt:mathematics ;
    skos:prefLabel "Geometric Mean" .

qudt:STATS_HARMONIC-MEAN a qudt:MathsFunctionType ;
    rdfs:label "Harmonic Mean" ;
    qudt:literal "harmonic-mean" ;
    rdfs:isDefinedBy <http://qudt.org/2.0/schema/qudt/mathematics>,
        qudt:mathematics ;
    skos:prefLabel "Harmonic Mean" .

qudt:STATS_LOGARITHMS a qudt:MathsFunctionType ;
    rdfs:label "Logarithms" ;
    qudt:literal "logarithms" ;
    rdfs:isDefinedBy <http://qudt.org/2.0/schema/qudt/mathematics>,
        qudt:mathematics ;
    skos:prefLabel "Logarithms" .

qudt:STATS_MEAN a qudt:MathsFunctionType ;
    rdfs:label "Mean" ;
    qudt:literal "mean" ;
    rdfs:isDefinedBy <http://qudt.org/2.0/schema/qudt/mathematics>,
        qudt:mathematics ;
    skos:prefLabel "Mean" .

qudt:STATS_MEDIAN a qudt:MathsFunctionType ;
    rdfs:label "Median" ;
    qudt:literal "median" ;
    rdfs:isDefinedBy <http://qudt.org/2.0/schema/qudt/mathematics>,
        qudt:mathematics ;
    skos:prefLabel "Median" .

qudt:STATS_MODE a qudt:MathsFunctionType ;
    rdfs:label "Mode" ;
    qudt:literal "mode" ;
    rdfs:isDefinedBy <http://qudt.org/2.0/schema/qudt/mathematics>,
        qudt:mathematics ;
    skos:prefLabel "Mode" .

qudt:STATS_ORDERED-SET a qudt:MathsFunctionType ;
    rdfs:label "Ordered Set" ;
    qudt:literal "ordered-set" ;
    rdfs:isDefinedBy <http://qudt.org/2.0/schema/qudt/mathematics>,
        qudt:mathematics ;
    skos:prefLabel "Ordered Set" .

qudt:STATS_PERCENTILE a qudt:MathsFunctionType ;
    rdfs:label "Percentile" ;
    qudt:literal "percentile" ;
    rdfs:isDefinedBy <http://qudt.org/2.0/schema/qudt/mathematics>,
        qudt:mathematics ;
    skos:prefLabel "Percentile" .

qudt:STATS_REGRESSION a qudt:MathsFunctionType ;
    rdfs:label "Regression" ;
    qudt:literal "regression" ;
    rdfs:isDefinedBy <http://qudt.org/2.0/schema/qudt/mathematics>,
        qudt:mathematics ;
    skos:prefLabel "Regression" .

qudt:STATS_STANDARD-DEVIATION a qudt:MathsFunctionType ;
    rdfs:label "Standard Deviation" ;
    qudt:literal "standard-deviation" ;
    rdfs:isDefinedBy <http://qudt.org/2.0/schema/qudt/mathematics>,
        qudt:mathematics ;
    skos:prefLabel "Standard Deviation" .

qudt:STATS_VARIANCE-ANALYSIS a qudt:MathsFunctionType ;
    rdfs:label "Variance Analysis" ;
    qudt:literal "variance-analysis" ;
    rdfs:isDefinedBy <http://qudt.org/2.0/schema/qudt/mathematics>,
        qudt:mathematics ;
    skos:prefLabel "Variance Analysis" .

qudt:ScalarDatatype a owl:Class,
        sh:NodeShape ;
    rdfs:label "Scalar Datatype" ;
    dcterms:description "Scalar data types are those that have a single value. The permissible values are defined over a domain that may be integers, float, character or boolean. Often a scalar data type is referred to as a primitive data type." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Datatype ;
    sh:property qudt:ScalarDatatype-qudt_bits,
        qudt:ScalarDatatype-qudt_bytes,
        qudt:ScalarDatatype-qudt_length,
        qudt:ScalarDatatype-qudt_maxExclusive,
        qudt:ScalarDatatype-qudt_maxInclusive,
        qudt:ScalarDatatype-qudt_minExclusive,
        qudt:ScalarDatatype-qudt_minInclusive,
        qudt:ScalarDatatype-qudt_rdfsDatatype .

qudt:ShortSignedIntegerEncoding a qudt:IntegerEncodingType ;
    rdfs:label "Short Signed Integer Encoding" ;
    qudt:bytes 2 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:ShortUnsignedIntegerEncoding a qudt:BooleanEncodingType,
        qudt:IntegerEncodingType ;
    rdfs:label "Short Unsigned Integer Encoding" ;
    qudt:bytes 2 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:SignedIntegerEncoding a qudt:IntegerEncodingType ;
    rdfs:label "Signed Integer Encoding" ;
    qudt:bytes 4 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:SinglePrecisionRealEncoding a qudt:FloatingPointEncodingType ;
    rdfs:label "Single Precision Real Encoding" ;
    qudt:bytes 32 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:SolidAngleUnit a owl:Class ;
    rdfs:label "Solid Angle Unit" ;
    qudt:description "The solid angle subtended by a surface S is defined as the surface area of a unit sphere covered by the surface S's projection onto the sphere. A solid angle is related to the surface of a sphere in the same way an ordinary angle is related to the circumference of a circle. Since the total surface area of the unit sphere is 4*pi, the measure of solid angle will always be between 0 and 4*pi." ;
    rdfs:isDefinedBy <http://qudt.org/2.0/schema/qudt/mathematics>,
        qudt:mathematics ;
    rdfs:subClassOf qudt:AngleUnit .

qudt:StructuredDatatype a owl:Class,
        sh:NodeShape ;
    rdfs:label "Structured Data Type" ;
    dcterms:description "A \"Structured Datatype\", in contrast to scalar data types, is used to characterize classes of more complex data structures, such as linked or indexed lists, trees, ordered trees, and multi-dimensional file formats." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Datatype ;
    sh:property qudt:StructuredDatatype-qudt_elementType .

qudt:SymbolAndExpressionDisjointPropertiesConstraint a sh:NodeShape ;
    rdfs:label "Symbol and expression disjoint properties constraint" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/shacl/overlay/qudt> ;
    sh:sparql [ a sh:SPARQLConstraint ;
            rdfs:comment "Checks that a unit or quantitykind does not have both a symbol and an expression" ;
            sh:message "Resource '{$this}' of type '{?myType}' must not have both the symbol '{?symbol}' and the expression '{?expression}'." ;
            sh:prefixes <http://qudt.org/2.1/schema/shacl/overlay/qudt> ;
            sh:select """SELECT $this ?myType ?symbol ?expression
WHERE {
	$this qudt:symbol ?symbol .
	$this qudt:expression ?expression .
    $this a ?myType 
} """ ] ;
    sh:targetClass qudt:QuantityKind,
        qudt:Unit .

qudt:TT_AFFINE a qudt:TransformType ;
    rdfs:label "Affine transformation" ;
    qudt:description "In geometry, an affine transformation or affine map[ or an affinity is a transformation which preserves straight lines (i.e., all points lying on a line initially still lie on a line after transformation) and ratios of distances between points lying on a straight line (e.g., the midpoint of a line segment remains the midpoint after transformation). It does not necessarily preserve angles or lengths."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.0/schema/qudt/mathematics>,
        qudt:mathematics ;
    skos:prefLabel "Affine transformation" .

qudt:TT_EQUALITY a qudt:TransformType ;
    rdfs:label "Equality" ;
    rdfs:isDefinedBy <http://qudt.org/2.0/schema/qudt/mathematics>,
        qudt:mathematics ;
    skos:prefLabel "Equality" .

qudt:TT_MONOTONIC-ORDER a qudt:TransformType ;
    rdfs:label "Monotonic ordering" ;
    rdfs:isDefinedBy <http://qudt.org/2.0/schema/qudt/mathematics>,
        qudt:mathematics ;
    skos:prefLabel "Monotonic ordering" .

qudt:TT_POSITIVE-SIMILARITIES a qudt:TransformType ;
    rdfs:label "Positive Similarities" ;
    rdfs:isDefinedBy <http://qudt.org/2.0/schema/qudt/mathematics>,
        qudt:mathematics ;
    skos:prefLabel "Positive Similarities" .

qudt:UCUMci a rdfs:Datatype,
        sh:NodeShape ;
    rdfs:label "case-insensitive UCUM code" ;
    rdfs:comment "Lexical pattern for the case-insensitive version of UCUM code" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf rdfs:Resource ;
    owl:deprecated true ;
    owl:onDatatype xsd:string ;
    owl:withRestrictions ( [ xsd:pattern "[\\x21-\\x60,\\x7b-\\x7e]+" ] ) .

qudt:UCUMci-term a rdfs:Datatype,
        sh:NodeShape ;
    rdfs:label "case-insensitive UCUM term" ;
    rdfs:comment "Lexical pattern for the terminal symbols in the case-insensitive version of UCUM code" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf rdfs:Resource ;
    owl:deprecated true ;
    owl:onDatatype xsd:string ;
    owl:withRestrictions ( [ xsd:pattern "[\\x21,\\x23-\\x27,\\x2a,\\x2c,\\x30-\\x3c,\\x3e-\\x5a,\\x5c,\\x5e-\\x60,\\x7c,\\x7e]+" ] ) .

qudt:UCUMcs-term a rdfs:Datatype,
        sh:NodeShape ;
    rdfs:label "case-sensitive UCUM terminal" ;
    dcterms:source <https://ucum.org/ucum.html> ;
    rdfs:comment "Lexical pattern for the terminal symbols in the case-sensitive version of UCUM code" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:seeAlso <https://ucum.org/ucum.html> ;
    rdfs:subClassOf rdfs:Resource ;
    owl:onDatatype xsd:string ;
    owl:withRestrictions ( [ xsd:pattern "[\\x21,\\x23-\\x27,\\x2a,\\x2c,\\x30-\\x3c,\\x3e-\\x5a,\\x5c,\\x5e-\\x7a,\\x7c,\\x7e]+" ] ) .

qudt:UTF16-StringEncoding a qudt:StringEncodingType ;
    rdfs:label "UTF-16 String" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:UTF8-StringEncoding a qudt:StringEncodingType ;
    rdfs:label "UTF-8 Encoding" ;
    qudt:bytes 8 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:UniqueSymbolTypeRestrictedPropertyConstraint a sh:NodeShape ;
    rdfs:label "Unique symbol type restricted property constraint" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/shacl/overlay/qudt> ;
    sh:deactivated true ;
    sh:severity sh:Info ;
    sh:sparql [ a sh:SPARQLConstraint ;
            rdfs:comment "Checks that a resource has a unique symbol within its type hierarchy below qudt:Concept" ;
            sh:message "Resource, '{$this}' of type '{?myType}', has non-unique symbol, '{?symbol}', that conflicts with '{?another}' of type '{?anotherType}'" ;
            sh:prefixes <http://qudt.org/2.1/schema/shacl/overlay/qudt> ;
            sh:select """SELECT DISTINCT $this ?symbol ?another ?myType ?anotherType
WHERE {{
	$this qudt:symbol ?symbol .
     ?another qudt:symbol ?symbol .
    FILTER (?another != $this)
   }
    $this a ?myType .
    ?myType <http://www.w3.org/2000/01/rdf-schema#subClassOf>+ qudt:Concept .
    ?another a ?anotherType .
    ?anotherType <http://www.w3.org/2000/01/rdf-schema#subClassOf>+ qudt:Concept .
   FILTER (?myType = ?anotherType)
}""" ] ;
    sh:targetClass qudt:Unit .

qudt:UnitReferencesPropertyGroup a sh:PropertyGroup ;
    rdfs:label "References" ;
    sh:order 20.0 .

qudt:UnsignedIntegerEncoding a qudt:IntegerEncodingType ;
    rdfs:label "Unsigned Integer Encoding" ;
    qudt:bytes 4 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:UserQuantityKind a owl:Class,
        sh:NodeShape ;
    rdfs:label "User Quantity Kind" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:AbstractQuantityKind ;
    sh:property qudt:UserQuantityKind-qudt_hasQuantityKind .

qudt:Wikipedia a qudt:Organization ;
    rdfs:label "Wikipedia" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:acronym a owl:DatatypeProperty ;
    rdfs:label "acronym" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:allowedUnitOfSystem a owl:ObjectProperty ;
    rdfs:label "allowed unit of system" ;
    dcterms:description "This property relates a unit of measure with a unit system that does not define the unit, but allows its use within the system. An allowed unit must be convertible to some dimensionally eqiuvalent unit that is defined by the system."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:unitOfSystem ;
    owl:inverseOf qudt:hasAllowedUnit .

qudt:applicablePlanckUnit a owl:ObjectProperty ;
    rdfs:label "applicable Planck unit" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:applicableUnit .

qudt:categorizedAs a owl:ObjectProperty ;
    rdfs:label "categorized as" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:citation a owl:AnnotationProperty ;
    rdfs:label "citation" ;
    qudt:plainTextDescription "Used to provide an annotation for an informative reference." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:coherentUnitSystem a owl:FunctionalProperty,
        owl:ObjectProperty ;
    rdfs:label "coherent unit system" ;
    dcterms:description "<p>A system of units is coherent with respect to a system of quantities and equations if the system of units is chosen in such a way that the equations between numerical values have exactly the same form (including the numerical factors) as the corresponding equations between the quantities. In such a coherent system, no numerical factor other than the number 1 ever occurs in the expressions for the derived units in terms of the base units. For example, the \\(newton\\) and the \\(joule\\). These two are, respectively, the force that causes one kilogram to be accelerated at 1 metre per (1) second per (1) second, and the work done by 1 newton acting over 1 metre. Being coherent refers to this consistent use of 1. In the old c.g.s. system , with its base units the centimetre and the gram, the corresponding coherent units were the dyne and the erg, respectively the force that causes 1 gram to be accelerated at 1 centimetre per (1) second per (1) second, and the work done by 1 dyne acting over 1 centimetre. So \\(1\\,newton = 10^5 dyne\\), \\(1 joule = 10^7 erg\\), making each of the four compatible in a decimal sense within its respective other system, but not coherent therein.</p>"^^qudt:LatexString ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Coherence_(units_of_measurement)"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:hasUnitSystem .

qudt:conversionCoefficient a owl:DatatypeProperty ;
    rdfs:label "conversion coefficient" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:currencyExponent a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    rdfs:label "currency exponent" ;
    dcterms:description "The currency exponent indicates the number of decimal places between a major currency unit and its minor currency unit. For example, the US dollar is the major currency unit of the United States, and the US cent is the minor currency unit. Since one cent is 1/100 of a dollar, the US dollar has a currency exponent of 2. However, the Japanese Yen has no minor currency units, so the yen has a currency exponent of 0."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:denominatorDimensionVector a owl:ObjectProperty ;
    rdfs:label "denominator dimension vector" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:elementKind a owl:ObjectProperty ;
    rdfs:label "element kind" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:exactMatch a owl:ObjectProperty ;
    rdfs:label "exact match" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:fieldCode a owl:AnnotationProperty ;
    rdfs:label "field code" ;
    qudt:plainTextDescription "A field code is a generic property for representing unique codes that make up other identifers. For example each QuantityKind class caries a domain code as its field code." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:figure a owl:AnnotationProperty ;
    rdfs:label "figure" ;
    dcterms:description "Provides a link to an image."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:floatPercentage a rdfs:Datatype,
        sh:NodeShape ;
    rdfs:label "float percentage" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf xsd:float ;
    owl:equivalentClass [ a rdfs:Datatype ;
            rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
            owl:onDatatype xsd:float ;
            owl:withRestrictions ( [ xsd:minInclusive "0.0"^^xsd:float ] [ xsd:maxInclusive "100.0"^^xsd:float ] ) ] .

qudt:hasDenominatorPart a owl:ObjectProperty ;
    rdfs:label "has quantity kind dimension vector denominator part" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:hasDimension a owl:ObjectProperty ;
    rdfs:label "has dimension" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:hasDimensionExpression a owl:ObjectProperty ;
    rdfs:label "dimension expression" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:hasNonCoherentUnit a owl:DeprecatedProperty,
        owl:ObjectProperty ;
    rdfs:label "has non-coherent unit" ;
    dcterms:description "A coherent unit of measurement for a unit system is a defined unit that may be expressed as a product of powers of the system's base units with the proportionality factor of one."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:hasDefinedUnit ;
    owl:inverseOf qudt:coherentUnitOfSystem .

qudt:hasNumeratorPart a owl:ObjectProperty ;
    rdfs:label "has quantity kind dimension vector numerator part" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:hasPrefixUnit a owl:ObjectProperty ;
    rdfs:label "prefix unit" ;
    rdfs:comment "Specifies which prefix unit is used." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:hasDefinedUnit .

qudt:hasQuantity a owl:ObjectProperty ;
    rdfs:label "has quantity" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:hasReferenceQuantityKind a owl:ObjectProperty ;
    rdfs:label "has reference quantity kind" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:hasVocabulary a owl:AnnotationProperty ;
    rdfs:label "has vocabulary" ;
    qudt:plainTextDescription "Used to relate a class to one or more graphs where vocabularies for the class are defined." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:integerPercentage a rdfs:Datatype,
        sh:NodeShape ;
    rdfs:label "integer percentage" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf xsd:integer ;
    owl:equivalentClass [ a rdfs:Datatype ;
            rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
            owl:onDatatype xsd:integer ;
            owl:withRestrictions ( [ xsd:minInclusive 0 ] [ xsd:maxInclusive 100 ] ) ] .

qudt:isDimensionInSystem a owl:ObjectProperty ;
    rdfs:label "is dimension in system" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:isMetricUnit a owl:DatatypeProperty ;
    rdfs:label "is metric unit" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:isScalingOf a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "is scaling of" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:negativeDeltaLimit a owl:DatatypeProperty ;
    rdfs:label "negative delta limit" ;
    dcterms:description "A negative change limit between consecutive sample values for a parameter. The Negative Delta may be the encoded value or engineering units value depending on whether or not a Calibrator is defined."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:numeratorDimensionVector a owl:ObjectProperty ;
    rdfs:label "numerator dimension vector" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:numericValue a owl:DatatypeProperty ;
    rdfs:label "numeric value" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:onlineReference a owl:AnnotationProperty ;
    rdfs:label "online reference" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:outOfScope a owl:AnnotationProperty ;
    rdfs:label "out of scope" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:positiveDeltaLimit a owl:DatatypeProperty ;
    rdfs:label "Positive delta limit" ;
    dcterms:description "A positive change limit between consecutive sample values for a parameter. The Positive Delta may be the encoded value or engineering units value depending on whether or not a Calibrator is defined."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:prefix a owl:ObjectProperty ;
    rdfs:label "prefix" ;
    rdfs:comment "Associates a unit with the appropriate prefix, if any." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:quantity a owl:ObjectProperty ;
    rdfs:label "quantity" ;
    dcterms:description "a property to relate an observable thing with a quantity (qud:Quantity)"^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:reference a owl:ObjectProperty ;
    rdfs:label "reference" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:referenceUnit a owl:FunctionalProperty,
        owl:ObjectProperty ;
    rdfs:label "reference unit" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:relevantQuantityKind a owl:ObjectProperty ;
    rdfs:label "relevant quantity kind" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:relevantUnit a owl:ObjectProperty ;
    rdfs:label "Relevant Unit" ;
    rdfs:comment "This property is used for qudt:Discipline instances to identify the Unit instances that are used within a given discipline." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:systemDefinition a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "system definition" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:systemDimension a owl:ObjectProperty ;
    rdfs:label "system dimension" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:ucumCaseInsensitiveCode a owl:AnnotationProperty ;
    rdfs:label "ucum case-insensitive code" ;
    dcterms:description "<em>ucumCode</em> associates a QUDT unit with a UCUM case-insensitive code."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:ucumCode ;
    owl:deprecated true .

qudt:ucumCaseSensitiveCode a owl:AnnotationProperty ;
    rdfs:label "ucum case-sensitive code" ;
    dcterms:description "<em>ucumCode</em> associates a QUDT unit with with a UCUM case-sensitive code."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:ucumCode ;
    owl:deprecated true .

qudt:valueQuantity a owl:ObjectProperty ;
    rdfs:label "value for quantity" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    owl:inverseOf qudt:quantityValue .

qudt:valueUnion a rdfs:Datatype,
        sh:NodeShape ;
    rdfs:label "value union" ;
    dcterms:description "A datatype that is the union of numeric xsd data types. \"numericUnion\" is equivalent to the xsd specification that uses an xsd:union of memberTypes=\"xsd:decimal xsd:double xsd:float xsd:integer\"." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf rdfs:Resource ;
    owl:equivalentClass [ a owl:Class ;
            owl:unionOf ( xsd:anySimpleType dtype:EnumeratedValue ) ] .

qkdv:A0E0L-0.5I0M0.5TE0TM-1D0 a qudt:QuantityKindDimensionVector_CGS ;
    rdfs:label "A0E0L-0.5I0M0.5TE0TM-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength "-0.5"^^xsd:float ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass "0.5"^^xsd:float ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:latexDefinition "\\(L^-0.5 M^0.5 T^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-0.5I0M0.5TE0TM-2D0 a qudt:QuantityKindDimensionVector_CGS ;
    rdfs:label "A0E0L-0.5I0M0.5TE0TM-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength "-0.5"^^xsd:float ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass "0.5"^^xsd:float ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:latexDefinition "\\(L^-0.5 M^0.5 T^-2\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-1.5I0M0.5TE0TM-1D0 a qudt:QuantityKindDimensionVector_CGS ;
    rdfs:label "A0E0L-1.5I0M0.5TE0TM-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength "-1.5"^^xsd:float ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass "0.5"^^xsd:float ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:latexDefinition "\\(L^-1.5 M^0.5 T^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-1.5I0M0.5TE0TM0D0 a qudt:QuantityKindDimensionVector_CGS ;
    rdfs:label "A0E0L-1.5I0M0.5TE0TM0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength "-1.5"^^xsd:float ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass "0.5"^^xsd:float ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:latexDefinition "\\(L^-1.5 M^0.5\\)"^^qudt:LatexString ;
    vaem:todo "Suspicious. Electric Charge per Area would be ET/L**2" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-1I0M-1H0T3D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-1I0M-1H0T3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 3 ;
    qudt:dimensionlessExponent 0 ;
    qudt:latexDefinition "\\(L^-1 M^-1 T^3 Θ\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-1I0M0H-1T-2D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-1I0M0H-1T-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature -1 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:SpecificHeatVolume ;
    qudt:latexDefinition "\\(L^-1 T^-2 Θ^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-1I0M0H0T2D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-1I0M0H0T2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:latexDefinition "\\(L^{-1} T^2\\)"^^qudt:LatexString ;
    vaem:todo "Should be M-1L-2T4E2" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-2I0M0H0T2D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-2I0M0H0T2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:latexDefinition "\\(L^{-2} T^2\\)"^^qudt:LatexString ;
    vaem:todo "Permeability should be force/current**2, which is ML/T2E2. Permittivity should be T4E2L-3M-1" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-2I0M2H0T-2D0 a qudt:QuantityKindDimensionVector ;
    rdfs:label "A0E0L-2I0M2H0T-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 2 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:MassForcePerVolume ;
    qudt:latexDefinition "\\(L^-2 M^2 T^-2\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-2I1M-1H0T3D1 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-2I1M-1H0T3D1" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -2 ;
    qudt:dimensionExponentForLuminousIntensity 1 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 3 ;
    qudt:dimensionlessExponent 1 ;
    qudt:latexDefinition "\\(U L^-2 M^-1 T^3 J\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-2I1M0H0T0D1 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-2I1M0H0T0D1" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -2 ;
    qudt:dimensionExponentForLuminousIntensity 1 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 1 ;
    qudt:latexDefinition "\\(U L^-2 J\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-2I1M0H0T1D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-2I1M0H0T1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -2 ;
    qudt:dimensionExponentForLuminousIntensity 1 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:latexDefinition "\\(L^-2 J T\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L0.5I0M0.5TE0TM-1D0 a qudt:QuantityKindDimensionVector_CGS ;
    rdfs:label "A0E0L0.5I0M0.5TE0TM-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength "0.5"^^xsd:float ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass "0.5"^^xsd:float ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:latexDefinition "\\(L^0.5 M^0.5 T^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L0.5I0M0.5TE0TM-2D0 a qudt:QuantityKindDimensionVector_CGS ;
    rdfs:label "A0E0L0.5I0M0.5TE0TM-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength "0.5"^^xsd:float ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass "0.5"^^xsd:float ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:latexDefinition "\\(L^0.5 M^0.5 T^-2\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L0.5I0M0.5TE0TM0D0 a qudt:QuantityKindDimensionVector_CGS ;
    rdfs:label "A0E0L0.5I0M0.5TE0TM0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength "0.5"^^xsd:float ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass "0.5"^^xsd:float ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:latexDefinition "\\(L^0.5 M^0.5\\)"^^qudt:LatexString ;
    vaem:todo "Electric Charge should be ET" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L0I0M-1H0T1D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M-1H0T1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 1 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L0I0M0H0T-2D1 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M0H0T-2D1" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 1 ;
    qudt:hasReferenceQuantityKind quantitykind:AngularAcceleration ;
    qudt:latexDefinition "\\(U T^-2\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L0I0M0H0T1D1 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M0H0T1D1" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 1 ;
    qudt:dimensionlessExponent 1 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L0I0M1H0T-3D-1 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M1H0T-3D-1" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -3 ;
    qudt:dimensionlessExponent -1 ;
    qudt:latexDefinition "\\(U^-1 M T^-3\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L0I1M0H0T0D1 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I1M0H0T0D1" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 1 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 1 ;
    qudt:latexDefinition "\\(U J\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L1.5I0M0.5TE0TM-1D0 a qudt:QuantityKindDimensionVector_CGS ;
    rdfs:label "A0E0L1.5I0M0.5TE0TM-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength "1.5"^^xsd:float ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass "0.5"^^xsd:float ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:latexDefinition "\\(L^1.5 M^0.5 T^-1\\)"^^qudt:LatexString ;
    vaem:todo "Suspicious" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L1.5I0M0.5TE0TM-2D0 a qudt:QuantityKindDimensionVector_CGS ;
    rdfs:label "A0E0L1.5I0M0.5TE0TM-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength "1.5"^^xsd:float ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass "0.5"^^xsd:float ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:latexDefinition "\\(L^1.5 M^0.5 T^-2\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L2I0M0H-1T-3D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L2I0M0H-1T-3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature -1 ;
    qudt:dimensionExponentForTime -3 ;
    qudt:dimensionlessExponent 0 ;
    qudt:latexDefinition "\\(L^2 T^-3 Θ^-1 N^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L2I0M0H0T0D1 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L2I0M0H0T0D1" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 1 ;
    qudt:latexDefinition "\\(U L^2\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L2I0M1H0T-3D-1 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L2I0M1H0T-3D-1" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -3 ;
    qudt:dimensionlessExponent -1 ;
    qudt:latexDefinition "\\(U^-1 L^2 M T^-3\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L3I0M-1H-1T0D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L3I0M-1H-1T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 3 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature -1 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:SpecificHeatPressure ;
    qudt:latexDefinition "\\(L^3 M^-1 Θ^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L3I0M1H0T-1D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L3I0M1H0T-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 3 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:MomentOfForce ;
    qudt:latexDefinition "\\(L^3 M T^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L4I0M1H0T-3D-1 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L4I0M1H0T-3D-1" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 4 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -3 ;
    qudt:dimensionlessExponent -1 ;
    qudt:latexDefinition "\\(U^-1 L^4 M T^-3\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E1L0I0M0H0T0D-1 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E1L0I0M0H0T0D-1" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 1 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent -1 ;
    qudt:latexDefinition "\\(U^-1 I\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E1L0I0M0H0T0D1 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E1L0I0M0H0T0D1" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 1 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 1 ;
    qudt:latexDefinition "\\(U I\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E2L-2I0M-1H0T2D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E2L-2I0M-1H0T2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 2 ;
    qudt:dimensionExponentForLength -2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:latexDefinition "\\(L^-2 M^-1 T^2 I^2\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E2L-4I0M-1H0T3D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E2L-4I0M-1H0T3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 2 ;
    qudt:dimensionExponentForLength -4 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 3 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E2L0I0M0H0T1D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E2L0I0M0H0T1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 2 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:VoltageLoss ;
    qudt:symbol "T I I^2" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E4L-5I0M-3H0T10D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E4L-5I0M-3H0T10D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 4 ;
    qudt:dimensionExponentForLength -5 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -3 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 10 ;
    qudt:dimensionlessExponent 0 ;
    qudt:latexDefinition "\\(L^-5 M^-3 T^10 I^4\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

pfx:Atto a qudt:DecimalPrefix,
        qudt:Prefix ;
    rdfs:label "Atto"@en ;
    dcterms:description "\"atto\" is a decimal prefix for expressing a value with a scaling of \\(10^{-18}\\)."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Atto"^^xsd:anyURI ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Atto?oldid=412748080"^^xsd:anyURI ;
    qudt:prefixMultiplier 1e-18 ;
    qudt:symbol "a" ;
    qudt:ucumCode "a" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/prefix> .

pfx:Centi a qudt:DecimalPrefix,
        qudt:Prefix ;
    rdfs:label "Centi"@en ;
    dcterms:description "'centi' is a decimal prefix for expressing a value with a scaling of \\(10^{-2}\\)."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Centi-"^^xsd:anyURI ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Centi-?oldid=480291808"^^xsd:anyURI ;
    qudt:prefixMultiplier 1e-02 ;
    qudt:symbol "c" ;
    qudt:ucumCode "c" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/prefix> .

pfx:Deca a qudt:DecimalPrefix,
        qudt:Prefix ;
    rdfs:label "Deca"@en ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Deca"^^xsd:anyURI ;
    qudt:prefixMultiplier 1e+01 ;
    qudt:symbol "da" ;
    qudt:ucumCode "da" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/prefix> .

pfx:Deci a qudt:DecimalPrefix,
        qudt:Prefix ;
    rdfs:label "Deci"@en ;
    dcterms:description "\"deci\" is a decimal prefix for expressing a value with a scaling of \\(10^{-1}\\)."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Deci-"^^xsd:anyURI ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Deci-?oldid=469980160"^^xsd:anyURI ;
    qudt:prefixMultiplier 1e-01 ;
    qudt:symbol "d" ;
    qudt:ucumCode "d" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/prefix> .

pfx:Deka a qudt:DecimalPrefix,
        qudt:Prefix ;
    rdfs:label "Deka"@en ;
    dcterms:description "<strong>deka</strong> is a decimal prefix for expressing a value with a scaling of \\(10^{1}\\)."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Deca"^^xsd:anyURI ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Deca?oldid=480093935"^^xsd:anyURI ;
    qudt:prefixMultiplier 1e+01 ;
    qudt:symbol "da" ;
    qudt:ucumCode "da" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/prefix> .

pfx:Exa a qudt:DecimalPrefix,
        qudt:Prefix ;
    rdfs:label "Exa"@en ;
    dcterms:description "'exa' is a decimal prefix for expressing a value with a scaling of \\(10^{18}\\)."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Exa-"^^xsd:anyURI ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Exa-?oldid=494400216"^^xsd:anyURI ;
    qudt:prefixMultiplier 1e+18 ;
    qudt:symbol "E" ;
    qudt:ucumCode "E" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/prefix> .

pfx:Exbi a qudt:BinaryPrefix,
        qudt:Prefix ;
    rdfs:label "Exbi"@en ;
    dcterms:description "A binary prefix for expressing a value with a scaling of \\(1024^{6}\\), or \\(2^{60}\\)."^^qudt:LatexString ;
    qudt:prefixMultiplier 1.529215e+17 ;
    qudt:symbol "Ei" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/prefix> .

pfx:Femto a qudt:DecimalPrefix,
        qudt:Prefix ;
    rdfs:label "Femto"@en ;
    dcterms:description "'femto' is a decimal prefix for expressing a value with a scaling of \\(10^{-15}\\)."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Femto-"^^xsd:anyURI ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Femto-?oldid=467211359"^^xsd:anyURI ;
    qudt:prefixMultiplier 1e-15 ;
    qudt:symbol "f" ;
    qudt:ucumCode "f" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/prefix> .

pfx:Gibi a qudt:BinaryPrefix,
        qudt:Prefix ;
    rdfs:label "Gibi"@en ;
    dcterms:description "A binary prefix for expressing a value with a scaling of \\(1024^{3}\\), or \\(2^{30}\\)."^^qudt:LatexString ;
    qudt:prefixMultiplier 1.073742e+09 ;
    qudt:symbol "Gi" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/prefix> .

pfx:Giga a qudt:DecimalPrefix,
        qudt:Prefix ;
    rdfs:label "Giga"@en ;
    dcterms:description "'giga' is a decimal prefix for expressing a value with a scaling of \\(10^{9}\\)."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Giga-"^^xsd:anyURI ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Giga-?oldid=473222816"^^xsd:anyURI ;
    qudt:prefixMultiplier 1e+09 ;
    qudt:symbol "G" ;
    qudt:ucumCode "G" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/prefix> .

pfx:Hecto a qudt:DecimalPrefix,
        qudt:Prefix ;
    rdfs:label "Hecto"@en ;
    dcterms:description "'hecta' is a decimal prefix for expressing a value with a scaling of \\(10^{2}\"\\)."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Hecto-"^^xsd:anyURI ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Hecto-?oldid=494711166"^^xsd:anyURI ;
    qudt:prefixMultiplier 1e+02 ;
    qudt:symbol "h" ;
    qudt:ucumCode "h" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/prefix> .

pfx:Kibi a qudt:BinaryPrefix,
        qudt:Prefix ;
    rdfs:label "Kibi"@en ;
    dcterms:description "A binary prefix for expressing a value with a scaling of \\(1024\\), or \\(2^{10}\\)."^^qudt:LatexString ;
    qudt:prefixMultiplier 1.024e+03 ;
    qudt:symbol "Ki" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/prefix> .

pfx:Kilo a qudt:DecimalPrefix,
        qudt:Prefix ;
    rdfs:label "Kilo"@en ;
    dcterms:description "\"kilo\" is a decimal prefix for expressing a value with a scaling of \\(10^{3}\"\\)."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Kilo"^^xsd:anyURI ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Kilo?oldid=461428121"^^xsd:anyURI ;
    qudt:prefixMultiplier 1e+03 ;
    qudt:symbol "k" ;
    qudt:ucumCode "k" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/prefix> .

pfx:Mebi a qudt:BinaryPrefix,
        qudt:Prefix ;
    rdfs:label "Mebi"@en ;
    dcterms:description "A binary prefix for expressing a value with a scaling of \\(1024^{2}\\), or \\(2^{20}\\)."^^qudt:LatexString ;
    qudt:prefixMultiplier 1.048576e+06 ;
    qudt:symbol "Mi" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/prefix> .

pfx:Mega a qudt:DecimalPrefix,
        qudt:Prefix ;
    rdfs:label "Mega"@en ;
    dcterms:description "'mega' is a decimal prefix for expressing a value with a scaling of \\(10^{6}\\)."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Mega"^^xsd:anyURI ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mega?oldid=494040441"^^xsd:anyURI ;
    qudt:prefixMultiplier 1e+06 ;
    qudt:symbol "M" ;
    qudt:ucumCode "M" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/prefix> .

pfx:Micro a qudt:DecimalPrefix,
        qudt:Prefix ;
    rdfs:label "Micro"@en ;
    dcterms:description "\"micro\" is a decimal prefix for expressing a value with a scaling of \\(10^{-6}\\)."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Micro"^^xsd:anyURI ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Micro?oldid=491618374"^^xsd:anyURI ;
    qudt:prefixMultiplier 1e-06 ;
    qudt:symbol "μ" ;
    qudt:ucumCode "u" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/prefix> .

pfx:Milli a qudt:DecimalPrefix,
        qudt:Prefix ;
    rdfs:label "Milli"@en ;
    dcterms:description "'milli' is a decimal prefix for expressing a value with a scaling of \\(10^{-3}\\)."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Milli-"^^xsd:anyURI ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Milli-?oldid=467190544"^^xsd:anyURI ;
    qudt:prefixMultiplier 1e-03 ;
    qudt:symbol "m" ;
    qudt:ucumCode "m" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/prefix> .

pfx:Nano a qudt:DecimalPrefix,
        qudt:Prefix ;
    rdfs:label "Nano"@en ;
    dcterms:description "'nano' is a  decimal prefix for expressing a value with a scaling of \\(10^{-9}\\)."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Nano"^^xsd:anyURI ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Nano?oldid=489001692"^^xsd:anyURI ;
    qudt:prefixMultiplier 1e-09 ;
    qudt:symbol "n" ;
    qudt:ucumCode "n" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/prefix> .

pfx:Pebi a qudt:BinaryPrefix,
        qudt:Prefix ;
    rdfs:label "Pebi"@en ;
    dcterms:description "A binary prefix for expressing a value with a scaling of \\(1024^{5}\\), or \\(2^{50}\\)."^^qudt:LatexString ;
    qudt:prefixMultiplier 1.258999e+14 ;
    qudt:symbol "Pi" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/prefix> .

pfx:Peta a qudt:DecimalPrefix,
        qudt:Prefix ;
    rdfs:label "Peta"@en ;
    dcterms:description "'peta' is a decimal prefix for expressing a value with a scaling of \\(10^{15}\\)."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Peta"^^xsd:anyURI ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Peta?oldid=488263435"^^xsd:anyURI ;
    qudt:prefixMultiplier 1e+15 ;
    qudt:symbol "P" ;
    qudt:ucumCode "P" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/prefix> .

pfx:Pico a qudt:DecimalPrefix,
        qudt:Prefix ;
    rdfs:label "Pico"@en ;
    dcterms:description "'pico' is a decimal prefix for expressing a value with a scaling of \\(10^{-12}\\)."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Pico"^^xsd:anyURI ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Pico?oldid=485697614"^^xsd:anyURI ;
    qudt:prefixMultiplier 1e-12 ;
    qudt:symbol "p" ;
    qudt:ucumCode "p" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/prefix> .

pfx:Tebi a qudt:BinaryPrefix,
        qudt:Prefix ;
    rdfs:label "Tebi"@en ;
    dcterms:description "A binary prefix for expressing a value with a scaling of \\(1024^4}\\), or \\(2^{40}\\)."^^qudt:LatexString ;
    qudt:prefixMultiplier 1.099512e+12 ;
    qudt:symbol "Ti" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/prefix> .

pfx:Tera a qudt:DecimalPrefix,
        qudt:Prefix ;
    rdfs:label "Tera"@en ;
    dcterms:description "'tera' is a decimal prefix for expressing a value with a scaling of \\(10^{12}\\)."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Tera"^^xsd:anyURI ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Tera?oldid=494204788"^^xsd:anyURI ;
    qudt:prefixMultiplier 1e+12 ;
    qudt:symbol "T" ;
    qudt:ucumCode "T" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/prefix> .

pfx:Yobi a qudt:BinaryPrefix,
        qudt:Prefix ;
    rdfs:label "Yobi"@en ;
    dcterms:description "A binary prefix for expressing a value with a scaling of \\(1024^{8}\\), or \\(2^{80}\\)."^^qudt:LatexString ;
    qudt:prefixMultiplier 1.208926e+24 ;
    qudt:symbol "Yi" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/prefix> .

pfx:Yocto a qudt:DecimalPrefix,
        qudt:Prefix ;
    rdfs:label "Yocto"@en ;
    dcterms:description "'yocto' is a decimal prefix for expressing a value with a scaling of \\(10^{-24}\\)."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Yocto-"^^xsd:anyURI ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Yocto-?oldid=488155799"^^xsd:anyURI ;
    qudt:prefixMultiplier 1e-24 ;
    qudt:symbol "y" ;
    qudt:ucumCode "y" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/prefix> .

pfx:Yotta a qudt:DecimalPrefix,
        qudt:Prefix ;
    rdfs:label "Yotta"@en ;
    dcterms:description "'yotta' is a decimal prefix for expressing a value with a scaling of \\(10^{24}\\)."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Yotta-"^^xsd:anyURI ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Yotta-?oldid=494538119"^^xsd:anyURI ;
    qudt:prefixMultiplier 1e+24 ;
    qudt:symbol "Y" ;
    qudt:ucumCode "Y" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/prefix> .

pfx:Zebi a qudt:BinaryPrefix,
        qudt:Prefix ;
    rdfs:label "Zebi"@en ;
    dcterms:description "A binary prefix for expressing a value with a scaling of \\(1024^{7}\\), or \\(2^{70}\\)."^^qudt:LatexString ;
    qudt:prefixMultiplier 1.180592e+21 ;
    qudt:symbol "Zi" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/prefix> .

pfx:Zepto a qudt:DecimalPrefix,
        qudt:Prefix ;
    rdfs:label "Zepto"@en ;
    dcterms:description "'zepto' is a decimal prefix for expressing a value with a scaling of \\(10^{-21}\\)."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Zepto-"^^xsd:anyURI ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Zepto-?oldid=476974663"^^xsd:anyURI ;
    qudt:prefixMultiplier 1e-21 ;
    qudt:symbol "z" ;
    qudt:ucumCode "z" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/prefix> .

pfx:Zetta a qudt:DecimalPrefix,
        qudt:Prefix ;
    rdfs:label "Zetta"@en ;
    dcterms:description "'zetta' is a decimal prefix for expressing a value with a scaling of \\(10^{21}\\)."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Zetta-"^^xsd:anyURI ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Zetta-?oldid=495223080"^^xsd:anyURI ;
    qudt:prefixMultiplier 1e+21 ;
    qudt:symbol "Z" ;
    qudt:ucumCode "Z" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/prefix> .

quantitykind:AccelerationOfGravity a qudt:QuantityKind ;
    rdfs:label "Acceleration Of Gravity"@en ;
    qudt:applicableUnit unit:CentiM-PER-SEC2,
        unit:FT-PER-SEC2,
        unit:G,
        unit:GALILEO,
        unit:IN-PER-SEC2,
        unit:KN-PER-SEC,
        unit:KiloPA-M2-PER-GM,
        unit:M-PER-SEC2,
        unit:MicroG,
        unit:MilliG,
        unit:MilliGAL ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-2D0 ;
    qudt:plainTextDescription "The acceleration of freely falling bodies under the influence of terrestrial gravity, equal to approximately 9.81 meters (32 feet) per second per second." ;
    qudt:symbol "g" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Acceleration .

quantitykind:AcceptorDensity a qudt:QuantityKind ;
    rdfs:label "Acceptor Density"@en ;
    qudt:applicableUnit unit:NUM-PER-L,
        unit:NUM-PER-M3,
        unit:NUM-PER-MicroL,
        unit:NUM-PER-NanoL,
        unit:PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Acceptor Density\" is the number per volume of acceptor levels." ;
    qudt:symbol "n_a" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:NumberDensity .

quantitykind:ActionTime a qudt:QuantityKind ;
    rdfs:label "Action Time"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    rdfs:comment "Action Time (sec) " ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ActiveEnergy a qudt:QuantityKind ;
    rdfs:label "Active Energy"@en ;
    qudt:abbreviation "active-energy" ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=601-01-19"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(W = \\int_{t_1}^{t_2} p dt\\), where \\(p\\) is instantaneous power and the integral interval is the time interval from \\(t_1\\) to \\(t_2\\)."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Active Energy\" is the electrical energy transformable into some other form of energy." ;
    qudt:symbol "W" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:InstantaneousPower ;
    skos:broader quantitykind:Energy .

quantitykind:ActivityThresholds a qudt:QuantityKind ;
    rdfs:label "Activity Thresholds"@en ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\overline{T_t}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Activity Thresholds\" are thresholds of sensitivity for radioactivity." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Adaptation a qudt:QuantityKind ;
    rdfs:label "Adaptation"@en ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Adaptation\" is the recovery of visual ability following exposure to light (dark adaptation)." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Neural_adaptation#Visual> .

quantitykind:AlphaDisintegrationEnergy a qudt:QuantityKind ;
    rdfs:label "Alpha Disintegration Energy"@en ;
    dcterms:description "The \"Alpha Disintegration Energy\" is the sum of the kinetic energy of the \\(\\alpha\\)-particle produced in the disintegration process and the recoil energy of the product atom in the reference frame in which the emitting nucleus is at rest before its disintegration."^^qudt:LatexString ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:latexSymbol "\\(Q_a\\)"^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Alpha Disintegration Energy\" is the sum of the kinetic energy of the alpha-particle produced in the disintegration process and the recoil energy of the product atom in the reference frame in which the emitting nucleus is at rest before its disintegration." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:Altitude a qudt:QuantityKind ;
    rdfs:label "Altitude"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Altitude"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:plainTextDescription "Altitude or height is defined based on the context in which it is used (aviation, geometry, geographical survey, sport, and more). As a general definition, altitude is a distance measurement, usually in the vertical or \"up\" direction, between a reference datum and a point or object. The reference datum also often varies according to the context. [Wikipedia]" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:AmbientPressure a qudt:QuantityKind ;
    rdfs:label "Ambient Pressure"@en ;
    dcterms:description """The ambient pressure on an object is the pressure of the surrounding medium, such as a gas or liquid, which comes into contact with the object.
The SI unit of pressure is the pascal (Pa), which is a very small unit relative to atmospheric pressure on Earth, so kilopascals (\\(kPa\\)) are more commonly used in this context. """^^qudt:LatexString ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CM_H2O,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:symbol "p_a" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Pressure .

quantitykind:AngleOfAttack a qudt:QuantityKind ;
    rdfs:label "Angle Of Attack"@en ;
    qudt:applicableUnit unit:ARCMIN,
        unit:ARCSEC,
        unit:DEG,
        unit:GON,
        unit:GRAD,
        unit:MIL,
        unit:MIN_Angle,
        unit:MicroRAD,
        unit:MilliARCSEC,
        unit:MilliRAD,
        unit:RAD,
        unit:REV ;
    qudt:latexSymbol "\\(\\alpha\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Angle of attack  is the angle between the oncoming air or relative wind and a reference line on the airplane or wing." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Angle .

quantitykind:AngleOfOpticalRotation a qudt:QuantityKind ;
    rdfs:label "Angle of Optical Rotation"@en ;
    qudt:applicableUnit unit:ARCMIN,
        unit:ARCSEC,
        unit:DEG,
        unit:GON,
        unit:GRAD,
        unit:MIL,
        unit:MIN_Angle,
        unit:MicroRAD,
        unit:MilliARCSEC,
        unit:MilliRAD,
        unit:RAD,
        unit:REV ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Optical_rotation"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\alpha\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Angle of Optical Rotation\" is the angle through which plane-polarized light is rotated clockwise, as seen when facing the light source, in passing through an optically active medium." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Angle .

quantitykind:AngularDistance a qudt:QuantityKind ;
    rdfs:label "Angular Distance"@en ;
    qudt:applicableUnit unit:ARCMIN,
        unit:ARCSEC,
        unit:DEG,
        unit:GON,
        unit:GRAD,
        unit:MIL,
        unit:MIN_Angle,
        unit:MicroRAD,
        unit:MilliARCSEC,
        unit:MilliRAD,
        unit:RAD,
        unit:REV ;
    qudt:latexSymbol "\\(\\theta\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Angular distance travelled by orbiting vehicle measured from the azimuth of closest approach." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Angle .

quantitykind:ApogeeRadius a qudt:QuantityKind ;
    rdfs:label "Apogee Radius"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:plainTextDescription "Apogee radius of an elliptical orbit" ;
    qudt:symbol "r_2" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Radius .

quantitykind:AreicHeatFlowRate a qudt:QuantityKind ;
    rdfs:label "Aeric Heat Flow Rate"@en ;
    qudt:abbreviation "heat-flow-rate" ;
    qudt:applicableUnit unit:BTU_IT-PER-HR-FT2,
        unit:BTU_IT-PER-SEC-FT2,
        unit:ERG-PER-CentiM2-SEC,
        unit:FT-LB_F-PER-FT2-SEC,
        unit:J-PER-CentiM2-DAY,
        unit:KiloCAL-PER-CentiM2-MIN,
        unit:KiloCAL-PER-CentiM2-SEC,
        unit:MicroW-PER-M2,
        unit:MilliW-PER-M2,
        unit:PSI-L-PER-SEC,
        unit:PicoW-PER-M2,
        unit:W-PER-CentiM2,
        unit:W-PER-FT2,
        unit:W-PER-IN2,
        unit:W-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Rate_of_heat_flow"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\varphi = \\frac{\\Phi}{A}\\), where \\(\\Phi\\) is heat flow rate and \\(A\\) is area."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:plainTextDescription "Density of heat flow rate." ;
    qudt:symbol "φ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PowerPerArea ;
    skos:closeMatch <http://dbpedia.org/resource/Heat_transfer> .

quantitykind:AtomicAttenuationCoefficient a qudt:QuantityKind ;
    rdfs:label "Atomic Attenuation Coefficient"@en ;
    qudt:applicableUnit unit:AC,
        unit:ARE,
        unit:BARN,
        unit:CentiM2,
        unit:DecaARE,
        unit:DeciM2,
        unit:FT2,
        unit:HA,
        unit:IN2,
        unit:M2,
        unit:MI2,
        unit:MIL_Circ,
        unit:MicroM2,
        unit:MilliM2,
        unit:NanoM2,
        unit:PlanckArea,
        unit:YD2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Attenuation_coefficient"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mu_a = -\\frac{\\mu}{n}\\), where \\(\\mu\\) is the linear attenuation coefficient and \\(n\\) is the number density of the atoms in the substance."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Atomic Attenuation Coefficient\" is a measurement of how strongly a chemical species or substance absorbs or scatters light at a given wavelength, per the number of atoms in the substance." ;
    qudt:symbol "μₐ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Area ;
    skos:closeMatch quantitykind:MolarAttenuationCoefficient .

quantitykind:AtomicCharge a qudt:QuantityKind ;
    rdfs:label "Atomic Charge"@en ;
    qudt:applicableUnit unit:A-HR,
        unit:A-SEC,
        unit:AttoC,
        unit:C,
        unit:C_Ab,
        unit:C_Stat,
        unit:CentiC,
        unit:DecaC,
        unit:DeciC,
        unit:E,
        unit:ElementaryCharge,
        unit:ExaC,
        unit:F,
        unit:FR,
        unit:FemtoC,
        unit:GigaC,
        unit:HectoC,
        unit:KiloA-HR,
        unit:KiloC,
        unit:MegaC,
        unit:MicroC,
        unit:MilliA-HR,
        unit:MilliC,
        unit:NanoC,
        unit:PetaC,
        unit:PicoC,
        unit:PlanckCharge,
        unit:TeraC,
        unit:YoctoC,
        unit:YottaC,
        unit:ZeptoC,
        unit:ZettaC ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:informativeReference "http://www.answers.com/topic/atomic-charge"^^xsd:anyURI ;
    qudt:plainTextDescription "The electric charge of an ion, equal to the number of electrons the atom has gained or lost in its ionization multiplied by the charge on one electron." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ElectricCharge .

quantitykind:AtomicMass a qudt:QuantityKind ;
    rdfs:label "Atomic Mass"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Atomic_mass"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Atomic Mass\" is the mass of a specific isotope, most often expressed in unified atomic mass units." ;
    qudt:symbol "m_a" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:AuditoryThresholds a qudt:QuantityKind ;
    rdfs:label "Auditory Thresholds"@en ;
    qudt:applicableUnit unit:DeciB ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\overline{T_a}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Auditory Thresholds\" is the thresholds of sensitivity to auditory signals and other input to the ear or the sense of hearing." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:SoundPowerLevel .

quantitykind:AuxillaryMagneticField a qudt:QuantityKind ;
    rdfs:label "Auxillary Magnetic Field"@en ;
    qudt:applicableUnit unit:A-PER-CentiM,
        unit:A-PER-M,
        unit:A-PER-MilliM,
        unit:AT-PER-IN,
        unit:AT-PER-M,
        unit:KiloA-PER-M,
        unit:MilliA-PER-IN,
        unit:MilliA-PER-MilliM,
        unit:OERSTED ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M0H0T0D0 ;
    qudt:latexSymbol "H"^^qudt:LatexString ;
    qudt:plainTextDescription "Magnetic Fields surround magnetic materials and electric currents and are detected by the force they exert on other magnetic materials and moving electric charges. The electric and magnetic fields are two interrelated aspects of a single object, called the electromagnetic field. A pure electric field in one reference frame is observed as a combination of both an electric field and a magnetic field in a moving reference frame. The Auxillary Magnetic Field, H characterizes how the true Magnetic Field B influences the organization of magnetic dipoles in a given medium." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:MagneticFieldStrength_H .

quantitykind:AverageEnergyLossPerElementaryChargeProduced a qudt:QuantityKind ;
    rdfs:label "Average Energy Loss per Elementary Charge Produced"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:latexDefinition "\\(W_i = \\frac{E_k}{N_i}\\), where \\(E_k\\) is the initial kinetic energy of an ionizing charged particle and \\(N_i\\) is the total ionization produced by that particle."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Average Energy Loss per Elementary Charge Produced\" is also referred to as average energy loss per ion pair formed." ;
    qudt:symbol "W_i" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:AverageHeadEndPressure a qudt:QuantityKind ;
    rdfs:label "Average Head End Pressure"@en ;
    qudt:abbreviation "AHEP" ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CM_H2O,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:HeadEndPressure .

quantitykind:AverageSpecificImpulse a qudt:QuantityKind ;
    rdfs:label "Average Specific Impulse"@en ;
    rdfs:comment "Avg Specific Impulse (lbf-sec/lbm) " ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:SpecificImpulse .

quantitykind:AverageVacuumThrust a qudt:QuantityKind ;
    rdfs:label "Average Vacuum Thrust"@en ;
    qudt:applicableUnit unit:DYN,
        unit:KIP_F,
        unit:KiloGM_F,
        unit:KiloN,
        unit:KiloP,
        unit:KiloPOND,
        unit:LB_F,
        unit:MegaLB_F,
        unit:MegaN,
        unit:MicroN,
        unit:MilliN,
        unit:N,
        unit:OZ_F,
        unit:PDL,
        unit:PlanckForce,
        unit:TON_F_US ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "AVT" ;
    skos:broader quantitykind:VacuumThrust .

quantitykind:BendingMomentOfForce a qudt:QuantityKind ;
    rdfs:label "Bending Moment of Force"@en ;
    qudt:applicableUnit unit:CentiN-M,
        unit:DYN-CentiM,
        unit:DeciN-M,
        unit:KiloGM_F-M,
        unit:KiloGM_F-PER-M,
        unit:KiloN-M,
        unit:LB_F-FT,
        unit:LB_F-IN,
        unit:MegaN-M,
        unit:MicroN-M,
        unit:MilliN-M,
        unit:N-CentiM,
        unit:N-M,
        unit:OZ_F-IN ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Torque"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Bending_moment"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(M_b = M \\cdot e_Q\\), where \\(M\\) is the momentof force and \\(e_Q\\) is a unit vector directed along a \\(Q-axis\\) with respect to which the torque is considered."^^qudt:LatexString ;
    qudt:plainTextDescription "A bending moment exists in a structural element when a moment is applied to the element so that the element bends. It is the component of moment of force perpendicular to the longitudinal axis of a beam or a shaft." ;
    qudt:symbol "M_b" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Torque .

quantitykind:BetaDisintegrationEnergy a qudt:QuantityKind ;
    rdfs:label "Beta Disintegration Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Decay_energy"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Beta Disintegration Energy\" is the  energy released by a beta particle radioactive decay. It is the sum of the maximum beta-particle kinetic energy and the recoil energy of the atom produced in the reference frame in which the emitting nucleus is at rest before its disintegration." ;
    qudt:symbol "Qᵦ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:BevelGearPitchAngle a qudt:QuantityKind ;
    rdfs:label "Bevel Gear Pitch Angle"@en ;
    qudt:applicableUnit unit:ARCMIN,
        unit:ARCSEC,
        unit:DEG,
        unit:GON,
        unit:GRAD,
        unit:MIL,
        unit:MIN_Angle,
        unit:MicroRAD,
        unit:MilliARCSEC,
        unit:MilliRAD,
        unit:RAD,
        unit:REV ;
    qudt:latexSymbol "\\(\\theta\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Pitch angle in bevel gears is the angle between an element of a pitch cone and its axis. In external and internal bevel gears, the pitch angles are respectively less than and greater than 90 degrees." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Angle .

quantitykind:BraggAngle a qudt:QuantityKind ;
    rdfs:label "Bragg Angle"@en ;
    qudt:applicableUnit unit:ARCMIN,
        unit:ARCSEC,
        unit:DEG,
        unit:GON,
        unit:GRAD,
        unit:MIL,
        unit:MIN_Angle,
        unit:MicroRAD,
        unit:MilliARCSEC,
        unit:MilliRAD,
        unit:RAD,
        unit:REV ;
    qudt:informativeReference "http://reference.iucr.org/dictionary/Bragg_angle"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "\\(2d\\sin{\\vartheta} = n\\lambda \\)"^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\vartheta\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Bragg Angle\" describes the condition for a plane wave to be diffracted from a family of lattice planes, the angle between the wavevector of the incident plane wave, and the lattice planes." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Angle .

quantitykind:Breadth a qudt:QuantityKind ;
    rdfs:label "Breadth"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Length"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wiktionary.org/wiki/breadth"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Breadth\" is the extent or measure of how broad or wide something is." ;
    qudt:symbol "b" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:BucklingFactor a qudt:QuantityKind ;
    rdfs:label "Buckling Factor"@en ;
    qudt:symbol "B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:BurgersVector a qudt:QuantityKind ;
    rdfs:label "Burgers Vector"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Burgers_vector"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Burgers Vector\" is the vector characterizing a dislocation, i.e. the closing vector in a Burgers circuit encircling a dislocation line." ;
    qudt:symbol "b" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:BurnTime a qudt:QuantityKind ;
    rdfs:label "Burn Time"@en ;
    qudt:applicableUnit unit:CentiPOISE-PER-BAR,
        unit:DAY,
        unit:DAY_Sidereal,
        unit:H-PER-KiloOHM,
        unit:H-PER-OHM,
        unit:HR,
        unit:HR_Sidereal,
        unit:KiloSEC,
        unit:MIN,
        unit:MIN_Sidereal,
        unit:MO,
        unit:MO_MeanGREGORIAN,
        unit:MO_MeanJulian,
        unit:MO_Synodic,
        unit:MegaYR,
        unit:MicroH-PER-KiloOHM,
        unit:MicroH-PER-OHM,
        unit:MicroSEC,
        unit:MilliH-PER-KiloOHM,
        unit:MilliH-PER-OHM,
        unit:MilliPA-SEC-PER-BAR,
        unit:MilliSEC,
        unit:NanoSEC,
        unit:PA-SEC-PER-BAR,
        unit:POISE-PER-BAR,
        unit:PicoSEC,
        unit:PlanckTime,
        unit:SEC,
        unit:SH,
        unit:WK,
        unit:YR,
        unit:YR_Common,
        unit:YR_Sidereal,
        unit:YR_TROPICAL ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:symbol "t" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Time .

quantitykind:CENTER-OF-GRAVITY_X a qudt:QuantityKind ;
    rdfs:label "Center of Gravity in the X axis"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:symbol "cg" ;
    qudt:url "http://www.grc.nasa.gov/WWW/k-12/airplane/cg.html"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:CENTER-OF-GRAVITY_Y a qudt:QuantityKind ;
    rdfs:label "Center of Gravity in the Y axis"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:symbol "cg" ;
    qudt:url "http://www.grc.nasa.gov/WWW/k-12/airplane/cg.html"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:CENTER-OF-GRAVITY_Z a qudt:QuantityKind ;
    rdfs:label "Center of Gravity in the X axis"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:symbol "cg" ;
    qudt:url "http://www.grc.nasa.gov/WWW/k-12/airplane/cg.html"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:CENTER-OF-MASS a qudt:QuantityKind ;
    rdfs:label "Center of Mass (CoM)"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:plainTextDescription "The point at which the distributed mass of a composite body can be acted upon by a force without inducing any rotation of the composite body." ;
    qudt:symbol "R" ;
    qudt:url "http://en.wikipedia.org/wiki/Center_of_mass"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "COM" ;
    skos:broader quantitykind:Mass .

quantitykind:CONTRACT-END-ITEM-SPECIFICATION-MASS a qudt:QuantityKind ;
    rdfs:label "Contract End Item (CEI) Specification Mass."@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:plainTextDescription "Contractual mass requirement of a delivered item. Note that The term 'control mass' is sometimes utilized as a limit in lieu of CEI mass when a CEI mass does not exist. The term 'Interface Control Document Mass' is another alternative for specifying a contractual mass requirement." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "CEI" ;
    skos:broader quantitykind:Mass .

quantitykind:CONTROL-MASS a qudt:QuantityKind ;
    rdfs:label "Control Mass."@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:plainTextDescription "The upper design gross mass limit of a system at a specified mission event against which margins are calculated after accounting for basic masses of flight hardware, MGA, and uncertainties. It may include propellants, crew, and cargo." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:CarrierLifetime a qudt:QuantityKind ;
    rdfs:label "Carrier LifetIme"@en ;
    qudt:applicableUnit unit:CentiPOISE-PER-BAR,
        unit:DAY,
        unit:DAY_Sidereal,
        unit:H-PER-KiloOHM,
        unit:H-PER-OHM,
        unit:HR,
        unit:HR_Sidereal,
        unit:KiloSEC,
        unit:MIN,
        unit:MIN_Sidereal,
        unit:MO,
        unit:MO_MeanGREGORIAN,
        unit:MO_MeanJulian,
        unit:MO_Synodic,
        unit:MegaYR,
        unit:MicroH-PER-KiloOHM,
        unit:MicroH-PER-OHM,
        unit:MicroSEC,
        unit:MilliH-PER-KiloOHM,
        unit:MilliH-PER-OHM,
        unit:MilliPA-SEC-PER-BAR,
        unit:MilliSEC,
        unit:NanoSEC,
        unit:PA-SEC-PER-BAR,
        unit:POISE-PER-BAR,
        unit:PicoSEC,
        unit:PlanckTime,
        unit:SEC,
        unit:SH,
        unit:WK,
        unit:YR,
        unit:YR_Common,
        unit:YR_Sidereal,
        unit:YR_TROPICAL ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Carrier_lifetime"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\tau, \\tau_n, \\tau_p\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Carrier LifetIme\" is a time constant for recombination or trapping of minority charge carriers in semiconductors." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Time .

quantitykind:CartesianArea a qudt:QuantityKind ;
    rdfs:label "Cartesian Area"@en ;
    qudt:abbreviation "area" ;
    qudt:applicableUnit unit:AC,
        unit:ARE,
        unit:BARN,
        unit:CentiM2,
        unit:DecaARE,
        unit:DeciM2,
        unit:FT2,
        unit:HA,
        unit:IN2,
        unit:M2,
        unit:MI2,
        unit:MIL_Circ,
        unit:MicroM2,
        unit:MilliM2,
        unit:NanoM2,
        unit:PlanckArea,
        unit:YD2 ;
    qudt:hasDimension qudt:DIM_CGS-L2,
        qudt:DIM_USCUSTOMARY-L2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Area"^^xsd:anyURI ;
    qudt:latexDefinition "\\(A = \\int\\int dxdy\\), where \\(x\\) and \\(y\\) are cartesian coordinates."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Area\" is a quantity that expresses the extent of a two-dimensional surface or shape, or planar lamina, in the plane." ;
    qudt:symbol "A" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Area ;
    skos:closeMatch quantitykind:Area .

quantitykind:CartesianCoordinates a qudt:QuantityKind ;
    rdfs:label "Cartesian Coordinates"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Cartesian_coordinate_system"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Cartesian Coordinates\" specify each point uniquely in a plane by a pair of numerical coordinates, which are the signed distances from the point to two fixed perpendicular directed lines, measured in the same unit of length. " ;
    qudt:symbol "x, y, z" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:CartesianVolume a qudt:QuantityKind ;
    rdfs:label "Volume"@en ;
    qudt:applicableUnit unit:AC-FT,
        unit:BBL,
        unit:BBL_UK_PET,
        unit:BBL_US,
        unit:CentiM3,
        unit:DecaL,
        unit:DecaM3,
        unit:DeciL,
        unit:DeciM3,
        unit:FBM,
        unit:FT3,
        unit:GI_UK,
        unit:GI_US,
        unit:GT,
        unit:HectoL,
        unit:IN3,
        unit:KiloL,
        unit:L,
        unit:M3,
        unit:MI3,
        unit:MegaL,
        unit:MicroL,
        unit:MicroM3,
        unit:MilliL,
        unit:MilliM3,
        unit:OZ_VOL_UK,
        unit:PINT,
        unit:PINT_UK,
        unit:PK_UK,
        unit:PlanckVolume,
        unit:QT_UK,
        unit:QT_US,
        unit:RT,
        unit:STR,
        unit:Standard,
        unit:TBSP,
        unit:TON_SHIPPING_US,
        unit:TSP,
        unit:YD3 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Volume"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexDefinition "\\(V = \\int\\int\\int dxdydz\\), where \\(x\\), \\(y\\), and \\(z\\) are cartesian coordinates."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Volume\" is the quantity of three-dimensional space enclosed by some closed boundary, for example, the space that a substance (solid, liquid, gas, or plasma) or shape occupies or contains." ;
    qudt:symbol "V" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Volume .

quantitykind:CelsiusTemperature a qudt:QuantityKind ;
    rdfs:label "Celsius temperature"@en ;
    qudt:applicableUnit unit:DEG_R,
        unit:K,
        unit:PlanckTemperature ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition """"Celsius Temperature", the thermodynamic temperature \\(T_0\\), is exactly \\(0.01\\)kelvin below the thermodynamic temperature of the triple point of water.
\\(t = T - T_0\\), where \\(T\\) is Thermodynamic Temperature and \\(T_0 = 273.15 K\\)."""^^qudt:LatexString ;
    qudt:plainTextDescription "\"Celsius Temperature\", the thermodynamic temperature T_0, is exactly 0.01 kelvin below the thermodynamic temperature of the triple point of water." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ThermodynamicTemperature ;
    prov:wasDerivedFrom quantitykind:ThermodynamicTemperature .

quantitykind:CharacteristicVelocity a qudt:QuantityKind ;
    rdfs:label "Characteristic Velocity"@en ;
    dcterms:description "Characteristic velocity or \\(c^{*}\\) is a measure of the combustion performance of a rocket engine independent of nozzle performance, and is used to compare different propellants and propulsion systems."^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:latexSymbol "\\(c^{*}\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Circulation a qudt:QuantityKind ;
    rdfs:label "Circulation"@en ;
    qudt:applicableUnit unit:CentiM2-PER-SEC,
        unit:FT2-PER-HR,
        unit:FT2-PER-SEC,
        unit:IN2-PER-SEC,
        unit:M2-HZ,
        unit:M2-PER-SEC,
        unit:MilliM2-PER-SEC ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Circulation_%28fluid_dynamics%29"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-1D0 ;
    qudt:latexSymbol "\\(\\Gamma\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "In fluid dynamics, circulation is the line integral around a closed curve of the fluid velocity. It has dimensions of length squared over time." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:AreaPerTime .

quantitykind:ClosestApproachRadius a qudt:QuantityKind ;
    rdfs:label "Closest Approach Radius"@en ;
    qudt:symbol "r_o" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:CoherenceLength a qudt:QuantityKind ;
    rdfs:label "Coherence Length"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Coherence_length"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Coherence Length\" characterizes the distance in a superconductor over which the effect of a perturbation is appreciable." ;
    qudt:symbol "ξ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:ColdReceptorThreshold a qudt:QuantityKind ;
    rdfs:label "Cold Receptor Threshold"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\overline{T_c}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Cold Receptor Threshold\" is the threshold of cold-sensitive free nerve-ending." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:CombustionChamberTemperature a qudt:QuantityKind ;
    rdfs:label "Combustion Chamber Temperature"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:symbol "T_c" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:CompressibilityFactor a qudt:QuantityKind ;
    rdfs:label "Compressibility Factor"@en ;
    dcterms:description "The compressibility factor (\\(Z\\)) is a useful thermodynamic property for modifying the ideal gas law to account for the real gas behaviour. The closer a gas is to a phase change, the larger the deviations from ideal behavior. It is simply defined as the ratio of the molar volume of a gas to the molar volume of an ideal gas at the same temperature and pressure. Values for compressibility are calculated using equations of state (EOS), such as the virial equation and van der Waals equation. The compressibility factor for specific gases can be obtained, with out calculation, from compressibility charts. These charts are created by plotting Z as a function of pressure at constant temperature."^^qudt:LatexString ;
    qudt:applicableUnit unit:DeciB_M,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:qkdvDenominator qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:symbol "Z" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:ConductiveHeatTransferRate a qudt:QuantityKind ;
    rdfs:label "Conductive Heat Transfer Rate"@en ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\Phi_k\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Conductive Heat Transfer Rate\" is proportional to temperature gradient and area of contact." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ConvectiveHeatTransfer a qudt:QuantityKind ;
    rdfs:label "Convective Heat Transfer"@en ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\Phi_c\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Convective Heat Transfer\" is convective heat transfer coefficient multiplied by temperature difference and exchange area. " ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Heat_transfer#Convection> .

quantitykind:CrossSectionalArea a qudt:QuantityKind ;
    rdfs:label "Cross-sectional Area"@en ;
    qudt:symbol "A" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:CyclotronAngularFrequency a qudt:QuantityKind ;
    rdfs:label "Larmor Angular Frequency"@en ;
    qudt:applicableUnit unit:DEG-PER-HR,
        unit:DEG-PER-MIN,
        unit:DEG-PER-SEC,
        unit:PlanckFrequency_Ang,
        unit:RAD-PER-HR,
        unit:RAD-PER-MIN,
        unit:RAD-PER-SEC,
        unit:REV-PER-HR,
        unit:REV-PER-MIN,
        unit:REV-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Electron_cyclotron_resonance"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\omega_c = \\frac{\\left | q \\right |}{m}B\\), where \\(q\\) is the electric charge, \\(m\\) is its mass, and \\(B\\) is the magnetic flux density."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\omega_c\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Cyclotron Angular Frequency\" describes angular momentum vector precession about the external field axis with an angular frequency." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:AngularFrequency .

quantitykind:DELTA-V a qudt:QuantityKind ;
    rdfs:label "Delta-V"@en ;
    qudt:latexSymbol "\\(\\bigtriangleup v\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The change in translational velocity including all losses for a propulsive system or module. Delta-V losses include, but are not limited to, gravity losses and steering losses." ;
    qudt:url "http://en.wikipedia.org/wiki/Delta-v"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:DRY-MASS a qudt:QuantityKind ;
    rdfs:label "Dry Mass"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:plainTextDescription "Mass of a system without the propellants, pressurants, reserve or residual fluids, personnel and personnel provisions, and cargo." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:DebyeAngularFrequency a qudt:QuantityKind ;
    rdfs:label "Debye Angular Frequency"@en ;
    qudt:informativeReference "http://lamp.tu-graz.ac.at/~hadley/ss1/phonons/table/dosdebye.html"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\omega_b\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Debye Angular Frequency\" is the cut-off angular frequency in the Debye model of the vibrational spectrum of a solid." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:DebyeTemperature a qudt:QuantityKind ;
    rdfs:label "Debye Temperature"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Debye_model"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Theta_D = \\frac{\\hbar\\omega_D}{k}\\), where \\(k\\) is the Boltzmann constant, \\(\\hbar\\) is the reduced Planck constant, and \\(\\omega_D\\) is the Debye angular frequency."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\Theta_D\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Debye Temperature\" is the temperature at which the highest-frequency mode (and hence all modes) are excited." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:DensityInCombustionChamber a qudt:QuantityKind ;
    rdfs:label "Density In Combustion Chamber"@en ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:latexSymbol "\\(\\rho_c\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:DensityOfTheExhaustGases a qudt:QuantityKind ;
    rdfs:label "Density Of The Exhaust Gases"@en ;
    qudt:latexSymbol "\\(\\rho\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Depth a qudt:QuantityKind ;
    rdfs:label "Depth"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:plainTextDescription "Depth typically refers to the vertical measure of length from the surface of a liquid." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:Diameter a qudt:QuantityKind ;
    rdfs:label "Diameter"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Diameter"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Diameter"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexDefinition "\\(d = 2r\\), where \\(r\\) is the radius of the circle."^^qudt:LatexString ;
    qudt:plainTextDescription "In classical geometry, the \"Diameter\" of a circle is any straight line segment that passes through the center of the circle and whose endpoints lie on the circle. " ;
    qudt:symbol "d" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:DiffusionArea a qudt:QuantityKind ;
    rdfs:label "Diffusion Area"@en ;
    qudt:applicableUnit unit:AC,
        unit:ARE,
        unit:BARN,
        unit:CentiM2,
        unit:DecaARE,
        unit:DeciM2,
        unit:FT2,
        unit:HA,
        unit:IN2,
        unit:M2,
        unit:MI2,
        unit:MIL_Circ,
        unit:MicroM2,
        unit:MilliM2,
        unit:NanoM2,
        unit:PlanckArea,
        unit:YD2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:informativeReference "http://encyclopedia2.thefreedictionary.com/diffusion+area"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Diffusion Area\" in an infinite homogenous medium, is one-sixth of the mean square distance between the point where a neutron enters a specified class and the point where it leaves that class." ;
    qudt:symbol "L^2" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Area .

quantitykind:DiffusionCoefficientForFluenceRate a qudt:QuantityKind ;
    rdfs:label "Diffusion Coefficient for Fluence Rate"@en ;
    qudt:abbreviation "m" ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mass_diffusivity"^^xsd:anyURI ;
    qudt:latexDefinition "\\(D_\\varphi = -\\frac{J_x}{\\frac{\\partial d\\varphi}{\\partial dx}}\\), where \\(J_x\\) is the \\(x-component\\) of the particle current and \\(\\varphi\\) is the particle fluence rate."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Diffusion Coefficient for Fluence Rate\" is a proportionality constant between the ." ;
    qudt:symbol "Dᵩ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:DiffusionLength a qudt:QuantityKind ;
    rdfs:label "Diffusion Length"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://encyclopedia2.thefreedictionary.com/diffusion+length"^^xsd:anyURI ;
    qudt:latexDefinition "\\(L = \\sqrt{L^2}\\), where \\(L^2\\) is the diffusion area."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Diffusion Length\" is the average distance traveled by a particle, or a thermal neutron in a nuclear reactor, from the point at which it is formed to the point at which it is absorbed." ;
    qudt:symbol "L" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:Displacement a qudt:QuantityKind ;
    rdfs:label "Displacement"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Displacement_(vector)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Delta r =  R_f - R_i\\), where \\(R_f\\) is the final position and \\(R_i\\) is the initial position."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\Delta r\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Displacement\" is the shortest distance from the initial to the final position of a point P." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:DisplacementVectorOfIon a qudt:QuantityKind ;
    rdfs:label "Displacement Vector of Ion"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Displacement"^^xsd:anyURI ;
    qudt:latexDefinition "\\(u = R - R_0\\), where \\(R\\) is the particle position vector and \\(R_0\\) is the equilibrium position vector of a particle."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Displacement Vector of Ion\" is the ." ;
    qudt:symbol "u" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:Distance a qudt:QuantityKind ;
    rdfs:label "Distance"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Distance"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Distance\" is a numerical description of how far apart objects are. " ;
    qudt:symbol "d" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:DistanceTraveledDuringBurn a qudt:QuantityKind ;
    rdfs:label "Distance Traveled During a Burn"@en ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:symbol "s" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:DonorDensity a qudt:QuantityKind ;
    rdfs:label "Donor Density"@en ;
    qudt:applicableUnit unit:NUM-PER-L,
        unit:NUM-PER-M3,
        unit:NUM-PER-MicroL,
        unit:NUM-PER-NanoL,
        unit:PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Donor Density\" is the number per volume of donor levels." ;
    qudt:symbol "n_d" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:NumberDensity .

quantitykind:DragCoefficient a qudt:QuantityKind ;
    rdfs:label "Drag Coefficient"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:plainTextDescription "In fluid dynamics, the drag coefficient is a dimensionless quantity that is used to quantify the drag or resistance of an object in a fluid environment such as air or water." ;
    qudt:qkdvDenominator qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:qkdvNumerator qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:symbol "C_D" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:DragForce a qudt:QuantityKind ;
    rdfs:label "Drag Force"@en ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:plainTextDescription """In fluid dynamics, drag refers to forces which act on a solid object in the direction of the relative fluid flow velocity. Unlike other resistive forces such as dry friction, which is nearly independent of velocity, drag forces depend on velocity.
Drag forces always decrease fluid velocity relative to the solid object in the fluid's path.""" ;
    qudt:symbol "D or F_D" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:DynamicFriction a qudt:QuantityKind ;
    rdfs:label "Dynamic Friction"@en ;
    qudt:applicableUnit unit:DYN,
        unit:KIP_F,
        unit:KiloGM_F,
        unit:KiloN,
        unit:KiloP,
        unit:KiloPOND,
        unit:LB_F,
        unit:MegaLB_F,
        unit:MegaN,
        unit:MicroN,
        unit:MilliN,
        unit:N,
        unit:OZ_F,
        unit:PDL,
        unit:PlanckForce,
        unit:TON_F_US ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Friction"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Friction"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:plainTextDescription "Kinetic (or dynamic) friction occurs when two objects are moving relative to each other and rub together (like a sled on the ground)." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Friction .

quantitykind:DynamicFrictionCoefficient a qudt:QuantityKind ;
    rdfs:label "Dynamic Friction Coefficient"@en ;
    qudt:applicableUnit unit:NUM,
        unit:UNITLESS ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Friction"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Friction"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mu = \\frac{F}{N}\\), where \\(F\\) is the tangential component of the contact force and \\(N\\) is the normal component of the contact force between two sliding bodies."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\mu\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Kinetic (or dynamic) friction occurs when two objects are moving relative to each other and rub together (like a sled on the ground)." ;
    qudt:qkdvDenominator qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:qkdvNumerator qkdv:A0E0L1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:FrictionCoefficient .

quantitykind:EarthClosestApproachVehicleVelocity a qudt:QuantityKind ;
    rdfs:label "Earth Closest Approach Vehicle Velocity"@en ;
    qudt:applicableUnit unit:CentiM-PER-HR,
        unit:CentiM-PER-KiloYR,
        unit:CentiM-PER-SEC,
        unit:FT-PER-HR,
        unit:FT-PER-MIN,
        unit:FT-PER-SEC,
        unit:GigaHZ-M,
        unit:IN-PER-SEC,
        unit:KN,
        unit:KiloM-PER-DAY,
        unit:KiloM-PER-HR,
        unit:KiloM-PER-SEC,
        unit:M-PER-HR,
        unit:M-PER-MIN,
        unit:M-PER-SEC,
        unit:M-PER-YR,
        unit:MI-PER-HR,
        unit:MI-PER-MIN,
        unit:MI_N-PER-HR,
        unit:MI_N-PER-MIN,
        unit:MilliM-PER-DAY,
        unit:MilliM-PER-HR,
        unit:MilliM-PER-MIN,
        unit:MilliM-PER-SEC,
        unit:MilliM-PER-YR ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:symbol "V_o" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:VehicleVelocity .

quantitykind:EccentricityOfOrbit a qudt:QuantityKind ;
    rdfs:label "Eccentricity Of Orbit"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:latexSymbol "\\(\\varepsilon\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The orbital eccentricity of an astronomical object is a parameter that determines the amount by which its orbit around another body deviates from a perfect circle. In a two-body problem with inverse-square-law force, every orbit is a Kepler orbit. The eccentricity of this Kepler orbit is a positive number that defines its shape." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:EffectiveExhaustVelocity a qudt:QuantityKind ;
    rdfs:label "Effective Exhaustvelocity"@en ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:plainTextDescription "The velocity of an exhaust stream after reduction by effects such as friction, non-axially directed flow, and pressure differences between the inside of the rocket and its surroundings. The effective exhaust velocity is one of two factors determining the thrust, or accelerating force, that a rocket can develop, the other factor being the quantity of reaction mass expelled from the rocket in unit time. In most cases, the effective exhaust velocity is close to the actual exhaust velocity." ;
    qudt:symbol "v_{e}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:EffectiveMass a qudt:QuantityKind ;
    rdfs:label "Effective Mass"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Effective_mass_(solid-state_physics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "\\(m^* = \\hbar^2k(\\frac{d\\varepsilon}{dk})\\), where \\(\\hbar\\) is the reduced Planck constant, \\(k\\) is the wavenumber, and \\(\\varepsilon\\) is the energy of the electron."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Effective Mass\" is used in the motional equation for electrons in solid state bodies, depending on the wavenumber and corresponding to its velocity and energy level." ;
    qudt:symbol "m^*" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:Efficiency a qudt:QuantityKind ;
    rdfs:label "Efficiency"@en ;
    qudt:applicableUnit unit:DeciB_M,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Deformation_(mechanics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\eta = \\frac{P_{out}}{P_{in}}\\), where \\(P_{out}\\) is the output power and \\(P_{in}\\) is the input power."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\eta\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Efficiency is the ratio of output power to input power." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:ElectricDisplacementField a qudt:QuantityKind ;
    rdfs:label "Electric Displacement Field"@en ;
    qudt:applicableUnit unit:C-PER-CentiM2,
        unit:C-PER-M2,
        unit:C-PER-MilliM2,
        unit:C_Ab-PER-CentiM2,
        unit:C_Stat-PER-CentiM2,
        unit:KiloC-PER-M2,
        unit:MegaC-PER-M2,
        unit:MicroC-PER-M2,
        unit:MilliC-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T1D0 ;
    qudt:symbol "D" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ElectricChargePerArea .

quantitykind:ElectricPropulsionPropellantMass a qudt:QuantityKind ;
    rdfs:label "Electric Propulsion Propellant Mass"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:symbol "M_P" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PropellantMass .

quantitykind:ElectricalPowerToMassRatio a qudt:QuantityKind ;
    rdfs:label "Electrical Power To Mass Ratio"@en ;
    qudt:latexSymbol "\\(\\xi\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectromotiveForce a qudt:QuantityKind ;
    rdfs:label "Electromotive Force"@en ;
    dcterms:description "In physics, electromotive force, or most commonly \\(emf\\) (seldom capitalized), or (occasionally) electromotance is that which tends to cause current (actual electrons and ions) to flow. More formally, \\(emf\\) is the external work expended per unit of charge to produce an electric potential difference across two open-circuited terminals. \"Electromotive Force\" is deprecated in the ISO System of Quantities."^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloV,
        unit:MegaV,
        unit:MicroV,
        unit:MilliV,
        unit:PlanckVolt,
        unit:V,
        unit:V_Ab,
        unit:V_Stat ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Electromotive_force"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-3D0 ;
    qudt:symbol "E" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:EnergyPerElectricCharge .

quantitykind:ElectronAffinity a qudt:QuantityKind ;
    rdfs:label "Electron Affinity"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Electron_affinity"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Electron Affinity\" is the energy difference between an electron at rest at infinity and an electron at the lowest level of the conduction band in an insulator or semiconductor. The the amount of energy released when an electron is added to a neutral atom or molecule to form a negative ion." ;
    qudt:symbol "χ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:ElectronDensity a qudt:QuantityKind ;
    rdfs:label "Electron Density"@en ;
    qudt:applicableUnit unit:NUM-PER-L,
        unit:NUM-PER-M3,
        unit:NUM-PER-MicroL,
        unit:NUM-PER-NanoL,
        unit:PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Electron_density"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Electron Density\" is the number of electrons per volume in conduction bands. It is the measure of the probability of an electron being present at a specific location." ;
    qudt:symbol "n" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:NumberDensity .

quantitykind:ElectronMeanFreePath a qudt:QuantityKind ;
    rdfs:label "Electron Mean Free Path"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Thermal_conductivity"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Electron Mean Free Path\" is the mean free path of electrons." ;
    qudt:symbol "l_e" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:ElectronRadius a qudt:QuantityKind ;
    rdfs:label "Electron Radius"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Classical_electron_radius"^^xsd:anyURI ;
    qudt:latexDefinition "\\(r_e = \\frac{e^2}{4\\pi m_e c_0^2}\\), where \\(e\\) is the elementary charge, \\(\\varepsilon_0\\) is the electric constant, item \\(m_e\\) is the rest mass of electrons, and \\(c_0\\) is the speed of light in vacuum."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Electron Radius\", also known as the Lorentz radius or the Thomson scattering length, is based on a classical (i.e., non-quantum) relativistic model of the electron." ;
    qudt:symbol "r_e" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:EllipticalOrbitApogeeVelocity a qudt:QuantityKind ;
    rdfs:label "Elliptical Orbit Apogee Velocity"@en ;
    qudt:applicableUnit unit:CentiM-PER-HR,
        unit:CentiM-PER-KiloYR,
        unit:CentiM-PER-SEC,
        unit:FT-PER-HR,
        unit:FT-PER-MIN,
        unit:FT-PER-SEC,
        unit:GigaHZ-M,
        unit:IN-PER-SEC,
        unit:KN,
        unit:KiloM-PER-DAY,
        unit:KiloM-PER-HR,
        unit:KiloM-PER-SEC,
        unit:M-PER-HR,
        unit:M-PER-MIN,
        unit:M-PER-SEC,
        unit:M-PER-YR,
        unit:MI-PER-HR,
        unit:MI-PER-MIN,
        unit:MI_N-PER-HR,
        unit:MI_N-PER-MIN,
        unit:MilliM-PER-DAY,
        unit:MilliM-PER-HR,
        unit:MilliM-PER-MIN,
        unit:MilliM-PER-SEC,
        unit:MilliM-PER-YR ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:plainTextDescription "Velocity at apogee for an elliptical orbit velocity" ;
    qudt:symbol "V_a" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:VehicleVelocity .

quantitykind:EllipticalOrbitPerigeeVelocity a qudt:QuantityKind ;
    rdfs:label "Elliptical Orbit Perigee Velocity"@en ;
    qudt:applicableUnit unit:CentiM-PER-HR,
        unit:CentiM-PER-KiloYR,
        unit:CentiM-PER-SEC,
        unit:FT-PER-HR,
        unit:FT-PER-MIN,
        unit:FT-PER-SEC,
        unit:GigaHZ-M,
        unit:IN-PER-SEC,
        unit:KN,
        unit:KiloM-PER-DAY,
        unit:KiloM-PER-HR,
        unit:KiloM-PER-SEC,
        unit:M-PER-HR,
        unit:M-PER-MIN,
        unit:M-PER-SEC,
        unit:M-PER-YR,
        unit:MI-PER-HR,
        unit:MI-PER-MIN,
        unit:MI_N-PER-HR,
        unit:MI_N-PER-MIN,
        unit:MilliM-PER-DAY,
        unit:MilliM-PER-HR,
        unit:MilliM-PER-MIN,
        unit:MilliM-PER-SEC,
        unit:MilliM-PER-YR ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:plainTextDescription "Velocity at apogee for an elliptical orbit velocity." ;
    qudt:symbol "V_p" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:VehicleVelocity .

quantitykind:EnergyExpenditure a qudt:QuantityKind ;
    rdfs:label "Energy Expenditure"@en ;
    dcterms:description """Energy expenditure is dependent on a person's sex, metabolic rate, body-mass composition, the thermic effects of food, and activity level.  The approximate energy expenditure of a man lying in bed is \\(1.0\\,kilo\\,calorie\\,per\\,hour\\,per\\,kilogram\\). For slow walking (just over two miles per hour), \\(3.0\\,kilo\\,calorie\\,per\\,hour\\,per\\,kilogram\\). For fast steady running (about 10 miles per hour), \\(16.3\\,kilo\\,calorie\\,per\\,hour\\,per\\,kilogram\\).
Females expend about 10 per cent less energy than males of the same size doing a comparable activity.  For people weighing the same, individuals with a high percentage of body fat usually expend less energy than lean people, because fat is not as metabolically active as muscle."""^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://www.oxfordreference.com/view/10.1093/acref/9780198631477.001\\).0001/acref-9780198631477-e-594"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:EnergyFluenceRate a qudt:QuantityKind ;
    rdfs:label "Energy Fluence Rate"@en ;
    qudt:applicableUnit unit:BTU_IT-PER-HR-FT2,
        unit:BTU_IT-PER-SEC-FT2,
        unit:ERG-PER-CentiM2-SEC,
        unit:FT-LB_F-PER-FT2-SEC,
        unit:J-PER-CentiM2-DAY,
        unit:KiloCAL-PER-CentiM2-MIN,
        unit:KiloCAL-PER-CentiM2-SEC,
        unit:MicroW-PER-M2,
        unit:MilliW-PER-M2,
        unit:PSI-L-PER-SEC,
        unit:PicoW-PER-M2,
        unit:W-PER-CentiM2,
        unit:W-PER-FT2,
        unit:W-PER-IN2,
        unit:W-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Fluence"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Psi = \\frac{d\\Psi}{dt}\\), where \\(d\\Psi\\) is the increment of the energy fluence during an infinitesimal time interval with duration \\(dt\\)."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Energy Fluence Rate\" can be used to describe the energy fluence delivered per unit time." ;
    qudt:symbol "Ψ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PowerPerArea .

quantitykind:EnergyImparted a qudt:QuantityKind ;
    rdfs:label "Energy Imparted"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.answers.com/topic/energy-imparted"^^xsd:anyURI ;
    qudt:latexDefinition "For ionizing radiation in the matter in a given 3D domain, \\(\\varepsilon = \\sum_i \\varepsilon_i\\), where the energy deposit, \\(\\varepsilon_i\\) is the energy deposited in a single interaction \\(i\\), and is given by \\(\\varepsilon_i = \\varepsilon_{in} - \\varepsilon_{out} + Q\\), where \\(\\varepsilon_{in}\\) is the energy of the incident ionizing particle, excluding rest energy, \\(\\varepsilon_{out}\\) is the sum of the energies of all ionizing particles leaving the interaction, excluding rest energy, and \\(Q\\) is the change in the rest energies of the nucleus and of all particles involved in the interaction."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Energy Imparted\", is a physical quantity associated with the energy delivered to a particular volume of matter by all the directly and indirectly ionizing particles (i.e. charged and uncharged) entering that volume." ;
    qudt:symbol "ε" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:EnergyInternal a qudt:QuantityKind ;
    rdfs:label "Internal Energy"@en ;
    dcterms:description "The internal energy is the total energy contained by a thermodynamic system. It is the energy needed to create the system, but excludes the energy to displace the system's surroundings, any energy associated with a move as a whole, or due to external force fields. Internal energy has two major components, kinetic energy and potential energy. The internal energy (U) is the sum of all forms of energy (Ei) intrinsic to a thermodynamic system:  \\(  U = \\sum_i E_i \\)"^^qudt:LatexString ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Internal_energy"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Internal_energy"^^xsd:anyURI,
        "http://wiki.answers.com/Q/What_is_the_one_letter_symbol_for_energy"^^xsd:anyURI ;
    qudt:symbol "E" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:EnergyKinetic a qudt:QuantityKind ;
    rdfs:label "Kinetic Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Kinetic_energy"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Kinetic_energy"^^xsd:anyURI ;
    qudt:plainTextDescription "The kinetic energy of an object is the energy which it possesses due to its motion. It is defined as the work needed to accelerate a body of a given mass from rest to its stated velocity." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:EnergyLevel a qudt:QuantityKind ;
    rdfs:label "Energy Level"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Energy Level\" is the ionization energy for an electron at the Fermi energy in the interior of a substance." ;
    qudt:symbol "E" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:EquilibriumPositionVectorOfIon a qudt:QuantityKind ;
    rdfs:label "Equilibrium Position Vector of Ion"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Position_(vector)"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Equilibrium Position Vector of Ion\" is the position vector of a particle in equilibrium." ;
    qudt:symbol "R_0" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:EquivalentAbsorptionArea a qudt:QuantityKind ;
    rdfs:label "Equivalent absorption area"@en ;
    qudt:abbreviation "m2" ;
    qudt:applicableUnit unit:AC,
        unit:ARE,
        unit:BARN,
        unit:CentiM2,
        unit:DecaARE,
        unit:DeciM2,
        unit:FT2,
        unit:HA,
        unit:IN2,
        unit:M2,
        unit:MI2,
        unit:MIL_Circ,
        unit:MicroM2,
        unit:MilliM2,
        unit:NanoM2,
        unit:PlanckArea,
        unit:YD2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:informativeReference "http://www.rockfon.co.uk/acoustics/comparing+ceilings/sound+absorption/equivalent+absorption+area"^^xsd:anyURI ;
    qudt:plainTextDescription "In a diffuse sound field, the Equivalent Absorption Area is that area of a surface having an absorption factor equal to 1, which, if diffraction effects are neglected, would, in the same diffuse sound field, absorb the same power." ;
    qudt:symbol "A" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Area .

quantitykind:EvaporativeHeatTransfer a qudt:QuantityKind ;
    rdfs:label "Evaporative Heat Transfer"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H-1T-3D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\Phi_e\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Evaporative Heat Transfer\" is " ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ExhaustGasMeanMolecularWeight a qudt:QuantityKind ;
    rdfs:label "Exhaust Gas Mean Molecular Weight"@en ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ExhaustGasesSpecificHeat a qudt:QuantityKind ;
    rdfs:label "Exhaust Gases Specific Heat"@en ;
    qudt:plainTextDescription "Specific heat of exhaust gases at constant pressure." ;
    qudt:symbol "c_p" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ExhaustStreamPower a qudt:QuantityKind ;
    rdfs:label "Exhaust Stream Power"@en ;
    qudt:latexSymbol "\\(\\rho\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ExitPlaneCrossSectionalArea a qudt:QuantityKind ;
    rdfs:label "Exit Plane Cross-sectional Area"@en ;
    qudt:plainTextDescription "Cross-sectional area at exit plane of nozzle" ;
    qudt:symbol "A_{e}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ExitPlanePressure a qudt:QuantityKind ;
    rdfs:label "Exit Plane Pressure"@en ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CM_H2O,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:symbol "p_{e}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Pressure .

quantitykind:ExitPlaneTemperature a qudt:QuantityKind ;
    rdfs:label "Exit Plane Temperature"@en ;
    qudt:symbol "T_e" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Exposure a qudt:QuantityKind ;
    rdfs:label "Exposure"@en ;
    qudt:applicableUnit unit:C-PER-KiloGM,
        unit:HZ-PER-T,
        unit:KiloR,
        unit:MegaHZ-PER-T,
        unit:MilliC-PER-KiloGM,
        unit:MilliR,
        unit:PER-T-SEC,
        unit:R ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Exposure"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M-1H0T1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Exposure_%28photography%29"^^xsd:anyURI,
        "http://hps.org/publicinformation/ate/faqs/gammaandexposure.html"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "For X-or gamma radiation, \\(X = \\frac{dQ}{dm}\\), where \\(dQ\\) is the absolute value of the mean total electric charge of the ions of the same sign produced in dry air when all the electrons and positrons liberated or created by photons in an element of air are completely stopped in air, and \\(dm\\) is the mass of that element."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Exposure\" reflects the extent of ionization events taking place when air is irradiated by ionizing photons (gamma radiation and/or x rays). In photography, exposure is the amount of light allowed to fall on each area unit of a photographic medium (photographic film or image sensor) during the process of taking a photograph. Exposure is measured in lux seconds, and can be computed from exposure value (EV) and scene luminance in a specified region." ;
    qudt:symbol "X" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ElectricChargePerMass .

quantitykind:FLIGHT-PERFORMANCE-RESERVE-PROPELLANT-MASS a qudt:QuantityKind ;
    rdfs:label "Flight Performance Reserve Propellant Mass"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:plainTextDescription "A quantity of propellant, at a nominal mixture ratio, along with fuel bias that is set aside from total propellant loaded to cover for statistical variations of flight hardware characteristics and environment conditions on the day of launch. The launch vehicle is designed to accommodate the maximum FPR loading." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "FPR" ;
    skos:broader quantitykind:Mass .

quantitykind:FUEL-BIAS a qudt:QuantityKind ;
    rdfs:label "Fuel Bias"@en ;
    qudt:plainTextDescription "An additional quantity of fuel to ensure depletion of high-weight oxidizer before fuel for systems with high-oxidizer mixing ratios (e.g., 6:1). This practice allows for more efficient propellant utilization." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:FermiEnergy a qudt:QuantityKind ;
    rdfs:label "Fermi Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Fermi_energy"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Fermi Energy\" in a metal is the highest occupied energy level at zero thermodynamic temperature." ;
    qudt:symbol "E_F" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:FermiTemperature a qudt:QuantityKind ;
    rdfs:label "Fermi Temperature"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Fermi_energy"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "\\(T_F = \\frac{E_F}{k}\\), where \\(E_F\\) is the Fermi energy and \\(k\\) is the Boltzmann constant."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Fermi Temperature\" is the temperature associated with the Fermi energy." ;
    qudt:symbol "T_F" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:FinalOrCurrentVehicleMass a qudt:QuantityKind ;
    rdfs:label "Final Or Current Vehicle Mass"@en ;
    qudt:symbol "M" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:FirstMomentOfArea a qudt:QuantityKind ;
    rdfs:label "First Moment of Area"@en ;
    qudt:applicableUnit unit:AC-FT,
        unit:BBL,
        unit:BBL_UK_PET,
        unit:BBL_US,
        unit:CentiM3,
        unit:DecaL,
        unit:DecaM3,
        unit:DeciL,
        unit:DeciM3,
        unit:FBM,
        unit:FT3,
        unit:GI_UK,
        unit:GI_US,
        unit:GT,
        unit:HectoL,
        unit:IN3,
        unit:KiloL,
        unit:L,
        unit:M3,
        unit:MI3,
        unit:MegaL,
        unit:MicroL,
        unit:MicroM3,
        unit:MilliL,
        unit:MilliM3,
        unit:OZ_VOL_UK,
        unit:PINT,
        unit:PINT_UK,
        unit:PK_UK,
        unit:PlanckVolume,
        unit:QT_UK,
        unit:QT_US,
        unit:RT,
        unit:STR,
        unit:Standard,
        unit:TBSP,
        unit:TON_SHIPPING_US,
        unit:TSP,
        unit:YD3 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:plainTextDescription "The first moment of area is the summation of area times distance to an axis. It is a measure of the distribution of the area of a shape in relationship to an axis." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Volume .

quantitykind:FirstStageMassRatio a qudt:QuantityKind ;
    rdfs:label "First Stage Mass Ratio"@en ;
    qudt:applicableUnit unit:FemtoGM-PER-KiloGM,
        unit:GM-PER-GM,
        unit:GM-PER-KiloGM,
        unit:KiloGM-PER-KiloGM,
        unit:MicroGM-PER-GM,
        unit:MicroGM-PER-KiloGM,
        unit:MilliGM-PER-GM,
        unit:MilliGM-PER-KiloGM,
        unit:NanoGM-PER-KiloGM,
        unit:PicoGM-PER-GM,
        unit:PicoGM-PER-KiloGM ;
    qudt:plainTextDescription "Mass ratio for the first stage of a multistage launcher." ;
    qudt:symbol "R_1" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:MassRatio .

quantitykind:FissionCoreRadiusToHeightRatio a qudt:QuantityKind ;
    rdfs:label "Fission Core Radius To Height Ratio"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvDenominator qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:symbol "R/H" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:FissionFuelUtilizationFactor a qudt:QuantityKind ;
    rdfs:label "Fission Fuel Utilization Factor"@en ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:FissionMultiplicationFactor a qudt:QuantityKind ;
    rdfs:label "Fission Multiplication Factor"@en ;
    qudt:plainTextDescription "The number of fission neutrons produced per absorption in the fuel." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:FlightPathAngle a qudt:QuantityKind ;
    rdfs:label "Flight Path Angle"@en ;
    qudt:latexSymbol "\\(\\gamma\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Flight path angle is defined in two different ways. To the aerodynamicist, it is the angle between the flight path vector (where the airplane is going) and the local atmosphere. To the flight crew, it is normally known as the angle between the flight path vector and the horizon, also known as the climb (or descent) angle." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:FractionalMass_Stage1 a qudt:QuantityKind ;
    rdfs:label "Fractional Mass (Stage 1)"@en ;
    qudt:plainTextDescription "Fractional mass allocated to stage 1" ;
    qudt:symbol "A" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:FractionalMass_Stage2 a qudt:QuantityKind ;
    rdfs:label "Fractional Mass (Stage 2)"@en ;
    qudt:plainTextDescription "Fractional mass allocated to stage 2" ;
    qudt:symbol "B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:FractionalMass_Stage3 a qudt:QuantityKind ;
    rdfs:label "Fractional Mass (Stage 3)"@en ;
    qudt:plainTextDescription "Fractional mass allocated to stage 3" ;
    qudt:symbol "C" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:FractionallMass_Stages1-3 a qudt:QuantityKind ;
    rdfs:label "Fractional Mass (Stages 1 through 3)"@en ;
    qudt:latexSymbol "\\(\\gamma\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Fraction of propellant and structural mass assigned to stages 1, 2 and 3." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:FundamentalLatticeVector a qudt:QuantityKind ;
    rdfs:label "Fundamental Lattice vector"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://www.matter.org.uk/diffraction/geometry/lattice_vectors.htm"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Fundamental Lattice vector\" are fundamental translation vectors for the crystal lattice." ;
    qudt:symbol "a_1, a_2, a_3" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:LatticeVector .

quantitykind:FundamentalReciprocalLatticeVector a qudt:QuantityKind ;
    rdfs:label "Fundamental Reciprocal Lattice Vector"@en ;
    qudt:applicableUnit unit:PER-M ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Reciprocal_lattice"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Fundamental Reciprocal Lattice Vector\" are fundamental, or primary, translation vectors the reciprocal lattice." ;
    qudt:symbol "b_1, b_2, b_3" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:AngularReciprocalLatticeVector .

quantitykind:GROSS-LIFT-OFF-WEIGHT a qudt:QuantityKind ;
    rdfs:label "Gross Lift-Off Weight"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:plainTextDescription "The sum of a rocket's inert mass and usable fluids and gases at sea level." ;
    qudt:url "http://en.wikipedia.org/wiki/Maximum_Takeoff_Weight"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:Gain a qudt:QuantityKind ;
    rdfs:label "Gain"@en ;
    qudt:applicableUnit unit:DeciB_M,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Gain"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:plainTextDescription "A general term used to denote an increase in signal power or signal strength in transmission from one point to another. Gain is usually expressed in decibels and is widely used to denote transducer gain.  An increase or amplification. In radar there are two general usages of the term: (a) antenna gain, or gain factor, is the ratio of the power transmitted along the beam axis to that of an isotropic radiator transmitting the same total power; (b) receiver gain, or video gain, is the amplification given a signal by the receiver." ;
    qudt:qkdvDenominator qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:qkdvNumerator qkdv:A0E0L2I0M1H0T-3D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:GrandCanonicalPartitionFunction a qudt:QuantityKind ;
    rdfs:label "Grand Canonical Partition Function"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Partition_function_(statistical_mechanics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Xi = \\sum_{N_A, N_B, ...} Z(N_A, N_B, ...) \\cdot \\lambda_A^{N_A} \\cdot \\lambda_B^{N_B} \\cdot ...\\), where \\(Z(N_A, N_B, ...)\\) is the canonical partition function for the given number of particles \\(A, B, ...,\\), and \\(\\lambda_A, \\lambda_B, ...\\) are the absolute activities of particles \\(A, B, ...\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\Xi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "An \"Grand Canonical Partition Function\" for a grand canonical ensemble, a system that can exchange both heat and particles with the environment, which has a constant temperature and a chemical potential." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:CanonicalPartitionFunction .

quantitykind:GustatoryThreshold a qudt:QuantityKind ;
    rdfs:label "Gustatory Threshold"@en ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\overline{T_g}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Gustatory Threshold\" are thresholds for classes of tast that can be detected by the human mouth and thresholds of sensitivity to foods, drinks and other substances." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Half-Life a qudt:QuantityKind ;
    rdfs:label "Half-life"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Half-life"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Half-Life\" is the average duration required for the decay of one half of the atoms or nuclei." ;
    qudt:symbol "T_{1/2}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Half-ValueThickness a qudt:QuantityKind ;
    rdfs:label "Half-Value Thickness"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Half-value_layer"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Half-Value Thickness\" is the thickness of the material at which the intensity of radiation entering it is reduced by one half." ;
    qudt:symbol "d_{1/2}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:Heat a qudt:QuantityKind ;
    rdfs:label "Heat"@en ;
    qudt:abbreviation "heat" ;
    qudt:applicableUnit unit:BTU_IT,
        unit:BTU_MEAN,
        unit:BTU_TH,
        unit:CAL_15_DEG_C,
        unit:CAL_IT,
        unit:CAL_MEAN,
        unit:CAL_TH,
        unit:GigaJ,
        unit:J,
        unit:KiloCAL,
        unit:KiloCAL_IT,
        unit:KiloCAL_Mean,
        unit:KiloCAL_TH,
        unit:KiloJ,
        unit:MegaJ,
        unit:THM_EEC,
        unit:THM_US ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Heat"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Heat\" is the energy transferred by a thermal process.  Heat can be measured in terms of the dynamical units of energy, as the erg, joule, etc., or in terms of the amount of energy required to produce a definite thermal change in some substance, as, for example, the energy required per degree to raise the temperature of a unit mass of water at some temperature ( calorie, Btu)." ;
    qudt:symbol "Q" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ThermalEnergy .

quantitykind:HeatCapacityRatio a qudt:QuantityKind ;
    rdfs:label "Heat Capacity Ratio"@en ;
    dcterms:description "The heat capacity ratio, or ratio of specific heats, is the ratio of the heat capacity at constant pressure (\\(C_P\\)) to heat capacity at constant volume (\\(C_V\\)). For an ideal gas, the heat capacity is constant with temperature (\\(\\theta\\)). Accordingly we can express the enthalpy as \\(H = C_P*\\theta\\) and the internal energy as \\(U = C_V \\cdot \\theta\\). Thus, it can also be said that the heat capacity ratio is the ratio between enthalpy and internal energy."^^qudt:LatexString ;
    qudt:applicableUnit unit:DeciB_M,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Heat_capacity_ratio"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Heat_capacity_ratio"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:qkdvDenominator qkdv:A0E0L2I0M1H-1T-2D0 ;
    qudt:qkdvNumerator qkdv:A0E0L2I0M1H-1T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:HeatFlowRatePerUnitArea a qudt:QuantityKind ;
    rdfs:label "Heat Flow Rate per Unit Area"@en ;
    dcterms:description "\\(\\textit{Heat Flux}\\) is the heat rate per unit area. In SI units, heat flux is measured in \\(W/m^2\\). Heat rate is a scalar quantity, while heat flux is a vectorial quantity. To define the heat flux at a certain point in space, one takes the limiting case where the size of the surface becomes infinitesimally small."^^qudt:LatexString ;
    qudt:applicableUnit unit:BTU_IT-PER-HR-FT2,
        unit:BTU_IT-PER-SEC-FT2,
        unit:ERG-PER-CentiM2-SEC,
        unit:FT-LB_F-PER-FT2-SEC,
        unit:J-PER-CentiM2-DAY,
        unit:KiloCAL-PER-CentiM2-MIN,
        unit:KiloCAL-PER-CentiM2-SEC,
        unit:MicroW-PER-M2,
        unit:MilliW-PER-M2,
        unit:PSI-L-PER-SEC,
        unit:PicoW-PER-M2,
        unit:W-PER-CentiM2,
        unit:W-PER-FT2,
        unit:W-PER-IN2,
        unit:W-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Heat_flux"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PowerPerArea .

quantitykind:HeatFluxDensity a qudt:QuantityKind ;
    rdfs:label "Heat Flux Density"@en ;
    qudt:applicableUnit unit:BTU_IT-PER-HR-FT2,
        unit:BTU_IT-PER-SEC-FT2,
        unit:ERG-PER-CentiM2-SEC,
        unit:FT-LB_F-PER-FT2-SEC,
        unit:J-PER-CentiM2-DAY,
        unit:KiloCAL-PER-CentiM2-MIN,
        unit:KiloCAL-PER-CentiM2-SEC,
        unit:MicroW-PER-M2,
        unit:MilliW-PER-M2,
        unit:PSI-L-PER-SEC,
        unit:PicoW-PER-M2,
        unit:W-PER-CentiM2,
        unit:W-PER-FT2,
        unit:W-PER-IN2,
        unit:W-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PowerPerArea .

quantitykind:Height a qudt:QuantityKind ;
    rdfs:label "Height"@en ;
    qudt:abbreviation "height" ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Height"^^xsd:anyURI ;
    qudt:hasDimension qudt:DIM_CGS-EMU_L,
        qudt:DIM_CGS-ESU_L,
        qudt:DIM_CGS-L,
        qudt:DIM_Planck-L,
        qudt:DIM_SI-L,
        qudt:DIM_USCUSTOMARY-L ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Height"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Height\" is the measurement of vertical distance, but has two meanings in common use. It can either indicate how \"tall\" something is, or how \"high up\" it is." ;
    qudt:symbol "h" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:HoleDensity a qudt:QuantityKind ;
    rdfs:label "Hole Density"@en ;
    qudt:applicableUnit unit:NUM-PER-L,
        unit:NUM-PER-M3,
        unit:NUM-PER-MicroL,
        unit:NUM-PER-NanoL,
        unit:PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Hole Density\" is the number of holes per volume in a valence band." ;
    qudt:symbol "p" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:NumberDensity .

quantitykind:HorizontalVelocity a qudt:QuantityKind ;
    rdfs:label "Horizontal Velocity"@en ;
    qudt:plainTextDescription "Component of a projectile's velocity, which acts parallel to the ground and does not lift the projectile in the air." ;
    qudt:symbol "V_{X}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:INERT-MASS a qudt:QuantityKind ;
    rdfs:label "Inert Mass"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:plainTextDescription "The sum of the vehicle dry mass, residual fluids and gasses, personnel and personnel provisions, and cargo." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:IgnitionIntervalTime a qudt:QuantityKind ;
    rdfs:label "Ignition interval time"@en ;
    qudt:applicableUnit unit:CentiPOISE-PER-BAR,
        unit:DAY,
        unit:DAY_Sidereal,
        unit:H-PER-KiloOHM,
        unit:H-PER-OHM,
        unit:HR,
        unit:HR_Sidereal,
        unit:KiloSEC,
        unit:MIN,
        unit:MIN_Sidereal,
        unit:MO,
        unit:MO_MeanGREGORIAN,
        unit:MO_MeanJulian,
        unit:MO_Synodic,
        unit:MegaYR,
        unit:MicroH-PER-KiloOHM,
        unit:MicroH-PER-OHM,
        unit:MicroSEC,
        unit:MilliH-PER-KiloOHM,
        unit:MilliH-PER-OHM,
        unit:MilliPA-SEC-PER-BAR,
        unit:MilliSEC,
        unit:NanoSEC,
        unit:PA-SEC-PER-BAR,
        unit:POISE-PER-BAR,
        unit:PicoSEC,
        unit:PlanckTime,
        unit:SEC,
        unit:SH,
        unit:WK,
        unit:YR,
        unit:YR_Common,
        unit:YR_Sidereal,
        unit:YR_TROPICAL ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Time .

quantitykind:InitialExpansionRatio a qudt:QuantityKind ;
    rdfs:label "Initial Expansion Ratio"@en ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ExpansionRatio .

quantitykind:InitialNozzleThroatDiameter a qudt:QuantityKind ;
    rdfs:label "Initial Nozzle Throat Diameter"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:NozzleThroatDiameter .

quantitykind:InitialVehicleMass a qudt:QuantityKind ;
    rdfs:label "Initial Vehicle Mass"@en ;
    qudt:symbol "M_{o}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:InitialVelocity a qudt:QuantityKind ;
    rdfs:label "Initial Velocity"@en ;
    qudt:plainTextDescription "The velocity of a moving body at starting; especially, the velocity of a projectile as it leaves the mouth of a firearm from which it is discharged." ;
    qudt:symbol "V_{i}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:IntinsicCarrierDensity a qudt:QuantityKind ;
    rdfs:label "Intinsic Carrier Density"@en ;
    qudt:applicableUnit unit:NUM-PER-L,
        unit:NUM-PER-M3,
        unit:NUM-PER-MicroL,
        unit:NUM-PER-NanoL,
        unit:PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:latexDefinition "\\(np = n_i^2\\), where \\(n\\) is electron density and \\(p\\) is hole density."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Intinsic Carrier Density\" is proportional to electron and hole densities." ;
    qudt:symbol "n_i" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:NumberDensity .

quantitykind:IonCurrent a qudt:QuantityKind ;
    rdfs:label "Ion Current"@en ;
    qudt:plainTextDescription "An ion current is the influx and/or efflux of ions through an ion channel." ;
    qudt:symbol "j" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:IonDensity a qudt:QuantityKind ;
    rdfs:label "Ion Density"@en ;
    qudt:applicableUnit unit:NUM-PER-L,
        unit:NUM-PER-M3,
        unit:NUM-PER-MicroL,
        unit:NUM-PER-NanoL,
        unit:PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:informativeReference "http://www.answers.com/topic/ion-density"^^xsd:anyURI ;
    qudt:latexDefinition """\\(n^+ = \\frac{N^+}{V}\\), \\(n^- = \\frac{N^-}{V}\\)

where \\(N^+\\) and \\(N^-\\) are the number of positive and negative ions, respectively, in a 3D domain with volume \\(V\\)."""^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Ion Density\" is the number of ions per unit volume. Also known as ion concentration." ;
    qudt:symbol "N, n^+, n^-" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:NumberDensity .

quantitykind:IonicCharge a qudt:QuantityKind ;
    rdfs:label "Ionic Charge"@en ;
    qudt:plainTextDescription "The total charge of an ion. The charge of an electron; the charge of any ion is equal to this electron charge in magnitude, or is an integral multiple of it." ;
    qudt:symbol "q" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Irradiance a qudt:QuantityKind ;
    rdfs:label "Irradiance"@en ;
    qudt:abbreviation "W-PER-M2" ;
    qudt:applicableUnit unit:BTU_IT-PER-HR-FT2,
        unit:BTU_IT-PER-SEC-FT2,
        unit:ERG-PER-CentiM2-SEC,
        unit:FT-LB_F-PER-FT2-SEC,
        unit:J-PER-CentiM2-DAY,
        unit:KiloCAL-PER-CentiM2-MIN,
        unit:KiloCAL-PER-CentiM2-SEC,
        unit:MicroW-PER-M2,
        unit:MilliW-PER-M2,
        unit:PSI-L-PER-SEC,
        unit:PicoW-PER-M2,
        unit:W-PER-CentiM2,
        unit:W-PER-FT2,
        unit:W-PER-IN2,
        unit:W-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:latexDefinition "\\(E = \\frac{d\\Phi}{dA}\\), where \\(d\\Phi\\) is the radiant flux incident on an element of the surface with area \\(dA\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "Irradiance and Radiant Emittance are radiometry terms for the power per unit area of electromagnetic radiation at a surface. \"Irradiance\" is used when the electromagnetic radiation is incident on the surface. \"Radiant emmitance\" (or \"radiant exitance\") is used when the radiation is emerging from the surface." ;
    qudt:symbol "E" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PowerPerArea ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Irradiance> .

quantitykind:KineticEnergy a qudt:QuantityKind ;
    rdfs:label "Kinetic Energy"@en ;
    dcterms:description "\\(\\textit{Kinetic Energy}\\) is the energy which a body possesses as a consequence of its motion, defined as one-half the product of its mass \\(m\\) and the square of its speed \\(v\\), \\( \\frac{1}{2} mv^{2} \\). The kinetic energy per unit volume of a fluid parcel is the \\( \\frac{1}{2}  p v^{2}\\) , where \\(p\\) is the density and \\(v\\) the speed of the parcel. See potential energy. For relativistic speeds the kinetic energy is given by \\(E_k = mc^2 - m_0 c^2\\), where \\(c\\) is the velocity of light in a vacuum, \\(m_0\\) is the rest mass, and \\(m\\) is the moving mass."^^qudt:LatexString ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Kinetic_energy"^^xsd:anyURI ;
    qudt:hasDimension qudt:DIM_ISO-L2MT-2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Kinetic_energy"^^xsd:anyURI ;
    qudt:latexDefinition "\\(T = \\frac{mv^2}{2}\\), where \\(m\\) is mass and \\(v\\) is speed."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:symbol "K",
        "KE" ;
    qudt:url "http://en.wikipedia.org/wiki/Kinetic_energy"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:LarmorAngularFrequency a qudt:QuantityKind ;
    rdfs:label "Larmor Angular Frequency"@en ;
    qudt:applicableUnit unit:DEG-PER-HR,
        unit:DEG-PER-MIN,
        unit:DEG-PER-SEC,
        unit:PlanckFrequency_Ang,
        unit:RAD-PER-HR,
        unit:RAD-PER-MIN,
        unit:RAD-PER-SEC,
        unit:REV-PER-HR,
        unit:REV-PER-MIN,
        unit:REV-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Larmor_precession#Larmor_frequency"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\omega_L = \\frac{e}{2m_e}B\\), where \\(e\\) is the elementary charge, \\(m_e\\) is the rest mass of electron, and \\(B\\) is the magnetic flux density."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\omega_L\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Larmor Frequency\" describes angular momentum vector precession about the external field axis with an angular frequency." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:AngularFrequency .

quantitykind:LatticePlaneSpacing a qudt:QuantityKind ;
    rdfs:label "Lattice Plane Spacing"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://www.matter.org.uk/diffraction/geometry/lattice_vectors.htm"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Lattice Plane Spacing\" is the distance between successive lattice planes." ;
    qudt:symbol "d" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:LengthByForce a qudt:QuantityKind ;
    rdfs:label "Length Force"@en ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LiftCoefficient a qudt:QuantityKind ;
    rdfs:label "Lift Coefficient"@en ;
    qudt:plainTextDescription "The lift coefficient is a dimensionless coefficient that relates the lift generated by a lifting body, the dynamic pressure of the fluid flow around the body, and a reference area associated with the body." ;
    qudt:symbol "C_{L}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LiftForce a qudt:QuantityKind ;
    rdfs:label "Lift Force"@en ;
    qudt:plainTextDescription "The lift force, lifting force or simply lift is the sum of all the forces on a body that force it to move perpendicular to the direction of flow." ;
    qudt:symbol "L" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LinkedFlux a qudt:QuantityKind ;
    rdfs:label "Linked Flux"@en ;
    dcterms:description "\"Linked Flux\" is defined as the path integral of the magnetic vector potential. This is the line integral of a magnetic vector potential \\(A\\) along a curve \\(C\\). The line vector element \\(dr\\) is the differential of position vector \\(r\\)."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Magnetic_flux"^^xsd:anyURI ;
    qudt:expression "\\(linked-flux\\)"^^qudt:LatexString ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-24"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI,
        "http://www.oxfordreference.com/view/10.1093/acref/9780199233991.001.0001/acref-9780199233991-e-1800"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Psi_m = \\int_C A \\cdot dr\\), where \\(A\\) is magnetic vector potential and \\(dr\\) is the vector element of the curve \\(C\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\Psi\\)"^^qudt:LatexString,
        "\\(\\Psi_m\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LondonPenetrationDepth a qudt:QuantityKind ;
    rdfs:label "London Penetration Depth"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/London_penetration_depth"^^xsd:anyURI ;
    qudt:latexDefinition "If an applied magnetic field is parallel to the plane surface of a semi-infinite superconductor, the field penetrates the superconductor according to the expression \\(B(x) = B(0) \\exp{(\\frac{-x}{\\lambda_L})}\\), where \\(B\\) is magnetic flux density and \\(x\\) is the distance from the surface."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"London Penetration Depth\" characterizes the distance to which a magnetic field penetrates into a superconductor and becomes equal to 1/e times that of the magnetic field at the surface of the superconductor." ;
    qudt:symbol "λₗ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:LossAngle a qudt:QuantityKind ;
    rdfs:label "Loss Angle"@en ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\delta = \\arctan d\\), where \\(d\\) is loss factor."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\delta\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LuminousEmmitance a qudt:QuantityKind ;
    rdfs:label "Luminous Emmitance"@en ;
    qudt:applicableUnit unit:FC,
        unit:LUX,
        unit:PHOT ;
    qudt:hasDimensionVector qkdv:A0E0L-2I1M0H0T0D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Luminous Emittance\" is the luminous flux per unit area emitted from a surface." ;
    qudt:symbol "M_v" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:LuminousFluxPerArea .

quantitykind:MASS-DELIVERED a qudt:QuantityKind ;
    rdfs:label "Mass Delivered"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:plainTextDescription "The minimum mass a propulsive system can deliver to a specified target or location. Most mass- delivered requirements have associated Delta-V requirements, effectively specifying the path between the two points." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:MASS-GROWTH-ALLOWANCE a qudt:QuantityKind ;
    rdfs:label "Mass Growth Allowance"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:plainTextDescription "A factor applied to basic mass at the lowest level of design detail available based on type and maturity of hardware according to an approved MGA depletion schedule." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "MGA" ;
    skos:broader quantitykind:Mass .

quantitykind:MASS-MARGIN a qudt:QuantityKind ;
    rdfs:label "Mass Margin"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:plainTextDescription "Requirement minus predicted value. Margin is used as a metric in risk management. Positive margin mitigates the risk of mass increases from requirements maturation and implementation, underestimated predicted system, or subsystem mass." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:MASS-PROPERTY-UNCERTAINTY a qudt:QuantityKind ;
    rdfs:label "Mass Property Uncertainty"@en ;
    qudt:plainTextDescription "Variation in predicted MP due to lack of definition, manufacturing variations, environment effects, or accuracy limitation of measuring devices." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MOMENT-OF-INERTIA_Y a qudt:QuantityKind ;
    rdfs:label "Moment of Inertia in the Y axis"@en ;
    qudt:applicableUnit unit:KiloGM-CentiM2,
        unit:KiloGM-M2,
        unit:KiloGM-MilliM2,
        unit:LB-FT2,
        unit:LB-IN2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T0D0 ;
    qudt:plainTextDescription "The rotational inertia or resistance to change in direction or speed of rotation about a defined axis." ;
    qudt:symbol "I_{y}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "MOI" ;
    skos:broader quantitykind:MomentOfInertia .

quantitykind:MOMENT-OF-INERTIA_Z a qudt:QuantityKind ;
    rdfs:label "Moment of Inertia in the Z axis"@en ;
    qudt:applicableUnit unit:KiloGM-CentiM2,
        unit:KiloGM-M2,
        unit:KiloGM-MilliM2,
        unit:LB-FT2,
        unit:LB-IN2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T0D0 ;
    qudt:plainTextDescription "The rotational inertia or resistance to change in direction or speed of rotation about a defined axis." ;
    qudt:symbol "I_{z}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "MOI" ;
    skos:broader quantitykind:MomentOfInertia .

quantitykind:MacroscopicCrossSection a qudt:QuantityKind ;
    rdfs:label "Macroscopic Cross-section"@en ;
    qudt:applicableUnit unit:AC,
        unit:ARE,
        unit:BARN,
        unit:CentiM2,
        unit:DecaARE,
        unit:DeciM2,
        unit:FT2,
        unit:HA,
        unit:IN2,
        unit:M2,
        unit:MI2,
        unit:MIL_Circ,
        unit:MicroM2,
        unit:MilliM2,
        unit:NanoM2,
        unit:PlanckArea,
        unit:YD2 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Cross_section_(physics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\sum = n_1\\sigma_1 + \\cdots + n_j\\sigma_j +\\), where \\(n_j\\) is the number density and \\(\\sigma_j\\) the cross-section for entities of type \\(j\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\sum\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Macroscopic Cross-section\" is the sum of the cross-sections for a reaction or process of a specified type over all atoms or other entities in a given 3D domain, divided by the volume of that domain." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:CrossSection .

quantitykind:MacroscopicTotalCrossSection a qudt:QuantityKind ;
    rdfs:label "Macroscopic Total Cross-section"@en ;
    qudt:applicableUnit unit:AC,
        unit:ARE,
        unit:BARN,
        unit:CentiM2,
        unit:DecaARE,
        unit:DeciM2,
        unit:FT2,
        unit:HA,
        unit:IN2,
        unit:M2,
        unit:MI2,
        unit:MIL_Circ,
        unit:MicroM2,
        unit:MilliM2,
        unit:NanoM2,
        unit:PlanckArea,
        unit:YD2 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Cross_section_(physics)"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Nuclear_cross_section"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\sum_{tot}, \\sum_T\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Macroscopic Total Cross-section\" is the total cross-sections for all atoms or other entities in a given 3D domain, divided by the volume of that domain." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:CrossSection .

quantitykind:MagneticPolarization a qudt:QuantityKind ;
    rdfs:label "Magnetic Polarization"@en ;
    dcterms:description "\\(\\textbf{Magnetic Polarization}\\) is a vector quantity equal to the product of the magnetization \\(M\\) and the magnetic constant \\(\\mu_0\\)."^^qudt:LatexString ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-54"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(J_m = \\mu_0 M\\),  where \\(\\mu_0\\) is the magentic constant and \\(M\\) is magnetization."^^qudt:LatexString ;
    qudt:latexSymbol "\\(J_m\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso constant:MagneticConstant,
        quantitykind:MagneticFieldStrength_H,
        quantitykind:Magnetization .

quantitykind:MagnetizationField a qudt:QuantityKind ;
    rdfs:label "Magnetization Field"@en ;
    qudt:plainTextDescription "The Magnetization Field is defined as the ratio of magnetic moment per unit volume. It is a vector-valued quantity." ;
    qudt:symbol "M" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ElectricCurrentPerUnitLength .

quantitykind:MassExcess a qudt:QuantityKind ;
    rdfs:label "Mass Excess"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mass_excess"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Delta = m_a - Am_u\\), where \\(m_a\\) is the rest mass of the atom, \\(A\\) is its nucleon number, and \\(m_u\\) is the unified atomic mass constant."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\Delta\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Mass Excess\" of a nuclide is the difference between its actual mass and its mass number in atomic mass units. It is one of the predominant methods for tabulating nuclear mass." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:MassOfElectricalPowerSupply a qudt:QuantityKind ;
    rdfs:label "Mass Of Electrical Power Supply"@en ;
    qudt:symbol "M_{E}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MassOfSolidBooster a qudt:QuantityKind ;
    rdfs:label "Mass Of Solid Booster"@en ;
    qudt:symbol "M_{SB}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MassOfTheEarth a qudt:QuantityKind ;
    rdfs:label "Mass Of The Earth"@en ;
    qudt:latexSymbol "\\(M_{\\oplus}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Earth mass is the unit of mass equal to that of the Earth.  Earth mass is often used to describe masses of rocky terrestrial planets." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MaxExpectedOperatingThrust a qudt:QuantityKind ;
    rdfs:label "Maximum Expected Operating Thrust"@en ;
    qudt:applicableUnit unit:DYN,
        unit:KIP_F,
        unit:KiloGM_F,
        unit:KiloN,
        unit:KiloP,
        unit:KiloPOND,
        unit:LB_F,
        unit:MegaLB_F,
        unit:MegaN,
        unit:MicroN,
        unit:MilliN,
        unit:N,
        unit:OZ_F,
        unit:PDL,
        unit:PlanckForce,
        unit:TON_F_US ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "MEOT" ;
    skos:broader quantitykind:MaxOperatingThrust .

quantitykind:MaxSeaLevelThrust a qudt:QuantityKind ;
    rdfs:label "Max Sea Level Thrust"@en ;
    qudt:applicableUnit unit:DYN,
        unit:KIP_F,
        unit:KiloGM_F,
        unit:KiloN,
        unit:KiloP,
        unit:KiloPOND,
        unit:LB_F,
        unit:MegaLB_F,
        unit:MegaN,
        unit:MicroN,
        unit:MilliN,
        unit:N,
        unit:OZ_F,
        unit:PDL,
        unit:PlanckForce,
        unit:TON_F_US ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    rdfs:comment "Max Sea Level thrust (Mlbf) " ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Thrust .

quantitykind:MaximumBeta-ParticleEnergy a qudt:QuantityKind ;
    rdfs:label "Maximum Beta-Particle Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Maximum Beta-Particle Energy\" is the maximum energy of the energy spectrum in a beta-particle disintegration process." ;
    qudt:symbol "Eᵦ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:MaximumExpectedOperatingPressure a qudt:QuantityKind ;
    rdfs:label "Maximum Expected Operating Pressure"@en ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "MEOP" .

quantitykind:MaximumOperatingPressure a qudt:QuantityKind ;
    rdfs:label "Maximum Operating Pressure"@en ;
    qudt:abbreviation "MOP" ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CM_H2O,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Pressure .

quantitykind:MeanEnergyImparted a qudt:QuantityKind ;
    rdfs:label "Mean Energy Imparted"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.answers.com/topic/energy-imparted"^^xsd:anyURI ;
    qudt:latexDefinition "To the matter in a given domain, \\(\\bar{\\varepsilon} = R_{in} - R_{out} + \\sum Q\\), where \\(R_{in}\\) is the radiant energy of all those charged and uncharged ionizing particles that enter the domain, \\(R_{out}\\) is the radiant energy of all those charged and uncharged ionizing particles that leave the domain, and \\(\\sum Q\\) is the sum of all changes of the rest energy of nuclei and elementary particles that occur in that domain."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Mean Energy Imparted\", is the average energy imparted to irradiated matter." ;
    qudt:symbol "ε̅" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:MeanFreePath a qudt:QuantityKind ;
    rdfs:label "Mean Free Path"@en ;
    qudt:abbreviation "m" ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mean_free_path"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI,
        "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Mean Free Path\" is the average distance travelled by a moving particle (such as an atom, a molecule, a photon) between successive impacts (collisions) which modify its direction or energy or other particle properties." ;
    qudt:symbol "λ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:MeanLifetime a qudt:QuantityKind ;
    rdfs:label "Mean Lifetime"@en ;
    dcterms:description "The \"Mean Lifetime\" is the average length of time that an element remains in the set of discrete elements in a decaying quantity, \\(N(t)\\)."^^qudt:LatexString ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Exponential_decay"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\tau = \\frac{1}{\\lambda}\\), where \\(\\lambda\\) is the decay constant."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\tau\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MeanLinearRange a qudt:QuantityKind ;
    rdfs:label "Mean Linear Range"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://goldbook.iupac.org/M03782.html"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Mean Linear Range\" is, in a given material, for specified charged particles of a specified energy, the average displacement of the particles before they stop. That is, the mean totl rectified path length travelled by a particle in the course of slowing down to rest (or to some suitable cut-off energy) in a given substance under specified conditions averaged over a group of particles having the same initial energy." ;
    qudt:symbol "R" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:MechanicalEnergy a qudt:QuantityKind ;
    rdfs:label "Mechanical Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Mechanical_energy"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mechanical_energy"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(E = T + V\\), where \\(T\\) is kinetic energy and \\(V\\) is potential energy."^^qudt:LatexString ;
    qudt:plainTextDescription "Mechanical Energy is the sum of potential energy and kinetic energy. It is the energy associated with the motion and position of an object." ;
    qudt:symbol "E" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:MechanicalImpedance a qudt:QuantityKind ;
    rdfs:label "Mechanical Impedance"@en ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MechanicalSurfaceImpedance a qudt:QuantityKind ;
    rdfs:label "Mechanical surface impedance"@en ;
    qudt:latexDefinition "\\(Z_m = Z_a A^2\\), where \\(A\\) is the area of the surface considered and \\(Z_a\\) is the acoustic impedance."^^qudt:LatexString ;
    qudt:plainTextDescription "Mechanical surface impedance at a surface, is the complex quotient of the total force on the surface by the component of the average sound particle velocity at the surface in the direction of the force" ;
    qudt:symbol "Z" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MicroCanonicalPartitionFunction a qudt:QuantityKind ;
    rdfs:label "Micro Canonical Partition Function"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Microcanonical_ensemble"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Partition_function_(statistical_mechanics)#Grand_canonical_partition_function"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Omega = \\sum_r 1\\), where the sum is over all quantum states consistent with given energy. volume, external fields, and content."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\Omega\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "A \"Micro Canonical Partition Function\" applies to a micro canonical ensemble, in which the system is allowed to exchange heat with the environment at fixed temperature, volume, and a fixed number of particles." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:CanonicalPartitionFunction .

quantitykind:MigrationArea a qudt:QuantityKind ;
    rdfs:label "Migration Area"@en ;
    qudt:applicableUnit unit:AC,
        unit:ARE,
        unit:BARN,
        unit:CentiM2,
        unit:DecaARE,
        unit:DeciM2,
        unit:FT2,
        unit:HA,
        unit:IN2,
        unit:M2,
        unit:MI2,
        unit:MIL_Circ,
        unit:MicroM2,
        unit:MilliM2,
        unit:NanoM2,
        unit:PlanckArea,
        unit:YD2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:informativeReference "http://encyclopedia2.thefreedictionary.com/migration+area"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Migration Area\" is the sum of the slowing-down area from fission energy to thermal energy and the diffusion area for thermal neutrons." ;
    qudt:symbol "M^2" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Area .

quantitykind:MigrationLength a qudt:QuantityKind ;
    rdfs:label "Migration Length"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://encyclopedia2.thefreedictionary.com/migration+area"^^xsd:anyURI ;
    qudt:latexDefinition "\\(M = \\sqrt{M^2}\\), where \\(M^2\\) is the migration area."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Migration Length\" is the square root of the migration area." ;
    qudt:symbol "M" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:ModulusOfAdmittance a qudt:QuantityKind ;
    rdfs:label "Modulus Of Admittance"@en ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Absolute_value"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Admittance"^^xsd:anyURI,
        "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-12-51"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(Y = \\left | \\underline{Y} \\right |\\), where \\(\\underline{Y}\\) is admittance."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Modulus Of Admittance\" is the absolute value of the quantity \"admittance\"." ;
    qudt:symbol "Y" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Admittance .

quantitykind:MoleFraction a qudt:QuantityKind ;
    rdfs:label "Mole Fraction"@en ;
    qudt:applicableUnit unit:DeciB_M,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Mole_fraction"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:plainTextDescription "In chemistry, the mole fraction of a component in a mixture is the relative proportion of molecules belonging to the component to those in the mixture, by number of molecules. It is one way of measuring concentration." ;
    qudt:qkdvDenominator qkdv:A1E0L0I0M0H0T0D0 ;
    qudt:qkdvNumerator qkdv:A1E0L0I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:MolecularConcentration a qudt:QuantityKind ;
    rdfs:label "Molecular Concentration"@en ;
    qudt:abbreviation "m^{-3}" ;
    qudt:applicableUnit unit:NUM-PER-L,
        unit:NUM-PER-M3,
        unit:NUM-PER-MicroL,
        unit:NUM-PER-NanoL,
        unit:PER-M3 ;
    qudt:hasDimension qudt:DIM_ISO-L-3 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Molar_concentration"^^xsd:anyURI ;
    qudt:latexDefinition "\\(C_B = \\frac{N_B}{V}\\), where \\(N_B\\) is the number of molecules of \\(B\\) and \\(V\\) is the volume."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Molecular Concentration\" of substance B  is defined as the number of molecules of B  divided by the volume of the mixture " ;
    qudt:symbol "C_B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:NumberDensity .

quantitykind:MolecularViscosity a qudt:QuantityKind ;
    rdfs:label "Molecular Viscosity"@en ;
    qudt:informativeReference "http://oceanworld.tamu.edu/resources/ocng_textbook/chapter08/chapter08_01.htm"^^xsd:anyURI ;
    qudt:plainTextDescription "Molecules in a fluid close to a solid boundary sometime strike the boundary and transfer momentum to it. Molecules further from the boundary collide with molecules that have struck the boundary, further transferring the change in momentum into the interior of the fluid. This transfer of momentum is molecular viscosity. Molecules, however, travel only micrometers between collisions, and the process is very inefficient for transferring momentum even a few centimeters. Molecular viscosity is important only within a few millimeters of a boundary." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Viscosity .

quantitykind:MorbidityRate a qudt:QuantityKind ;
    rdfs:label "Morbidity Rate"@en ;
    qudt:applicableUnit unit:CASES-PER-1000I-YR ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:plainTextDescription "Morbidity rate is a measure of the incidence of a disease in a particular population, scaled to the size of that population, per unit of time." ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Incidence .

quantitykind:NOMINAL-ASCENT-PROPELLANT-MASS a qudt:QuantityKind ;
    rdfs:label "Nominal Ascent Propellant Mass"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:plainTextDescription "The amount of propellant mass within a stage that is available for impulse for use in nominal payload performance prediction. This mass excludes loaded propellant that has been set aside for off- nominal performance behavior (FPR and fuel bias)." ;
    qudt:url "http://elib.dlr.de/68314/1/IAF10-D2.3.1.pdf"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:NeutronDiffusionLength a qudt:QuantityKind ;
    rdfs:label "Neutron Diffusion Length"@en ;
    qudt:plainTextDescription "The neutron diffusion length is equivalent to the relaxation length, that is, to the distance, in which the neutron flux decreases by a factor e" ;
    qudt:symbol "L_{r}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:NormalStress a qudt:QuantityKind ;
    rdfs:label "Normal Stress"@en ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CM_H2O,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:baseUnitDimensions "\\(n m^{-2}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Stress_(mechanics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\sigma = \\frac{dF_n}{dA}\\), where \\(dF_n\\) is the normal component of force and \\(dA\\) is the area of the surface element."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\sigma\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Normal stress is defined as the stress resulting from a force acting normal to a body surface. Normal stress can be caused by several loading methods, the most common being axial tension and compression, bending, and hoop stress." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Stress .

quantitykind:NozzleThroatCrossSectionalArea a qudt:QuantityKind ;
    rdfs:label "Nozzle Throat Cross-sectional Area"@en ;
    qudt:plainTextDescription "Cross-sectional area of the nozzle at the throat." ;
    qudt:symbol "A^*" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:NozzleThroatPressure a qudt:QuantityKind ;
    rdfs:label "Nozzle Throat Pressure"@en ;
    qudt:symbol "p^*" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:NozzleWallsThrustReaction a qudt:QuantityKind ;
    rdfs:label "Nozzle Walls Thrust Reaction"@en ;
    qudt:symbol "F_R" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:NuclearRadius a qudt:QuantityKind ;
    rdfs:label "Nuclear Radius"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Atomic_nucleus"^^xsd:anyURI ;
    qudt:latexDefinition "This quantity is not exactly defined. It is given approximately for nuclei in their ground state only by \\(R = r_0 A^{\\frac{1}{3}}\\), where \\(r_0 \\approx 1.2 x 10^{-15} m\\) and \\(A\\) is the nucleon number."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Nuclear Radius\" is the conventional radius of sphere in which the nuclear matter is included" ;
    qudt:symbol "R" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:OlfactoryThreshold a qudt:QuantityKind ;
    rdfs:label "Olfactory Threshold"@en ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\overline{T_o}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Olfactory Threshold\" are thresholds for the concentrations of various classes of smell that can be detected." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Odor_detection_threshold> .

quantitykind:OrbitalAngularMomentumPerUnitMass a qudt:QuantityKind ;
    rdfs:label "Orbital Angular Momentum per Unit Mass"@en ;
    qudt:plainTextDescription "Angular momentum of the orbit per unit mass of the vehicle" ;
    qudt:symbol "h" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:OrbitalRadialDistance a qudt:QuantityKind ;
    rdfs:label "Orbital Radial Distance"@en ;
    qudt:symbol "r" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:OsmoticPressure a qudt:QuantityKind ;
    rdfs:label "Osmotic Pressure"@en ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CM_H2O,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Osmotic_pressure"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\varphi = -(M_A\\sum b_B)^{-1} \\ln a_A\\), where \\(M_A\\) is the molar mass of the solvent \\(A\\), \\(\\sum\\) denotes summation over all the solutes, \\(b_B\\) is the molality of solute \\(B\\), and \\(a_A\\) is the activity of solvent \\(A\\)."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Osmotic Pressure\" is the pressure which needs to be applied to a solution to prevent the inward flow of water across a semipermeable membrane." ;
    qudt:symbol "Π" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Pressure .

quantitykind:OverRangeDistance a qudt:QuantityKind ;
    rdfs:label "Over-range distance"@en ;
    qudt:plainTextDescription "Additional distance traveled by a rocket because Of excessive initial velocity." ;
    qudt:symbol "s_i" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PREDICTED-MASS a qudt:QuantityKind ;
    rdfs:label "Predicted Mass"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:plainTextDescription "Sum of the basic mass and the MGA. Current prediction of the final mass based on the current requirements and design." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:PRODUCT-OF-INERTIA_X a qudt:QuantityKind ;
    rdfs:label "Product of Inertia in the X axis"@en ;
    qudt:plainTextDescription "A measure of a body's dynamic (or coupled) imbalance resulting in a precession when rotating about an axis other than the body?s principal axis." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PRODUCT-OF-INERTIA .

quantitykind:PRODUCT-OF-INERTIA_Y a qudt:QuantityKind ;
    rdfs:label "Product of Inertia in the Y axis"@en ;
    qudt:plainTextDescription "A measure of a body?s dynamic (or coupled) imbalance resulting in a precession when rotating about an axis other than the body's principal axis." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PRODUCT-OF-INERTIA .

quantitykind:PRODUCT-OF-INERTIA_Z a qudt:QuantityKind ;
    rdfs:label "Product of Inertia in the Z axis"@en ;
    qudt:plainTextDescription "A measure of a body's dynamic (or coupled) imbalance resulting in a precession when rotating about an axis other than the body's principal axis." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PRODUCT-OF-INERTIA .

quantitykind:PartialPressure a qudt:QuantityKind ;
    rdfs:label "Partial Pressure"@en ;
    qudt:abbreviation "pa" ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CM_H2O,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Partial_pressure"^^xsd:anyURI ;
    qudt:latexDefinition "\\(p_B = x_B \\cdot p\\), where \\(x_B\\) is the amount-of-substance fraction of substance \\(B\\) and \\(p\\) is the total pressure."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Partial Pressure\" is the pressure that the gas would have if it alone occupied the volume of the mixture at the same temperature." ;
    qudt:symbol "p_B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Pressure .

quantitykind:ParticleNumberDensity a qudt:QuantityKind ;
    rdfs:label "Particle Number Density"@en ;
    qudt:applicableUnit unit:NUM-PER-L,
        unit:NUM-PER-M3,
        unit:NUM-PER-MicroL,
        unit:NUM-PER-NanoL,
        unit:PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Particle_number#Particle_number_density"^^xsd:anyURI ;
    qudt:latexDefinition "\\(n = \\frac{N}{V}\\), where \\(N\\) is the number of particles in the 3D domain with the volume \\(V\\)."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Particle Number Density\" is obtained by dividing the particle number of a system by its volume." ;
    qudt:symbol "n" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:NumberDensity .

quantitykind:ParticlePositionVector a qudt:QuantityKind ;
    rdfs:label "Particle Position Vector"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Position_(vector)"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Particle Position Vector\" is the position vector of a particle." ;
    qudt:symbol "r, R" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:PathLength a qudt:QuantityKind ;
    rdfs:label "Path Length"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Path_length"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:plainTextDescription "\"PathLength\" is " ;
    qudt:symbol "s" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:PayloadMass a qudt:QuantityKind ;
    rdfs:label "Payload Mass"@en ;
    qudt:plainTextDescription "Payload mass is the mass of the payload carried by the craft. In a multistage spacecraft the payload mass of the last stage is the mass of the payload and the payload masses of the other stages are considered to be the gross masses of the next stages." ;
    qudt:symbol "M_P" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PayloadRatio a qudt:QuantityKind ;
    rdfs:label "Payload Ratio"@en ;
    qudt:plainTextDescription "The payload ratio is defined as the mass of the payload divided by the empty mass of the structure. Because of the extra cost involved in staging rockets, given the choice, it's often more economic to use few stages with a small payload ratio rather than more stages each with a high payload ratio." ;
    qudt:symbol "L" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PeltierCoefficient a qudt:QuantityKind ;
    rdfs:label "Peltier Coefficient"@en ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Thermoelectric_effect"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\Pi_{ab}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Peltier Coefficient\" represents how much heat current is carried per unit charge through a given material. It is the heat power developed at a junction, divided by the electric current flowing from substance a to substance b." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PhaseDifference a qudt:QuantityKind ;
    rdfs:label "Phase Difference"@en ;
    dcterms:description "\"Phase Difference} is the difference, expressed in electrical degrees or time, between two waves having the same frequency and referenced to the same point in time. Two oscillators that have the same frequency and different phases have a phase difference, and the oscillators are said to be out of phase with each other. The amount by which such oscillators are out of step with each other can be expressed in degrees from \\SI{0}{\\degree} to \\SI{360}{\\degree}, or in radians from 0 to \\num{2\\pi\". If the phase difference is 180 degrees (\\(\\pi\\) radians), then the two oscillators are said to be in antiphase."^^qudt:LatexString ;
    qudt:expression "\\(phase-difference\\)"^^qudt:LatexString ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Phase_(waves)#Phase_difference"^^xsd:anyURI,
        "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=103-07-06"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\varphi = \\varphi_u - \\varphi_i\\), where \\(\\varphi_u\\) is the initial phase of the voltage and \\(\\varphi_i\\) is the initial phase of the electric current."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\varphi\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PhononMeanFreePath a qudt:QuantityKind ;
    rdfs:label "Phonon Mean Free Path"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Thermal_conductivity"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Phonon Mean Free Path\" is the mean free path of phonons." ;
    qudt:symbol "l_{ph}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:PhotoThresholdOfAwarenessFunction a qudt:QuantityKind ;
    rdfs:label "Photo Threshold of Awareness Function"@en ;
    dcterms:description "\"Photo Threshold of Awareness Function\" is the ability of the human eye to detect a light that results in a \\(1^o\\) radial angle at the eye with a given duration (temporal summation)."^^qudt:LatexString ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PolarMomentOfInertia a qudt:QuantityKind ;
    rdfs:label "Polar moment of inertia"@en ;
    qudt:plainTextDescription "The polar moment of inertia is a quantity used to predict an object's ability to resist torsion, in objects (or segments of objects) with an invariant circular cross-section and no significant warping or out-of-plane deformation. It is used to calculate the angular displacement of an object subjected to a torque. It is analogous to the area moment of inertia, which characterizes an object's ability to resist bending. " ;
    qudt:symbol "J_{zz}" ;
    qudt:url "http://en.wikipedia.org/wiki/Second_moment_of_area"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PolarizationField a qudt:QuantityKind ;
    rdfs:label "Polarization Field"@en ;
    qudt:applicableUnit unit:C-PER-CentiM2,
        unit:C-PER-M2,
        unit:C-PER-MilliM2,
        unit:C_Ab-PER-CentiM2,
        unit:C_Stat-PER-CentiM2,
        unit:KiloC-PER-M2,
        unit:MegaC-PER-M2,
        unit:MicroC-PER-M2,
        unit:MilliC-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T1D0 ;
    qudt:plainTextDescription "The Polarization Field is the vector field that expresses the density of permanent or induced electric dipole moments in a dielectric material. The polarization vector P is defined as the ratio of electric dipole moment per unit volume." ;
    qudt:symbol "P" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ElectricChargePerArea .

quantitykind:PositionVector a qudt:QuantityKind ;
    rdfs:label "Position Vector"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Position_(vector)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexDefinition "\\(r = \\overrightarrow{OP}\\), where \\(O\\) and \\(P\\) are two points in space."^^qudt:LatexString ;
    qudt:plainTextDescription "A \"Position Vector\", also known as location vector or radius vector, is a Euclidean vector which represents the position of a point P in space in relation to an arbitrary reference origin O." ;
    qudt:symbol "r" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:PotentialEnergy a qudt:QuantityKind ;
    rdfs:label "Potential Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Potential_energy"^^xsd:anyURI ;
    qudt:hasDimension qudt:DIM_ISO-L2MT-2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Potential_energy"^^xsd:anyURI ;
    qudt:latexDefinition "\\(V = -\\int F \\cdot dr\\), where \\(F\\) is a conservative force and \\(R\\) is a position vector."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:plainTextDescription "Energy possessed by a body by virtue of its position in a gravity field in contrast with kinetic energy, that possessed by virtue of its motion." ;
    qudt:symbol "PE or U" ;
    qudt:url "http://en.wikipedia.org/wiki/Potential_energy"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:PressureBurningRateConstant a qudt:QuantityKind ;
    rdfs:label "Pressure Burning Rate Constant"@en ;
    qudt:latexSymbol "\\(\\alpha\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PressureBurningRateIndex a qudt:QuantityKind ;
    rdfs:label "Pressure Burning Rate Index"@en ;
    qudt:latexSymbol "\\(\\beta\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PropellantMeanBulkTemperature a qudt:QuantityKind ;
    rdfs:label "Propellant Mean Bulk Temperature"@en ;
    qudt:applicableUnit unit:DEG_C-PER-HR,
        unit:DEG_C-PER-MIN,
        unit:DEG_C-PER-SEC,
        unit:DEG_C-PER-YR,
        unit:DEG_F-PER-HR,
        unit:DEG_F-PER-MIN,
        unit:DEG_F-PER-SEC,
        unit:DEG_F-PER-SEC2,
        unit:DEG_R-PER-HR,
        unit:DEG_R-PER-MIN,
        unit:DEG_R-PER-SEC,
        unit:K-PER-HR,
        unit:K-PER-MIN,
        unit:K-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "PMBT" ;
    skos:broader quantitykind:PropellantTemperature .

quantitykind:RESERVE-MASS a qudt:QuantityKind ;
    rdfs:label "Reserve Mass"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:plainTextDescription "A quantity of mass held by Program/project management to mitigate the risk of over-predicted performance estimates, under predicted mass estimates, and future operational and mission specific requirements (program mass reserve, manager's mass reserve, launch window reserve, performance reserve, etc.)." ;
    qudt:symbol "M_{E}" ;
    qudt:url "http://eaton.math.rpi.edu/CSUMS/Papers/EcoEnergy/koojimanconserve.pdf"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:RadialDistance a qudt:QuantityKind ;
    rdfs:label "Radial Distance"@en ;
    dcterms:description "In classical geometry, the \"Radial Distance\" is a coordinate in polar coordinate systems (r, \\(\\theta\\)). Basically the radial distance is the scalar Euclidean distance between a point and the origin of the system of coordinates."^^qudt:LatexString ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Radial_distance_(geometry)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexDefinition "\\(d = \\sqrt{r_1^2 + r_2^2 -2r_1r_2\\cos{(\\theta_1 - \\theta_2)}}\\), where \\(P_1\\) and \\(P_2\\) are two points with polar coordinates \\((r_1, \\theta_1)\\) and \\((r_2, \\theta_2)\\), respectively, and \\(d\\) is the distance."^^qudt:LatexString ;
    qudt:latexSymbol "\\(r_Q, \\rho\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:RadiantEmmitance a qudt:QuantityKind ;
    rdfs:label "Radiant Emmitance"@en ;
    qudt:applicableUnit unit:BTU_IT-PER-HR-FT2,
        unit:BTU_IT-PER-SEC-FT2,
        unit:ERG-PER-CentiM2-SEC,
        unit:FT-LB_F-PER-FT2-SEC,
        unit:J-PER-CentiM2-DAY,
        unit:KiloCAL-PER-CentiM2-MIN,
        unit:KiloCAL-PER-CentiM2-SEC,
        unit:MicroW-PER-M2,
        unit:MilliW-PER-M2,
        unit:PSI-L-PER-SEC,
        unit:PicoW-PER-M2,
        unit:W-PER-CentiM2,
        unit:W-PER-FT2,
        unit:W-PER-IN2,
        unit:W-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:latexDefinition "\\(M = \\frac{d\\Phi}{dA}\\), where \\(d\\Phi\\) is the radiant flux leaving the element of the surface area \\(dA\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "Irradiance and Radiant Emittance are radiometry terms for the power per unit area of electromagnetic radiation at a surface. \"Irradiance\" is used when the electromagnetic radiation is incident on the surface. \"Radiant emmitance\" (or \"radiant exitance\") is used when the radiation is emerging from the surface." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PowerPerArea ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Irradiance> .

quantitykind:RadiantExposure a qudt:QuantityKind ;
    rdfs:label "Radiant Exposure"@en ;
    qudt:abbreviation "J-PER-CM2" ;
    qudt:applicableUnit unit:BTU_IT-PER-FT2,
        unit:FT-LB_F-PER-FT2,
        unit:FT-LB_F-PER-M2,
        unit:J-PER-CentiM2,
        unit:J-PER-M2,
        unit:KiloCAL-PER-CentiM2,
        unit:KiloGM-PER-SEC2,
        unit:MegaJ-PER-M2,
        unit:N-M-PER-M2,
        unit:PicoPA-PER-KiloM,
        unit:W-SEC-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:latexDefinition "\\(H = \\int_{0}^{\\Delta t}{E}{dt}\\), where \\(E\\) is the irradiance acting during the time interval with duration \\(\\Delta t\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "Radiant exposure is a measure of the total radiant energy incident on a surface per unit area; equal to the integral over time of the radiant flux density. Also known as exposure." ;
    qudt:symbol "H_e" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:EnergyPerArea ;
    skos:exactMatch <http://omlc.ogi.edu/education/ece532/class1/irradiance.html> .

quantitykind:RadiantFluenceRate a qudt:QuantityKind ;
    rdfs:label "Radiant Fluence Rate"@en ;
    qudt:abbreviation "M-PER-T3" ;
    qudt:applicableUnit unit:BTU_IT-PER-HR-FT2,
        unit:BTU_IT-PER-SEC-FT2,
        unit:ERG-PER-CentiM2-SEC,
        unit:FT-LB_F-PER-FT2-SEC,
        unit:J-PER-CentiM2-DAY,
        unit:KiloCAL-PER-CentiM2-MIN,
        unit:KiloCAL-PER-CentiM2-SEC,
        unit:MicroW-PER-M2,
        unit:MilliW-PER-M2,
        unit:PSI-L-PER-SEC,
        unit:PicoW-PER-M2,
        unit:W-PER-CentiM2,
        unit:W-PER-FT2,
        unit:W-PER-IN2,
        unit:W-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:latexDefinition "\\(E_0 = \\int{L}{d\\Omega}\\), where \\(d\\Omega\\) is the solid angle of each elementary beam passing through the given point and \\(L\\) its radiance at that point in the direction of the beam."^^qudt:LatexString ;
    qudt:plainTextDescription "Radiant fluence rate, or spherical irradiance, is equal to the total radiant flux incident on a small sphere divided by the area of the diametrical cross-section of the sphere." ;
    qudt:symbol "E_e,0" ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PowerPerArea ;
    skos:exactMatch <http://goldbook.iupac.org/FT07376.html> .

quantitykind:RadiantFlux a qudt:QuantityKind ;
    rdfs:label "Radiant Flux"@en ;
    qudt:applicableUnit unit:BAR-L-PER-SEC,
        unit:BAR-M3-PER-SEC,
        unit:BTU_IT-PER-HR,
        unit:BTU_IT-PER-SEC,
        unit:ERG-PER-SEC,
        unit:FT-LB_F-PER-HR,
        unit:FT-LB_F-PER-MIN,
        unit:FT-LB_F-PER-SEC,
        unit:GigaW,
        unit:HP,
        unit:HP-PER-M,
        unit:HP-PER-V,
        unit:HP_Boiler,
        unit:HP_Brake,
        unit:HP_Electric,
        unit:HP_Metric,
        unit:J-PER-HR,
        unit:J-PER-SEC,
        unit:KiloCAL-PER-MIN,
        unit:KiloCAL-PER-SEC,
        unit:KiloW,
        unit:MegaJ-PER-SEC,
        unit:MegaPA-L-PER-SEC,
        unit:MegaPA-M3-PER-SEC,
        unit:MegaW,
        unit:MicroW,
        unit:MilliBAR-L-PER-SEC,
        unit:MilliBAR-M3-PER-SEC,
        unit:MilliW,
        unit:NanoW,
        unit:PA-L-PER-SEC,
        unit:PA-M3-PER-SEC,
        unit:PSI-IN3-PER-SEC,
        unit:PSI-M3-PER-SEC,
        unit:PSI-YD3-PER-SEC,
        unit:PicoW,
        unit:PlanckPower,
        unit:TON_FG,
        unit:TeraW,
        unit:W ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:latexDefinition "\\(\\Phi = \\frac{dQ}{dt}\\), where \\(dQ\\) is the radiant energy emitted, transferred, or received during a time interval of the duration \\(dt\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\phi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Radiant Flux, or radiant power, is the measure of the total power of electromagnetic radiation (including infrared, ultraviolet, and visible light). The power may be the total emitted from a source, or the total landing on a particular surface." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Power ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Radiant_flux> .

quantitykind:RadiativeHeatTransfer a qudt:QuantityKind ;
    rdfs:label "Radiative Heat Transfer"@en ;
    dcterms:description "\"Radiative Heat Transfer\" is proportional to \\((T_1^4 - T_2^4)\\) and area of the surface, where \\(T_1\\) and \\(T_2\\) are thermodynamic temperatures of two black surfaces, for non totally black surfaces an additional factor less than 1 is needed."^^qudt:LatexString ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\Phi_r\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Heat_transfer#Radiation> .

quantitykind:RadiusOfCurvature a qudt:QuantityKind ;
    rdfs:label "Radius of Curvature"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Radius_of_curvature_(mathematics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\rho\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "In geometry, the \"Radius of Curvature\", R, of a curve at a point is a measure of the radius of the circular arc which best approximates the curve at that point." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:ReactionEnergy a qudt:QuantityKind ;
    rdfs:label "Reaction Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Nuclear_reaction"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Reaction Energy\" in a nuclear reaction, is the sum of the kinetic energies and photon energies of the reaction products minus the sum of the kinetic and photon energies of the reactants." ;
    qudt:symbol "Q" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:ReactorTimeConstant a qudt:QuantityKind ;
    rdfs:label "Reactor Time Constant"@en ;
    qudt:informativeReference "http://www.euronuclear.org/info/encyclopedia/r/reactor-time-constant.htm"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Reactor Time Constant\", also called the reactor period, is the time during which the neutron flux density in a reactor changes by the factor e = 2.718 (e: basis of natural logarithms), when the neutron flux density increases or decreases exponentially." ;
    qudt:symbol "T" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:RelativeAtomicMass a qudt:QuantityKind ;
    rdfs:label "Relative Atomic Mass"@en ;
    qudt:applicableUnit unit:DeciB_M,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Relative_atomic_mass"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Relative Atomic Mass \" is a dimensionless physical quantity, the ratio of the average mass of atoms of an element (from a given source) to 1/12 of the mass of an atom of carbon-12 (known as the unified atomic mass unit)" ;
    qudt:symbol "A_r" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:RelativeMassDefect a qudt:QuantityKind ;
    rdfs:label "Relative Mass Defect"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Binding_energy"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(B_r = \\frac{B}{m_u}\\), where \\(B\\) is the mass defect and \\(m_u\\) is the unified atomic mass constant."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Relative Mass Defect\" is the mass defect between the monoisotopic mass of an element and the mass of its A + 1 or its A + 2 isotopic cluster." ;
    qudt:symbol "B_r" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:MassDefect .

quantitykind:RelativeMolecularMass a qudt:QuantityKind ;
    rdfs:label "Relative Molecular Mass"@en ;
    qudt:applicableUnit unit:DeciB_M,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Molecular_mass#Relative_molecular_mass"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Relative Molecular Mass \" is equivalent to the numerical value of the molecular mass expressed in unified atomic mass units. The molecular mass (m) is the mass of a molecule." ;
    qudt:symbol "M_r" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:RelaxationTIme a qudt:QuantityKind ;
    rdfs:label "Relaxation TIme"@en ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Relaxation_(physics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\tau\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Relaxation TIme\" is a time constant for exponential decay towards equilibrium." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ResonanceEnergy a qudt:QuantityKind ;
    rdfs:label "Resonance Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Nuclear_reaction_analysis"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Resonance Energy\" in a nuclear reaction, is the kinetic energy of an incident particle, in the reference frame of the target, corresponding to a resonance in a nuclear reaction." ;
    qudt:symbol "E_r, E_{res}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:ResonanceEscapeProbabilityForFission a qudt:QuantityKind ;
    rdfs:label "Resonance Escape Probability For Fission"@en ;
    qudt:plainTextDescription "Fraction of fission neutrons that manage to slow down from fission to thermal energies without being absorbed." ;
    qudt:symbol "p" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:RestEnergy a qudt:QuantityKind ;
    rdfs:label "Rest Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Invariant_mass#Rest_energy"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "For a particle, \\(E_0 = m_0 c_0^2\\), where \\(m_0\\) is the rest mass of that particle, and \\(c_0\\) is the speed of light in vacuum."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Rest Energy\" is the energy equivalent of the rest mass of a body, equal to the rest mass multiplied by the speed of light squared." ;
    qudt:symbol "E_0" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:RestMass a qudt:QuantityKind ;
    rdfs:label "Rest Mass"@en ;
    dcterms:description "The \\(\\textit{Rest Mass}\\), the invariant mass, intrinsic mass, proper mass, or (in the case of bound systems or objects observed in their center of momentum frame) simply mass, is a characteristic of the total energy and momentum of an object or a system of objects that is the same in all frames of reference related by Lorentz transformations. The mass of a particle type X (electron, proton or neutron) when that particle is at rest. For an electron: \\(m_e = 9,109 382 15(45) 10^{-31} kg\\), for a proton: \\(m_p = 1,672 621 637(83) 10^{-27} kg\\), for a neutron: \\(m_n = 1,674 927 211(84) 10^{-27} kg\\). Rest mass is often denoted \\(m_0\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Invariant_mass"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31895"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:symbol "m_X" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "Proper Mass" ;
    skos:broader quantitykind:Mass .

quantitykind:ReverberationTime a qudt:QuantityKind ;
    rdfs:label "Reverberation Time"@en ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Reverberation"^^xsd:anyURI ;
    qudt:plainTextDescription "Reverberation Time is the time required for reflections of a direct sound to decay by 60 dB below the level of the direct sound." ;
    qudt:symbol "T" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:RocketAtmosphericTransverseForce a qudt:QuantityKind ;
    rdfs:label "Rocket Atmospheric Transverse Force"@en ;
    qudt:plainTextDescription "Transverse force on rocket due to an atmosphere" ;
    qudt:symbol "T" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SecondMomentOfArea a qudt:QuantityKind ;
    rdfs:label "Second Moment of Area"@en ;
    qudt:plainTextDescription "The second moment of area is a property of a physical object that can be used to predict its resistance to bending and deflection. The deflection of an object under load depends not only on the load, but also on the geometry of the object's cross-section." ;
    qudt:symbol "J" ;
    qudt:url "http://en.wikipedia.org/wiki/Second_moment_of_area"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SecondStageMassRatio a qudt:QuantityKind ;
    rdfs:label "Second Stage Mass Ratio"@en ;
    qudt:applicableUnit unit:FemtoGM-PER-KiloGM,
        unit:GM-PER-GM,
        unit:GM-PER-KiloGM,
        unit:KiloGM-PER-KiloGM,
        unit:MicroGM-PER-GM,
        unit:MicroGM-PER-KiloGM,
        unit:MilliGM-PER-GM,
        unit:MilliGM-PER-KiloGM,
        unit:NanoGM-PER-KiloGM,
        unit:PicoGM-PER-GM,
        unit:PicoGM-PER-KiloGM ;
    qudt:plainTextDescription "Mass ratio for the second stage of a multistage launcher." ;
    qudt:symbol "R_2" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:MassRatio .

quantitykind:ShearStrain a qudt:QuantityKind ;
    rdfs:label "Shear Strain"@en ;
    qudt:applicableUnit unit:DeciB_M,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Deformation_(mechanics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\gamma = \\frac{\\Delta x}{d}\\), where \\(\\Delta x\\) is the parallel displacement between two surfaces of a layer of thickness \\(d\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\gamma\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Shear Strain is the amount of deformation perpendicular to a given line rather than parallel to it. " ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Strain .

quantitykind:ShearStress a qudt:QuantityKind ;
    rdfs:label "Shear Stress" ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CM_H2O,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:baseUnitDimensions "\\(n m^{-2}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Stress_(mechanics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\tau = \\frac{dF_t}{dA}\\), where \\(dF_t\\) is the tangential component of force and \\(dA\\) is the area of the surface element."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\tau\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Shear stress occurs when the force  occurs in shear, or perpendicular to the normal." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Stress .

quantitykind:SingleStageLauncherMassRatio a qudt:QuantityKind ;
    rdfs:label "Single Stage Launcher Mass Ratio"@en ;
    qudt:applicableUnit unit:FemtoGM-PER-KiloGM,
        unit:GM-PER-GM,
        unit:GM-PER-KiloGM,
        unit:KiloGM-PER-KiloGM,
        unit:MicroGM-PER-GM,
        unit:MicroGM-PER-KiloGM,
        unit:MilliGM-PER-GM,
        unit:MilliGM-PER-KiloGM,
        unit:NanoGM-PER-KiloGM,
        unit:PicoGM-PER-GM,
        unit:PicoGM-PER-KiloGM ;
    qudt:symbol "R_o" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:MassRatio .

quantitykind:Slowing-DownArea a qudt:QuantityKind ;
    rdfs:label "Slowing-Down Area"@en ;
    qudt:applicableUnit unit:AC,
        unit:ARE,
        unit:BARN,
        unit:CentiM2,
        unit:DecaARE,
        unit:DeciM2,
        unit:FT2,
        unit:HA,
        unit:IN2,
        unit:M2,
        unit:MI2,
        unit:MIL_Circ,
        unit:MicroM2,
        unit:MilliM2,
        unit:NanoM2,
        unit:PlanckArea,
        unit:YD2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Slowing-Down Area\" in an infinite homogenous medium, is one-sixth of the mean square distance between the neutron source and the point where a neutron reaches a given energy." ;
    qudt:symbol "L_s^2" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Area .

quantitykind:Slowing-DownLength a qudt:QuantityKind ;
    rdfs:label "Slowing-Down Length"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://nuclearpowertraining.tpub.com/h1013v2/css/h1013v2_32.htm"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Slowing-Down Length\" is the average straight-line distance that a fast neutron will travel between its introduction into the slowing-downmedium (moderator) and thermalization." ;
    qudt:symbol "L_s" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:SolidStateDiffusionLength a qudt:QuantityKind ;
    rdfs:label "Diffusion Length (Solid State Physics)"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://pveducation.org/pvcdrom/pn-junction/diffusion-length"^^xsd:anyURI ;
    qudt:latexDefinition "\\(L = \\sqrt{D\\tau}\\), where \\(D\\) is the diffusion coefficient and \\(\\tau\\) is lifetime."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Solid State Diffusion Length\" is the average distance traveled by a particle, such as a minority carrier in a semiconductor " ;
    qudt:symbol "L, L_n, L_p" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:SoundEnergyDensity a qudt:QuantityKind ;
    rdfs:label "Sound energy density"@en ;
    dcterms:description "Sound energy density is the time-averaged sound energy in a given volume divided by that volume. The sound energy density or sound density (symbol \\(E\\) or \\(w\\)) is an adequate measure to describe the sound field at a given point as a sound energy value."^^qudt:LatexString ;
    qudt:applicableUnit unit:BTU_IT-PER-FT3,
        unit:BTU_TH-PER-FT3,
        unit:ERG-PER-CentiM3,
        unit:J-PER-M3,
        unit:MegaJ-PER-M3,
        unit:W-HR-PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Sound_energy_density"^^xsd:anyURI ;
    qudt:latexDefinition "\\(E = \\frac{I}{c}\\), where \\(I\\) is the sound intensity in \\(\\frac{W}{m^2}\\) and \\(c\\) is the sound speed in \\(\\frac{m}{s}\\)."^^qudt:LatexString ;
    qudt:symbol "E" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:EnergyDensity .

quantitykind:SoundParticleAcceleration a qudt:QuantityKind ;
    rdfs:label "Sound particle acceleration"@en ;
    dcterms:description "In a compressible sound transmission medium - mainly air - air particles get an accelerated motion: the particle acceleration or sound acceleration with the symbol a in \\(m/s2\\). In acoustics or physics, acceleration (symbol: \\(a\\)) is defined as the rate of change (or time derivative) of velocity."^^qudt:LatexString ;
    qudt:applicableUnit unit:CentiM-PER-SEC2,
        unit:FT-PER-SEC2,
        unit:G,
        unit:GALILEO,
        unit:IN-PER-SEC2,
        unit:KN-PER-SEC,
        unit:KiloPA-M2-PER-GM,
        unit:M-PER-SEC2,
        unit:MicroG,
        unit:MilliG,
        unit:MilliGAL ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Particle_acceleration"^^xsd:anyURI ;
    qudt:latexDefinition "\\(a = \\frac{\\partial v}{\\partial t}\\), where \\(v\\) is sound particle velocity and \\(t\\) is time."^^qudt:LatexString ;
    qudt:symbol "a" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Acceleration .

quantitykind:SoundParticleDisplacement a qudt:QuantityKind ;
    rdfs:label "Sound Particle Displacement"@en ;
    qudt:abbreviation "l" ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Particle_displacement"^^xsd:anyURI ;
    qudt:plainTextDescription "Sound Particle Displacement is the nstantaneous displacement of a particle in a medium from what would be its position in the absence of sound waves." ;
    qudt:symbol "ξ" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:SoundPower a qudt:QuantityKind ;
    rdfs:label "Sound power"@en ;
    dcterms:description "Sound power or acoustic power \\(P_a\\) is a measure of sonic energy \\(E\\) per time \\(t\\) unit. It is measured in watts and can be computed as sound intensity (\\(I\\)) times area (\\(A\\))."^^qudt:LatexString ;
    qudt:applicableUnit unit:BAR-L-PER-SEC,
        unit:BAR-M3-PER-SEC,
        unit:BTU_IT-PER-HR,
        unit:BTU_IT-PER-SEC,
        unit:ERG-PER-SEC,
        unit:FT-LB_F-PER-HR,
        unit:FT-LB_F-PER-MIN,
        unit:FT-LB_F-PER-SEC,
        unit:GigaW,
        unit:HP,
        unit:HP-PER-M,
        unit:HP-PER-V,
        unit:HP_Boiler,
        unit:HP_Brake,
        unit:HP_Electric,
        unit:HP_Metric,
        unit:J-PER-HR,
        unit:J-PER-SEC,
        unit:KiloCAL-PER-MIN,
        unit:KiloCAL-PER-SEC,
        unit:KiloW,
        unit:MegaJ-PER-SEC,
        unit:MegaPA-L-PER-SEC,
        unit:MegaPA-M3-PER-SEC,
        unit:MegaW,
        unit:MicroW,
        unit:MilliBAR-L-PER-SEC,
        unit:MilliBAR-M3-PER-SEC,
        unit:MilliW,
        unit:NanoW,
        unit:PA-L-PER-SEC,
        unit:PA-M3-PER-SEC,
        unit:PSI-IN3-PER-SEC,
        unit:PSI-M3-PER-SEC,
        unit:PSI-YD3-PER-SEC,
        unit:PicoW,
        unit:PlanckPower,
        unit:TON_FG,
        unit:TeraW,
        unit:W ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Sound_power"^^xsd:anyURI ;
    qudt:latexDefinition "\\(P_a = IA\\), where \\(I\\) is the sound intensity in \\(\\frac{W}{m^2}\\) and \\(A\\) is the area in \\(m^2\\)."^^qudt:LatexString ;
    qudt:symbol "P" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Power .

quantitykind:SoundPressure a qudt:QuantityKind ;
    rdfs:label "Sound pressure"@en ;
    qudt:abbreviation "p" ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CM_H2O,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Static_pressure"^^xsd:anyURI ;
    qudt:plainTextDescription "Sound Pressure is the difference between instantaneous total pressure and static pressure." ;
    qudt:symbol "p" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Pressure .

quantitykind:SourceVoltage a qudt:QuantityKind ;
    rdfs:label "Source Voltage"@en ;
    dcterms:description """"Source Voltage}, also referred to as \\textit{Source Tension" is the voltage between the two terminals of a voltage source when there is no

electric current through the source. The name "electromotive force} with the abbreviation \\textit{EMF" and the symbol \\(E\\) is deprecated."""^^qudt:LatexString ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:symbol "U_s" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SourceVoltageBetweenSubstances a qudt:QuantityKind ;
    rdfs:label "Source Voltage Between Substances"@en ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Source Voltage Between Substances\" is the source voltage between substance a and b." ;
    qudt:symbol "E_{ab}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SpatialSummationFunction a qudt:QuantityKind ;
    rdfs:label "Spatial Summation Function"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Spatial Summation Function\" is he ability to produce a composite signal from the signals coming into the eyes from different directions." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Summation_(neurophysiology)#Spatial_summation> .

quantitykind:SpecificEnergyImparted a qudt:QuantityKind ;
    rdfs:label "Specific Energy Imparted"@en ;
    qudt:applicableUnit unit:BTU_IT-PER-LB,
        unit:BTU_TH-PER-LB,
        unit:CAL_IT-PER-GM,
        unit:CAL_TH-PER-G,
        unit:CAL_TH-PER-GM,
        unit:ERG-PER-G,
        unit:ERG-PER-GM,
        unit:J-PER-GM,
        unit:J-PER-KiloGM,
        unit:KiloCAL-PER-GM,
        unit:KiloJ-PER-KiloGM,
        unit:KiloLB_F-FT-PER-LB,
        unit:MegaJ-PER-KiloGM,
        unit:N-M-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:informativeReference "http://www.answers.com/topic/energy-imparted"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "For ionizing radiation, \\(z = \\frac{\\varepsilon}{m}\\), where \\(\\varepsilon\\) is the energy imparted to irradiated matter and \\(m\\) is the mass of that matter."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Specific Energy Imparted\", is the energy imparted to an element of irradiated matter divided by the mass, dm, of that element." ;
    qudt:symbol "z" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:SpecificEnergy .

quantitykind:SpecificHeatsRatio a qudt:QuantityKind ;
    rdfs:label "Specific Heats Ratio"@en ;
    dcterms:description "The ratio of specific heats, for the exhaust gases adiabatic gas constant, is the relative amount of compression/expansion energy that goes into temperature \\(T\\) versus pressure \\(P\\) can be characterized by the heat capacity ratio: \\(\\gamma\\frac{C_P}{C_V}\\), where \\(C_P\\) is the specific heat (also called heat capacity) at constant pressure, while \\(C_V\\) is the specific heat at constant volume. "^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\gamma\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SpecificImpulseByMass a qudt:QuantityKind ;
    rdfs:label "Specific Impulse by Mass"@en ;
    qudt:applicableUnit unit:CentiM-PER-HR,
        unit:CentiM-PER-KiloYR,
        unit:CentiM-PER-SEC,
        unit:FT-PER-HR,
        unit:FT-PER-MIN,
        unit:FT-PER-SEC,
        unit:GigaHZ-M,
        unit:IN-PER-SEC,
        unit:KN,
        unit:KiloM-PER-DAY,
        unit:KiloM-PER-HR,
        unit:KiloM-PER-SEC,
        unit:M-PER-HR,
        unit:M-PER-MIN,
        unit:M-PER-SEC,
        unit:M-PER-YR,
        unit:MI-PER-HR,
        unit:MI-PER-MIN,
        unit:MI_N-PER-HR,
        unit:MI_N-PER-MIN,
        unit:MilliM-PER-DAY,
        unit:MilliM-PER-HR,
        unit:MilliM-PER-MIN,
        unit:MilliM-PER-SEC,
        unit:MilliM-PER-YR ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Velocity .

quantitykind:SpecificImpulseByWeight a qudt:QuantityKind ;
    rdfs:label "Specific Impulse by Weight"@en ;
    qudt:applicableUnit unit:CentiPOISE-PER-BAR,
        unit:DAY,
        unit:DAY_Sidereal,
        unit:H-PER-KiloOHM,
        unit:H-PER-OHM,
        unit:HR,
        unit:HR_Sidereal,
        unit:KiloSEC,
        unit:MIN,
        unit:MIN_Sidereal,
        unit:MO,
        unit:MO_MeanGREGORIAN,
        unit:MO_MeanJulian,
        unit:MO_Synodic,
        unit:MegaYR,
        unit:MicroH-PER-KiloOHM,
        unit:MicroH-PER-OHM,
        unit:MicroSEC,
        unit:MilliH-PER-KiloOHM,
        unit:MilliH-PER-OHM,
        unit:MilliPA-SEC-PER-BAR,
        unit:MilliSEC,
        unit:NanoSEC,
        unit:PA-SEC-PER-BAR,
        unit:POISE-PER-BAR,
        unit:PicoSEC,
        unit:PlanckTime,
        unit:SEC,
        unit:SH,
        unit:WK,
        unit:YR,
        unit:YR_Common,
        unit:YR_Sidereal,
        unit:YR_TROPICAL ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:SpecificImpulse,
        quantitykind:Time .

quantitykind:SpecificThrust a qudt:QuantityKind ;
    rdfs:label "Specific thrust"@en ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Specific_thrust"^^xsd:anyURI ;
    qudt:id "Q-160-100" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Specific_thrust"^^xsd:anyURI ;
    qudt:plainTextDescription "Specific impulse (usually abbreviated Isp) is a way to describe the efficiency of rocket and jet engines. It represents the force with respect to the amount of propellant used per unit time.[1] If the \"amount\" of propellant is given in terms of mass (such as kilograms), then specific impulse has units of velocity. If it is given in terms of Earth-weight (such as kiloponds), then specific impulse has units of time. The conversion constant between the two versions of specific impulse is g. The higher the specific impulse, the lower the propellant flow rate required for a given thrust, and in the case of a rocket the less propellant is needed for a given delta-v per the Tsiolkovsky rocket equation." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:SpecificImpulse .

quantitykind:SpeedOfLight a qudt:QuantityKind ;
    rdfs:label "Speed of Light"@en ;
    dcterms:description "The quantity kind \\(\\textbf{Speed of Light}\\) is the speed of electomagnetic waves in a given medium."^^qudt:LatexString ;
    qudt:applicableUnit unit:BFT,
        unit:FT3-PER-MIN-FT2,
        unit:GigaC-PER-M3,
        unit:GigaHZ-M,
        unit:HZ-M,
        unit:M-PER-SEC,
        unit:MegaHZ-M ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Speed_of_light"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=113-01-34"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso constant:MagneticConstant,
        constant:PermittivityOfVacuum,
        constant:SpeedOfLight_Vacuum ;
    skos:broader quantitykind:Speed .

quantitykind:SphericalIlluminance a qudt:QuantityKind ;
    rdfs:label "Illuminance"@en ;
    dcterms:description "Spherical illuminance is equal to quotient of the total luminous flux \\(\\Phi_v\\) incident on a small sphere by the cross section area of that sphere."^^qudt:LatexString ;
    qudt:applicableUnit unit:FC,
        unit:LUX,
        unit:PHOT ;
    qudt:hasDimensionVector qkdv:A0E0L-2I1M0H0T0D0 ;
    qudt:latexDefinition "\\(E_v,0 = \\int_{4\\pi sr}{L_v}{d\\Omega}\\), where \\(d\\Omega\\) is the solid angle of each elementary beam passing through the given point and \\(L_v\\) is its luminance at that point in the direction of the beam."^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Illuminance ;
    skos:exactMatch <http://eilv.cie.co.at/term/1245> .

quantitykind:Spin a qudt:QuantityKind ;
    rdfs:label "Spin"@en ;
    qudt:applicableUnit unit:ERG-SEC,
        unit:EV-SEC,
        unit:FT-LB_F-SEC,
        unit:J-SEC,
        unit:KiloGM-M2-PER-SEC,
        unit:N-M-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Spin_(physics)"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "In quantum mechanics and particle physics \"Spin\" is an intrinsic form of angular momentum carried by elementary particles, composite particles (hadrons), and atomic nuclei." ;
    qudt:symbol "s" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:AngularMomentum .

quantitykind:StagePropellantMass a qudt:QuantityKind ;
    rdfs:label "Stage Propellant Mass"@en ;
    qudt:symbol "M_F" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:StageStructuralMass a qudt:QuantityKind ;
    rdfs:label "Stage Structure Mass"@en ;
    qudt:symbol "M_S" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:StandardChemicalPotential a qudt:QuantityKind ;
    rdfs:label "Standard Chemical Potential"@en ;
    qudt:applicableUnit unit:J-PER-MOL,
        unit:KiloCAL-PER-MOL,
        unit:KiloJ-PER-MOL ;
    qudt:expression "\\(j-mol^{-1}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A-1E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Chemical_potential"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\mu_B^\\Theta\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Standard Chemical Potential\" is the value of the chemical potential at standard conditions" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ChemicalPotential .

quantitykind:StaticFriction a qudt:QuantityKind ;
    rdfs:label "Static Friction"@en ;
    qudt:applicableUnit unit:DYN,
        unit:KIP_F,
        unit:KiloGM_F,
        unit:KiloN,
        unit:KiloP,
        unit:KiloPOND,
        unit:LB_F,
        unit:MegaLB_F,
        unit:MegaN,
        unit:MicroN,
        unit:MilliN,
        unit:N,
        unit:OZ_F,
        unit:PDL,
        unit:PlanckForce,
        unit:TON_F_US ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Friction"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Friction"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:plainTextDescription "Static friction is friction between two or more solid objects that are not moving relative to each other. For example, static friction can prevent an object from sliding down a sloped surface. " ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Friction .

quantitykind:StaticFrictionCoefficient a qudt:QuantityKind ;
    rdfs:label "Static Friction Coefficient"@en ;
    qudt:applicableUnit unit:NUM,
        unit:UNITLESS ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Friction"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Friction"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mu = \\frac{F_max}{N}\\), where \\(F_max\\) is the maximum tangential component of the contact force and \\(N\\) is the normal component of the contact force between two bodies at relative rest."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\mu\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Static friction is friction between two or more solid objects that are not moving relative to each other. For example, static friction can prevent an object from sliding down a sloped surface. " ;
    qudt:qkdvDenominator qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:qkdvNumerator qkdv:A0E0L1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:FrictionCoefficient .

quantitykind:StrainEnergyDensity a qudt:QuantityKind ;
    rdfs:label "Strain Energy Density"@en ;
    qudt:applicableUnit unit:BTU_IT-PER-FT3,
        unit:BTU_TH-PER-FT3,
        unit:ERG-PER-CentiM3,
        unit:J-PER-M3,
        unit:MegaJ-PER-M3,
        unit:W-HR-PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:plainTextDescription "Defined as the 'work done' for a given strain, that is the area under the stress-strain curve after a specified eation. Source(s): http://www.prepol.com/product-range/product-subpages/terminology" ;
    qudt:symbol "u" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:EnergyDensity .

quantitykind:StructuralEfficiency a qudt:QuantityKind ;
    rdfs:label "Structural Efficiency"@en ;
    qudt:latexSymbol "\\(\\gamma\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Structural efficiency is a function of the weight of structure to the afforded vehicle's strength." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SuperconductorEnergyGap a qudt:QuantityKind ;
    rdfs:label "Superconductor Energy Gap"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/BCS_theory"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Superconductor Energy Gap\" is the width of the forbidden energy band in a superconductor." ;
    qudt:symbol "Δ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:GapEnergy .

quantitykind:SurfaceTension a qudt:QuantityKind ;
    rdfs:label "Surface Tension"@en ;
    qudt:applicableUnit unit:BTU_IT-PER-FT2,
        unit:FT-LB_F-PER-FT2,
        unit:FT-LB_F-PER-M2,
        unit:J-PER-CentiM2,
        unit:J-PER-M2,
        unit:KiloCAL-PER-CentiM2,
        unit:KiloGM-PER-SEC2,
        unit:MegaJ-PER-M2,
        unit:N-M-PER-M2,
        unit:PicoPA-PER-KiloM,
        unit:W-SEC-PER-M2 ;
    qudt:baseUnitDimensions "\\(n m^{-1}\\)"^^qudt:LatexString ;
    qudt:hasDimension qudt:DIM_ISO-MT-2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Surface_tension"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\gamma = \\frac{dF}{dl}\\), where \\(F\\) is the force component perpendicular to a line element in a surface and \\(l\\) is the length of the line element."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Surface Tension\" is a contractive tendency of the surface of a liquid that allows it to resist an external force." ;
    qudt:symbol "γ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:EnergyPerArea .

quantitykind:Susceptance a qudt:QuantityKind ;
    rdfs:label "Susceptance"@en ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Susceptance"^^xsd:anyURI ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Susceptance?oldid=430151986"^^xsd:anyURI,
        "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-12-54"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(B = \\lim{\\underline{Y}}\\), where \\(\\underline{Y}\\) is admittance."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Susceptance\" is the imaginary part of admittance. The inverse of admittance is impedance and the real part of admittance is conductance. " ;
    qudt:symbol "B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Conductance,
        quantitykind:Impedance .

quantitykind:TARGET-BOGIE-MASS a qudt:QuantityKind ;
    rdfs:label "Target Bogie Mass"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:plainTextDescription "An informal mass limit established by a Project Office (at the Element Integrated Product Team (IPT) level or below) to control mass." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:Tension a qudt:QuantityKind ;
    rdfs:label "Tension"@en ;
    qudt:applicableUnit unit:ERG,
        unit:J ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Tension"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ForceMagnitude .

quantitykind:ThermalDiffusivity a qudt:QuantityKind ;
    rdfs:label "Thermal Diffusivity"@en ;
    dcterms:description "In heat transfer analysis, thermal diffusivity (usually denoted \\(\\alpha\\) but \\(a\\), \\(\\kappa\\),\\(k\\), and \\(D\\) are also used) is the thermal conductivity divided by density and specific heat capacity at constant pressure. The formula is: \\(\\alpha = {k \\over {\\rho c_p}}\\), where k is thermal conductivity (\\(W/(\\mu \\cdot K)\\)), \\(\\rho\\) is density (\\(kg/m^{3}\\)), and \\(c_p\\) is specific heat capacity (\\(\\frac{J}{(kg \\cdot K)}\\)) .The denominator \\(\\rho c_p\\), can be considered the volumetric heat capacity (\\(\\frac{J}{(m^{3} \\cdot K)}\\))."^^qudt:LatexString ;
    qudt:applicableUnit unit:CentiM2-PER-SEC,
        unit:FT2-PER-HR,
        unit:FT2-PER-SEC,
        unit:IN2-PER-SEC,
        unit:M2-HZ,
        unit:M2-PER-SEC,
        unit:MilliM2-PER-SEC ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Thermal_diffusivity"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Thermal_diffusivity"^^xsd:anyURI ;
    qudt:latexDefinition "\\(a = \\frac{\\lambda}{\\rho   c_\\rho}\\), where \\(\\lambda\\) is thermal conductivity, \\(\\rho\\) is mass density and \\(c_\\rho\\) is specific heat capacity at constant pressure."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\alpha\\)"^^qudt:LatexString ;
    qudt:symbol "a" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:AreaPerTime .

quantitykind:ThermalEfficiency a qudt:QuantityKind ;
    rdfs:label "Thermal Efficiency"@en ;
    qudt:applicableUnit unit:DeciB_M,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Thermal_efficiency"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:plainTextDescription "Thermal efficiency is a dimensionless performance measure of a thermal device such as an internal combustion engine, a boiler, or a furnace. The input to the device is heat, or the heat-content of a fuel that is consumed. The desired output is mechanical work, or heat, or possibly both." ;
    qudt:qkdvDenominator qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:qkdvNumerator qkdv:A0E0L2I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:ThermalUtilizationFactorForFission a qudt:QuantityKind ;
    rdfs:label "Thermal Utilization Factor For Fission"@en ;
    qudt:plainTextDescription "Probability that a neutron that gets absorbed does so in the fuel material." ;
    qudt:symbol "f" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ThermodynamicCriticalMagneticFluxDensity a qudt:QuantityKind ;
    rdfs:label "Thermodynamic Critical Magnetic Flux Density"@en ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "\\(G_n - G_s = \\frac{1}{2}\\frac{B_c^2 \\cdot V}{\\mu_0}\\), where \\(G_n\\) and \\(G_s\\) are the Gibbs energies at zero magnetic flux density in a normal conductor and superconductor, respectively, \\(\\mu_0\\) is the magnetic constant, and \\(V\\) is volume."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Thermodynamic Critical Magnetic Flux Density\" is the " ;
    qudt:symbol "B_c" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ThermodynamicEntropy a qudt:QuantityKind ;
    rdfs:label "Thermodynamic Entropy"@en ;
    dcterms:description "Thermodynamic Entropy is a measure of the unavailability of a system’s energy to do work. It is a measure of the randomness of molecules in a system and is central to the second law of thermodynamics and the fundamental thermodynamic relation, which deal with physical processes and whether they occur spontaneously. The dimensions of entropy are energy divided by temperature, which is the same as the dimensions of Boltzmann's constant (\\(kB\\)) and heat capacity. The SI unit of entropy is \\(joule\\ per\\ kelvin\\). [Wikipedia]"^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloJ-PER-K ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H-1T-2D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:EnergyPerTemperature .

quantitykind:Thickness a qudt:QuantityKind ;
    rdfs:label "Thickness"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Thickness"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://www.merriam-webster.com/dictionary/thickness"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Thickness\" is the the smallest of three dimensions: length, width, thickness." ;
    qudt:symbol "d" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:ThrustCoefficient a qudt:QuantityKind ;
    rdfs:label "Thrust Coefficient"@en ;
    qudt:plainTextDescription "The thrust force of a jet-propulsion engine per unit of frontal area per unit of incompressible dynamic pressure " ;
    qudt:symbol "C_{F}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ThrustToWeightRatio a qudt:QuantityKind ;
    rdfs:label "Thrust To Weight Ratio"@en ;
    qudt:latexSymbol "\\(\\psi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Thrust-to-weight ratio is a ratio of thrust to weight of a rocket, jet engine, propeller engine, or a vehicle propelled by such an engine. It is a dimensionless quantity and is an indicator of the performance of the engine or vehicle." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ThrusterPowerToThrustEfficiency a qudt:QuantityKind ;
    rdfs:label "Thruster Power To Thrust Efficiency"@en ;
    qudt:latexSymbol "\\(\\eta\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:TimeAveragedSoundIntensity a qudt:QuantityKind ;
    rdfs:label "Time averaged sound intensity"@en ;
    qudt:abbreviation "w/m2" ;
    qudt:applicableUnit unit:BTU_IT-PER-HR-FT2,
        unit:BTU_IT-PER-SEC-FT2,
        unit:ERG-PER-CentiM2-SEC,
        unit:FT-LB_F-PER-FT2-SEC,
        unit:J-PER-CentiM2-DAY,
        unit:KiloCAL-PER-CentiM2-MIN,
        unit:KiloCAL-PER-CentiM2-SEC,
        unit:MicroW-PER-M2,
        unit:MilliW-PER-M2,
        unit:PSI-L-PER-SEC,
        unit:PicoW-PER-M2,
        unit:W-PER-CentiM2,
        unit:W-PER-FT2,
        unit:W-PER-IN2,
        unit:W-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Sound_intensity"^^xsd:anyURI ;
    qudt:latexDefinition "\\(I = \\frac{1}{t2 - t1} \\int_{t1}^{t2}i(t)dt\\), where \\(t1\\) and \\(t2\\) are the starting and ending times for the integral and \\(i\\) is sound intensity."^^qudt:LatexString ;
    qudt:plainTextDescription "Sound intensity or acoustic intensity (\\(I\\)) is defined as the sound power \\(P_a\\) per unit area \\(A\\). The usual context is the noise measurement of sound intensity in the air at a listener's location as a sound energy quantity." ;
    qudt:symbol "I" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:SoundIntensity .

quantitykind:TotalAngularMomentum a qudt:QuantityKind ;
    rdfs:label "Total Angular Momentum"@en ;
    dcterms:description "\"Total Angular Momentum\" combines both the spin and orbital angular momentum of all particles and fields. In atomic and nuclear physics, orbital angular momentum is usually denoted by \\(l\\) or \\(L\\) instead of \\(\\Lambda\\). The magnitude of \\(J\\) is quantized so that \\(J^2 = \\hbar^2 j(j + 1)\\), where \\(j\\) is the total angular momentum quantum number."^^qudt:LatexString ;
    qudt:applicableUnit unit:ERG-SEC,
        unit:EV-SEC,
        unit:FT-LB_F-SEC,
        unit:J-SEC,
        unit:KiloGM-M2-PER-SEC,
        unit:N-M-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Angular_momentum#Spin.2C_orbital.2C_and_total_angular_momentum"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:symbol "J" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:AngularMomentum .

quantitykind:TotalCrossSection a qudt:QuantityKind ;
    rdfs:label "Total Cross-section"@en ;
    qudt:applicableUnit unit:AC,
        unit:ARE,
        unit:BARN,
        unit:CentiM2,
        unit:DecaARE,
        unit:DeciM2,
        unit:FT2,
        unit:HA,
        unit:IN2,
        unit:M2,
        unit:MI2,
        unit:MIL_Circ,
        unit:MicroM2,
        unit:MilliM2,
        unit:NanoM2,
        unit:PlanckArea,
        unit:YD2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Cross_section_(physics)"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Total Cross-section\" is related to the absorbance of the light intensity through Beer-Lambert's law. It is the sum of all cross-sections corresponding to the various reactions or processes between an incident particle of specified type and energy and a target particle." ;
    qudt:symbol "σₜ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:CrossSection .

quantitykind:TotalPressure a qudt:QuantityKind ;
    rdfs:label "Total Pressure"@en ;
    dcterms:description " The total pressure is the sum of the dynamic and static pressures, that is \\(P_0 = P + q\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CM_H2O,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:symbol "P_0" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Pressure .

quantitykind:TouchThresholds a qudt:QuantityKind ;
    rdfs:label "Touch Thresholds"@en ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\overline{T_t}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Touch Thresholds\" are thresholds for touch, vibration and other stimuli to the skin." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:TrueExhaustVelocity a qudt:QuantityKind ;
    rdfs:label "True Exhaust Velocity"@en ;
    qudt:symbol "u_{e}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:UniversalGasConstant a qudt:QuantityKind ;
    rdfs:label "Universal Gas Constant"@en ;
    qudt:plainTextDescription """The gas constant (also known as the molar, universal, or ideal gas constant) is a physical constant which is featured in many fundamental equations in the physical sciences, such as the ideal gas law and the Nernst equation.
Physically, the gas constant is the constant of proportionality that happens to relate the energy scale in physics to the temperature scale, when a mole of particles at the stated temperature is being considered.""" ;
    qudt:symbol "R" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:VerticalVelocity a qudt:QuantityKind ;
    rdfs:label "Vertical Velocity"@en ;
    qudt:applicableUnit unit:CentiM-PER-HR,
        unit:CentiM-PER-KiloYR,
        unit:CentiM-PER-SEC,
        unit:FT-PER-HR,
        unit:FT-PER-MIN,
        unit:FT-PER-SEC,
        unit:GigaHZ-M,
        unit:IN-PER-SEC,
        unit:KN,
        unit:KiloM-PER-DAY,
        unit:KiloM-PER-HR,
        unit:KiloM-PER-SEC,
        unit:M-PER-HR,
        unit:M-PER-MIN,
        unit:M-PER-SEC,
        unit:M-PER-YR,
        unit:MI-PER-HR,
        unit:MI-PER-MIN,
        unit:MI_N-PER-HR,
        unit:MI_N-PER-MIN,
        unit:MilliM-PER-DAY,
        unit:MilliM-PER-HR,
        unit:MilliM-PER-MIN,
        unit:MilliM-PER-SEC,
        unit:MilliM-PER-YR ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:plainTextDescription "The rate at which a body moves upwards at an angle of 90 degrees to the ground. It is the component of a projectile's velocity which is concerned with lifting the projectile." ;
    qudt:symbol "V_{Z}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Velocity .

quantitykind:VisibleRadiantEnergy a qudt:QuantityKind ;
    rdfs:label "Visible Radiant Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Radiant_energy"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31892"^^xsd:anyURI ;
    qudt:latexDefinition "Q"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Visible Radiant Energy\", also known as luminous energy, is the energy of electromagnetic waves. It is energy of the particles that are emitted, transferred, or received as radiation." ;
    qudt:symbol "Q" ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy ;
    skos:closeMatch quantitykind:LuminousEnergy ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Radiant_energy> .

quantitykind:VisionThreshods a qudt:QuantityKind ;
    rdfs:label "Vision Threshods"@en ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\overline{T_v}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Vision Threshods\" is the thresholds of sensitivity of the eye." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Absolute_threshold#Vision> .

quantitykind:VolumeStrain a qudt:QuantityKind ;
    rdfs:label "Volume Strain"@en ;
    dcterms:description "Volume, or volumetric, Strain, or dilatation (the relative variation of the volume) is the trace of the tensor \\(\\vartheta\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:DeciB_M,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Deformation_(mechanics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\vartheta = \\frac{\\Delta V}{V_0}\\), where \\(\\Delta V\\) is the increase in volume and \\(V_0\\) is the volume in a reference state to be specified."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\vartheta\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Strain .

quantitykind:Vorticity a qudt:QuantityKind ;
    rdfs:label "Vorticity"@en ;
    qudt:applicableUnit unit:DEG-PER-HR,
        unit:DEG-PER-MIN,
        unit:DEG-PER-SEC,
        unit:PlanckFrequency_Ang,
        unit:RAD-PER-HR,
        unit:RAD-PER-MIN,
        unit:RAD-PER-SEC,
        unit:REV-PER-HR,
        unit:REV-PER-MIN,
        unit:REV-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:latexSymbol "\\(\\omega\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "In the simplest sense, vorticity is the tendency for elements of a fluid to \"spin.\" More formally, vorticity can be related to the amount of \"circulation\" or \"rotation\" (or more strictly, the local angular rate of rotation) in a fluid. The average vorticity in a small region of fluid flow is equal to the circulation C around the boundary of the small region, divided by the area A of the small region. Mathematically, vorticity is a vector field and is defined as the curl of the velocity field." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:AngularVelocity .

quantitykind:WarmReceptorThreshold a qudt:QuantityKind ;
    rdfs:label "Warm Receptor Threshold"@en ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\overline{T_w}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Warm Receptor Threshold\" is the threshold of warm-sensitive free nerve-ending." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:WaterHorsepower a qudt:QuantityKind ;
    rdfs:label "Water Horsepower"@en ;
    dcterms:description "No pump can convert all of its mechanical power into water power. Mechanical power is lost in the pumping process due to friction losses and other physical losses. It is because of these losses that the horsepower going into the pump has to be greater than the water horsepower leaving the pump. The efficiency of any given pump is defined as the ratio of the water horsepower out of the pump compared to the mechanical horsepower into the pump."^^qudt:LatexString ;
    qudt:applicableUnit unit:BAR-L-PER-SEC,
        unit:BAR-M3-PER-SEC,
        unit:BTU_IT-PER-HR,
        unit:BTU_IT-PER-SEC,
        unit:ERG-PER-SEC,
        unit:FT-LB_F-PER-HR,
        unit:FT-LB_F-PER-MIN,
        unit:FT-LB_F-PER-SEC,
        unit:GigaW,
        unit:HP,
        unit:HP-PER-M,
        unit:HP-PER-V,
        unit:HP_Boiler,
        unit:HP_Brake,
        unit:HP_Electric,
        unit:HP_Metric,
        unit:J-PER-HR,
        unit:J-PER-SEC,
        unit:KiloCAL-PER-MIN,
        unit:KiloCAL-PER-SEC,
        unit:KiloW,
        unit:MegaJ-PER-SEC,
        unit:MegaPA-L-PER-SEC,
        unit:MegaPA-M3-PER-SEC,
        unit:MegaW,
        unit:MicroW,
        unit:MilliBAR-L-PER-SEC,
        unit:MilliBAR-M3-PER-SEC,
        unit:MilliW,
        unit:NanoW,
        unit:PA-L-PER-SEC,
        unit:PA-M3-PER-SEC,
        unit:PSI-IN3-PER-SEC,
        unit:PSI-M3-PER-SEC,
        unit:PSI-YD3-PER-SEC,
        unit:PicoW,
        unit:PlanckPower,
        unit:TON_FG,
        unit:TeraW,
        unit:W ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:informativeReference "https://www.uaex.edu/environment-nature/water/docs/IrrigSmart-3241-A-Understanding-water-horsepower.pdf"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Power .

quantitykind:Wavelength a qudt:QuantityKind ;
    rdfs:label "Wavelength"@en ;
    dcterms:description "For a monochromatic wave, \"wavelength\" is the distance between two successive points in a direction perpendicular to the wavefront where at a given instant the phase differs by \\(2\\pi\\). The wavelength of a sinusoidal wave is the spatial period of the wave—the distance over which the wave's shape repeats. The SI unit of wavelength is the meter."^^qudt:LatexString ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Wavelength"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\lambda = \\frac{c}{\\nu}\\), where \\(\\lambda\\) is the wave length, \\(\\nu\\) is the frequency, and \\(c\\) is the speed of light in the medium."^^qudt:LatexString ;
    qudt:symbol "λ" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:Wavenumber a qudt:QuantityKind ;
    rdfs:label "Wavenumber"@en ;
    qudt:applicableUnit unit:DPI,
        unit:KY,
        unit:PER-ANGSTROM,
        unit:PER-CentiM,
        unit:PER-M ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Wavenumber"^^xsd:anyURI ;
    qudt:latexDefinition """\\(\\sigma = \\frac{\\nu}{c}\\), where \\(\\sigma\\) is the wave number, \\(\\nu\\) is the frequency, and \\(c\\) is the speed of light in the medium.

Or:

\\(k = \\frac{2\\pi}{\\lambda}= \\frac{2\\pi\\upsilon}{\\upsilon_p}=\\frac{\\omega}{\\upsilon_p}\\), where \\(\\upsilon\\) is the frequency of the wave, \\(\\lambda\\) is the wavelength, \\(\\omega = 2\\pi \\upsilon\\) is the angular frequency of the wave, and \\(\\upsilon_p\\) is the phase velocity of the wave."""^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\sigma\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Wavenumber\" is the spatial frequency of a wave - the number of waves that exist over a specified distance. More formally, it is the reciprocal of the wavelength. It is also the magnitude of the wave vector. Light passing through different media keeps its frequency, but not its wavelength or wavenumber. The unit for wavenumber commonly used in spectroscopy is centimetre to power minus one, PER-CM, rather than metre to power minus one, PER-M." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:AngularWavenumber ;
    skos:broader quantitykind:InverseLength .

quantitykind:WebTime a qudt:QuantityKind ;
    rdfs:label "Web Time"@en ;
    rdfs:comment "Web Time" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:WebTimeAveragePressure a qudt:QuantityKind ;
    rdfs:label "Web Time Average Pressure"@en ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CM_H2O,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Pressure .

quantitykind:WebTimeAverageThrust a qudt:QuantityKind ;
    rdfs:label "Web Time Average Thrust"@en ;
    qudt:applicableUnit unit:DYN,
        unit:KIP_F,
        unit:KiloGM_F,
        unit:KiloN,
        unit:KiloP,
        unit:KiloPOND,
        unit:LB_F,
        unit:MegaLB_F,
        unit:MegaN,
        unit:MicroN,
        unit:MilliN,
        unit:N,
        unit:OZ_F,
        unit:PDL,
        unit:PlanckForce,
        unit:TON_F_US ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    rdfs:comment "Web Time Avg Thrust (Mlbf)" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Thrust .

quantitykind:Weight a qudt:QuantityKind ;
    rdfs:label "Weight"@en ;
    qudt:applicableUnit unit:DYN,
        unit:KIP_F,
        unit:KiloGM_F,
        unit:KiloN,
        unit:KiloP,
        unit:KiloPOND,
        unit:LB_F,
        unit:MegaLB_F,
        unit:MegaN,
        unit:MicroN,
        unit:MilliN,
        unit:N,
        unit:OZ_F,
        unit:PDL,
        unit:PlanckForce,
        unit:TON_F_US ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Weight"^^xsd:anyURI ;
    qudt:plainTextDescription "The force with which a body is attracted toward an astronomical body.  Or, the product of the mass of a body and the acceleration acting on a body.  In a dynamic situation, the weight can be a multiple of that under resting conditions. Weight also varies on other planets in accordance with their gravity." ;
    qudt:symbol "bold letter W" ;
    qudt:url "http://en.wikipedia.org/wiki/Weight"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Force .

quantitykind:Width a qudt:QuantityKind ;
    rdfs:label "Width"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:plainTextDescription "\"Width\" is the middle of three dimensions: length, width, thickness." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:WorkFunction a qudt:QuantityKind ;
    rdfs:label "Work Function"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Work_function"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\Phi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Work Function\" is the energy difference between an electron at rest at infinity and an electron at a certain energy level. The minimum energy (usually measured in electronvolts) needed to remove an electron from a solid to a point immediately outside the solid surface (or energy needed to move an electron from the Fermi level into vacuum)." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

sou:SOU_ASU a qudt:SystemOfUnits ;
    rdfs:label "Astronomical System of Units (deprecated URI)" ;
    rdfs:seeAlso sou:ASU ;
    owl:deprecated true .

sou:SOU_CGS a qudt:SystemOfUnits ;
    rdfs:label "CGS System of Units (deprecated URI)" ;
    rdfs:seeAlso sou:CGS ;
    owl:deprecated true .

sou:SOU_CGS-EMU a qudt:SystemOfUnits ;
    rdfs:label "CGS-EMU System of Units (deprecated URI)" ;
    rdfs:seeAlso sou:CGS-EMU ;
    owl:deprecated true .

sou:SOU_CGS-ESU a qudt:SystemOfUnits ;
    rdfs:label "CGS-ESU System of Units (deprecated URI)" ;
    rdfs:seeAlso sou:CGS-ESU ;
    owl:deprecated true .

sou:SOU_CGS-GAUSS a qudt:SystemOfUnits ;
    rdfs:label "CGS-Gauss System of Units (deprecated URI)" ;
    rdfs:seeAlso sou:CGS-GAUSS ;
    owl:deprecated true .

sou:SOU_IMPERIAL a qudt:SystemOfUnits ;
    rdfs:label "Imperial System of Units (deprecated URI)" ;
    rdfs:seeAlso sou:IMPERIAL ;
    owl:deprecated true .

sou:SOU_PLANCK a qudt:SystemOfUnits ;
    rdfs:label "Planck System of Units (deprecated URI)" ;
    rdfs:seeAlso sou:PLANCK ;
    owl:deprecated true .

sou:SOU_SI a qudt:SystemOfUnits ;
    rdfs:label "SI System of Units (deprecated URI)" ;
    rdfs:seeAlso sou:SI ;
    owl:deprecated true .

sou:SOU_USCS a qudt:SystemOfUnits ;
    rdfs:label "US Customary System of Units (deprecated URI)" ;
    rdfs:seeAlso sou:USCS ;
    owl:deprecated true .

unit:CentiM2-PER-CentiM3 a qudt:Unit ;
    rdfs:label "Square centimetres per cubic centimetre"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 100.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:ucumCode "cm2.cm-3"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG-PER-M a qudt:Unit ;
    rdfs:label "Degrees per metre"@en ;
    dcterms:description "A change of angle in one SI unit of length."@en ;
    qudt:conversionMultiplier 0.0174532925199433 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:ucumCode "deg.m-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG_C-KiloGM-PER-M2 a qudt:Unit ;
    rdfs:label "Degrees Celsius kilogram per square metre"@en ;
    dcterms:description "Derived unit for the product of the temperature in degrees Celsius and the mass density of a medium, integrated over vertical depth or height in metres."@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H1T0D0 ;
    qudt:ucumCode "Cel.kg.m-2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG_C-PER-M a qudt:Unit ;
    rdfs:label "Degrees Celsius per metre"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H1T0D0 ;
    qudt:ucumCode "Cel.m-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG_C2-PER-SEC a qudt:Unit ;
    rdfs:label "Square Degrees Celsius per second"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H2T-1D0 ;
    qudt:ucumCode "K2.s-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GM-PER-CentiM2-YR a qudt:Unit ;
    rdfs:label "Grams per square centimetre per year"@en ;
    dcterms:description "A rate of change of 0.001 of the SI unit of mass over 0.00001 of the SI unit of area in a period of an average calendar year (365.25 days)"@en ;
    qudt:conversionMultiplier 0.000000316880878140289 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T-1D0 ;
    qudt:ucumCode "g.cm-2.a-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:K-M-PER-SEC a qudt:Unit ;
    rdfs:label "Kelvin metres per second"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H1T-1D0 ;
    qudt:ucumCode "K.m.s-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:K-M2-PER-KiloGM-SEC a qudt:Unit ;
    rdfs:label "Kelvin square metres per kilogram per second"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M-1H1T-1D0 ;
    qudt:ucumCode "K.m2.kg-1.s-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:K-PA-PER-SEC a qudt:Unit ;
    rdfs:label "Kelvin Pascals per second"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H1T-3D0 ;
    qudt:ucumCode "K.Pa.s-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:K-PER-M a qudt:Unit ;
    rdfs:label "Degrees Kelvin per metre"@en,
        "Kelvins per metre"@en ;
    dcterms:description "A change of temperature on the Kelvin temperature scale in one SI unit of length."@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H1T0D0 ;
    qudt:ucumCode "K.m-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:K2 a qudt:Unit ;
    rdfs:label "Square Kelvin"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H2T0D0 ;
    qudt:ucumCode "K2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-PER-M3-SEC a qudt:Unit ;
    rdfs:label "Kilograms per cubic metre per second"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T-1D0 ;
    qudt:ucumCode "kg.m-3.s-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM2-PER-SEC2 a qudt:Unit ;
    rdfs:label "Square Kilograms per square second"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M2H0T-2D0 ;
    qudt:ucumCode "kg2.s-2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM_F-M-PER-SEC a qudt:Unit ;
    rdfs:label "Kilogram?force Metre Per Second"@en,
        "Kilogram?force Meter Per Second"@en-us ;
    qudt:conversionMultiplier 9.80665 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:iec61360Code "0112/2///62720#UAB154" ;
    qudt:plainTextDescription "product of the SI base unit metre and the unit kilogram-force according to the Anglo-American and Imperial system of units divided by the SI base unit second" ;
    qudt:ucumCode "kgf.m.s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B39" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M2-HZ2 a qudt:Unit ;
    rdfs:label "Square Metres square Hertz"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:ucumCode "m2.Hz2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M2-HZ3 a qudt:Unit ;
    rdfs:label "Square metres cubic Hertz"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-3D0 ;
    qudt:ucumCode "m2.Hz3"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M2-HZ4 a qudt:Unit ;
    rdfs:label "Square metres Hertz^4"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-4D0 ;
    qudt:ucumCode "m2.Hz4"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M2-PER-HZ a qudt:Unit ;
    rdfs:label "Square metres per Hertz"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T1D0 ;
    qudt:ucumCode "m2.Hz-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M2-PER-HZ-DEG a qudt:Unit ;
    rdfs:label "Square metres per Hertz per degree"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 57.2957795130823 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T1D0 ;
    qudt:ucumCode "m2.Hz-1.deg-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M2-PER-HZ2 a qudt:Unit ;
    rdfs:label "Square metres per square Hertz"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T2D0 ;
    qudt:ucumCode "m2.Hz-2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M2-PER-SEC2 a qudt:Unit ;
    rdfs:label "Square metres per square second"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:ucumCode "m2.s-2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M2-SEC-PER-RAD a qudt:Unit ;
    rdfs:label "Square metre seconds per radian"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T1D0 ;
    qudt:ucumCode "m2.s.rad-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M4-PER-SEC a qudt:Unit ;
    rdfs:label "Metres to the power four per second"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L4I0M0H0T-1D0 ;
    qudt:ucumCode "m4.s-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MOL-PER-GM-HR a qudt:Unit ;
    rdfs:label "Moles per gram per hour"@en ;
    dcterms:description "SI unit of the quantity of matter per SI unit of mass per unit of time expressed in hour."@en ;
    qudt:conversionMultiplier 0.277777777777778 ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M-1H0T-1D0 ;
    qudt:ucumCode "mol.g-1.h-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MOL-PER-M2 a qudt:Unit ;
    rdfs:label "Moles per square metre"@en ;
    dcterms:description "SI unit of quantity of matter per SI unit area."@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A1E0L-2I0M0H0T0D0 ;
    qudt:ucumCode "mol.m-2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MOL-PER-M2-DAY a qudt:Unit ;
    rdfs:label "Moles per square metre per day" ;
    dcterms:description "quantity of matter per unit area per unit of time."@en ;
    qudt:conversionMultiplier 0.0000115740740740741 ;
    qudt:hasDimensionVector qkdv:A1E0L-2I0M0H0T-1D0 ;
    qudt:ucumCode "mol.m-2.d-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MOL-PER-M2-SEC a qudt:Unit ;
    rdfs:label "Moles per square metre per second"@en ;
    dcterms:description "SI unit of quantity of matter per SI unit area per SI unit of time."@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A1E0L-2I0M0H0T-1D0 ;
    qudt:ucumCode "mol.m-2.s-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MOL-PER-M2-SEC-M a qudt:Unit ;
    rdfs:label "Moles per square metre per second per metre"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T-1D0 ;
    qudt:ucumCode "mol.m-2.s-1.m-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MOL-PER-M2-SEC-M-SR a qudt:Unit ;
    rdfs:label "Moles per square metre per second per metre per steradian"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T-1D0 ;
    qudt:ucumCode "mol.m-2.s-1.m-1.sr-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MOL-PER-M2-SEC-SR a qudt:Unit ;
    rdfs:label "Moles per square metre per second per steradian"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A1E0L-2I0M0H0T-1D0 ;
    qudt:ucumCode "mol.m-2.s-1.sr-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MOL-PER-M3-SEC a qudt:Unit ;
    rdfs:label "Moles per cubic metre per second"@en ;
    dcterms:description "SI unit of quantity of matter per SI unit volume per SI unit of time."@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T-1D0 ;
    qudt:ucumCode "mol.m-3.s-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MOL-PER-MOL a qudt:Unit ;
    rdfs:label "Moles per mole"@en ;
    dcterms:description "Unavailable."@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvDenominator qkdv:A1E0L0I0M0H0T0D0 ;
    qudt:qkdvNumerator qkdv:A1E0L0I0M0H0T0D0 ;
    qudt:ucumCode "mol.mol-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroGAL-PER-M a qudt:Unit ;
    rdfs:label "MicroGals per metre"@en ;
    dcterms:description "A rate of change of one millionth part of a unit of gravitational acceleration equal to one centimetre per second per second over a distance of one metre."@en ;
    qudt:conversionMultiplier 0.00000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-2D0 ;
    qudt:ucumCode "uGal.m-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroGM-PER-L-HR a qudt:Unit ;
    rdfs:label "Micrograms per litre per hour"@en ;
    dcterms:description "A rate of change of mass of a measurand equivalent to 10^-9 kilogram (the SI unit of mass) per litre volume of matrix over a period of 1 hour."@en ;
    qudt:conversionMultiplier 0.000000000277777777777778 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T-1D0 ;
    qudt:ucumCode "ug.L-1.h-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroGM-PER-M2-DAY a qudt:Unit ;
    rdfs:label "Micrograms per square metre per day"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.0000000000000115740740740741 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T-1D0 ;
    qudt:ucumCode "ug.m-2.d-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroGM-PER-M3-HR a qudt:Unit ;
    rdfs:label "Micrograms per cubic metre per hour"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.000000000000277777777777778 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T-1D0 ;
    qudt:ucumCode "ug.m-3.h-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroM-PER-L-DAY a qudt:Unit ;
    rdfs:label "Micromoles per litre per day"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.0000000115740740740741 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M0H0T-1D0 ;
    qudt:ucumCode "um.L-1.d-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroM-PER-MilliL a qudt:Unit ;
    rdfs:label "Square microns per millilitre"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M0H0T0D0 ;
    qudt:ucumCode "um2.mL-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroMOL-PER-L-HR a qudt:Unit ;
    rdfs:label "Micromoles per litre per hour"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.000000277777777777778 ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T-1D0 ;
    qudt:ucumCode "umol.L-1.h-1"^^qudt:UCUMcs,
        "umol/L/h"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroMOL-PER-M2 a qudt:Unit ;
    rdfs:label "Micromoles per square metre"@en ;
    dcterms:description "One part per 10**6 (million) of the SI unit of quantity of matter (the mole) per SI unit area."@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A1E0L-2I0M0H0T0D0 ;
    qudt:ucumCode "umol.m-2"^^qudt:UCUMcs,
        "umol/m2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroMOL-PER-M2-DAY a qudt:Unit ;
    rdfs:label "Micromoles per square metre per day"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.0000000000115740740740741 ;
    qudt:hasDimensionVector qkdv:A1E0L-2I0M0H0T-1D0 ;
    qudt:ucumCode "umol.m-2.d-1"^^qudt:UCUMcs,
        "umol/m2/d"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroMOL-PER-M2-HR a qudt:Unit ;
    rdfs:label "Micromoles per square metre per hour"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.000000000277777777777778 ;
    qudt:hasDimensionVector qkdv:A1E0L-2I0M0H0T-1D0 ;
    qudt:ucumCode "umol.m-2.h-1"^^qudt:UCUMcs,
        "umol/m2/h"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroMOL-PER-MOL a qudt:Unit ;
    rdfs:label "Micromoles per mole"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvDenominator qkdv:A1E0L0I0M0H0T0D0 ;
    qudt:qkdvNumerator qkdv:A1E0L0I0M0H0T0D0 ;
    qudt:ucumCode "umol.mol-1"^^qudt:UCUMcs,
        "umol/mol"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroMOL-PER-MicroMOL-DAY a qudt:Unit ;
    rdfs:label "Micromole per micromole of biomass per day"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.0000115740740740741 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:ucumCode "umol.umol-1.d-1"^^qudt:UCUMcs,
        "umol/umol/d"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliBQ-PER-M2-DAY a qudt:Unit ;
    rdfs:label "Millibecquerels per square metre per day"@en ;
    dcterms:description "One radioactive disintegration per thousand seconds in material passing through an area of one square metre during a period of one day (86400 seconds)."@en ;
    qudt:conversionMultiplier 0.0000000115740740740741 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M0H0T-2D0 ;
    qudt:ucumCode "mBq.m-2.d-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliGAL-PER-MO a qudt:Unit ;
    rdfs:label "MilliGals per month"@en ;
    dcterms:description "A rate of change of one millionth part of a unit of gravitational acceleration equal to one centimetre per second per second over a time duration of 30.4375 days or 2629800 seconds."@en ;
    qudt:conversionMultiplier 0.000000000380257053768347 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-3D0 ;
    qudt:ucumCode "mGal.mo-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliGM-PER-M3-DAY a qudt:Unit ;
    rdfs:label "Milligrams per cubic metre per day"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.0000000000115740740740741 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T-1D0 ;
    qudt:ucumCode "mg.m-3.d-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliGM-PER-M3-HR a qudt:Unit ;
    rdfs:label "Milligrams per cubic metre per hour"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.000000000277777777777778 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T-1D0 ;
    qudt:ucumCode "mg.m-3.h-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliGM-PER-M3-SEC a qudt:Unit ;
    rdfs:label "Milligrams per cubic metre per second"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T-1D0 ;
    qudt:ucumCode "mg.m-3.s-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliL-PER-M2-DAY a qudt:Unit ;
    rdfs:label "Millilitres per square metre per day"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.0000000000115740740740741 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:ucumCode "mL.m-2.d-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliMOL-PER-M2 a qudt:Unit ;
    rdfs:label "Millimoles per square metre"@en ;
    dcterms:description "Unavailable."@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A1E0L-2I0M0H0T0D0 ;
    qudt:ucumCode "mmol.m-2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliMOL-PER-M2-DAY a qudt:Unit ;
    rdfs:label "Millimoles per square metre per day"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.0000000115740740740741 ;
    qudt:hasDimensionVector qkdv:A1E0L-2I0M0H0T-1D0 ;
    qudt:ucumCode "mmol.m-2.d-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliMOL-PER-M2-SEC a qudt:Unit ;
    rdfs:label "Millimoles per square metre per second"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A1E0L-2I0M0H0T-1D0 ;
    qudt:ucumCode "mmol.m-2.s-1"^^qudt:UCUMcs,
        "mmol/m2/s1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliMOL-PER-M3-DAY a qudt:Unit ;
    rdfs:label "Millimoles per cubic metre per day"@en ;
    dcterms:description "Unavailable."@en ;
    qudt:conversionMultiplier 0.0000000115740740740741 ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T-1D0 ;
    qudt:ucumCode "mmol.m-3.d-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliMOL-PER-MOL a qudt:Unit ;
    rdfs:label "Millimoles per mole"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvDenominator qkdv:A1E0L0I0M0H0T0D0 ;
    qudt:qkdvNumerator qkdv:A1E0L0I0M0H0T0D0 ;
    qudt:ucumCode "mmol.mol-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C95" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliRAD_R-PER-HR a qudt:Unit ;
    rdfs:label "Millirads per hour"@en ;
    dcterms:description "One thousandth part of an absorbed ionizing radiation dose equal to 100 ergs per gram of irradiated material received per hour."@en ;
    qudt:conversionMultiplier 0.000000277777777777778 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-3D0 ;
    qudt:ucumCode "mRAD.h-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliW-PER-CentiM2-MicroM-SR a qudt:Unit ;
    rdfs:label "Milliwatts per square centimetre per micrometre per steradian"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 10000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-3D0 ;
    qudt:ucumCode "mW.cm-2.um-1.sr-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliW-PER-M2-NanoM a qudt:Unit ;
    rdfs:label "Milliwatts per square metre per nanometre"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-3D0 ;
    qudt:ucumCode "mW.m-2.nm-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliW-PER-M2-NanoM-SR a qudt:Unit ;
    rdfs:label "Milliwatts per square metre per nanometre per steradian"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-3D0 ;
    qudt:ucumCode "mW.m-2.nm-1.sr-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:N-PER-M3 a qudt:Unit ;
    rdfs:label "Newtons per cubic metre"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T-2D0 ;
    qudt:ucumCode "N.m-3"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NUM-PER-CentiM-KiloYR a qudt:Unit ;
    rdfs:label "Number per square centimetre per thousand years"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.000000316880878140289 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T-1D0 ;
    qudt:ucumCode "{#}.cm-2.ka-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NUM-PER-GM a qudt:Unit ;
    rdfs:label "Number per gram"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-1H0T0D0 ;
    qudt:ucumCode "{#}.g-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NUM-PER-HectoGM a qudt:Unit ;
    rdfs:label "Number per 100 grams"@en ;
    dcterms:description "Count of an entity or phenomenon occurrence in one 10th of the SI unit of mass (kilogram)."@en ;
    qudt:conversionMultiplier 10.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-1H0T0D0 ;
    qudt:ucumCode "{#}.hg-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NUM-PER-M a qudt:Unit ;
    rdfs:label "Number per metre"@en ;
    dcterms:description "Unavailable."@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:ucumCode "{#}.m-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NUM-PER-MilliGM a qudt:Unit ;
    rdfs:label "Number per milligram"@en ;
    dcterms:description "Count of an entity or phenomenon occurrence in one millionth of the SI unit of mass (kilogram)."@en ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-1H0T0D0 ;
    qudt:ucumCode "{#}.mg-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NanoMOL-PER-CentiM3-HR a qudt:Unit ;
    rdfs:label "Nanomoles per cubic centimetre per hour"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.000000277777777777778 ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T-1D0 ;
    qudt:ucumCode "nmol.cm-3.h-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NanoMOL-PER-L-DAY a qudt:Unit ;
    rdfs:label "Nanomoles per litre per day"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.0000000000115740740740741 ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T-1D0 ;
    qudt:ucumCode "nmol.L-1.d-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NanoMOL-PER-L-HR a qudt:Unit ;
    rdfs:label "Nanomoles per litre per hour"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.000000000277777777777778 ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T-1D0 ;
    qudt:ucumCode "nmol.L-1.h-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NanoMOL-PER-M2-DAY a qudt:Unit ;
    rdfs:label "Nanomoles per square metre per day"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.0000000000000115740740740741 ;
    qudt:hasDimensionVector qkdv:A1E0L-2I0M0H0T-1D0 ;
    qudt:ucumCode "nmol.m-2.d-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NanoMOL-PER-MicroGM-HR a qudt:Unit ;
    rdfs:label "Nanomoles per microgram per hour"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.000277777777777778 ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M-1H0T-1D0 ;
    qudt:ucumCode "nmol.ug-1.h-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NanoMOL-PER-MicroMOL a qudt:Unit ;
    rdfs:label "Nanomoles per micromole"@en ;
    dcterms:description "Unavailable."@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvDenominator qkdv:A1E0L0I0M0H0T0D0 ;
    qudt:qkdvNumerator qkdv:A1E0L0I0M0H0T0D0 ;
    qudt:ucumCode "nmol.umol-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NanoMOL-PER-MicroMOL-DAY a qudt:Unit ;
    rdfs:label "Nanomoles per micromole per day"@en ;
    dcterms:description "Unavailable."@en ;
    qudt:conversionMultiplier 0.0000000115740740740741 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D1 ;
    qudt:ucumCode "nmol.umol-1.d-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PA-M a qudt:Unit ;
    rdfs:label "Pascal metres"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:ucumCode "Pa.m"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PA-M-PER-SEC a qudt:Unit ;
    rdfs:label "Pascal metres per second"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:ucumCode "Pa.m.s-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PA-M-PER-SEC2 a qudt:Unit ;
    rdfs:label "Pascal metres per square second"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-4D0 ;
    qudt:ucumCode "Pa.m.s-2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PA2-PER-SEC2 a qudt:Unit ;
    rdfs:label "Square pascal per square second"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M2H0T-6D0 ;
    qudt:ucumCode "Pa2.s-2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-GM a qudt:Unit ;
    rdfs:label "Reciprocal gram"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-1H0T0D0 ;
    qudt:ucumCode "g-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-M-NanoM a qudt:Unit ;
    rdfs:label "Reciprocal metre per nanometre"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1000000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M0H0T0D0 ;
    qudt:ucumCode "m-1.nm-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-M-NanoM-SR a qudt:Unit ;
    rdfs:label "Reciprocal metre per nanometre per steradian"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1000000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M0H0T0D0 ;
    qudt:ucumCode "m-1.nm-1.sr-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-M-SEC a qudt:Unit ;
    rdfs:label "Reciprocal metre per second"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T-1D0 ;
    qudt:ucumCode "m-1.s-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-M-SR a qudt:Unit ;
    rdfs:label "Reciprocal metre per steradian"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:ucumCode "m-1.sr-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-MicroMOL-L a qudt:Unit ;
    rdfs:label "Reciprocal micromole per litre"@en ;
    dcterms:description "Units used to describe the sensitivity of detection of a spectrophotometer."@en ;
    qudt:conversionMultiplier 1000000000.0 ;
    qudt:hasDimensionVector qkdv:A-1E0L-3I0M0H0T0D0 ;
    qudt:ucumCode "umol-1.L-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-PA-SEC a qudt:Unit ;
    rdfs:label "Reciprocal Pascal per second"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M-1H0T1D0 ;
    qudt:ucumCode "Pa-1.s-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-SEC2 a qudt:Unit ;
    rdfs:label "Reciprocal square second"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-2D0 ;
    qudt:ucumCode "s-2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-SR a qudt:Unit ;
    rdfs:label "Reciprocal steradian"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:ucumCode "sr-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PERCENT-PER-M a qudt:Unit ;
    rdfs:label "Percent per metre"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:ucumCode "%.m-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PH a qudt:Unit ;
    rdfs:label "Acidity"@en ;
    dcterms:description "the negative decadic logarithmus of the concentration of free protons (or hydronium ions) expressed in 1 mol/l."@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:ucumCode "[pH]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L53" ;
    rdfs:comment "Unsure about dimensionality of pH; conversion requires a log function not just a multiplier"@en ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PPTH-PER-HR a qudt:Unit ;
    rdfs:label "Parts per thousand per hour"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.000000277777777777778 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:ucumCode "[ppth].h-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PPTR_VOL a qudt:Unit ;
    rdfs:label "Parts per trillion by volume"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.000000000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:ucumCode "[pptr]{vol}"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PSU a qudt:Unit ;
    rdfs:label "Practical salinity unit" ;
    dcterms:description "Practical salinity scale 1978 (PSS-78) is used for ionic content of seawater determined by electrical conductivity. Salinities measured using PSS-78 do not have units, but are approximately scaled to parts-per-thousand for the valid range. The suffix psu or PSU (denoting practical salinity unit) is sometimes added to PSS-78 measurement values. The addition of PSU as a unit after the value is \"formally incorrect and strongly discouraged\"." ;
    dcterms:source <https://unesdoc.unesco.org/ark:/48223/pf0000047932> ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    rdfs:seeAlso unit:PPTH,
        <https://en.wikipedia.org/wiki/Salinity#PSU> .

unit:PicoA-PER-MicroMOL-L a qudt:Unit ;
    rdfs:label "Picoamps per micromole per litre"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A-1E1L-3I0M0H0T0D0 ;
    qudt:ucumCode "pA.umol-1.L-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PicoMOL-PER-L-DAY a qudt:Unit ;
    rdfs:label "Picomoles per litre per day"@en ;
    dcterms:description "A change in the quantity of matter of 10^-12 moles in the SI unit of volume scaled by 10^-3 over a period of 86400 seconds."@en ;
    qudt:conversionMultiplier 0.0000000000000115740740740741 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T-1D0 ;
    qudt:ucumCode "pmol.L-1.d-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PicoMOL-PER-L-HR a qudt:Unit ;
    rdfs:label "Picomoles per litre per hour"@en ;
    dcterms:description "A change in the quantity of matter of 10^-12 moles in the SI unit of volume scaled by 10^-3 over a period of 3600 seconds."@en ;
    qudt:conversionMultiplier 0.000000000000277777777777778 ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T-1D0 ;
    qudt:ucumCode "pmol.L-1.h-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PicoMOL-PER-M-W-SEC a qudt:Unit ;
    rdfs:label "Picomoles per metre per watt per second"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.000000000001 ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M-1H0T2D0 ;
    qudt:ucumCode "pmol.m-1.W-1.s-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PicoMOL-PER-M2-DAY a qudt:Unit ;
    rdfs:label "Picomoles per square metre per day"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.0000000000000000115740740740741 ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T-1D0 ;
    qudt:ucumCode "pmol.m-2.d-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PicoMOL-PER-M3-SEC a qudt:Unit ;
    rdfs:label "Picomoles per cubic metre per second"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.000000000001 ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T-1D0 ;
    qudt:ucumCode "pmol.m-3.s-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PicoW-PER-CentiM2-L a qudt:Unit ;
    rdfs:label "Picowatts per square centimetre per litre"@en ;
    dcterms:description "The power (scaled by 10^-12) per SI unit of area (scaled by 10^-4) produced per SI unit of volume (scaled by 10^-3)."@en ;
    qudt:conversionMultiplier 0.00001 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T-3D0 ;
    qudt:ucumCode "pW.cm-2.L-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SEC-PER-M a qudt:Unit ;
    rdfs:label "Seconds per metre"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T1D0 ;
    qudt:ucumCode "s.m-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:W-M-PER-M2-SR a qudt:Unit ;
    rdfs:label "Watts per square metre per inverse metre per steradian"@en ;
    dcterms:description "The power per unit area of radiation of a given wavenumber illuminating a target at a given incident angle."@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-3D0 ;
    qudt:ucumCode "W.m-2.m.sr-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:W-PER-M a qudt:Unit ;
    rdfs:label "Watts per metre"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-3D0 ;
    qudt:ucumCode "W.m-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:W-PER-M2-M a qudt:Unit ;
    rdfs:label "Watts per square metre per metre"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-3D0 ;
    qudt:ucumCode "W.m-2.m-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:W-PER-M2-M-SR a qudt:Unit ;
    rdfs:label "Watts per square metre per metre per steradian"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-3D0 ;
    qudt:ucumCode "W.m-2.m-1.sr-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:W-PER-M2-NanoM a qudt:Unit ;
    rdfs:label "Watts per square metre per nanometre"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1000000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-3D0 ;
    qudt:ucumCode "W.m-2.nm-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:W-PER-M2-NanoM-SR a qudt:Unit ;
    rdfs:label "Watts per square metre per nanometre per steradian"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1000000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-3D0 ;
    qudt:ucumCode "W.m-2.nm-1.sr-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

sdo1:domainIncludes a owl:AnnotationProperty .

sdo1:rangeIncludes a owl:AnnotationProperty .

sp:UUID a spin:Function ;
    rdfs:label "UUID" ;
    spin:returnType rdfs:Resource ;
    spin:symbol "UUID" ;
    rdfs:comment "Returns a fresh IRI from the UUID URN scheme. Each call of UUID() returns a different UUID. It must not be the \"nil\" UUID (all zeroes). The variant and version of the UUID is implementation dependent." ;
    rdfs:subClassOf spl:URIFunctions .

sp:abs a spin:Function ;
    rdfs:label "abs" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            rdfs:comment "The input value." ] ;
    spin:symbol "abs" ;
    rdfs:comment "Returns the absolute value of arg. An error is raised if arg is not a numeric value." ;
    rdfs:seeAlso <http://www.w3.org/TR/sparql11-query/#func-abs> ;
    rdfs:subClassOf spl:MathematicalFunctions .

sp:add a spin:Function ;
    rdfs:label "add" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType rdfs:Resource ;
            rdfs:comment "the second number" ],
        [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Resource ;
            rdfs:comment "the first number" ] ;
    spin:symbol "+" ;
    rdfs:comment "Returns the arithmetic sum of its operands." ;
    rdfs:subClassOf spl:MathematicalFunctions .

sp:all a rdf:Property ;
    rdfs:label "all" ;
    rdfs:comment "Used in DROP and CLEAR." ;
    rdfs:range xsd:boolean ;
    rdfs:subPropertyOf sp:systemProperty .

sp:arg5 a rdf:Property ;
    rdfs:label "arg5" ;
    rdfs:comment "The fifth argument of a function call. Further arguments are not common in SPARQL, therefore no sp:arg6, etc are defined here. However, they can be created if needed." ;
    rdfs:subPropertyOf sp:arg .

sp:as a rdf:Property ;
    rdfs:label "as" ;
    rdfs:comment "Points to a Variable used in an AS statement such as COUNT aggregates." ;
    rdfs:range sp:Variable ;
    rdfs:subPropertyOf sp:systemProperty .

sp:bindings a rdf:Property ;
    rdfs:label "bindings" ;
    rdfs:comment "The actual bindings of a sp:Values element." ;
    rdfs:domain sp:Values ;
    rdfs:range rdf:List ;
    rdfs:subPropertyOf sp:systemProperty .

sp:bnode a spin:Function ;
    rdfs:label "bnode" ;
    spin:constraint [ a spl:Argument ;
            spl:optional true ;
            spl:predicate sp:arg1 ;
            rdfs:comment "A literal input node." ] ;
    spin:symbol "BNODE" ;
    rdfs:comment "Constructs a blank node that is distinct from all blank nodes in the dataset being queried and distinct from all blank nodes created by calls to this constructor for other query solutions. If the no argument form is used, every call results in a distinct blank node. If the form with a simple literal is used, every call results in distinct blank nodes for different simple literals, and the same blank node for calls with the same simple literal within expressions for one solution mapping. This functionality is compatible with the treatment of blank nodes in SPARQL CONSTRUCT templates." ;
    rdfs:seeAlso <http://www.w3.org/TR/sparql11-query/#func-bnode> ;
    rdfs:subClassOf spl:OntologyFunctions .

sp:ceil a spin:Function ;
    rdfs:label "ceil" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            rdfs:comment "The number to get the ceiling of." ] ;
    spin:symbol "ceil" ;
    rdfs:comment "Returns the smallest (closest to negative infinity) number with no fractional part that is not less than the value of arg. An error is raised if ?arg1 is not a numeric value." ;
    rdfs:seeAlso <http://www.w3.org/TR/sparql11-query/#func-ceil> ;
    rdfs:subClassOf spl:MathematicalFunctions .

sp:contains a spin:Function ;
    rdfs:label "contains" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType xsd:string ;
            rdfs:comment "The sub-string to search for in the input string." ],
        [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType xsd:string ;
            rdfs:comment "The input string." ] ;
    spin:symbol "CONTAINS" ;
    rdfs:comment "Returns an xsd:boolean indicating whether or not the value of ?arg1 contains (at the beginning, at the end, or anywhere within) at least one sequence of collation units that provides a minimal match to the collation units in the value of ?arg2, according to the collation that is used." ;
    rdfs:seeAlso <http://www.w3.org/TR/sparql11-query/#func-contains> ;
    rdfs:subClassOf spl:StringFunctions .

sp:day a spin:Function ;
    rdfs:label "day" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "The date or dateTime argument." ] ;
    spin:returnType xsd:integer ;
    spin:symbol "day" ;
    rdfs:comment "Extracts the day from a date/time literal." ;
    rdfs:subClassOf spl:DateFunctions .

sp:default a rdf:Property ;
    rdfs:label "default" ;
    rdfs:comment "Used in DROP and CLEAR." ;
    rdfs:range xsd:boolean ;
    rdfs:subPropertyOf sp:systemProperty .

sp:deletePattern a rdf:Property ;
    rdfs:label "delete pattern" ;
    rdfs:comment "Points to a list of sp:TripleTemplates and sp:NamedGraphs in a modify operation." ;
    rdfs:domain sp:Update ;
    rdfs:range rdf:List ;
    rdfs:subPropertyOf sp:systemProperty .

sp:distinct a rdf:Property ;
    rdfs:label "distinct" ;
    rdfs:comment "A marker property to indicate that a Select query is of type SELECT DISTINCT." ;
    rdfs:domain sp:Select ;
    rdfs:range xsd:boolean ;
    rdfs:subPropertyOf sp:systemProperty .

sp:divide a spin:Function ;
    rdfs:label "divide" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "the first operand" ],
        [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "the second operand" ] ;
    spin:returnType rdfs:Literal ;
    spin:symbol "/" ;
    rdfs:comment "Returns the arithmetic quotient of its operands." ;
    rdfs:subClassOf spl:MathematicalFunctions .

sp:document a rdf:Property ;
    rdfs:label "document" ;
    rdfs:comment "The URI of the document to load using a LOAD Update operation." ;
    rdfs:domain sp:Load ;
    rdfs:range rdfs:Resource ;
    rdfs:subPropertyOf sp:systemProperty .

sp:elements a rdf:Property ;
    rdfs:label "elements" ;
    rdfs:comment "Points to an ElementList, for example in an Optional element." ;
    rdfs:range sp:ElementList ;
    rdfs:subPropertyOf sp:systemProperty .

sp:expression a rdf:Property ;
    rdfs:label "expression" ;
    rdfs:comment "Points to an expression, for example in a Filter or Assignment." ;
    rdfs:subPropertyOf sp:systemProperty .

sp:floor a spin:Function ;
    rdfs:label "floor" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            rdfs:comment "The value to get the floor of." ] ;
    spin:symbol "floor" ;
    rdfs:comment "Returns the largest (closest to positive infinity) number with no fractional part that is not greater than the value of ?arg1. An error is raised if ?arg1 is not a numeric value." ;
    rdfs:seeAlso <http://www.w3.org/TR/sparql11-query/#func-floor> ;
    rdfs:subClassOf spl:MathematicalFunctions .

sp:from a rdf:Property ;
    rdfs:label "from" ;
    rdfs:comment "Specifies an RDF Dataset used by a Query (FROM syntax in SPARQL). Values of this property must be URI resources." ;
    rdfs:domain sp:Query ;
    rdfs:range rdfs:Resource ;
    rdfs:subPropertyOf sp:systemProperty .

sp:fromNamed a rdf:Property ;
    rdfs:label "from named" ;
    rdfs:comment "Specifies a named RDF Dataset used by a Query (FROM NAMED syntax in SPARQL). Values of this property must be URI resources." ;
    rdfs:domain sp:Query ;
    rdfs:range rdfs:Resource ;
    rdfs:subPropertyOf sp:systemProperty .

sp:graphIRI a rdf:Property ;
    rdfs:label "graph IRI" ;
    rdfs:comment "Points to graph names (IRIs) in various sp:Update operations." ;
    rdfs:range rdfs:Resource ;
    rdfs:subPropertyOf sp:systemProperty .

sp:graphNameNode a rdf:Property ;
    rdfs:label "graph name node" ;
    rdfs:comment "The name (URI or Variable) of a NamedGraph." ;
    rdfs:domain sp:NamedGraph ;
    rdfs:range rdfs:Resource ;
    rdfs:subPropertyOf sp:systemProperty .

sp:groupBy a rdf:Property ;
    rdfs:label "group by" ;
    rdfs:comment "Points from a Query to the list of GROUP BY expressions." ;
    rdfs:domain sp:Select ;
    rdfs:range rdf:List ;
    rdfs:subPropertyOf sp:systemProperty .

sp:having a rdf:Property ;
    rdfs:label "having" ;
    rdfs:comment "Points from a SELECT query to a list of HAVING expressions." ;
    rdfs:domain sp:Select ;
    rdfs:range rdf:List ;
    rdfs:subPropertyOf sp:systemProperty .

sp:hours a spin:Function ;
    rdfs:label "hours" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "The dateTime or time argument." ] ;
    spin:returnType xsd:integer ;
    spin:symbol "hours" ;
    rdfs:comment "Extracts the hours from a date/time literal." ;
    rdfs:subClassOf spl:DateFunctions .

sp:in a spin:Function ;
    rdfs:label "IN" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            rdfs:comment "The value to find." ] ;
    spin:returnType xsd:boolean ;
    spin:symbol "IN" ;
    rdfs:comment "Checks whether the value on the left (?arg1) is one of the values on the right (?arg2, ?arg3 ...)." ;
    rdfs:subClassOf spl:BooleanFunctions .

sp:insertPattern a rdf:Property ;
    rdfs:label "insert pattern" ;
    rdfs:comment "Points to a list of sp:TripleTemplates or sp:NamedGraphs in a modify command." ;
    rdfs:domain sp:Modify ;
    rdfs:range rdf:List ;
    rdfs:subPropertyOf sp:systemProperty .

sp:into a rdf:Property ;
    rdfs:label "into" ;
    rdfs:comment "The (optional) target of a LOAD Update operation." ;
    rdfs:domain sp:Load ;
    rdfs:range rdfs:Resource ;
    rdfs:subPropertyOf sp:systemProperty .

sp:iri a spin:Function ;
    rdfs:label "IRI" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType xsd:string ;
            rdfs:comment "The IRI string to convert to a resource." ] ;
    spin:returnType rdfs:Resource ;
    spin:symbol "IRI" ;
    rdfs:comment "Creates a IRI resource (node) from a given IRI string (?arg1)." ;
    rdfs:subClassOf spl:OntologyFunctions .

sp:isNumeric a spin:Function ;
    rdfs:label "is numeric" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            rdfs:comment """The node to check whether it's numeric.
""" ] ;
    spin:symbol "isNumeric" ;
    rdfs:comment "Returns true if arg1 is a numeric value. Returns false otherwise. term is numeric if it has an appropriate datatype (see the section Operand Data Types) and has a valid lexical form, making it a valid argument to functions and operators taking numeric arguments." ;
    rdfs:seeAlso <http://www.w3.org/TR/sparql11-query/#func-isNumeric> ;
    rdfs:subClassOf spl:BooleanFunctions .

sp:isURI a spin:Function ;
    rdfs:label "isURI" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            rdfs:comment "the node to check" ] ;
    spin:returnType xsd:boolean ;
    spin:symbol "isURI" ;
    rdfs:comment "Checks whether a node is a URI." ;
    rdfs:subClassOf spl:BooleanFunctions .

sp:lang a spin:Function ;
    rdfs:label "lang" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "the literal to get the language of" ] ;
    spin:returnType xsd:string ;
    spin:symbol "lang" ;
    rdfs:comment "Returns the language tag of ?arg1, if it has one. It returns \"\" if the literal has no language tag. Node that the RDF data model does not include literals with an empty language tag." ;
    rdfs:subClassOf spl:StringFunctions .

sp:langMatches a spin:Function ;
    rdfs:label "langMatches" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "the literal that is expected to have ?arg2 as language tag" ],
        [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType xsd:string ;
            rdfs:comment "the language tag that ?arg1 must have" ] ;
    spin:returnType xsd:boolean ;
    spin:symbol "langMatches" ;
    rdfs:comment "Returns true if language-tag (first argument) matches language-range (second argument) per the basic filtering scheme defined in [RFC4647] section 3.3.1." ;
    rdfs:subClassOf spl:StringFunctions .

sp:lcase a spin:Function ;
    rdfs:label "LCASE" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType xsd:string ;
            rdfs:comment "The input string." ] ;
    spin:returnType xsd:string ;
    spin:symbol "LCASE" ;
    rdfs:comment "Converts a string to lower case characters." ;
    rdfs:seeAlso <http://www.w3.org/TR/sparql11-query/#func-lcase> ;
    rdfs:subClassOf spl:StringFunctions .

sp:le a spin:Function ;
    rdfs:label "le" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "the second operand" ],
        [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "the first operand" ] ;
    spin:returnType xsd:boolean ;
    spin:symbol "<=" ;
    rdfs:comment "Returns true if ?arg1 <= ?arg2." ;
    rdfs:subClassOf spl:BooleanFunctions .

sp:limit a rdf:Property ;
    rdfs:label "limit" ;
    rdfs:comment "The LIMIT solution modifier of a Query." ;
    rdfs:domain sp:Query ;
    rdfs:range xsd:long ;
    rdfs:subPropertyOf sp:systemProperty .

sp:md5 a spin:Function ;
    rdfs:label "md5" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            rdfs:comment "The input literal." ] ;
    spin:returnType xsd:string ;
    spin:symbol "MD5" ;
    rdfs:comment "Returns the MD5 checksum, as a hex digit string, calculated on the UTF-8 representation of the simple literal or lexical form of the xsd:string. Hex digits SHOULD be in lower case." ;
    rdfs:seeAlso <http://www.w3.org/TR/sparql11-query/#func-md5> ;
    rdfs:subClassOf spl:MiscFunctions .

sp:minutes a spin:Function ;
    rdfs:label "minutes" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "The dateTime or time argument." ] ;
    spin:returnType xsd:integer ;
    spin:symbol "minutes" ;
    rdfs:comment "Extracts the minutes from a date/time literal." ;
    rdfs:subClassOf spl:DateFunctions .

sp:modMax a rdf:Property ;
    rdfs:label "mod max" ;
    rdfs:domain sp:ModPath ;
    rdfs:range xsd:integer ;
    rdfs:subPropertyOf sp:systemProperty .

sp:modMin a rdf:Property ;
    rdfs:label "mod min" ;
    rdfs:domain sp:ModPath ;
    rdfs:range xsd:integer ;
    rdfs:subPropertyOf sp:systemProperty .

sp:month a spin:Function ;
    rdfs:label "month" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "The date or dateTime argument." ] ;
    spin:returnType xsd:integer ;
    spin:symbol "month" ;
    rdfs:comment "Extracts the month from a date/time literal." ;
    rdfs:subClassOf spl:DateFunctions .

sp:mul a spin:Function ;
    rdfs:label "mul" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "the second operand" ],
        [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "the first operand" ] ;
    spin:symbol "*" ;
    rdfs:comment "Returns the arithmetic product of its operands." ;
    rdfs:subClassOf spl:MathematicalFunctions .

sp:named a rdf:Property ;
    rdfs:label "named" ;
    rdfs:comment "Used in DROP and CLEAR." ;
    rdfs:range xsd:boolean ;
    rdfs:subPropertyOf sp:systemProperty .

sp:node a rdf:Property ;
    rdfs:label "node" ;
    rdfs:domain sp:ReverseLinkPath ;
    rdfs:subPropertyOf sp:systemProperty .

sp:notIn a spin:Function ;
    rdfs:label "NOT IN" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            rdfs:comment "The value to find." ] ;
    spin:returnType xsd:boolean ;
    spin:symbol "NOT IN" ;
    rdfs:comment "Checks whether the value on the left (?arg1) is none of the values on the right (?arg2, ?arg3 ...)." ;
    rdfs:subClassOf spl:BooleanFunctions .

sp:now a spin:Function ;
    rdfs:label "now" ;
    spin:returnType xsd:dateTime ;
    spin:symbol "now" ;
    rdfs:comment "Gets the current date and time as an xsd:dateTime literal." ;
    rdfs:subClassOf spl:DateFunctions .

sp:object a rdf:Property ;
    rdfs:label "object" ;
    rdfs:comment "An RDF Node or Variable describing the object of a triple." ;
    rdfs:domain sp:Tuple ;
    rdfs:subPropertyOf sp:systemProperty .

sp:offset a rdf:Property ;
    rdfs:label "offset" ;
    rdfs:comment "The OFFSET solution modifier of a Query." ;
    rdfs:domain sp:Query ;
    rdfs:range xsd:long ;
    rdfs:subPropertyOf sp:systemProperty .

sp:orderBy a rdf:Property ;
    rdfs:label "order by" ;
    rdfs:comment "Links a query with an ORDER BY clause where the values are rdf:List containing OrderByConditions or expressions. While the domain of this property is sp:Query, only Describe and Select queries can have values of it." ;
    rdfs:domain sp:Query ;
    rdfs:range rdf:List ;
    rdfs:subPropertyOf sp:systemProperty .

sp:path a rdf:Property ;
    rdfs:label "path" ;
    rdfs:comment "Points from a TriplePath to its path." ;
    rdfs:domain sp:TriplePath ;
    rdfs:range sp:Path ;
    rdfs:subPropertyOf sp:systemProperty .

sp:path1 a rdf:Property ;
    rdfs:label "path1" ;
    rdfs:comment "The first child path of a property path. Used by sp:AltPath and sp:SeqPath." ;
    rdfs:range sp:Path ;
    rdfs:subPropertyOf sp:systemProperty .

sp:path2 a rdf:Property ;
    rdfs:label "path2" ;
    rdfs:comment "The second child path of a property path. Used by sp:AltPath and sp:SeqPath." ;
    rdfs:range sp:Path ;
    rdfs:subPropertyOf sp:systemProperty .

sp:predicate a rdf:Property ;
    rdfs:label "predicate" ;
    rdfs:comment "A resource or Variable describing the predicate of a triple." ;
    rdfs:domain sp:Triple ;
    rdfs:range rdfs:Resource ;
    rdfs:subPropertyOf sp:systemProperty .

sp:query a rdf:Property ;
    rdfs:label "query" ;
    rdfs:comment "Links a SubQuery resource with the nested Query." ;
    rdfs:domain sp:SubQuery ;
    rdfs:range sp:Query ;
    rdfs:subPropertyOf sp:systemProperty .

sp:rand a spin:Function ;
    rdfs:label "rand" ;
    spin:returnType xsd:double ;
    spin:symbol "RAND" ;
    rdfs:comment "Returns a number between 0 (inclusive) and 1.0e0 (exclusive). Different numbers can be produced every time this function is invoked. Numbers should be produced with approximately equal probability." ;
    rdfs:seeAlso <http://www.w3.org/TR/sparql11-query/#idp3722352> ;
    rdfs:subClassOf spl:MathematicalFunctions .

sp:reduced a rdf:Property ;
    rdfs:label "reduced" ;
    rdfs:comment "A property with true to indicate that a Select query has a REDUCED flag." ;
    rdfs:domain sp:Select ;
    rdfs:range xsd:boolean ;
    rdfs:subPropertyOf sp:systemProperty .

sp:replace a spin:Function ;
    rdfs:label "replace" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType xsd:string ;
            rdfs:comment """The pattern to replace.
""" ],
        [ a spl:Argument ;
            spl:optional true ;
            spl:predicate sp:arg4 ;
            spl:valueType xsd:string ;
            rdfs:comment "Additional flags for the replacement." ],
        [ a spl:Argument ;
            spl:predicate sp:arg3 ;
            spl:valueType xsd:string ;
            rdfs:comment "The replacement string." ],
        [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType xsd:string ;
            rdfs:comment "The input string." ] ;
    spin:returnType xsd:string ;
    spin:symbol "REPLACE" ;
    rdfs:comment "Replaces each non-overlapping occurrence of a regular expression pattern with a replacement string. Regular expession matching may involve modifier flags." ;
    rdfs:seeAlso <http://www.w3.org/TR/sparql11-query/#func-replace> ;
    rdfs:subClassOf spl:StringFunctions .

sp:resultNodes a rdf:Property ;
    rdfs:label "result nodes" ;
    rdfs:comment "Contains the result nodes (URI resources or Variables) of a Describe query." ;
    rdfs:domain sp:Describe ;
    rdfs:range rdf:List ;
    rdfs:subPropertyOf sp:systemProperty .

sp:resultVariables a rdf:Property ;
    rdfs:label "result variables" ;
    rdfs:comment "An rdf:List of variables that are returned by a Select query." ;
    rdfs:domain sp:Select ;
    rdfs:range rdf:List ;
    rdfs:subPropertyOf sp:systemProperty .

sp:round a spin:Function ;
    rdfs:label "round" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            rdfs:comment "The number to round." ] ;
    spin:symbol "round" ;
    rdfs:comment "Returns the number with no fractional part that is closest to the argument. If there are two such numbers, then the one that is closest to positive infinity is returned. An error is raised if ?arg1 is not a numeric value." ;
    rdfs:seeAlso <http://www.w3.org/TR/sparql11-query/#func-round> ;
    rdfs:subClassOf spl:MathematicalFunctions .

sp:seconds a spin:Function ;
    rdfs:label "seconds" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "The dateTime or time argument." ] ;
    spin:returnType xsd:integer ;
    spin:symbol "seconds" ;
    rdfs:comment "Extracts the seconds from a date/time literal." ;
    rdfs:subClassOf spl:DateFunctions .

sp:separator a rdf:Property ;
    rdfs:label "separator" ;
    rdfs:comment "Stores the separator=\"...\" value of a GROUP_CONCAT (sp:GroupConcat) aggregation." ;
    rdfs:domain sp:GroupConcat ;
    rdfs:range xsd:string ;
    rdfs:subPropertyOf sp:systemProperty .

sp:serviceURI a rdf:Property ;
    rdfs:label "service URI" ;
    rdfs:comment "Used by sp:Service to specify the URI of the SPARQL end point to invoke. Must point to a URI node." ;
    rdfs:domain sp:Service ;
    rdfs:range rdfs:Resource ;
    rdfs:subPropertyOf sp:systemProperty .

sp:sha1 a spin:Function ;
    rdfs:label "sha1" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            rdfs:comment "The input literal." ] ;
    spin:returnType xsd:string ;
    spin:symbol "SHA1" ;
    rdfs:comment "Returns the SHA1 checksum, as a hex digit string, calculated on the UTF-8 representation of the simple literal or lexical form of the xsd:string. Hex digits SHOULD be in lower case." ;
    rdfs:seeAlso <http://www.w3.org/TR/sparql11-query/#func-sha1> ;
    rdfs:subClassOf spl:MiscFunctions .

sp:sha256 a spin:Function ;
    rdfs:label "sha256" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            rdfs:comment "The input literal." ] ;
    spin:returnType xsd:string ;
    spin:symbol "SHA256" ;
    rdfs:comment "Returns the SHA256 checksum, as a hex digit string, calculated on the UTF-8 representation of the simple literal or lexical form of the xsd:string. Hex digits SHOULD be in lower case." ;
    rdfs:seeAlso <http://www.w3.org/TR/sparql11-query/#func-sha256> ;
    rdfs:subClassOf spl:MiscFunctions .

sp:sha384 a spin:Function ;
    rdfs:label "sha384" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            rdfs:comment "The input literal." ] ;
    spin:returnType xsd:string ;
    spin:symbol "SHA384" ;
    rdfs:comment "Returns the SHA384 checksum, as a hex digit string, calculated on the UTF-8 representation of the simple literal or lexical form of the xsd:string. Hex digits SHOULD be in lower case." ;
    rdfs:seeAlso <http://www.w3.org/TR/sparql11-query/#func-sha384> ;
    rdfs:subClassOf spl:MiscFunctions .

sp:sha512 a spin:Function ;
    rdfs:label "sha512" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            rdfs:comment "The input literal." ] ;
    spin:returnType xsd:string ;
    spin:symbol "SHA512" ;
    rdfs:comment "Returns the SHA512 checksum, as a hex digit string, calculated on the UTF-8 representation of the simple literal or lexical form of the xsd:string. Hex digits SHOULD be in lower case." ;
    rdfs:seeAlso <http://www.w3.org/TR/sparql11-query/#func-sha512> ;
    rdfs:subClassOf spl:MiscFunctions .

sp:silent a rdf:Property ;
    rdfs:label "silent" ;
    rdfs:range xsd:boolean ;
    rdfs:subPropertyOf sp:systemProperty .

sp:source a rdf:Property ;
    rdfs:label "source" ;
    rdfs:subPropertyOf sp:systemProperty .

sp:strafter a spin:Function ;
    rdfs:label "strafter" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType xsd:string ;
            rdfs:comment "The pattern to find within the input string." ],
        [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType xsd:string ;
            rdfs:comment "The input string." ] ;
    spin:returnType xsd:string ;
    spin:symbol "STRAFTER" ;
    rdfs:comment "Returns a literal of the same kind (simple literal, plain literal same language tag, xsd:string) as the first argument arg1. The lexical form of the result is the substring of the value of arg1 that proceeds in arg1 the first occurrence of the lexical form of arg2; otherwise the lexical form of the result is the empty string. If the lexical form of arg2 is the empty string, the lexical form of the result is the emprty string." ;
    rdfs:seeAlso <http://www.w3.org/TR/sparql11-query/#func-strafter> ;
    rdfs:subClassOf spl:StringFunctions .

sp:strbefore a spin:Function ;
    rdfs:label "strbefore" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType xsd:string ;
            rdfs:comment "The pattern to find within the input string." ],
        [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType xsd:string ;
            rdfs:comment "The input string." ] ;
    spin:returnType xsd:string ;
    spin:symbol "STRBEFORE" ;
    rdfs:comment "Returns a literal of the same kind (simple literal, plain literal same language tag, xsd:string) as the first argument arg1. The lexical form of the result is the substring of the value of arg1 that precedes in arg1 the first occurrence of the lexical form of arg2; otherwise the lexical form of the result is the empty string. If the lexical form of arg2 is the empty string, the lexical form of the result is the emprty string." ;
    rdfs:seeAlso <http://www.w3.org/TR/sparql11-query/#func-strbefore> ;
    rdfs:subClassOf spl:StringFunctions .

sp:strdt a spin:Function ;
    rdfs:label "strdt" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType xsd:string ;
            rdfs:comment "The lexical form of the new literal." ],
        [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType rdfs:Datatype ;
            rdfs:comment "The datatype of the new literal." ] ;
    spin:symbol "STRDT" ;
    rdfs:comment "Constructs a literal with lexical form and type as specified by the arguments." ;
    rdfs:seeAlso <http://www.w3.org/TR/sparql11-query/#func-strdt> ;
    rdfs:subClassOf spl:OntologyFunctions .

sp:strends a spin:Function ;
    rdfs:label "strends" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType xsd:string ;
            rdfs:comment "The input string." ],
        [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType xsd:string ;
            rdfs:comment "The sub-string that the input string is supposed to end with." ] ;
    spin:returnType xsd:boolean ;
    spin:symbol "STRENDS" ;
    rdfs:comment "Returns true if the lexical form of ?arg1 ends with the lexical form of ?arg2, otherwise it returns false." ;
    rdfs:seeAlso <http://www.w3.org/TR/sparql11-query/#func-ends> ;
    rdfs:subClassOf spl:StringFunctions .

sp:strlang a spin:Function ;
    rdfs:label "strlang" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType xsd:string ;
            rdfs:comment "The string value." ],
        [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType xsd:string ;
            rdfs:comment "The language tag, e.g. \"en-AU\"." ] ;
    spin:returnType rdf:langString ;
    spin:symbol "STRLANG" ;
    rdfs:comment "Takes a string (?arg1) and a language (?arg2) and constructs a literal with a corresponding language tag." ;
    rdfs:seeAlso <http://www.w3.org/TR/sparql11-query/#func-strlang> ;
    rdfs:subClassOf spl:StringFunctions .

sp:strstarts a spin:Function ;
    rdfs:label "strstarts" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType xsd:string ;
            rdfs:comment "The sub-string that the input string is supposed to begin with." ],
        [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType xsd:string ;
            rdfs:comment "The input string." ] ;
    spin:returnType xsd:boolean ;
    spin:symbol "STRSTARTS" ;
    rdfs:comment "Returns true if the lexical form of ?arg1 begins with the lexical form of ?arg2, otherwise it returns false." ;
    rdfs:seeAlso <http://www.w3.org/TR/sparql11-query/#func-starts> ;
    rdfs:subClassOf spl:StringFunctions .

sp:struuid a spin:Function ;
    rdfs:label "struuid" ;
    spin:returnType xsd:string ;
    spin:symbol "STRUUID" ;
    rdfs:comment "Returns a string that is the scheme specific part of UUID. That is, as a simple literal, the result of generating a UUID, converting to a simple literal and removing the initial urn:uuid:." ;
    rdfs:subClassOf spl:StringFunctions .

sp:sub a spin:Function ;
    rdfs:label "sub" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "the first operand" ],
        [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "the second operand" ] ;
    spin:symbol "-" ;
    rdfs:comment "Returns the arithmetic difference of its operands." ;
    rdfs:subClassOf spl:MathematicalFunctions .

sp:subPath a rdf:Property ;
    rdfs:label "sub path" ;
    rdfs:comment "The child path of a property path expression. This is used by ReversePath and ModPath." ;
    rdfs:subPropertyOf sp:systemProperty .

sp:subject a rdf:Property ;
    rdfs:label "subject" ;
    rdfs:comment "A resource or Variable describing the subject of a triple." ;
    rdfs:domain sp:Tuple ;
    rdfs:range rdfs:Resource ;
    rdfs:subPropertyOf sp:systemProperty .

sp:substr a spin:Function ;
    rdfs:label "substr" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType xsd:string ;
            rdfs:comment "The input string." ],
        [ a spl:Argument ;
            spl:optional true ;
            spl:predicate sp:arg3 ;
            spl:valueType xsd:integer ;
            rdfs:comment "The end index." ],
        [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType xsd:integer ;
            rdfs:comment "The start index." ] ;
    spin:returnType xsd:string ;
    spin:symbol "SUBSTR" ;
    rdfs:comment "Gets the sub-string of a given string. The index of the first character is 1." ;
    rdfs:seeAlso <http://www.w3.org/TR/sparql11-query/#func-substr> ;
    rdfs:subClassOf spl:StringFunctions .

sp:target a rdf:Property ;
    rdfs:label "target" ;
    rdfs:subPropertyOf sp:systemProperty .

sp:templates a rdf:Property ;
    rdfs:label "templates" ;
    rdfs:comment "Points to a list of TripleTemplates that form the head of a Construct query." ;
    rdfs:domain sp:Construct ;
    rdfs:range rdf:List ;
    rdfs:subPropertyOf sp:systemProperty .

sp:text a rdf:Property ;
    rdfs:label "text" ;
    rdfs:comment "Can be attached to sp:Queries to store a textual representation of the query. This can be useful for tools that do not have a complete SPIN Syntax parser available." ;
    rdfs:range xsd:string ;
    rdfs:subPropertyOf sp:systemProperty .

sp:timezone a spin:Function ;
    rdfs:label "timezone" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType xsd:dateTime ;
            rdfs:comment "The input time." ] ;
    spin:returnType xsd:duration ;
    spin:symbol "TIMEZONE" ;
    rdfs:comment "Returns the timezone part of ?arg1 as an xsd:dayTimeDuration. Raises an error if there is no timezone." ;
    rdfs:seeAlso <http://www.w3.org/TR/sparql11-query/#func-timezone> ;
    rdfs:subClassOf spl:DateFunctions .

sp:tz a spin:Function ;
    rdfs:label "tz" ;
    spin:symbol "TZ" ;
    rdfs:comment "Returns the timezone part of ?arg1 as a simple literal. Returns the empty string if there is no timezone." ;
    rdfs:seeAlso <http://www.w3.org/TR/sparql11-query/#func-tz> ;
    rdfs:subClassOf spl:DateFunctions .

sp:ucase a spin:Function ;
    rdfs:label "UCASE" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType xsd:string ;
            rdfs:comment "The input string." ] ;
    spin:returnType xsd:string ;
    spin:symbol "UCASE" ;
    rdfs:comment "Converts a string to upper case characters." ;
    rdfs:seeAlso <http://www.w3.org/TR/sparql11-query/#func-ucase> ;
    rdfs:subClassOf spl:StringFunctions .

sp:unaryMinus a spin:Function ;
    rdfs:label "unary minus" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "the operand" ] ;
    spin:symbol "-" ;
    rdfs:comment "Returns the operand ?arg1 with the sign reversed. If ?arg1 is positive, its negative is returned; if it is negative, its positive is returned." ;
    rdfs:subClassOf spl:MathematicalFunctions .

sp:unaryPlus a spin:Function ;
    rdfs:label "unary plus" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "the operand" ] ;
    spin:symbol "+" ;
    rdfs:comment "Returns the operand ?arg1 with the sign unchanged. Semantically, this operation performs no operation." ;
    rdfs:subClassOf spl:MathematicalFunctions .

sp:uri a spin:Function ;
    rdfs:label "URI" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType xsd:string ;
            rdfs:comment "The IRI string to convert to a resource." ] ;
    spin:returnType rdfs:Resource ;
    spin:symbol "URI" ;
    rdfs:comment "Equivalent to IRI." ;
    rdfs:subClassOf spl:OntologyFunctions .

sp:using a rdf:Property ;
    rdfs:label "using" ;
    rdfs:domain sp:Modify ;
    rdfs:range rdfs:Resource ;
    rdfs:subPropertyOf sp:systemProperty .

sp:usingNamed a rdf:Property ;
    rdfs:label "using named" ;
    rdfs:domain sp:Modify ;
    rdfs:range rdfs:Resource ;
    rdfs:subPropertyOf sp:systemProperty .

sp:values a rdf:Property ;
    rdfs:label "values" ;
    rdfs:comment "The VALUES block at the end of a query. The object may just be an untyped blank node, i.e. the sp:Values type triple is optional." ;
    rdfs:domain sp:Query ;
    rdfs:range sp:Values ;
    rdfs:subPropertyOf sp:systemProperty .

sp:varName a rdf:Property ;
    rdfs:label "varName" ;
    rdfs:comment "The name of a Variable." ;
    rdfs:domain sp:Variable ;
    rdfs:range xsd:string ;
    rdfs:subPropertyOf sp:systemProperty .

sp:varNames a rdf:Property ;
    rdfs:label "var names" ;
    rdfs:comment "The names of the variables (xsd:strings) of the variables declared for a VALUES element." ;
    rdfs:domain sp:Values ;
    rdfs:range rdf:List ;
    rdfs:subPropertyOf sp:systemProperty .

sp:variable a rdf:Property ;
    rdfs:label "variable" ;
    rdfs:comment "The variable of a Bind element." ;
    rdfs:domain sp:Bind ;
    rdfs:range sp:Variable ;
    rdfs:subPropertyOf sp:systemProperty .

sp:where a rdf:Property ;
    rdfs:label "where" ;
    rdfs:comment "The WHERE clause of a Query." ;
    rdfs:range sp:ElementList ;
    rdfs:subPropertyOf sp:systemProperty .

sp:with a rdf:Property ;
    rdfs:label "with" ;
    rdfs:domain sp:Modify ;
    rdfs:range rdfs:Resource ;
    rdfs:subPropertyOf sp:systemProperty .

sp:year a spin:Function ;
    rdfs:label "year" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "The date or dateTime argument." ] ;
    spin:returnType xsd:integer ;
    spin:symbol "year" ;
    rdfs:comment "Extracts the year from a date/time literal." ;
    rdfs:subClassOf spl:DateFunctions .

spin:AskTemplates a spin:AskTemplate ;
    rdfs:label "Ask templates" ;
    spin:abstract true ;
    rdfs:comment "Suggested abstract base class for all AskTemplates." ;
    rdfs:subClassOf spin:Templates .

spin:Error a spin:ConstraintViolationLevel ;
    rdfs:label "Error" ;
    rdfs:comment "Indicates that the associated constraint violation is an error that should be fixed." .

spin:Fatal a spin:ConstraintViolationLevel ;
    rdfs:label "Fatal" ;
    rdfs:comment "Indicates that the associated constraint violation is a severe error that must be fixed. Constraint checking engines may decide to stop further evaluation once a fatal error has been detected." .

spin:Info a spin:ConstraintViolationLevel ;
    rdfs:label "Info" ;
    rdfs:comment "Indicates that the associated constraint violation is a not a problem. This level can be used for diagnostic and debugging purposes." .

spin:UpdateTemplates a spin:UpdateTemplate ;
    rdfs:label "Update templates" ;
    spin:abstract true ;
    rdfs:comment "Suggested abstract base class for all UpdateTemplates." ;
    rdfs:subClassOf spin:Templates .

spin:Warning a spin:ConstraintViolationLevel ;
    rdfs:label "Warning" ;
    rdfs:comment "Indicates that the associated constraint violation is a problem that may not have to be fixed but may lead to issues in the future." .

spin:_arg4 a sp:Variable ;
    sp:varName "arg4" .

spin:_arg5 a sp:Variable ;
    sp:varName "arg5" .

spin:abstract a rdf:Property ;
    rdfs:label "abstract" ;
    rdfs:comment "Can be set to true to indicate that this module shall not be instantiated. Abstract modules are only there to organize other modules into hierarchies." ;
    rdfs:domain spin:Module ;
    rdfs:range xsd:boolean ;
    rdfs:subPropertyOf spin:systemProperty .

spin:ask a spin:Function ;
    rdfs:label "ask" ;
    rdfs:comment """Executes a given ASK query and returns its boolean result. The first argument must point to an sp:Ask or a SPIN template call that has an ASK query as its body. All subsequent argument can come in pairs, with the first one being a variable name and the second its binding.

Example:

    BIND (spin:ask(?query, "this", owl:Thing) AS ?result) .

will execute the sp:Ask behind ?query with the variable ?this pre-bound to owl:Thing.""" ;
    rdfs:subClassOf spin:Functions .

spin:cachable a rdf:Property ;
    rdfs:label "cachable" ;
    rdfs:comment "Can be set to true to instruct the SPIN engine that it may cache the results of all calls to the associated function. Functions should only be marked as cachable if the same combination of input arguments always returns the same result. Functions that query a graph or other background data that may change over time should not be cached. Caching can significantly improve performance of frequently needed functions." ;
    rdfs:domain spin:Function ;
    rdfs:range xsd:boolean ;
    rdfs:subPropertyOf spin:systemProperty .

spin:cachableForOntologies a rdf:Property ;
    rdfs:label "cachable for ontologies" ;
    rdfs:comment "Can be set to true to instruct the SPIN engine that the outcome of the function does not depend on any instances/indivuduals in the current query graph, but only on the definitions of classes, properties and shapes. Engines may cache the results of all calls to the associated function. Functions should only be marked as cachable if the same combination of input arguments always returns the same result." ;
    rdfs:domain spin:Function ;
    rdfs:range xsd:boolean ;
    rdfs:subPropertyOf spin:systemProperty .

spin:column a rdf:Property ;
    rdfs:label "column" ;
    rdfs:comment "Can link a TableDataProvider (esp. SelectTemplate) with one or more columns that provide metadata for rendering purposes. Columns can be sorted by their spin:columnIndex (which must align with the ordering of variables in the SELECT query starting with 0). Not all result variables of the underlying query need to have a matching spin:Column." ;
    rdfs:domain spin:TableDataProvider ;
    rdfs:range spin:Column ;
    rdfs:subPropertyOf spin:systemProperty .

spin:columnIndex a rdf:Property ;
    rdfs:label "column index" ;
    rdfs:comment "The index of a column (from left to right) starting at 0." ;
    rdfs:domain spin:Column ;
    rdfs:range xsd:integer ;
    rdfs:subPropertyOf spin:systemProperty .

spin:columnType a rdf:Property ;
    rdfs:label "column type" ;
    rdfs:comment "The datatype or resource type of a spin:Column. For example this is useful as metadata to inform a rendering engine that numeric columns (e.g. xsd:float) need to be right-aligned." ;
    rdfs:domain spin:Column ;
    rdfs:range rdfs:Class ;
    rdfs:subPropertyOf spin:systemProperty .

spin:columnWidth a rdf:Property ;
    rdfs:label "column width" ;
    rdfs:comment "The preferred width of the associated Column, for display purposes. Values in pixels (rendering engines may multiply the values depending on resolution)." ;
    rdfs:domain spin:Column ;
    rdfs:range xsd:integer ;
    rdfs:subPropertyOf spin:systemProperty .

spin:construct a spin:MagicProperty ;
    rdfs:label "construct" ;
    rdfs:comment """Evaluates a given sp:Construct or SPIN template call (first argument on the left hand side) and binds the resulting triples to the variables on the right hand side.

Example:

    (?query "this" owl:Thing) spin:construct (?s ?p ?o)

will execute the sp:Construct ?query using the binding of owl:Thing to ?this. The resulting triples will be bound to ?s, ?p and ?o. If any of ?s ?p ?o are bound, it will only return the matching triples.""" ;
    rdfs:subClassOf spin:MagicProperties .

spin:constructViolations a spin:MagicProperty ;
    rdfs:label "construct violations" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType rdfs:Class ;
            rdfs:comment "The class that this type is validated against." ],
        [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Resource ;
            rdfs:comment "The instance to check." ] ;
    rdfs:comment """Takes an instance (?arg1) and a class definition (?arg2) and returns all constraint violations for that instance as triples. This magic property basically runs its own constraint checker for defining meta-constraints, and can also be used to classify instances.

Example:

    CONSTRUCT {
        ?s ?p ?o .
    }
    WHERE {
        (my:Person my:OldPerson) spin:constructViolations (?s ?p ?o) .
    }""" ;
    rdfs:subClassOf spin:MagicProperties .

spin:evalInGraph a spin:Function ;
    rdfs:label "eval in graph" ;
    rdfs:comment "Evaluates a given SPIN expression or SELECT or ASK query, and returns its result. The first argument must be the expression in SPIN RDF syntax. This RDF representation of this expression is expected to be in the currently active query graph. The second argument is the URI of a graph that the actual query shall be evaluated against. All other arguments must come in pairs: first a property name, and then a value. These name/value pairs will be pre-bound variables for the execution of the expression." ;
    rdfs:subClassOf spin:Functions .

spin:fix a rdf:Property ;
    rdfs:label "fix" ;
    rdfs:comment "Can be used to link a ConstraintViolation with one or more UPDATE Templates that would help fix the violation." ;
    rdfs:domain spin:ConstraintViolation ;
    rdfs:range spin:UpdateTemplate ;
    rdfs:subPropertyOf spin:systemProperty .

spin:imports a owl:OntologyProperty ;
    rdfs:label "imports" ;
    rdfs:comment "Can be used to link an RDF graph (usually the instance of owl:Ontology) with a SPIN library to define constraints. SPIN-aware tools should include the definitions from those libraries for constraint checking. Using such libraries is a simpler alternative than explicitly importing them using owl:imports, because it does not force all the SPIN triples into the RDF model." ;
    rdfs:domain owl:Ontology ;
    rdfs:range owl:Ontology ;
    rdfs:subPropertyOf spin:systemProperty .

spin:inverseBody a rdf:Property ;
    rdfs:label "inverse body" ;
    rdfs:comment "The inverse body of a magic property - used to provide a more optimized query if there is one result variable (on the right). The values must be instances of Select and must return SELECT ?arg1 etc. The WHERE clause can access the variable ?object to refer to the provided value on the right hand side of the magic property." ;
    rdfs:domain spin:MagicProperty ;
    rdfs:range sp:Select ;
    rdfs:subPropertyOf spin:systemProperty .

spin:labelTemplate a rdf:Property ;
    rdfs:label "label template" ;
    rdfs:comment "A template string for displaying instantiations of a module in human-readable form. The template may contain the argument variable names in curly braces to support substitution. For example, \"The number of values of the {?arg1} property.\"" ;
    rdfs:domain spin:Template ;
    rdfs:range xsd:string ;
    rdfs:subPropertyOf spin:systemProperty .

spin:nextRuleProperty a rdf:Property ;
    rdfs:label "next rule property" ;
    rdfs:comment "Can be used to link two sub-properties of spin:rule (or spin:rule itself) to instruct the SPIN engine to execute one set of rules before another one. The values of the subject property will be executed before those of the object property." ;
    rdfs:domain spin:RuleProperty ;
    rdfs:range spin:RuleProperty ;
    rdfs:subPropertyOf spin:systemProperty .

spin:private a rdf:Property ;
    rdfs:label "private" ;
    rdfs:comment "Can be set to true to indicate that a SPIN function or template is only meant to be used as a helper of other modules, but not directly. Among others, this allows user interfaces to filter out private modules. Furthermore, it tells potential users of this module that they should avoid using this module, as it may not be stable." ;
    rdfs:domain spin:Module ;
    rdfs:range xsd:boolean ;
    rdfs:subPropertyOf spin:systemProperty .

spin:returnType a rdf:Property ;
    rdfs:label "return type" ;
    rdfs:comment "The return type of a Function, e.g. xsd:string." ;
    rdfs:domain spin:Function ;
    rdfs:range rdfs:Class ;
    rdfs:subPropertyOf spin:systemProperty .

spin:rulePropertyMaxIterationCount a rdf:Property ;
    rdfs:label "rule property max iteration count" ;
    rdfs:comment "Can be attached to spin:rule (or subclasses thereof) to instruct a SPIN rules engine that it shall only execute the rules max times. If no value is specified, then the rules will be executed with no specific limit." ;
    rdfs:domain spin:RuleProperty ;
    rdfs:range xsd:integer ;
    rdfs:subPropertyOf spin:systemProperty .

spin:select a spin:MagicProperty ;
    rdfs:label "select" ;
    rdfs:comment """Executes a given SELECT or ASK query (or a corresponding SPIN template call) and binds its result rows to the variables specified on the right hand side. May also pre-bind variables for the query execution, using name-value pairs on the left hand side.

Example:

    (?query "this" owl:Thing) spin:select (?a ?b)

will execute the sp:Select or sp:Ask that ?query points to and pre-bind ?this with the value of owl:Thing for the execution of the query. The first result variable of the query's result set will be bound to ?a, the second to ?b etc. If the nodes on the right are bound (or constants) then it will match with the values from the result set.

Note that the first argument on the left hand side can be an instance of a SPIN template (but not the template itself). If you need to execute a template, retrieve its spin:body first.""" ;
    rdfs:subClassOf spin:MagicProperties .

spin:symbol a rdf:Property ;
    rdfs:label "symbol" ;
    rdfs:comment "The symbol of a function, e.g. \"=\" for the eq function." ;
    rdfs:domain spin:Function ;
    rdfs:range xsd:string ;
    rdfs:subPropertyOf spin:systemProperty .

spin:thisUnbound a rdf:Property ;
    rdfs:label "this unbound" ;
    rdfs:comment "Can be set to true for SPIN rules and constraints that do not require pre-binding the variable ?this with all members of the associated class. This flag should only be set to true if the WHERE clause is sufficiently strong to only bind instances of the associated class, or its subclasses. In those cases, the engine can greatly improve performance of query execution, because it does not need to add clauses to narrow down the WHERE clause." ;
    rdfs:domain sp:Construct ;
    rdfs:range xsd:boolean ;
    rdfs:subPropertyOf spin:systemProperty .

spin:update a rdf:Property ;
    rdfs:label "update" ;
    rdfs:comment "Can be used to point from any resource to an Update." ;
    rdfs:range sp:Update ;
    rdfs:subPropertyOf spin:command .

spin:violatesConstraints a spin:Function ;
    rdfs:label "violates constraints" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Resource ;
            rdfs:comment "The instance to check." ],
        [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType rdfs:Class ;
            rdfs:comment "The class to get the constraints of." ] ;
    spin:returnType xsd:boolean ;
    rdfs:comment "Checks whether a given instance (?arg1) violates any of the constraints defined for a given class (?arg2)." ;
    rdfs:subClassOf spin:Functions .

spin:violationDetail a rdf:Property ;
    rdfs:label "violation detail" ;
    rdfs:comment "Links a (parent) spin:ConstraintViolation with one or more (child) spin:ConstraintViolations that provide details on the parent violation. This is commonly used in conjunction with spin:constructViolations to indicate that certain violations have triggered the parent violation." ;
    rdfs:domain spin:ConstraintViolation ;
    rdfs:range spin:ConstraintViolation ;
    rdfs:subPropertyOf spin:systemProperty .

spin:violationLevel a rdf:Property ;
    rdfs:label "violation level" ;
    rdfs:comment "An optional attribute of ConstraintViolations to point at a violation level (such as Error and Warning). Defaults to spin:Error." ;
    rdfs:domain spin:ConstraintViolation ;
    rdfs:range spin:ConstraintViolationLevel ;
    rdfs:subPropertyOf spin:systemProperty .

spin:violationSource a rdf:Property ;
    rdfs:label "violation source" ;
    rdfs:comment "Can be used to link a spin:ConstraintViolation with the query or template call that caused it. This property is typically filled in automatically by the constraint checking engine and does not need to be set manually. However, it can be useful to learn more about the origin of a violation." ;
    rdfs:domain spin:ConstraintViolation ;
    rdfs:range rdfs:Resource ;
    rdfs:subPropertyOf spin:systemProperty .

spl:AllArguments a spin:SelectTemplate ;
    rdfs:label "All arguments" ;
    spin:body [ a sp:Select ;
            sp:resultVariables ( [ sp:varName "arg" ] [ sp:varName "atClass" ] ) ;
            sp:where ( [ a sp:TriplePath ;
                        sp:object [ sp:varName "atClass" ] ;
                        sp:path [ a sp:ModPath ;
                                sp:modMax -2 ;
                                sp:modMin 0 ;
                                sp:subPath rdfs:subClassOf ] ;
                        sp:subject [ sp:varName "class" ] ] [ sp:object [ sp:varName "arg" ] ;
                        sp:predicate spin:constraint ;
                        sp:subject [ sp:varName "atClass" ] ] [ sp:object spl:Argument ;
                        sp:predicate rdf:type ;
                        sp:subject [ sp:varName "arg" ] ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:predicate spl:class ;
            spl:valueType rdfs:Class ;
            rdfs:comment "The class to get the arguments of." ] ;
    spin:labelTemplate "All spl:Arguments of {?class}" ;
    rdfs:comment "Gets a list of all spl:Arguments declared at a given class and its superclasses." ;
    rdfs:subClassOf spin:SelectTemplates .

spl:ExistencePropertyPairConstraint a spl:ConstraintTemplate ;
    rdfs:label "Existence property pair constraint" ;
    spin:body [ a sp:Construct ;
            sp:templates ( [ sp:object spin:ConstraintViolation ;
                        sp:predicate rdf:type ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b111 ] [ sp:object spin:_this ;
                        sp:predicate spin:violationRoot ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b111 ] [ sp:object [ sp:varName "property" ] ;
                        sp:predicate spin:violationPath ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b111 ] [ sp:object [ sp:varName "message" ] ;
                        sp:predicate rdfs:label ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b111 ] ) ;
            sp:where ( [ a sp:Filter ;
                        sp:expression [ a sp:exists ;
                                sp:elements ( [ sp:object [ sp:varName "someValue" ] ;
                                            sp:predicate [ sp:varName "otherProperty" ] ;
                                            sp:subject spin:_this ] ) ] ] [ a sp:Filter ;
                        sp:expression [ a sp:notExists ;
                                sp:elements ( [ sp:object [ sp:varName "object" ] ;
                                            sp:predicate [ sp:varName "property" ] ;
                                            sp:subject spin:_this ] ) ] ] [ a sp:Bind ;
                        sp:expression [ a sp:concat ;
                                sp:arg1 "Property " ;
                                sp:arg2 [ a sp:str ;
                                        sp:arg1 [ sp:varName "property" ] ] ;
                                sp:arg3 " must have a value because " ;
                                sp:arg4 [ a sp:str ;
                                        sp:arg1 [ sp:varName "otherProperty" ] ] ;
                                sp:arg5 " has" ] ;
                        sp:variable [ sp:varName "message" ] ] ) ] ;
    spin:labelTemplate "The property {?property} must have a value whenever {?otherProperty} has a value" ;
    rdfs:subClassOf spl:PropertyPairConstraintTemplates .

spl:InferDefaultValue a spin:ConstructTemplate ;
    rdfs:label "Infer default value" ;
    spin:body [ a sp:Construct ;
            sp:templates ( [ sp:object [ sp:varName "defaultValue" ] ;
                        sp:predicate [ sp:varName "predicate" ] ;
                        sp:subject spin:_this ] ) ;
            sp:where ( [ a sp:Optional ;
                        sp:elements ( [ sp:object [ sp:varName "anyValue" ] ;
                                    sp:predicate [ sp:varName "predicate" ] ;
                                    sp:subject spin:_this ] ) ] [ a sp:Filter ;
                        sp:expression [ a sp:not ;
                                sp:arg1 [ a sp:bound ;
                                        sp:arg1 [ sp:varName "anyValue" ] ] ] ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:predicate spl:defaultValue ;
            rdfs:comment "The default value to infer." ],
        [ a spl:Argument ;
            spl:predicate spl:predicate ;
            spl:valueType rdf:Property ;
            rdfs:comment "The predicate to infer the default value of." ] ;
    spin:labelTemplate "Default value for {?predicate}: {?defaultValue}" ;
    rdfs:comment "Can be used to infer default values for a given subject/predicate combination. This is typically assigned as spin:rule to a class. If ?this does not already have a value for a given property {?predicate}, then this will infer the value {?defaultValue}." ;
    rdfs:subClassOf spin:ConstructTemplates .

spl:LessThanOtherPropertyPairConstraint a spl:ConstraintTemplate ;
    rdfs:label "Less than other property pair constraint" ;
    spin:body [ a sp:Construct ;
            sp:templates ( [ sp:object spin:ConstraintViolation ;
                        sp:predicate rdf:type ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b163 ] [ sp:object [ sp:varName "property" ] ;
                        sp:predicate spin:violationPath ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b163 ] [ sp:object [ sp:varName "value" ] ;
                        sp:predicate spin:violationValue ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b163 ] [ sp:object spin:_this ;
                        sp:predicate spin:violationRoot ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b163 ] [ sp:object [ sp:varName "label" ] ;
                        sp:predicate rdfs:label ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b163 ] ) ;
            sp:where ( [ sp:object [ sp:varName "value" ] ;
                        sp:predicate [ sp:varName "property" ] ;
                        sp:subject spin:_this ] [ sp:object [ sp:varName "otherValue" ] ;
                        sp:predicate [ sp:varName "otherProperty" ] ;
                        sp:subject spin:_this ] [ a sp:Filter ;
                        sp:expression [ a sp:ge ;
                                sp:arg1 [ sp:varName "value" ] ;
                                sp:arg2 [ sp:varName "otherValue" ] ] ] [ a sp:Bind ;
                        sp:expression [ a sp:concat ;
                                sp:arg1 "Value " ;
                                sp:arg2 [ a sp:str ;
                                        sp:arg1 [ sp:varName "value" ] ] ;
                                sp:arg3 " of " ;
                                sp:arg4 [ a sp:str ;
                                        sp:arg1 [ sp:varName "property" ] ] ;
                                sp:arg5 " must be less than " ;
                                sp:arg6 [ a sp:str ;
                                        sp:arg1 [ sp:varName "otherValue" ] ] ;
                                sp:arg7 " of " ;
                                sp:arg8 [ a sp:str ;
                                        sp:arg1 [ sp:varName "otherProperty" ] ] ] ;
                        sp:variable [ sp:varName "label" ] ] ) ] ;
    spin:labelTemplate "Values of {?property} must be less than the values of {?otherProperty}" ;
    rdfs:comment "Can be used to define a constraint between two properties (?property and ?otherProperty) enforcing the invariant that the values of ?property must be smaller than the values of ?otherProperty. For example this can be used to state that ex:startDate must be < ex:endDate." ;
    rdfs:subClassOf spl:PropertyPairConstraintTemplates .

spl:NonExistencePropertyPairConstraint a spl:ConstraintTemplate ;
    rdfs:label "Non-existence property pair constraint" ;
    spin:body [ a sp:Construct ;
            sp:templates ( [ sp:object spin:ConstraintViolation ;
                        sp:predicate rdf:type ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b203 ] [ sp:object spin:_this ;
                        sp:predicate spin:violationRoot ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b203 ] [ sp:object [ sp:varName "property" ] ;
                        sp:predicate spin:violationPath ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b203 ] [ sp:object [ sp:varName "message" ] ;
                        sp:predicate rdfs:label ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b203 ] ) ;
            sp:where ( [ a sp:Filter ;
                        sp:expression [ a sp:notExists ;
                                sp:elements ( [ sp:object [ sp:varName "someValue" ] ;
                                            sp:predicate [ sp:varName "otherProperty" ] ;
                                            sp:subject spin:_this ] ) ] ] [ a sp:Filter ;
                        sp:expression [ a sp:exists ;
                                sp:elements ( [ sp:object [ sp:varName "object" ] ;
                                            sp:predicate [ sp:varName "property" ] ;
                                            sp:subject spin:_this ] ) ] ] [ a sp:Bind ;
                        sp:expression [ a sp:concat ;
                                sp:arg1 "Property " ;
                                sp:arg2 [ a sp:str ;
                                        sp:arg1 [ sp:varName "property" ] ] ;
                                sp:arg3 " must have no values because " ;
                                sp:arg4 [ a sp:str ;
                                        sp:arg1 [ sp:varName "otherProperty" ] ] ;
                                sp:arg5 " has none" ] ;
                        sp:variable [ sp:varName "message" ] ] ) ] ;
    spin:labelTemplate "The property {?property} must have no values as long as {?otherProperty} has none" ;
    rdfs:subClassOf spl:PropertyPairConstraintTemplates .

spl:ObjectCountPropertyConstraint a spl:ConstraintTemplate ;
    rdfs:label "Object count property constraint" ;
    spin:body [ a sp:Construct ;
            sp:templates ( [ sp:object spin:ConstraintViolation ;
                        sp:predicate rdf:type ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b237 ] [ sp:object spin:_this ;
                        sp:predicate spin:violationRoot ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b237 ] [ sp:object [ sp:varName "property" ] ;
                        sp:predicate spin:violationPath ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b237 ] [ sp:object [ sp:varName "message" ] ;
                        sp:predicate rdfs:label ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b237 ] ) ;
            sp:where ( [ a sp:Bind ;
                        sp:expression [ a spl:objectCount ;
                                sp:arg1 spin:_this ;
                                sp:arg2 [ sp:varName "property" ] ] ;
                        sp:variable [ sp:varName "objectCount" ] ] [ a sp:Filter ;
                        sp:expression [ a sp:or ;
                                sp:arg1 [ a sp:and ;
                                        sp:arg1 [ a sp:bound ;
                                                sp:arg1 [ sp:varName "minCount" ] ] ;
                                        sp:arg2 [ a sp:lt ;
                                                sp:arg1 [ sp:varName "objectCount" ] ;
                                                sp:arg2 [ sp:varName "minCount" ] ] ] ;
                                sp:arg2 [ a sp:and ;
                                        sp:arg1 [ a sp:bound ;
                                                sp:arg1 [ sp:varName "maxCount" ] ] ;
                                        sp:arg2 [ a sp:gt ;
                                                sp:arg1 [ sp:varName "objectCount" ] ;
                                                sp:arg2 [ sp:varName "maxCount" ] ] ] ] ] [ a sp:Bind ;
                        sp:expression [ a sp:concat ;
                                sp:arg1 "Invalid number of values: " ;
                                sp:arg2 [ a sp:str ;
                                        sp:arg1 [ sp:varName "objectCount" ] ] ] ;
                        sp:variable [ sp:varName "message" ] ] ) ] ;
    spin:labelTemplate "The property {?property} must have between {?minCount} and {?maxCount} values" ;
    rdfs:comment "Represents a constraint that can be attached to a class to specify that a given property must have between min and max values." ;
    rdfs:subClassOf spl:CountPropertyConstraintTemplates .

spl:RangePropertyConstraint a spl:ConstraintTemplate ;
    rdfs:label "Range property constraint" ;
    spin:body [ a sp:Construct ;
            sp:templates ( [ sp:object spin:ConstraintViolation ;
                        sp:predicate rdf:type ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b275 ] [ sp:object spin:_this ;
                        sp:predicate spin:violationRoot ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b275 ] [ sp:object [ sp:varName "property" ] ;
                        sp:predicate spin:violationPath ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b275 ] [ sp:object [ sp:varName "object" ] ;
                        sp:predicate spin:violationValue ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b275 ] [ sp:object [ sp:varName "message" ] ;
                        sp:predicate rdfs:label ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b275 ] ) ;
            sp:where ( [ sp:object [ sp:varName "object" ] ;
                        sp:predicate [ sp:varName "property" ] ;
                        sp:subject spin:_this ] [ a sp:Filter ;
                        sp:expression [ a sp:or ;
                                sp:arg1 [ a sp:and ;
                                        sp:arg1 [ a sp:bound ;
                                                sp:arg1 [ sp:varName "min" ] ] ;
                                        sp:arg2 [ a sp:lt ;
                                                sp:arg1 [ sp:varName "object" ] ;
                                                sp:arg2 [ sp:varName "min" ] ] ] ;
                                sp:arg2 [ a sp:and ;
                                        sp:arg1 [ a sp:bound ;
                                                sp:arg1 [ sp:varName "max" ] ] ;
                                        sp:arg2 [ a sp:gt ;
                                                sp:arg1 [ sp:varName "object" ] ;
                                                sp:arg2 [ sp:varName "max" ] ] ] ] ] [ a sp:Bind ;
                        sp:expression [ a sp:concat ;
                                sp:arg1 "Value " ;
                                sp:arg2 [ a sp:str ;
                                        sp:arg1 [ sp:varName "object" ] ] ;
                                sp:arg3 " must be in the interval [" ;
                                sp:arg4 [ a sp:str ;
                                        sp:arg1 [ sp:varName "min" ] ] ;
                                sp:arg5 ", " ;
                                sp:arg6 [ a sp:str ;
                                        sp:arg1 [ sp:varName "max" ] ] ;
                                sp:arg7 "]" ] ;
                        sp:variable [ sp:varName "message" ] ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:optional true ;
            spl:predicate arg:min ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "The minimum value." ],
        [ a spl:Argument ;
            spl:optional true ;
            spl:predicate arg:max ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "The maximum value." ] ;
    spin:labelTemplate "Values of {?property} must be within the interval [ {?min} , {?max} ]" ;
    rdfs:comment "Represents a constraint that narrows down a property by a minimum and maximum value compared by <= and >=." ;
    rdfs:subClassOf spl:PropertyConstraintTemplates .

spl:RegexPropertyConstraint a spl:ConstraintTemplate ;
    rdfs:label "Regex property constraint" ;
    spin:body [ a sp:Construct ;
            sp:templates ( [ sp:object spin:ConstraintViolation ;
                        sp:predicate rdf:type ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b321 ] [ sp:object spin:_this ;
                        sp:predicate spin:violationRoot ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b321 ] [ sp:object [ sp:varName "property" ] ;
                        sp:predicate spin:violationPath ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b321 ] [ sp:object [ sp:varName "message" ] ;
                        sp:predicate rdfs:label ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b321 ] ) ;
            sp:where ( [ sp:object [ sp:varName "object" ] ;
                        sp:predicate [ sp:varName "property" ] ;
                        sp:subject spin:_this ] [ a sp:Filter ;
                        sp:expression [ a sp:not ;
                                sp:arg1 [ a sp:regex ;
                                        sp:arg1 [ a xsd:string ;
                                                sp:arg1 [ sp:varName "object" ] ] ;
                                        sp:arg2 [ sp:varName "pattern" ] ] ] ] [ a sp:Bind ;
                        sp:expression [ a sp:concat ;
                                sp:arg1 "Value " ;
                                sp:arg2 [ a sp:str ;
                                        sp:arg1 [ sp:varName "object" ] ] ;
                                sp:arg3 " must match the regular expression \"" ;
                                sp:arg4 [ sp:varName "pattern" ] ;
                                sp:arg5 "\"" ] ;
                        sp:variable [ sp:varName "message" ] ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:predicate arg:pattern ;
            spl:valueType xsd:string ;
            rdfs:comment "The regular expression to match." ] ;
    spin:labelTemplate "Values of {?property} must match the regular expression {?pattern}" ;
    rdfs:subClassOf spl:PropertyConstraintTemplates .

spl:RunTestCases a spin:SelectTemplate ;
    rdfs:label "Run test cases" ;
    spin:body [ a sp:Select ;
            sp:resultVariables ( [ sp:varName "testCase" ] [ sp:varName "expected" ] [ sp:varName "actual" ] ) ;
            sp:where ( [ sp:object [ sp:varName "expr" ] ;
                        sp:predicate spl:testExpression ;
                        sp:subject [ sp:varName "testCase" ] ] [ a sp:Optional ;
                        sp:elements ( [ sp:object [ sp:varName "expected" ] ;
                                    sp:predicate spl:testResult ;
                                    sp:subject [ sp:varName "testCase" ] ] ) ] [ a sp:Bind ;
                        sp:expression [ a spin:eval ;
                                sp:arg1 [ sp:varName "expr" ] ] ;
                        sp:variable [ sp:varName "actual" ] ] [ a sp:Filter ;
                        sp:expression [ a sp:or ;
                                sp:arg1 [ a sp:ne ;
                                        sp:arg1 [ a sp:bound ;
                                                sp:arg1 [ sp:varName "expected" ] ] ;
                                        sp:arg2 [ a sp:bound ;
                                                sp:arg1 [ sp:varName "actual" ] ] ] ;
                                sp:arg2 [ a sp:and ;
                                        sp:arg1 [ a sp:bound ;
                                                sp:arg1 [ sp:varName "expected" ] ] ;
                                        sp:arg2 [ a sp:ne ;
                                                sp:arg1 [ sp:varName "actual" ] ;
                                                sp:arg2 [ sp:varName "expected" ] ] ] ] ] ) ] ;
    rdfs:comment "Runs all spl:TestCases on the current model." ;
    rdfs:subClassOf spin:SelectTemplates .

spl:SPINOverview a spin:SelectTemplate ;
    rdfs:label "SPIN Overview" ;
    spin:body [ a sp:Select ;
            sp:resultVariables ( [ sp:varName "class" ] [ sp:varName "property" ] [ sp:varName "rule" ] ) ;
            sp:where ( ( [ a sp:Union ;
                            sp:elements ( ( [ a sp:Bind ;
                                            sp:expression spin:constraint ;
                                            sp:variable [ sp:varName "bp" ] ] ) ( [ a sp:Bind ;
                                            sp:expression spin:constructor ;
                                            sp:variable [ sp:varName "bp" ] ] ) ( [ a sp:Bind ;
                                            sp:expression spin:rule ;
                                            sp:variable [ sp:varName "bp" ] ] ) ) ] ) [ a sp:TriplePath ;
                        sp:object [ sp:varName "bp" ] ;
                        sp:path [ a sp:ModPath ;
                                sp:modMax -2 ;
                                sp:modMin 0 ;
                                sp:subPath rdfs:subPropertyOf ] ;
                        sp:subject [ sp:varName "property" ] ] [ sp:object [ sp:varName "rule" ] ;
                        sp:predicate [ sp:varName "property" ] ;
                        sp:subject [ sp:varName "class" ] ] [ a sp:Filter ;
                        sp:expression [ a sp:ne ;
                                sp:arg1 [ sp:varName "class" ] ;
                                sp:arg2 spin:Modules ] ] [ a sp:Filter ;
                        sp:expression [ a sp:notExists ;
                                sp:elements ( [ sp:object spl:Argument ;
                                            sp:predicate rdf:type ;
                                            sp:subject [ sp:varName "rule" ] ] ) ] ] [ a sp:Filter ;
                        sp:expression [ a sp:notExists ;
                                sp:elements ( [ sp:object spl:Attribute ;
                                            sp:predicate rdf:type ;
                                            sp:subject [ sp:varName "rule" ] ] ) ] ] ) ] ;
    spin:labelTemplate "SPIN Overview" ;
    rdfs:comment "Finds all constraints and rules attached to classes in the current graph, using spin:constraint, spin:constructor, spin:rule or their sub-properties. The result set will contain the associated class, the predicate, and the SPIN rule." ;
    rdfs:subClassOf spin:SelectTemplates .

spl:StringLengthPropertyConstraint a spl:ConstraintTemplate ;
    rdfs:label "String length property constraint" ;
    spin:body [ a sp:Construct ;
            sp:templates ( [ sp:object spin:ConstraintViolation ;
                        sp:predicate rdf:type ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b436 ] [ sp:object spin:_this ;
                        sp:predicate spin:violationRoot ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b436 ] [ sp:object [ sp:varName "property" ] ;
                        sp:predicate spin:violationPath ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b436 ] [ sp:object [ sp:varName "object" ] ;
                        sp:predicate spin:violationValue ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b436 ] [ sp:object [ sp:varName "message" ] ;
                        sp:predicate rdfs:label ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b436 ] ) ;
            sp:where ( [ sp:object [ sp:varName "object" ] ;
                        sp:predicate [ sp:varName "property" ] ;
                        sp:subject spin:_this ] [ a sp:Bind ;
                        sp:expression [ a sp:strlen ;
                                sp:arg1 [ a sp:str ;
                                        sp:arg1 [ sp:varName "object" ] ] ] ;
                        sp:variable [ sp:varName "length" ] ] [ a sp:Filter ;
                        sp:expression [ a sp:or ;
                                sp:arg1 [ a sp:lt ;
                                        sp:arg1 [ sp:varName "length" ] ;
                                        sp:arg2 [ a sp:coalesce ;
                                                sp:arg1 [ sp:varName "minLength" ] ;
                                                sp:arg2 0 ] ] ;
                                sp:arg2 [ a sp:and ;
                                        sp:arg1 [ a sp:bound ;
                                                sp:arg1 [ sp:varName "maxLength" ] ] ;
                                        sp:arg2 [ a sp:gt ;
                                                sp:arg1 [ sp:varName "length" ] ;
                                                sp:arg2 [ sp:varName "maxLength" ] ] ] ] ] [ a sp:Bind ;
                        sp:expression [ a sp:concat ;
                                sp:arg1 "Value " ;
                                sp:arg2 [ a sp:str ;
                                        sp:arg1 [ sp:varName "object" ] ] ;
                                sp:arg3 " must have between " ;
                                sp:arg4 [ a sp:str ;
                                        sp:arg1 [ sp:varName "minLength" ] ] ;
                                sp:arg5 " and " ;
                                sp:arg6 [ a sp:str ;
                                        sp:arg1 [ sp:varName "maxLength" ] ] ;
                                sp:arg7 " characters" ] ;
                        sp:variable [ sp:varName "message" ] ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:optional true ;
            spl:predicate arg:minLength ;
            spl:valueType xsd:integer ;
            rdfs:comment "The minimum number of characters (default to 0)." ],
        [ a spl:Argument ;
            spl:optional true ;
            spl:predicate arg:maxLength ;
            spl:valueType xsd:integer ;
            rdfs:comment "The maximum number of characters (defaults to unlimited)." ] ;
    spin:labelTemplate "Values of {?property} must have between {?minLength} and {?maxLength} characters" ;
    rdfs:comment "Represents a constraint that narrows down a property by a minimum and maximum length of the characters of the string representation of its values. This constraint is typically used for string literals, but may also be useful for integers (e.g. 4 digit numbers), and may even be used to limit the length of URIs." ;
    rdfs:subClassOf spl:PropertyConstraintTemplates .

spl:Test-instanceOf-lingualString a spl:TestCase ;
    spl:testExpression [ a spl:instanceOf ;
            sp:arg1 "test"@en ;
            sp:arg2 xsd:string ] ;
    spl:testResult true .

spl:Test-instanceOf-rdfsClass a spl:TestCase ;
    spl:testExpression [ a spl:instanceOf ;
            sp:arg1 owl:Thing ;
            sp:arg2 rdfs:Class ] ;
    spl:testResult true .

spl:Test-instanceOf-rdfsClass-false a spl:TestCase ;
    spl:testExpression [ a spl:instanceOf ;
            sp:arg1 owl:versionInfo ;
            sp:arg2 rdfs:Class ] ;
    spl:testResult false .

spl:Test-instanceOf-rdfsClassInheritance a spl:TestCase ;
    spl:testExpression [ a spl:instanceOf ;
            sp:arg1 owl:Restriction ;
            sp:arg2 rdfs:Class ] ;
    spl:testResult true .

spl:Test-instanceOf-rdfsLiteral a spl:TestCase ;
    spl:testExpression [ a spl:instanceOf ;
            sp:arg1 "test" ;
            sp:arg2 rdfs:Literal ] ;
    spl:testResult true .

spl:Test-instanceOf-rdfsLiteral-false a spl:TestCase ;
    spl:testExpression [ a spl:instanceOf ;
            sp:arg1 owl:Thing ;
            sp:arg2 rdfs:Literal ] ;
    spl:testResult false .

spl:Test-instanceOf-typedString a spl:TestCase ;
    spl:testExpression [ a spl:instanceOf ;
            sp:arg1 "test" ;
            sp:arg2 xsd:string ] ;
    spl:testResult true .

spl:Test-instanceOf-typedString-false a spl:TestCase ;
    spl:testExpression [ a spl:instanceOf ;
            sp:arg1 "test" ;
            sp:arg2 xsd:integer ] ;
    spl:testResult false .

spl:Test-instanceOf-untypedString a spl:TestCase ;
    spl:testExpression [ a spl:instanceOf ;
            sp:arg1 "test" ;
            sp:arg2 xsd:string ] ;
    spl:testResult true .

spl:Test-object-labelOfArgument a spl:TestCase ;
    spl:testExpression [ a sp:Select ;
            sp:resultVariables ( [ sp:varName "value" ] ) ;
            sp:where ( [ a sp:NamedGraph ;
                        sp:elements ( [ a sp:Bind ;
                                    sp:expression [ a spl:object ;
                                            sp:arg1 spl:Argument ;
                                            sp:arg2 rdfs:label ] ;
                                    sp:variable [ sp:varName "value" ] ] ) ;
                        sp:graphNameNode <http://spinrdf.org/spl> ] ) ] ;
    spl:testResult "Argument" .

spl:Test-object-noValue a spl:TestCase ;
    spl:testExpression [ a spl:object ;
            sp:arg1 owl:versionInfo ;
            sp:arg2 owl:versionInfo ] .

spl:TypePropertyConstraint a spl:ConstraintTemplate ;
    rdfs:label "Type property constraint" ;
    spin:body [ a sp:Construct ;
            sp:templates ( [ sp:object spin:ConstraintViolation ;
                        sp:predicate rdf:type ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b505 ] [ sp:object spin:_this ;
                        sp:predicate spin:violationRoot ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b505 ] [ sp:object [ sp:varName "property" ] ;
                        sp:predicate spin:violationPath ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b505 ] [ sp:object [ sp:varName "object" ] ;
                        sp:predicate spin:violationValue ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b505 ] [ sp:object [ sp:varName "message" ] ;
                        sp:predicate rdfs:label ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b505 ] ) ;
            sp:where ( [ sp:object [ sp:varName "object" ] ;
                        sp:predicate [ sp:varName "property" ] ;
                        sp:subject spin:_this ] [ a sp:Filter ;
                        sp:expression [ a sp:not ;
                                sp:arg1 [ a spl:instanceOf ;
                                        sp:arg1 [ sp:varName "object" ] ;
                                        sp:arg2 [ sp:varName "type" ] ] ] ] [ a sp:Bind ;
                        sp:expression [ a sp:concat ;
                                sp:arg1 "Value " ;
                                sp:arg2 [ a sp:str ;
                                        sp:arg1 [ sp:varName "object" ] ] ;
                                sp:arg3 " must have the type " ;
                                sp:arg4 [ a sp:str ;
                                        sp:arg1 [ sp:varName "type" ] ] ] ;
                        sp:variable [ sp:varName "message" ] ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:predicate arg:type ;
            spl:valueType rdfs:Class ;
            rdfs:comment "The class that the values must have as their rdf:type (or a subclass thereof)." ] ;
    spin:labelTemplate "Values of {?property} must have the type {?type}" ;
    rdfs:comment "Represents a constraint that narrows down the rdf:type of the values of a property." ;
    rdfs:subClassOf spl:PropertyConstraintTemplates .

spl:UniquePropertyValueConstraint a spl:ConstraintTemplate ;
    rdfs:label "Unique property value constraint" ;
    spin:body [ a sp:Construct ;
            sp:templates ( [ sp:object spin:ConstraintViolation ;
                        sp:predicate rdf:type ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b539 ] [ sp:object [ sp:varName "label" ] ;
                        sp:predicate rdfs:label ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b539 ] [ sp:object spin:_this ;
                        sp:predicate spin:violationRoot ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b539 ] [ sp:object [ sp:varName "property" ] ;
                        sp:predicate spin:violationPath ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b539 ] [ sp:object [ sp:varName "value" ] ;
                        sp:predicate spin:violationValue ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b539 ] ) ;
            sp:where ( [ sp:object [ sp:varName "value" ] ;
                        sp:predicate [ sp:varName "property" ] ;
                        sp:subject spin:_this ] [ a sp:Filter ;
                        sp:expression [ a sp:exists ;
                                sp:elements ( [ sp:object [ sp:varName "value" ] ;
                                            sp:predicate [ sp:varName "property" ] ;
                                            sp:subject [ sp:varName "other" ] ] [ a sp:Filter ;
                                            sp:expression [ a sp:ne ;
                                                    sp:arg1 spin:_this ;
                                                    sp:arg2 [ sp:varName "other" ] ] ] ) ] ] [ a sp:Bind ;
                        sp:expression [ a sp:concat ;
                                sp:arg1 "Property must have a unique value, but " ;
                                sp:arg2 [ a sp:str ;
                                        sp:arg1 [ sp:varName "value" ] ] ;
                                sp:arg3 "  already exists elsewhere. " ] ;
                        sp:variable [ sp:varName "label" ] ] ) ] ;
    spin:labelTemplate "Values of {?property} must be unique" ;
    rdfs:comment "Reports an error if the given property has a value that is also used elsewhere, for the same property." ;
    rdfs:subClassOf spl:PropertyConstraintTemplates .

spl:UntypedObjectPropertyConstraint a spl:ConstraintTemplate ;
    rdfs:label "Untyped object property constraint" ;
    spin:body [ a sp:Construct ;
            sp:templates ( [ sp:object spin:ConstraintViolation ;
                        sp:predicate rdf:type ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b576 ] [ sp:object spin:_this ;
                        sp:predicate spin:violationRoot ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b576 ] [ sp:object [ sp:varName "property" ] ;
                        sp:predicate spin:violationPath ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b576 ] [ sp:object [ sp:varName "message" ] ;
                        sp:predicate rdfs:label ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b576 ] ) ;
            sp:where ( [ sp:object [ sp:varName "object" ] ;
                        sp:predicate [ sp:varName "property" ] ;
                        sp:subject spin:_this ] [ a sp:Filter ;
                        sp:expression [ a sp:notExists ;
                                sp:elements ( [ sp:object [ sp:varName "anyType" ] ;
                                            sp:predicate rdf:type ;
                                            sp:subject [ sp:varName "object" ] ] ) ] ] [ a sp:Bind ;
                        sp:expression [ a sp:concat ;
                                sp:arg1 "Value " ;
                                sp:arg2 [ a sp:str ;
                                        sp:arg1 [ sp:varName "object" ] ] ;
                                sp:arg3 " must have a type" ] ;
                        sp:variable [ sp:varName "message" ] ] ) ] ;
    spin:labelTemplate "Values of {?property} must have a type" ;
    rdfs:comment "A generic SPIN template that can be used to declare a constraint that all values of a given property must have an rdf:type." ;
    rdfs:subClassOf spl:PropertyConstraintTemplates .

spl:hasArgument a spin:Function ;
    rdfs:label "has argument" ;
    spin:body [ a sp:Ask ;
            sp:where ( [ a sp:TriplePath ;
                        sp:object [ sp:varName "superClass" ] ;
                        sp:path [ a sp:ModPath ;
                                sp:modMax -2 ;
                                sp:modMin 0 ;
                                sp:subPath rdfs:subClassOf ] ;
                        sp:subject [ sp:varName "class" ] ] [ sp:object [ sp:varName "con" ] ;
                        sp:predicate spin:constraint ;
                        sp:subject [ sp:varName "superClass" ] ] [ sp:object spl:Argument ;
                        sp:predicate rdf:type ;
                        sp:subject [ sp:varName "con" ] ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:predicate spl:class ;
            spl:valueType spin:Module ;
            rdfs:comment "The module class to check." ] ;
    spin:returnType xsd:boolean ;
    rdfs:comment "Checks if a given module class (?module) has at least one declared spl:Argument." ;
    rdfs:subClassOf spl:BooleanFunctions .

spl:hasPrimaryKey a spin:Function ;
    rdfs:label "has primary key" ;
    spin:body [ a sp:Ask ;
            sp:where ( [ a sp:Bind ;
                        sp:expression [ a spl:primaryKeyProperty ;
                                arg:class [ sp:varName "class" ] ] ;
                        sp:variable [ sp:varName "primaryKey" ] ] [ a sp:Filter ;
                        sp:expression [ a sp:bound ;
                                sp:arg1 [ sp:varName "primaryKey" ] ] ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:predicate arg:class ;
            spl:valueType rdfs:Class ;
            rdfs:comment "The class to get the primary key of." ] ;
    spin:returnType xsd:boolean ;
    rdfs:comment "Checks if a given class has a declared primary key, using spl:PrimaryKeyPropertyConstraint." ;
    rdfs:subClassOf spl:OntologyFunctions .

spl:hasValue a spin:Function ;
    rdfs:label "hasValue" ;
    spin:body [ a sp:Ask ;
            sp:where ( [ a sp:TriplePath ;
                        sp:object spin:_arg2 ;
                        sp:path [ a sp:ModPath ;
                                sp:modMax -2 ;
                                sp:modMin 0 ;
                                sp:subPath rdfs:subPropertyOf ] ;
                        sp:subject [ sp:varName "p" ] ] [ sp:object spin:_arg3 ;
                        sp:predicate [ sp:varName "p" ] ;
                        sp:subject spin:_arg1 ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg3 ;
            rdfs:comment "the expected value" ],
        [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Resource ;
            rdfs:comment "the subject that is expected to have the value" ],
        [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType rdf:Property ;
            rdfs:comment "the property that is expected to hold the value" ] ;
    spin:returnType xsd:boolean ;
    rdfs:comment "Checks whether a given resource (?arg1) has a given value (?arg3) for a given property (?arg2) or one of the sub-properties of it." ;
    rdfs:subClassOf spl:BooleanFunctions .

spl:hasValueOfType a spin:Function ;
    rdfs:label "hasValueOfType" ;
    spin:body [ a sp:Ask ;
            sp:where ( [ a sp:TriplePath ;
                        sp:object spin:_arg2 ;
                        sp:path [ a sp:ModPath ;
                                sp:modMax -2 ;
                                sp:modMin 0 ;
                                sp:subPath rdfs:subPropertyOf ] ;
                        sp:subject [ sp:varName "p" ] ] [ sp:object [ sp:varName "value" ] ;
                        sp:predicate [ sp:varName "p" ] ;
                        sp:subject spin:_arg1 ] [ a sp:Filter ;
                        sp:expression [ a spl:instanceOf ;
                                sp:arg1 [ sp:varName "value" ] ;
                                sp:arg2 spin:_arg3 ] ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Resource ;
            rdfs:comment "the subject that is expected to have the value" ],
        [ a spl:Argument ;
            spl:predicate sp:arg3 ;
            spl:valueType rdfs:Class ;
            rdfs:comment "the type to match against" ],
        [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType rdf:Property ;
            rdfs:comment "the expected property" ] ;
    spin:returnType xsd:boolean ;
    rdfs:comment "Checks whether a given subject (?arg1) has at least one value of a given type (?arg3) for a given property (?arg2) or one of its sub-properties." ;
    rdfs:subClassOf spl:BooleanFunctions .

spl:instance a rdf:Property ;
    rdfs:label "instance" ;
    rdfs:domain sp:ModuleCall ;
    rdfs:subPropertyOf sp:arg .

spl:isPrimaryKeyPropertyOfInstance a spin:Function ;
    rdfs:label "is primary key property of instance" ;
    spin:body [ a sp:Ask ;
            sp:where ( [ sp:object [ sp:varName "type" ] ;
                        sp:predicate rdf:type ;
                        sp:subject [ sp:varName "instance" ] ] [ a sp:Bind ;
                        sp:expression [ a spl:primaryKeyProperty ;
                                arg:class [ sp:varName "type" ] ] ;
                        sp:variable [ sp:varName "pk" ] ] [ a sp:Filter ;
                        sp:expression [ a sp:eq ;
                                sp:arg1 [ sp:varName "property" ] ;
                                sp:arg2 [ sp:varName "pk" ] ] ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:predicate arg:property ;
            spl:valueType rdf:Property ;
            rdfs:comment "The property that may or may not be the primary key." ],
        [ a spl:Argument ;
            spl:predicate arg:instance ;
            spl:valueType rdfs:Resource ;
            rdfs:comment "The instance to check." ] ;
    spin:returnType xsd:boolean ;
    rdfs:comment "Checks if a given property is the primary key of a given instance." ;
    rdfs:subClassOf spl:OntologyFunctions .

spl:isUntypedLiteral a spin:Function ;
    rdfs:label "isUntypedLiteral" ;
    spin:body [ a sp:Ask ;
            sp:where ( [ a sp:Filter ;
                        sp:expression [ a sp:and ;
                                sp:arg1 [ a sp:isLiteral ;
                                        sp:arg1 spin:_arg1 ] ;
                                sp:arg2 [ a sp:not ;
                                        sp:arg1 [ a sp:sameTerm ;
                                                sp:arg1 spin:_arg1 ;
                                                sp:arg2 [ a xsd:string ;
                                                        sp:arg1 spin:_arg1 ] ] ] ] ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "The literal to test." ] ;
    spin:returnType xsd:boolean ;
    rdfs:comment "Checks whether a given literal is untyped. This function was introduced because the built-in datatype operand in SPARQL casts untyped literals to xsd:string, making it impossible to check it this way. This function here uses a work-around using sameTerm instead." ;
    rdfs:subClassOf spl:BooleanFunctions .

spl:max a spin:Function ;
    rdfs:label "max" ;
    spin:body [ a sp:Select ;
            sp:resultVariables ( [ sp:varName "result" ] ) ;
            sp:where ( [ a sp:Bind ;
                        sp:expression [ a sp:if ;
                                sp:arg1 [ a sp:gt ;
                                        sp:arg1 spin:_arg1 ;
                                        sp:arg2 spin:_arg2 ] ;
                                sp:arg2 spin:_arg1 ;
                                sp:arg3 spin:_arg2 ] ;
                        sp:variable [ sp:varName "result" ] ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "The second argument." ],
        [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "The first argument." ] ;
    spin:returnType rdfs:Literal ;
    rdfs:comment "Takes two arguments and returns the larger one of them." ;
    rdfs:subClassOf spl:MathematicalFunctions .

spl:min a spin:Function ;
    rdfs:label "min" ;
    spin:body [ a sp:Select ;
            sp:resultVariables ( [ sp:varName "result" ] ) ;
            sp:where ( [ a sp:Bind ;
                        sp:expression [ a sp:if ;
                                sp:arg1 [ a sp:lt ;
                                        sp:arg1 spin:_arg1 ;
                                        sp:arg2 spin:_arg2 ] ;
                                sp:arg2 spin:_arg1 ;
                                sp:arg3 spin:_arg2 ] ;
                        sp:variable [ sp:varName "result" ] ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "The second argument." ],
        [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "The first argument." ] ;
    spin:returnType rdfs:Literal ;
    rdfs:comment "Takes two arguments and returns the smaller one of them." ;
    rdfs:subClassOf spl:MathematicalFunctions .

spl:objectInGraph a spin:Function ;
    rdfs:label "object in graph" ;
    spin:body [ a sp:Select ;
            sp:resultVariables ( [ sp:varName "object" ] ) ;
            sp:where ( [ a sp:NamedGraph ;
                        sp:elements ( [ sp:object [ sp:varName "object" ] ;
                                    sp:predicate spin:_arg2 ;
                                    sp:subject spin:_arg1 ] ) ;
                        sp:graphNameNode spin:_arg3 ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg3 ;
            spl:valueType rdfs:Resource ;
            rdfs:comment "The graph to query in." ],
        [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Resource ;
            rdfs:comment "The subject to get the object from." ],
        [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType rdf:Property ;
            rdfs:comment "The predicate to get the object of." ] ;
    rdfs:comment "Gets the object of a given subject (?arg1) / predicate (?arg2) combination in a given graph ?arg3. Note that if multiple values are present then the result might be unpredictably random." ;
    rdfs:subClassOf spl:OntologyFunctions .

spl:objectSubProp a spin:Function ;
    rdfs:label "object sub prop" ;
    spin:body [ a sp:Select ;
            sp:resultVariables ( [ sp:varName "object" ] ) ;
            sp:where ( [ a sp:TriplePath ;
                        sp:object spin:_arg2 ;
                        sp:path [ a sp:ModPath ;
                                sp:modMax -2 ;
                                sp:modMin 0 ;
                                sp:subPath rdfs:subPropertyOf ] ;
                        sp:subject [ sp:varName "property" ] ] [ sp:object [ sp:varName "object" ] ;
                        sp:predicate [ sp:varName "property" ] ;
                        sp:subject spin:_arg1 ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Resource ;
            rdfs:comment "The subject to get the object from." ],
        [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType rdf:Property ;
            rdfs:comment "The predicate to get the object of (including sub-properties of it)." ] ;
    rdfs:comment "Gets the object of a given subject (?arg1) / predicate (?arg2) combination, also taking the sub-properties of ?arg2 into account. Note that if multiple values are present then the result might be unpredictably random." ;
    rdfs:subClassOf spl:OntologyFunctions .

spl:primaryKeyURIStart a spin:Function ;
    rdfs:label "primary key URI start" ;
    spin:body [ a sp:Select ;
            sp:resultVariables ( [ sp:varName "result" ] ) ;
            sp:where ( [ a sp:TriplePath ;
                        sp:object [ sp:varName "type" ] ;
                        sp:path [ a sp:ModPath ;
                                sp:modMax -2 ;
                                sp:modMin 0 ;
                                sp:subPath rdfs:subClassOf ] ;
                        sp:subject [ sp:varName "class" ] ] [ sp:object [ sp:varName "constraint" ] ;
                        sp:predicate spin:constraint ;
                        sp:subject [ sp:varName "type" ] ] [ sp:object spl:PrimaryKeyPropertyConstraint ;
                        sp:predicate rdf:type ;
                        sp:subject [ sp:varName "constraint" ] ] [ sp:object [ sp:varName "result" ] ;
                        sp:predicate arg:uriStart ;
                        sp:subject [ sp:varName "constraint" ] ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:predicate arg:class ;
            spl:valueType rdfs:Class ;
            rdfs:comment "The class to get the primary key of." ] ;
    spin:returnType rdf:Property ;
    rdfs:comment "Gets the URI start declared as part of a primary key declaration for a given class, using spl:PrimaryKeyPropertyConstraint." ;
    rdfs:subClassOf spl:OntologyFunctions .

spl:relevantPropertyAtClass a spin:MagicProperty ;
    rdfs:label "relevant property at class" ;
    spin:body [ a sp:Select ;
            sp:distinct true ;
            sp:resultVariables ( [ sp:varName "class" ] ) ;
            sp:where ( [ a sp:TriplePath ;
                        sp:object [ sp:varName "superClass" ] ;
                        sp:path [ a sp:ModPath ;
                                sp:modMax -2 ;
                                sp:modMin 0 ;
                                sp:subPath rdfs:subClassOf ] ;
                        sp:subject [ sp:varName "class" ] ] [ a sp:Union ;
                        sp:elements ( ( [ sp:object [ sp:varName "superClass" ] ;
                                        sp:predicate rdfs:domain ;
                                        sp:subject [ sp:varName "property" ] ] ) ( [ sp:object [ sp:varName "property" ] ;
                                        sp:predicate owl:onProperty ;
                                        sp:subject [ sp:varName "superClass" ] ] ) ( [ sp:object [ sp:varName "superClass" ] ;
                                        sp:predicate rdf:first ;
                                        sp:subject [ sp:varName "listSegment" ] ] [ a sp:TriplePath ;
                                        sp:object [ sp:varName "listSegment" ] ;
                                        sp:path [ a sp:ModPath ;
                                                sp:modMax -2 ;
                                                sp:modMin 0 ;
                                                sp:subPath rdf:rest ] ;
                                        sp:subject [ sp:varName "list" ] ] [ a sp:TriplePath ;
                                        sp:object [ sp:varName "list" ] ;
                                        sp:path [ a sp:SeqPath ;
                                                sp:path1 rdfs:domain ;
                                                sp:path2 owl:unionOf ] ;
                                        sp:subject [ sp:varName "property" ] ] ) ) ] [ a sp:TriplePath ;
                        sp:object [ sp:varName "property" ] ;
                        sp:path [ a sp:ModPath ;
                                sp:modMax -2 ;
                                sp:modMin 0 ;
                                sp:subPath rdfs:subPropertyOf ] ;
                        sp:subject spin:_arg1 ] [ a sp:Filter ;
                        sp:expression [ a sp:or ;
                                sp:arg1 [ a sp:eq ;
                                        sp:arg1 spin:_arg1 ;
                                        sp:arg2 [ sp:varName "property" ] ] ;
                                sp:arg2 [ a sp:notExists ;
                                        sp:elements ( [ sp:object [ sp:varName "anyDomain" ] ;
                                                    sp:predicate rdfs:domain ;
                                                    sp:subject spin:_arg1 ] ) ] ] ] [ a sp:Filter ;
                        sp:expression [ a sp:isIRI ;
                                sp:arg1 [ sp:varName "class" ] ] ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdf:Property ;
            rdfs:comment "The property." ] ;
    spin:returnType rdfs:Class ;
    rdfs:comment """A magic property that establishes a relationship between properties (left) and classes (right) to determine which properties are "relevant" for the class. Relevant means that they have the class in their domain and/or restrictions, including superclasses and sub-properties (unless they define their own domain). Domains consisting of an owl:unionOf are also handled.

Note that the performance of the body of this magic property has been optimized for the case in which the class is given, so ideally use this for queries such as  ?property spl:relevantPropertyAtClass skos:Concept .""" ;
    rdfs:subClassOf spin:MagicProperties .

spl:subClassOf a spin:Function ;
    rdfs:label "sub class of" ;
    spin:body [ a sp:Ask ;
            sp:where ( [ a sp:TriplePath ;
                        sp:object spin:_arg2 ;
                        sp:path [ a sp:ModPath ;
                                sp:modMax -2 ;
                                sp:modMin 0 ;
                                sp:subPath rdfs:subClassOf ] ;
                        sp:subject spin:_arg1 ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Class ;
            rdfs:comment "The potential sub-class." ],
        [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType rdfs:Class ;
            rdfs:comment "The potential super-class." ] ;
    spin:returnType xsd:boolean ;
    rdfs:comment "Checks whether a given class (?arg1) is a (transitive) sub-class of another class (?arg2)." ;
    rdfs:subClassOf spl:OntologyFunctions .

spl:subPropertyOf a spin:Function ;
    rdfs:label "sub property of" ;
    spin:body [ a sp:Ask ;
            sp:where ( [ a sp:TriplePath ;
                        sp:object spin:_arg2 ;
                        sp:path [ a sp:ModPath ;
                                sp:modMax -2 ;
                                sp:modMin 0 ;
                                sp:subPath rdfs:subPropertyOf ] ;
                        sp:subject spin:_arg1 ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType rdf:Property ;
            rdfs:comment "The potential super-property." ],
        [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdf:Property ;
            rdfs:comment "The potential sub-property." ] ;
    spin:returnType xsd:boolean ;
    rdfs:comment "Checks whether a given property (?arg1) is a (transitive) sub-property of another property (?arg2)." ;
    rdfs:subClassOf spl:OntologyFunctions .

spl:subject a spin:Function ;
    rdfs:label "subject" ;
    spin:body [ a sp:Select ;
            sp:resultVariables ( [ sp:varName "subject" ] ) ;
            sp:where ( [ sp:object spin:_arg2 ;
                        sp:predicate spin:_arg1 ;
                        sp:subject [ sp:varName "subject" ] ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdf:Property ;
            rdfs:comment "The predicate." ],
        [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            rdfs:comment "The object." ] ;
    rdfs:comment "Gets the \"first\" subject of a given predicate (?arg1)/object (?arg2) combination. Note that if multiple values are present then the result might be unpredictably random." ;
    rdfs:subClassOf spl:OntologyFunctions .

spl:subjectCount a spin:Function ;
    rdfs:label "subjectCount" ;
    spin:body [ a sp:Select ;
            sp:resultVariables ( [ sp:expression [ a sp:Count ;
                                sp:expression [ sp:varName "subject" ] ] ;
                        sp:varName "result" ] ) ;
            sp:where ( [ sp:object spin:_arg2 ;
                        sp:predicate spin:_arg1 ;
                        sp:subject [ sp:varName "subject" ] ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdf:Property ;
            rdfs:comment "the predicate to get the number of subjects of" ],
        [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            rdfs:comment "the object to get the number of subjects of" ] ;
    spin:returnType xsd:integer ;
    rdfs:comment "Gets the number of values of a given property (?arg1) at a given object (?arg2). The result is the number of matches of (?subject, ?arg1, ?arg2)." ;
    rdfs:subClassOf spl:OntologyFunctions .

spl:subjectInGraph a spin:Function ;
    rdfs:label "subject in graph" ;
    spin:body [ a sp:Select ;
            sp:resultVariables ( [ sp:varName "subject" ] ) ;
            sp:where ( [ a sp:NamedGraph ;
                        sp:elements ( [ sp:object spin:_arg2 ;
                                    sp:predicate spin:_arg1 ;
                                    sp:subject [ sp:varName "subject" ] ] ) ;
                        sp:graphNameNode spin:_arg3 ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdf:Property ;
            rdfs:comment "The predicate." ],
        [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            rdfs:comment "The object." ],
        [ a spl:Argument ;
            spl:predicate sp:arg3 ;
            spl:valueType rdfs:Resource ;
            rdfs:comment "The graph to operate on." ] ;
    rdfs:comment "Gets the \"first\" subject of a given predicate (?arg1)/object (?arg2) combination in a given graph (?arg3). Note that if multiple values are present then the result might be unpredictably random." ;
    rdfs:subClassOf spl:OntologyFunctions .

voag:QUDT-DIMENSIONS-VocabCatalogEntry a vaem:CatalogEntry ;
    rdfs:label "QUDT DIMENSIONS Vocab Catalog Entry" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

voag:QUDT-SchemaCatalogEntry a vaem:CatalogEntry ;
    rdfs:label "QUDT Schema Catalog Entry" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

voag:QUDT-UNITS-VocabCatalogEntry a vaem:CatalogEntry ;
    rdfs:label "QUDT UNITS Vocab Catalog Entry" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

voag:supersededBy a owl:ObjectProperty ;
    rdfs:label "superseded by" ;
    rdfs:isDefinedBy <http://voag.linkedmodel.org/schema/voag> .

dtype:isInvalid a owl:DatatypeProperty ;
    rdfs:label "is invalid"^^xsd:string ;
    vaem:comment "A boolean flag to state that a value is invalid with respect to its type."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/1.1/schema/dtype>,
        <http://www.linkedmodel.org/schema/dtype> ;
    rdfs:range xsd:boolean .

dtype:numericUnion a rdfs:Datatype ;
    rdfs:label "numeric union"^^xsd:string ;
    dc:description "A datatype that is the union of numeric xsd data types. \"numericUnion\" is equivalent to the xsd specification that uses an xsd:union of memberTypes=\"xsd:decimal xsd:double xsd:float xsd:integer\"."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/1.1/schema/dtype>,
        <http://www.linkedmodel.org/schema/dtype> ;
    rdfs:subClassOf rdfs:Resource ;
    owl:equivalentClass [ a rdfs:Datatype ;
            owl:unionOf ( xsd:float xsd:decimal xsd:integer xsd:double ) ] .

dtype:type a owl:ObjectProperty ;
    rdfs:label "datatype"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/1.1/schema/dtype>,
        <http://www.linkedmodel.org/schema/dtype> .

vaem:CollectionGraph a vaem:GraphRole ;
    rdfs:label "Collection graph"^^xsd:string ;
    dcterms:description "A \"vaem:CollectionGraph\" is a graph that aggregates other graphs using \"owl:imports\" statements"^^xsd:string ;
    vaem:filePrefix "COLLECTION"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> .

vaem:ConstraintsGraph a vaem:GraphRole ;
    rdfs:label "Constraints graph"^^xsd:string ;
    dcterms:description "A \"vaem:ConstraintsGraph\" is a graph that holds SPIN constraints"^^xsd:string ;
    vaem:filePrefix "CONSTRAINTS"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> .

vaem:ControllersGraph a vaem:GraphRole ;
    rdfs:label "Controllers graph"^^xsd:string ;
    vaem:filePrefix "CONTROLLERS"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> .

vaem:CurationGraph a vaem:GraphRole ;
    rdfs:label "Curation graph"^^xsd:string ;
    dcterms:description "A \"vaem:CurationGraph\" is a graph to hold metadata that is needed to describe, govern and provision another graph. A curation graph will likely use VOAG and VAEM for this purpose. The property \"vaem:curationGraph\" is used to link to the graph (or graphs) being curated"^^xsd:string ;
    vaem:filePrefix "CURATION"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> .

vaem:DataGraph a vaem:GraphRole ;
    rdfs:label "Data graph"^^xsd:string ;
    vaem:filePrefix "DATA"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> .

vaem:DocumentationGraph a vaem:GraphRole ;
    rdfs:label "Documentation graph"^^xsd:string ;
    vaem:filePrefix "DOC"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> .

vaem:FunctionsGraph a vaem:GraphRole ;
    rdfs:label "Functions graph"^^xsd:string ;
    vaem:filePrefix "FUNCTIONS"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> .

vaem:LinkSetGraph a vaem:GraphRole ;
    rdfs:label "Link Set graph"^^xsd:string ;
    dcterms:description "A \"vaem:LinkSetGraph\" is a graph that holds statements that specify links between resources"^^xsd:string ;
    vaem:filePrefix "LINKSET"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> .

vaem:MappingGraph a vaem:GraphRole ;
    rdfs:label "Mapping graph"^^xsd:string ;
    dcterms:description "A graph that specifies a transformation of a graph into another graph or graphs. Invariably this is a SPINMap graph using SPARQL Rules (SPIN) to express the transforms."^^xsd:string ;
    vaem:filePrefix "MAPPINGS"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> .

vaem:ProxyGraph a vaem:GraphRole ;
    rdfs:label "Proxy graph"^^xsd:string ;
    vaem:filePrefix "PROXY"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> .

vaem:RulesGraph a vaem:GraphRole ;
    rdfs:label "Rules Graph"^^xsd:string ;
    vaem:filePrefix "RULES"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> .

vaem:ScriptGraph a vaem:GraphRole ;
    rdfs:label "Script graph"^^xsd:string ;
    vaem:filePrefix "SCRIPT"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> .

vaem:TransformsGraph a vaem:GraphRole ;
    rdfs:label "Transforms graph"^^xsd:string ;
    vaem:filePrefix "TRANSFORMS"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> .

vaem:ViewGraph a vaem:GraphRole ;
    rdfs:label "View graph"^^xsd:string ;
    vaem:filePrefix "VIEWS"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> .

vaem:abbreviation a owl:DatatypeProperty ;
    rdfs:label "abbreviation"^^xsd:string ;
    dcterms:description "The property \"vaem:abbreviation\" provides a common way to define a commonly used abbreviation on a resource"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> .

vaem:acronym a owl:DatatypeProperty ;
    rdfs:label "acronym"^^xsd:string ;
    dcterms:description "The property \"vaem:acronym\" provides a common way to define a commonly used abbreviation on a resource"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> .

vaem:comment a owl:AnnotationProperty ;
    rdfs:label "definition"^^xsd:string ;
    dcterms:description "An annotation property that can be freely used on any kind of resource. The range of the property is \"xsd:string\""^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:range xsd:string .

vaem:dateCreated dcterms:description "The property \"vaem:dateCreated\" is intended for general use as the name implies.  The range of the property is set as \"vaem:dateUnion\" so as to allow a value to have a number of forms from a  year only to a full timestamp"^^xsd:string .

vaem:hasGraphMetadata a owl:AnnotationProperty ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:range vaem:GraphMetaData .

vaem:idString dcterms:description "The property \"vaem:idString\" is intended for general use as a means to specifiy a unique reference to something. This is a data property with a string range and is a sub-property of \"vame:id\""^^xsd:string .

vaem:isElaboratedIn a owl:AnnotationProperty ;
    rdfs:label "isDefinedBy" ;
    dcterms:description "An annotation used to reference a graph that elaborates (adds properties and axioms to) a resource"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:range xsd:anyURI ;
    rdfs:subPropertyOf rdfs:isDefinedBy .

vaem:lastUpdated dcterms:description "The property \"vaem:lastUpdated\" is intended for general use as the name implies.  The range of the property is set as \"vaem:dateUnion\" so as to allow a value to have a number of forms from a  year only to a full timestamp"^^xsd:string .

vaem:logo a owl:AnnotationProperty ;
    dcterms:description "The property \"vaem:logo\" is a reference to an image that is used for publishing the ontology\""^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:range xsd:anyURI .

vaem:ownedBy dcterms:description "The property \"vaem:ownedBy\" is a general property that in some cases could have scalar values or may refer to some concept of \"Party\".  For this reason, the  type of this property is set as \"rdf:Property\" and the property is rangeless. There are two sub-properties of \"vaem:ownedBy\", namely \"vaem:owner\" for string values and \"vaem:owningParty\" for referencing a party.  Ownership applies to those ontologies that are proprietary"^^xsd:string .

vaem:owningParty dcterms:description "The property \"vaem:owningParty\" is used to refer to some concept of \"Party\" and is a sub-property of \"vaem:ownedBy\""^^xsd:string .

vaem:rationale a owl:DatatypeProperty ;
    rdfs:label "rationale"^^xsd:string ;
    dcterms:description "A description of a justification for some other assertion or value"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:range xsd:string .

vaem:reifiableBy a owl:ObjectProperty ;
    rdfs:label "reifiable by"^^xsd:string ;
    dcterms:description "To express how statements in a model can be reifiable, this property is used to explicitly associate a property with a user-defined sub-class of \"rdf:Statement\". A recommended way of using this is to declare the properties that share the same reification constructs as sub-properties of a parent property that carries the \"vaem:reifiableBy\" property. The parent property should be of type \"rdf:Property\" so that it can have both datatype and object properties as sub-properties. By this means use and transformations of a model can be understood through a fully specified metamodel. \"vaem:reifiableBy\" is rangeless in order to comply with OWL DL semantics. Its range would have been rdfs:Class in order to refer to \"rdf:Statement\" sub-classes"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> .

vaem:releaseDate a owl:DatatypeProperty ;
    rdfs:label "release date"^^xsd:string ;
    dcterms:description "The property \"vaem:releaseDate\" is intended for general use as the name implies.  The range of the property is set as \"vaem:dateUnion\" so as to allow a value to have a number of forms from a  year only to a full timestamp"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:subPropertyOf vaem:date .

vaem:title a owl:DatatypeProperty ;
    rdfs:label "title"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:range xsd:string .

vaem:todo a owl:AnnotationProperty ;
    rdfs:label "todo"^^xsd:string ;
    dcterms:description "As it name implies, a way to attach an annotation about a \"todo\" task"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:range xsd:string .

vaem:usesNonImportedResource a owl:AnnotationProperty ;
    rdfs:label "uses non-imported resource"^^xsd:string ;
    dcterms:description "The property \"vaem:usesNonImportedResource\" is used to express dependencies on resources from graphs that are not imported"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:range rdfs:Resource .

vaem:withAttributionTo a owl:AnnotationProperty ;
    rdfs:label "with attribution to"^^xsd:string ;
    dcterms:description "The property \"vaem:withAttributionTo\" is an annotation property that is either used to hold either a string or a reference to an instance of \"voag:Attribution\", from the VOAG ontology"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> .

skos:altLabel a rdf:Property,
        owl:AnnotationProperty ;
    rdfs:label "alternative label"@en ;
    rdfs:comment "The range of skos:altLabel is the class of RDF plain literals."@en,
        "skos:prefLabel, skos:altLabel and skos:hiddenLabel are pairwise disjoint properties."@en ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    rdfs:subPropertyOf rdfs:label ;
    skos:definition "An alternative lexical label for a resource."@en ;
    skos:example "Acronyms, abbreviations, spelling variants, and irregular plural/singular forms may be included among the alternative labels for a concept. Mis-spelled terms are normally included as hidden labels (see skos:hiddenLabel)."@en .

skos:changeNote a rdf:Property,
        owl:AnnotationProperty ;
    rdfs:label "change note"@en ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    rdfs:subPropertyOf skos:note ;
    skos:definition "A note about a modification to a concept."@en .

skos:definition a rdf:Property,
        owl:AnnotationProperty ;
    rdfs:label "definition"@en ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    rdfs:subPropertyOf skos:note ;
    skos:definition "A statement or formal explanation of the meaning of a concept."@en .

skos:editorialNote a rdf:Property,
        owl:AnnotationProperty ;
    rdfs:label "editorial note"@en ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    rdfs:subPropertyOf skos:note ;
    skos:definition "A note for an editor, translator or maintainer of the vocabulary."@en .

skos:example a rdf:Property,
        owl:AnnotationProperty ;
    rdfs:label "example"@en ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    rdfs:subPropertyOf skos:note ;
    skos:definition "An example of the use of a concept."@en .

skos:hiddenLabel a rdf:Property,
        owl:AnnotationProperty ;
    rdfs:label "hidden label"@en ;
    rdfs:comment "The range of skos:hiddenLabel is the class of RDF plain literals."@en,
        "skos:prefLabel, skos:altLabel and skos:hiddenLabel are pairwise disjoint properties."@en ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    rdfs:subPropertyOf rdfs:label ;
    skos:definition "A lexical label for a resource that should be hidden when generating visual displays of the resource, but should still be accessible to free text search operations."@en .

skos:historyNote a rdf:Property,
        owl:AnnotationProperty ;
    rdfs:label "history note"@en ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    rdfs:subPropertyOf skos:note ;
    skos:definition "A note about the past state/use/meaning of a concept."@en .

skos:member a rdf:Property,
        owl:ObjectProperty ;
    rdfs:label "has member"@en ;
    rdfs:domain skos:Collection ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    rdfs:range [ a owl:Class ;
            owl:unionOf ( skos:Concept skos:Collection ) ] ;
    skos:definition "Relates a collection to one of its members."@en .

skos:memberList a rdf:Property,
        owl:FunctionalProperty,
        owl:ObjectProperty ;
    rdfs:label "has member list"@en ;
    rdfs:comment """For any resource, every item in the list given as the value of the
      skos:memberList property is also a value of the skos:member property."""@en ;
    rdfs:domain skos:OrderedCollection ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    rdfs:range rdf:List ;
    skos:definition "Relates an ordered collection to the RDF list containing its members."@en .

skos:prefLabel a rdf:Property,
        owl:AnnotationProperty ;
    rdfs:label "preferred label"@en ;
    rdfs:comment "A resource has no more than one value of skos:prefLabel per language tag, and no more than one value of skos:prefLabel without language tag."@en,
        "The range of skos:prefLabel is the class of RDF plain literals."@en,
        """skos:prefLabel, skos:altLabel and skos:hiddenLabel are pairwise
      disjoint properties."""@en ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    rdfs:subPropertyOf rdfs:label ;
    skos:definition "The preferred lexical label for a resource, in a given language."@en .

skos:relatedMatch a rdf:Property,
        owl:ObjectProperty,
        owl:SymmetricProperty ;
    rdfs:label "has related match"@en ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    rdfs:subPropertyOf skos:mappingRelation,
        skos:related ;
    skos:definition "skos:relatedMatch is used to state an associative mapping link between two conceptual resources in different concept schemes."@en .

skos:scopeNote a rdf:Property,
        owl:AnnotationProperty ;
    rdfs:label "scope note"@en ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    rdfs:subPropertyOf skos:note ;
    skos:definition "A note that helps to clarify the meaning and/or the use of a concept."@en .

prov:wasDerivedFrom a rdf:Property ;
    rdfs:label "was derived from" ;
    rdfs:isDefinedBy <http://www.w3.org/ns/prov> .

sh:AndConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "And constraint component"@en ;
    rdfs:comment "A constraint component that can be used to test whether a value node conforms to all members of a provided list of shapes."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:AndConstraintComponent-and .

sh:ClassConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Class constraint component"@en ;
    rdfs:comment "A constraint component that can be used to verify that each value node is an instance of a given type."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:ClassConstraintComponent-class .

sh:ClosedConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Closed constraint component"@en ;
    rdfs:comment "A constraint component that can be used to indicate that focus nodes must only have values for those properties that have been explicitly enumerated via sh:property/sh:path."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:ClosedConstraintComponent-closed,
        sh:ClosedConstraintComponent-ignoredProperties .

sh:DatatypeConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Datatype constraint component"@en ;
    rdfs:comment "A constraint component that can be used to restrict the datatype of all value nodes."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:DatatypeConstraintComponent-datatype .

sh:DisjointConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Disjoint constraint component"@en ;
    rdfs:comment "A constraint component that can be used to verify that the set of value nodes is disjoint with the the set of nodes that have the focus node as subject and the value of a given property as predicate."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:DisjointConstraintComponent-disjoint .

sh:EqualsConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Equals constraint component"@en ;
    rdfs:comment "A constraint component that can be used to verify that the set of value nodes is equal to the set of nodes that have the focus node as subject and the value of a given property as predicate."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:EqualsConstraintComponent-equals .

sh:ExpressionConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Expression constraint component"@en ;
    rdfs:comment "A constraint component that can be used to verify that a given node expression produces true for all value nodes."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:ExpressionConstraintComponent-expression .

sh:HasValueConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Has-value constraint component"@en ;
    rdfs:comment "A constraint component that can be used to verify that one of the value nodes is a given RDF node."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:HasValueConstraintComponent-hasValue .

sh:InConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "In constraint component"@en ;
    rdfs:comment "A constraint component that can be used to exclusively enumerate the permitted value nodes."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:InConstraintComponent-in .

sh:JSConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "JavaScript constraint component"@en ;
    rdfs:comment "A constraint component with the parameter sh:js linking to a sh:JSConstraint containing a sh:script."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:JSConstraint-js .

sh:LanguageInConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Language-in constraint component"@en ;
    rdfs:comment "A constraint component that can be used to enumerate language tags that all value nodes must have."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:LanguageInConstraintComponent-languageIn .

sh:LessThanConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Less-than constraint component"@en ;
    rdfs:comment "A constraint component that can be used to verify that each value node is smaller than all the nodes that have the focus node as subject and the value of a given property as predicate."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:LessThanConstraintComponent-lessThan .

sh:LessThanOrEqualsConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "less-than-or-equals constraint component"@en ;
    rdfs:comment "A constraint component that can be used to verify that every value node is smaller than all the nodes that have the focus node as subject and the value of a given property as predicate."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:LessThanOrEqualsConstraintComponent-lessThanOrEquals .

sh:MaxCountConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Max-count constraint component"@en ;
    rdfs:comment "A constraint component that can be used to restrict the maximum number of value nodes."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:MaxCountConstraintComponent-maxCount .

sh:MaxExclusiveConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Max-exclusive constraint component"@en ;
    rdfs:comment "A constraint component that can be used to restrict the range of value nodes with a maximum exclusive value."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:MaxExclusiveConstraintComponent-maxExclusive .

sh:MaxInclusiveConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Max-inclusive constraint component"@en ;
    rdfs:comment "A constraint component that can be used to restrict the range of value nodes with a maximum inclusive value."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:MaxInclusiveConstraintComponent-maxInclusive .

sh:MaxLengthConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Max-length constraint component"@en ;
    rdfs:comment "A constraint component that can be used to restrict the maximum string length of value nodes."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:MaxLengthConstraintComponent-maxLength .

sh:MinCountConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Min-count constraint component"@en ;
    rdfs:comment "A constraint component that can be used to restrict the minimum number of value nodes."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:MinCountConstraintComponent-minCount .

sh:MinExclusiveConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Min-exclusive constraint component"@en ;
    rdfs:comment "A constraint component that can be used to restrict the range of value nodes with a minimum exclusive value."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:MinExclusiveConstraintComponent-minExclusive .

sh:MinInclusiveConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Min-inclusive constraint component"@en ;
    rdfs:comment "A constraint component that can be used to restrict the range of value nodes with a minimum inclusive value."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:MinInclusiveConstraintComponent-minInclusive .

sh:MinLengthConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Min-length constraint component"@en ;
    rdfs:comment "A constraint component that can be used to restrict the minimum string length of value nodes."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:MinLengthConstraintComponent-minLength .

sh:NodeConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Node constraint component"@en ;
    rdfs:comment "A constraint component that can be used to verify that all value nodes conform to the given node shape."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:NodeConstraintComponent-node .

sh:NodeKindConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Node-kind constraint component"@en ;
    rdfs:comment "A constraint component that can be used to restrict the RDF node kind of each value node."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:NodeKindConstraintComponent-nodeKind .

sh:NotConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Not constraint component"@en ;
    rdfs:comment "A constraint component that can be used to verify that value nodes do not conform to a given shape."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:NotConstraintComponent-not .

sh:OrConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Or constraint component"@en ;
    rdfs:comment "A constraint component that can be used to restrict the value nodes so that they conform to at least one out of several provided shapes."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:OrConstraintComponent-or .

sh:PatternConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Pattern constraint component"@en ;
    rdfs:comment "A constraint component that can be used to verify that every value node matches a given regular expression."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:PatternConstraintComponent-flags,
        sh:PatternConstraintComponent-pattern .

sh:PropertyConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Property constraint component"@en ;
    rdfs:comment "A constraint component that can be used to verify that all value nodes conform to the given property shape."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:PropertyConstraintComponent-property .

sh:QualifiedMaxCountConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Qualified-max-count constraint component"@en ;
    rdfs:comment "A constraint component that can be used to verify that a specified maximum number of value nodes conforms to a given shape."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:QualifiedMaxCountConstraintComponent-qualifiedMaxCount,
        sh:QualifiedMaxCountConstraintComponent-qualifiedValueShape,
        sh:QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint .

sh:QualifiedMinCountConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Qualified-min-count constraint component"@en ;
    rdfs:comment "A constraint component that can be used to verify that a specified minimum number of value nodes conforms to a given shape."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:QualifiedMinCountConstraintComponent-qualifiedMinCount,
        sh:QualifiedMinCountConstraintComponent-qualifiedValueShape,
        sh:QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint .

sh:SPARQLConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "SPARQL constraint component"@en ;
    rdfs:comment "A constraint component that can be used to define constraints based on SPARQL queries."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:SPARQLConstraintComponent-sparql .

sh:UniqueLangConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Unique-languages constraint component"@en ;
    rdfs:comment "A constraint component that can be used to specify that no pair of value nodes may use the same language tag."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:UniqueLangConstraintComponent-uniqueLang .

sh:Violation a sh:Severity ;
    rdfs:label "Violation"@en ;
    rdfs:comment "The severity for a violation validation result."@en ;
    rdfs:isDefinedBy sh: .

sh:XoneConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Exactly one constraint component"@en ;
    rdfs:comment "A constraint component that can be used to restrict the value nodes so that they conform to exactly one out of several provided shapes."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:XoneConstraintComponent-xone .

sh:alternativePath a rdf:Property ;
    rdfs:label "alternative path"@en ;
    rdfs:comment "The (single) value of this property must be a list of path elements, representing the elements of alternative paths."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdf:List .

sh:annotationProperty a rdf:Property ;
    rdfs:label "annotation property"@en ;
    rdfs:comment "The annotation property that shall be set."@en ;
    rdfs:domain sh:ResultAnnotation ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdf:Property .

sh:annotationValue a rdf:Property ;
    rdfs:label "annotation value"@en ;
    rdfs:comment "The (default) values of the annotation property."@en ;
    rdfs:domain sh:ResultAnnotation ;
    rdfs:isDefinedBy sh: .

sh:annotationVarName a rdf:Property ;
    rdfs:label "annotation variable name"@en ;
    rdfs:comment "The name of the SPARQL variable from the SELECT clause that shall be used for the values."@en ;
    rdfs:domain sh:ResultAnnotation ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:string .

sh:ask a rdf:Property ;
    rdfs:label "ask"@en ;
    rdfs:comment "The SPARQL ASK query to execute."@en ;
    rdfs:domain sh:SPARQLAskExecutable ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:string .

sh:condition a rdf:Property ;
    rdfs:label "condition"@en ;
    rdfs:comment "The shapes that the focus nodes need to conform to before a rule is executed on them."@en ;
    rdfs:domain sh:Rule ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:Shape .

sh:conforms a rdf:Property ;
    rdfs:label "conforms"@en ;
    rdfs:comment "True if the validation did not produce any validation results, and false otherwise."@en ;
    rdfs:domain sh:ValidationReport ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:boolean .

sh:construct a rdf:Property ;
    rdfs:label "construct"@en ;
    rdfs:comment "The SPARQL CONSTRUCT query to execute."@en ;
    rdfs:domain sh:SPARQLConstructExecutable ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:string .

sh:deactivated a rdf:Property ;
    rdfs:label "deactivated"@en ;
    rdfs:comment "If set to true then all nodes conform to this."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:boolean .

sh:declare a rdf:Property ;
    rdfs:label "declare"@en ;
    rdfs:comment "Links a resource with its namespace prefix declarations."@en ;
    rdfs:domain owl:Ontology ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:PrefixDeclaration .

sh:defaultValue a rdf:Property ;
    rdfs:label "default value"@en ;
    rdfs:comment "A default value for a property, for example for user interface tools to pre-populate input fields."@en ;
    rdfs:domain sh:PropertyShape ;
    rdfs:isDefinedBy sh: .

sh:description a rdf:Property ;
    rdfs:label "description"@en ;
    rdfs:comment "Human-readable descriptions for the property in the context of the surrounding shape."@en ;
    rdfs:domain sh:PropertyShape ;
    rdfs:isDefinedBy sh: .

sh:detail a rdf:Property ;
    rdfs:label "detail"@en ;
    rdfs:comment "Links a result with other results that provide more details, for example to describe violations against nested shapes."@en ;
    rdfs:domain sh:AbstractResult ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:AbstractResult .

sh:entailment a rdf:Property ;
    rdfs:label "entailment"@en ;
    rdfs:comment "An entailment regime that indicates what kind of inferencing is required by a shapes graph."@en ;
    rdfs:domain owl:Ontology ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdfs:Resource .

sh:filterShape a rdf:Property ;
    rdfs:label "filter shape"@en ;
    rdfs:comment "The shape that all input nodes of the expression need to conform to."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:Shape .

sh:focusNode a rdf:Property ;
    rdfs:label "focus node"@en ;
    rdfs:comment "The focus node that was validated when the result was produced."@en ;
    rdfs:domain sh:AbstractResult ;
    rdfs:isDefinedBy sh: .

sh:group a rdf:Property ;
    rdfs:label "group"@en ;
    rdfs:comment "Can be used to link to a property group to indicate that a property shape belongs to a group of related property shapes."@en ;
    rdfs:domain sh:PropertyShape ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:PropertyGroup .

sh:intersection a rdf:Property ;
    rdfs:label "intersection"@en ;
    rdfs:comment "A list of node expressions that shall be intersected."@en ;
    rdfs:isDefinedBy sh: .

sh:inversePath a rdf:Property ;
    rdfs:label "inverse path"@en ;
    rdfs:comment "The (single) value of this property represents an inverse path (object to subject)."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdfs:Resource .

sh:jsFunctionName a rdf:Property ;
    rdfs:label "JavaScript function name"@en ;
    rdfs:comment "The name of the JavaScript function to execute."@en ;
    rdfs:domain sh:JSExecutable ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:string .

sh:jsLibrary a rdf:Property ;
    rdfs:label "JavaScript library"@en ;
    rdfs:comment "Declares which JavaScript libraries are needed to execute this."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:JSLibrary .

sh:jsLibraryURL a rdf:Property ;
    rdfs:label "JavaScript library URL"@en ;
    rdfs:comment "Declares the URLs of a JavaScript library. This should be the absolute URL of a JavaScript file. Implementations may redirect those to local files."@en ;
    rdfs:domain sh:JSLibrary ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:anyURI .

sh:labelTemplate a rdf:Property ;
    rdfs:label "label template"@en ;
    rdfs:comment "Outlines how human-readable labels of instances of the associated Parameterizable shall be produced. The values can contain {?paramName} as placeholders for the actual values of the given parameter."@en ;
    rdfs:domain sh:Parameterizable ;
    rdfs:isDefinedBy sh: .

sh:message a rdf:Property ;
    rdfs:label "message"@en ;
    rdfs:comment "A human-readable message (possibly with placeholders for variables) explaining the cause of the result."@en ;
    rdfs:isDefinedBy sh: .

sh:name a rdf:Property ;
    rdfs:label "name"@en ;
    rdfs:comment "Human-readable labels for the property in the context of the surrounding shape."@en ;
    rdfs:domain sh:PropertyShape ;
    rdfs:isDefinedBy sh: .

sh:namespace a rdf:Property ;
    rdfs:label "namespace"@en ;
    rdfs:comment "The namespace associated with a prefix in a prefix declaration."@en ;
    rdfs:domain sh:PrefixDeclaration ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:anyURI .

sh:nodeValidator a rdf:Property ;
    rdfs:label "shape validator"@en ;
    rdfs:comment "The validator(s) used to evaluate a constraint in the context of a node shape."@en ;
    rdfs:domain sh:ConstraintComponent ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:Validator .

sh:nodes a rdf:Property ;
    rdfs:label "nodes"@en ;
    rdfs:comment "The node expression producing the input nodes of a filter shape expression."@en ;
    rdfs:isDefinedBy sh: .

sh:object a rdf:Property ;
    rdfs:label "object"@en ;
    rdfs:comment "An expression producing the nodes that shall be inferred as objects."@en ;
    rdfs:domain sh:TripleRule ;
    rdfs:isDefinedBy sh: .

sh:oneOrMorePath a rdf:Property ;
    rdfs:label "one or more path"@en ;
    rdfs:comment "The (single) value of this property represents a path that is matched one or more times."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdfs:Resource .

sh:optional a rdf:Property ;
    rdfs:label "optional"@en ;
    rdfs:comment "Indicates whether a parameter is optional."@en ;
    rdfs:domain sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:boolean .

sh:order a rdf:Property ;
    rdfs:label "order"@en ;
    rdfs:comment "Specifies the relative order of this compared to its siblings. For example use 0 for the first, 1 for the second."@en ;
    rdfs:isDefinedBy sh: .

sh:parameter a rdf:Property ;
    rdfs:label "parameter"@en ;
    rdfs:comment "The parameters of a function or constraint component."@en ;
    rdfs:domain sh:Parameterizable ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:Parameter .

sh:path a rdf:Property ;
    rdfs:label "path"@en ;
    rdfs:comment "Specifies the property path of a property shape."@en ;
    rdfs:domain sh:PropertyShape ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdfs:Resource .

sh:predicate a rdf:Property ;
    rdfs:label "predicate"@en ;
    rdfs:comment "An expression producing the properties that shall be inferred as predicates."@en ;
    rdfs:domain sh:TripleRule ;
    rdfs:isDefinedBy sh: .

sh:prefix a rdf:Property ;
    rdfs:label "prefix"@en ;
    rdfs:comment "The prefix of a prefix declaration."@en ;
    rdfs:domain sh:PrefixDeclaration ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:string .

sh:prefixes a rdf:Property ;
    rdfs:label "prefixes"@en ;
    rdfs:comment "The prefixes that shall be applied before parsing the associated SPARQL query."@en ;
    rdfs:domain sh:SPARQLExecutable ;
    rdfs:isDefinedBy sh: ;
    rdfs:range owl:Ontology .

sh:propertyValidator a rdf:Property ;
    rdfs:label "property validator"@en ;
    rdfs:comment "The validator(s) used to evaluate a constraint in the context of a property shape."@en ;
    rdfs:domain sh:ConstraintComponent ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:Validator .

sh:result a rdf:Property ;
    rdfs:label "result"@en ;
    rdfs:comment "The validation results contained in a validation report."@en ;
    rdfs:domain sh:ValidationReport ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:ValidationResult .

sh:resultAnnotation a rdf:Property ;
    rdfs:label "result annotation"@en ;
    rdfs:comment "Links a SPARQL validator with zero or more sh:ResultAnnotation instances, defining how to derive additional result properties based on the variables of the SELECT query."@en ;
    rdfs:domain sh:SPARQLSelectValidator ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:ResultAnnotation .

sh:resultMessage a rdf:Property ;
    rdfs:label "result message"@en ;
    rdfs:comment "Human-readable messages explaining the cause of the result."@en ;
    rdfs:domain sh:AbstractResult ;
    rdfs:isDefinedBy sh: .

sh:resultPath a rdf:Property ;
    rdfs:label "result path"@en ;
    rdfs:comment "The path of a validation result, based on the path of the validated property shape."@en ;
    rdfs:domain sh:AbstractResult ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdfs:Resource .

sh:resultSeverity a rdf:Property ;
    rdfs:label "result severity"@en ;
    rdfs:comment "The severity of the result, e.g. warning."@en ;
    rdfs:domain sh:AbstractResult ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:Severity .

sh:returnType a rdf:Property ;
    rdfs:label "return type"@en ;
    rdfs:comment "The expected type of values returned by the associated function."@en ;
    rdfs:domain sh:Function ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdfs:Class .

sh:rule a rdf:Property ;
    rdfs:label "rule"@en ;
    rdfs:comment "The rules linked to a shape."@en ;
    rdfs:domain sh:Shape ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:Rule .

sh:select a rdf:Property ;
    rdfs:label "select"@en ;
    rdfs:comment "The SPARQL SELECT query to execute."@en ;
    rdfs:domain sh:SPARQLSelectExecutable ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:string .

sh:severity a rdf:Property ;
    rdfs:label "severity"@en ;
    rdfs:comment "Defines the severity that validation results produced by a shape must have. Defaults to sh:Violation."@en ;
    rdfs:domain sh:Shape ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:Severity .

sh:shapesGraph a rdf:Property ;
    rdfs:label "shapes graph"@en ;
    rdfs:comment "Shapes graphs that should be used when validating this data graph."@en ;
    rdfs:domain owl:Ontology ;
    rdfs:isDefinedBy sh: ;
    rdfs:range owl:Ontology .

sh:shapesGraphWellFormed a rdf:Property ;
    rdfs:label "shapes graph well-formed"@en ;
    rdfs:comment "If true then the validation engine was certain that the shapes graph has passed all SHACL syntax requirements during the validation process."@en ;
    rdfs:domain sh:ValidationReport ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:boolean .

sh:sourceConstraint a rdf:Property ;
    rdfs:label "source constraint"@en ;
    rdfs:comment "The constraint that was validated when the result was produced."@en ;
    rdfs:domain sh:AbstractResult ;
    rdfs:isDefinedBy sh: .

sh:sourceConstraintComponent a rdf:Property ;
    rdfs:label "source constraint component"@en ;
    rdfs:comment "The constraint component that is the source of the result."@en ;
    rdfs:domain sh:AbstractResult ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:ConstraintComponent .

sh:sourceShape a rdf:Property ;
    rdfs:label "source shape"@en ;
    rdfs:comment "The shape that is was validated when the result was produced."@en ;
    rdfs:domain sh:AbstractResult ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:Shape .

sh:subject a rdf:Property ;
    rdfs:label "subject"@en ;
    rdfs:comment "An expression producing the resources that shall be inferred as subjects."@en ;
    rdfs:domain sh:TripleRule ;
    rdfs:isDefinedBy sh: .

sh:suggestedShapesGraph a rdf:Property ;
    rdfs:label "suggested shapes graph"@en ;
    rdfs:comment "Suggested shapes graphs for this ontology. The values of this property may be used in the absence of specific sh:shapesGraph statements."@en ;
    rdfs:domain owl:Ontology ;
    rdfs:isDefinedBy sh: ;
    rdfs:range owl:Ontology .

sh:target a rdf:Property ;
    rdfs:label "target"@en ;
    rdfs:comment "Links a shape to a target specified by an extension language, for example instances of sh:SPARQLTarget."@en ;
    rdfs:domain sh:Shape ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:Target .

sh:targetClass a rdf:Property ;
    rdfs:label "target class"@en ;
    rdfs:comment "Links a shape to a class, indicating that all instances of the class must conform to the shape."@en ;
    rdfs:domain sh:Shape ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdfs:Class .

sh:targetNode a rdf:Property ;
    rdfs:label "target node"@en ;
    rdfs:comment "Links a shape to individual nodes, indicating that these nodes must conform to the shape."@en ;
    rdfs:domain sh:Shape ;
    rdfs:isDefinedBy sh: .

sh:targetObjectsOf a rdf:Property ;
    rdfs:label "target objects of"@en ;
    rdfs:comment "Links a shape to a property, indicating that all all objects of triples that have the given property as their predicate must conform to the shape."@en ;
    rdfs:domain sh:Shape ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdf:Property .

sh:targetSubjectsOf a rdf:Property ;
    rdfs:label "target subjects of"@en ;
    rdfs:comment "Links a shape to a property, indicating that all subjects of triples that have the given property as their predicate must conform to the shape."@en ;
    rdfs:domain sh:Shape ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdf:Property .

sh:union a rdf:Property ;
    rdfs:label "union"@en ;
    rdfs:comment "A list of node expressions that shall be used together."@en ;
    rdfs:isDefinedBy sh: .

sh:update a rdf:Property ;
    rdfs:label "update"@en ;
    rdfs:comment "The SPARQL UPDATE to execute."@en ;
    rdfs:domain sh:SPARQLUpdateExecutable ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:string .

sh:validator a rdf:Property ;
    rdfs:label "validator"@en ;
    rdfs:comment "The validator(s) used to evaluate constraints of either node or property shapes."@en ;
    rdfs:domain sh:ConstraintComponent ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:Validator .

sh:value a rdf:Property ;
    rdfs:label "value"@en ;
    rdfs:comment "An RDF node that has caused the result."@en ;
    rdfs:domain sh:AbstractResult ;
    rdfs:isDefinedBy sh: .

sh:zeroOrMorePath a rdf:Property ;
    rdfs:label "zero or more path"@en ;
    rdfs:comment "The (single) value of this property represents a path that is matched zero or more times."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdfs:Resource .

sh:zeroOrOnePath a rdf:Property ;
    rdfs:label "zero or one path"@en ;
    rdfs:comment "The (single) value of this property represents a path that is matched zero or one times."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdfs:Resource .

sosa:hasSimpleResult a owl:DatatypeProperty ;
    rdfs:label "has simple result"@en ;
    sdo1:domainIncludes sosa:Actuation,
        sosa:Observation,
        sosa:Sampling ;
    rdfs:comment "The simple value of an Observation or Actuation or act of Sampling."@en ;
    rdfs:isDefinedBy sosa: ;
    skos:definition "The simple value of an Observation or Actuation or act of Sampling."@en ;
    skos:example "For instance, the values 23 or true."@en .

sosa:observedProperty a owl:ObjectProperty ;
    rdfs:label "observed property"@en ;
    sdo1:domainIncludes sosa:Observation ;
    sdo1:rangeIncludes sosa:ObservableProperty ;
    rdfs:comment "Relation linking an Observation to the property that was observed. The ObservableProperty should be a property of the FeatureOfInterest (linked by hasFeatureOfInterest) of this Observation."@en ;
    rdfs:isDefinedBy sosa: ;
    skos:definition "Relation linking an Observation to the property that was observed. The ObservableProperty should be a property of the FeatureOfInterest (linked by hasFeatureOfInterest) of this Observation."@en .

sosa:phenomenonTime a owl:ObjectProperty ;
    rdfs:label "phenomenon time"@en ;
    sdo1:domainIncludes sosa:Actuation,
        sosa:Observation,
        sosa:Sampling ;
    sdo1:rangeIncludes time:TemporalEntity ;
    rdfs:comment "The time that the Result of an Observation, Actuation or Sampling applies to the FeatureOfInterest. Not necessarily the same as the resultTime. May be an Interval or an Instant, or some other compound TemporalEntity."@en ;
    rdfs:isDefinedBy sosa: ;
    skos:definition "The time that the Result of an Observation, Actuation or Sampling applies to the FeatureOfInterest. Not necessarily the same as the resultTime. May be an Interval or an Instant, or some other compound TemporalEntity."@en .

sosa:resultTime a owl:DatatypeProperty ;
    rdfs:label "result time"@en ;
    sdo1:domainIncludes sosa:Actuation,
        sosa:Observation,
        sosa:Sampling ;
    rdfs:comment "The result time is the instant of time when the Observation, Actuation or Sampling activity was completed."@en ;
    rdfs:isDefinedBy sosa: ;
    rdfs:range xsd:dateTime ;
    skos:definition "The result time is the instant of time when the Observation, Actuation or Sampling activity was completed."@en .

sosa:usedProcedure a owl:ObjectProperty ;
    rdfs:label "used procedure"@en ;
    sdo1:domainIncludes sosa:Actuation,
        sosa:Observation,
        sosa:Sampling ;
    sdo1:rangeIncludes sosa:Procedure ;
    rdfs:comment "A relation to link to a re-usable Procedure used in making an Observation, an Actuation, or a Sample, typically through a Sensor, Actuator or Sampler."@en ;
    rdfs:isDefinedBy sosa: ;
    skos:definition "A relation to link to a re-usable Procedure used in making an Observation, an Actuation, or a Sample, typically through a Sensor, Actuator or Sampler."@en .

foaf:name a owl:AnnotationProperty .

brick:Ablutions_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Ablutions Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A room for performing cleansing rituals before prayer"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Ablutions ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Ablutions,
        tag:Location,
        tag:Room,
        tag:Space .

brick:Absolute_Humidity a brick:Quantity ;
    rdfs:label "Absolute Humidity" ;
    qudt:applicableUnit unit:GRAIN-PER-GAL,
        unit:KiloGM-PER-M3,
        unit:LB-PER-FT3,
        unit:LB-PER-GAL,
        unit:LB-PER-GAL_UK,
        unit:LB-PER-GAL_US,
        unit:LB-PER-IN3,
        unit:LB-PER-M3,
        unit:LB-PER-YD3,
        unit:MilliGM-PER-DeciL,
        unit:OZ_PER-GAL,
        unit:OZ_PER-IN3,
        unit:PlanckDensity,
        unit:SLUG-PER-FT3,
        unit:TON_LONG-PER-YD3,
        unit:TON_SHORT-PER-YD3,
        unit:TON_UK-PER-YD3,
        unit:TON_US-PER-YD3 ;
    skos:broader brick:Humidity ;
    brick:hasQUDTReference quantitykind:AbsoluteHumidity .

brick:Absorption_Chiller a owl:Class,
        sh:NodeShape ;
    rdfs:label "Absorption Chiller" ;
    rdfs:subClassOf brick:Chiller ;
    skos:definition "A chiller that utilizes a thermal or/and chemical process to produce the refrigeration effect necessary to provide chilled water. There is no mechanical compression of the refrigerant taking place within the machine, as occurs within more traditional vapor compression type chillers."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Absorption ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Chiller ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Absorption,
        tag:Chiller,
        tag:Equipment .

brick:Acceleration_Time a brick:Quantity ;
    rdfs:label "Acceleration Time" ;
    skos:broader brick:Time .

brick:Acceleration_Time_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Acceleration Time Setpoint" ;
    rdfs:subClassOf brick:Time_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Acceleration ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Acceleration,
        tag:Point,
        tag:Setpoint,
        tag:Time .

brick:Access_Reader a owl:Class,
        sh:NodeShape ;
    rdfs:label "Access Reader" ;
    rdfs:subClassOf brick:Access_Control_Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Access ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Control ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reader ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Security ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Access,
        tag:Control,
        tag:Equipment,
        tag:Reader,
        tag:Security .

brick:Active_Chilled_Beam a owl:Class,
        sh:NodeShape ;
    rdfs:label "Active Chilled Beam" ;
    rdfs:subClassOf brick:Chilled_Beam ;
    skos:definition "A Chilled Beam with an integral primary air connection that induces air flow through the device."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Active ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Beam ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Active,
        tag:Beam,
        tag:Chilled,
        tag:Equipment .

brick:Active_Energy a brick:Quantity ;
    rdfs:label "Active_Energy" ;
    qudt:applicableUnit unit:KiloW-HR,
        unit:MegaW-HR,
        unit:W-HR ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader brick:Electric_Energy ;
    skos:definition "The integral of the active power over a time interval" .

brick:Active_Power_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Active Power Sensor" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/AC_power#Active,_reactive,_and_apparent_power> ;
    rdfs:subClassOf brick:Electric_Power_Sensor ;
    skos:definition "Measures the portion of power that, averaged over a complete cycle of the AC waveform, results in net transfer of energy in one direction"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Electric ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Power ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Real ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Electric,
        tag:Point,
        tag:Power,
        tag:Real,
        tag:Sensor ;
    brick:hasQuantity brick:Active_Power .

brick:Air_Flow_Loss_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Flow Loss Alarm" ;
    rdfs:subClassOf brick:Air_Flow_Alarm ;
    skos:definition "An alarm that indicates loss in air flow."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Loss ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Flow,
        tag:Loss,
        tag:Point .

brick:Air_Loop a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Loop" ;
    rdfs:subClassOf brick:Loop ;
    skos:definition "The set of connected equipment serving one path of air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Loop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Loop .

brick:Alarm_Delay_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Alarm Delay Parameter" ;
    rdfs:subClassOf brick:Delay_Parameter ;
    skos:definition "A parameter determining how long to delay an alarm after sufficient conditions have been met"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Delay ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Delay,
        tag:Parameter,
        tag:Point .

brick:Alarm_Sensitivity_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Alarm Sensitivity Parameter" ;
    rdfs:subClassOf brick:Parameter ;
    skos:definition "A parameter indicates the sensitivity to activate an alarm."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensitivity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Parameter,
        tag:Point,
        tag:Sensitivity .

brick:Alternating_Current_Frequency a brick:Quantity ;
    rdfs:label "Alternating_Current_Frequency" ;
    qudt:applicableUnit unit:GigaHZ,
        unit:HZ,
        unit:KiloHZ,
        unit:MegaHZ ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Frequency,
        brick:Frequency ;
    skos:definition "The frequency of the oscillations of alternating current",
        "The frequency of the oscillations of alternating current"@en ;
    skos:related brick:Electric_Current .

brick:Apparent_Energy a brick:Quantity ;
    rdfs:label "Apparent_Energy" ;
    qudt:applicableUnit unit:KiloV-A-HR ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader brick:Electric_Energy ;
    skos:definition "The integral of the apparent power over a time interval" .

brick:Apparent_Power a brick:Quantity ;
    rdfs:label "Apparent Power" ;
    qudt:applicableUnit unit:KiloV-A,
        unit:MegaV-A,
        unit:V-A ;
    skos:broader brick:Electric_Power ;
    skos:definition "Apparent Power is the product of the rms voltage (U) between the terminals of a two-terminal element or two-terminal circuit and the rms electric current I in the element or circuit. Under sinusoidal conditions, the apparent power is the modulus of the complex power."@en ;
    brick:hasQUDTReference quantitykind:ApparentPower .

brick:Atmospheric_Pressure a brick:Quantity ;
    rdfs:label "Atmospheric Pressure" ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CM_H2O,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PlanckPressure,
        unit:TORR ;
    skos:broader brick:Pressure ;
    skos:definition "The pressure exerted by the weight of the air above it at any point on the earth's surface. At sea level the atmosphere will support a column of mercury about (760 mm) high. This decreases with increasing altitude. The standard value for the atmospheric pressure at sea level in SI units is (101,325 pascals)."@en ;
    brick:hasQUDTReference quantitykind:AtmosphericPressure .

brick:Atrium a owl:Class,
        sh:NodeShape ;
    rdfs:label "Atrium" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Atrium_(architecture)> ;
    rdfs:subClassOf brick:Common_Space ;
    skos:definition "a large open-air or skylight covered space surrounded by a building."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Atrium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Common ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Atrium,
        tag:Common,
        tag:Location,
        tag:Space .

brick:Auditorium a owl:Class,
        sh:NodeShape ;
    rdfs:label "Auditorium" ;
    rdfs:subClassOf brick:Common_Space ;
    skos:definition "A space for performances or larger gatherings"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Auditorium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Common ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Auditorium,
        tag:Common,
        tag:Location,
        tag:Space .

brick:Automatic_Mode_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Automatic Mode Command" ;
    rdfs:subClassOf brick:Mode_Command ;
    skos:definition "Controls whether or not a device or controller is operating in \"Automatic\" mode"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Automatic ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mode ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Automatic,
        tag:Command,
        tag:Mode,
        tag:Point .

brick:Automatic_Tint_Window a owl:Class,
        sh:NodeShape ;
    rdfs:label "Automatic Tint Window" ;
    rdfs:subClassOf brick:Shading_Equipment ;
    skos:definition "A window with tint control."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Automatic ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shade ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Tint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Window ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Automatic,
        tag:Equipment,
        tag:Shade,
        tag:Tint,
        tag:Window .

brick:Availability_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Availability Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if a piece of equipment, system, or functionality is available for operation"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Availability ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Availability,
        tag:Point,
        tag:Status .

brick:Average_Cooling_Demand_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Average Cooling Demand Sensor" ;
    rdfs:subClassOf brick:Cooling_Demand_Sensor ;
    skos:definition "Measures the average power consumed by a cooling process as the amount of power consumed over some interval"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Average ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Demand ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Average,
        tag:Cool,
        tag:Demand,
        tag:Point,
        tag:Sensor .

brick:Average_Exhaust_Air_Static_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Average Exhaust Air Static Pressure Sensor" ;
    rdfs:subClassOf brick:Exhaust_Air_Static_Pressure_Sensor ;
    skos:definition "The computed average static pressure of air in exhaust regions of an HVAC system over some period of time"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Average ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Average,
        tag:Exhaust,
        tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Static .

brick:Average_Heating_Demand_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Average Heating Demand Sensor" ;
    rdfs:subClassOf brick:Heating_Demand_Sensor ;
    skos:definition "Measures the average power consumed by a heating process as the amount of power consumed over some interval"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Average ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Demand ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Average,
        tag:Demand,
        tag:Heat,
        tag:Point,
        tag:Sensor .

brick:Average_Supply_Air_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Average Supply Air Flow Sensor" ;
    rdfs:subClassOf brick:Supply_Air_Flow_Sensor ;
    owl:equivalentClass brick:Average_Discharge_Air_Flow_Sensor ;
    skos:definition "The computed average flow of supply air over some interval"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Average ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Average,
        tag:Flow,
        tag:Point,
        tag:Sensor,
        tag:Supply .

brick:Average_Zone_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Average Zone Air Temperature Sensor" ;
    rdfs:subClassOf brick:Zone_Air_Temperature_Sensor ;
    skos:definition "The computed average temperature of air in a zone, over some period of time"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Average ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Average,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Zone .

brick:Basement a owl:Class,
        sh:NodeShape ;
    rdfs:label "Basement" ;
    rdfs:subClassOf brick:Floor ;
    skos:definition "The floor of a building which is partly or entirely below ground level."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Basement ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Floor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Basement,
        tag:Floor,
        tag:Location .

brick:Battery a owl:Class,
        sh:NodeShape ;
    rdfs:label "Battery" ;
    rdfs:subClassOf brick:Energy_Storage ;
    skos:definition "A container that stores chemical energy that can be converted into electricity and used as a source of power"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Battery ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Energy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Storage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Battery,
        tag:Energy,
        tag:Equipment,
        tag:Storage .

brick:Battery_Energy_Storage_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Battery Energy Storage System" ;
    rdfs:subClassOf brick:Energy_Storage_System ;
    skos:definition "A collection of batteries that provides energy storage, along with their supporting equipment"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Battery ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Energy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Storage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Battery,
        tag:Energy,
        tag:Storage,
        tag:System .

brick:Battery_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Battery Room" ;
    rdfs:subClassOf brick:Electrical_Room ;
    skos:definition "A room used to hold batteries for backup power"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Battery ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Electrical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Service ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Battery,
        tag:Electrical,
        tag:Location,
        tag:Room,
        tag:Service,
        tag:Space .

brick:Battery_Voltage_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Battery Voltage Sensor" ;
    rdfs:subClassOf brick:Voltage_Sensor ;
    skos:definition "Measures the capacity of a battery"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Battery ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Voltage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Battery,
        tag:Point,
        tag:Sensor,
        tag:Voltage .

brick:Bench_Space a owl:Class,
        sh:NodeShape ;
    rdfs:label "Bench Space" ;
    rdfs:subClassOf brick:Outdoor_Area ;
    skos:definition "For areas of play in a stadium, the area for partcipants and referees by the side of the field"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Area ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Bench ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outdoor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Area,
        tag:Bench,
        tag:Location,
        tag:Outdoor .

brick:Booster_Fan a owl:Class,
        sh:NodeShape ;
    rdfs:label "Booster Fan" ;
    rdfs:subClassOf brick:Fan ;
    skos:definition "Fan activated to increase airflow beyond what is provided by the default configuration"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Booster ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Booster,
        tag:Equipment,
        tag:Fan .

brick:Box_Mode_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Box Mode Command" ;
    rdfs:subClassOf brick:Mode_Command ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Box ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mode ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Box,
        tag:Command,
        tag:Mode,
        tag:Point .

brick:Breaker_Panel a owl:Class,
        sh:NodeShape ;
    rdfs:label "Breaker Panel" ;
    rdfs:subClassOf brick:Electrical_Equipment ;
    skos:definition "Breaker Panel distributes power into various end-uses."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Breaker ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Breaker,
        tag:Equipment .

brick:Broadcast_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Broadcast Room" ;
    rdfs:subClassOf brick:Media_Room ;
    skos:definition "A space to organize and manage a broadcast. Separate from studio"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Broadcast ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Media ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Broadcast,
        tag:Location,
        tag:Media,
        tag:Room,
        tag:Space .

brick:Building_Air_Humidity_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Building Air Humidity Setpoint" ;
    rdfs:subClassOf brick:Humidity_Setpoint ;
    skos:definition "Setpoint for humidity in a building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Building ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Building,
        tag:Humidity,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Humidity ;
    brick:hasSubstance brick:Building_Air .

brick:Building_Air_Static_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Building Air Static Pressure Sensor" ;
    rdfs:subClassOf brick:Static_Pressure_Sensor ;
    skos:definition "The static pressure of air within a building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Building ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Building,
        tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Static ;
    brick:hasQuantity brick:Static_Pressure ;
    brick:hasSubstance brick:Building_Air .

brick:Building_Air_Static_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Building Air Static Pressure Setpoint" ;
    rdfs:subClassOf brick:Static_Pressure_Setpoint ;
    skos:definition "Sets static pressure of the entire building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Building ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Building,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static ;
    brick:hasQuantity brick:Static_Pressure ;
    brick:hasSubstance brick:Building_Air .

brick:Building_Chilled_Water_Meter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Building Chilled Water Meter" ;
    rdfs:subClassOf brick:Building_Meter,
        brick:Chilled_Water_Meter ;
    skos:definition "A meter that measures the usage or consumption of chilled water of a whole building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Building ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Meter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Building,
        tag:Chilled,
        tag:Equipment,
        tag:Meter,
        tag:Water .

brick:Building_Electrical_Meter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Building Electrical Meter" ;
    rdfs:subClassOf brick:Building_Meter,
        brick:Electrical_Meter ;
    skos:definition "A meter that measures the usage or consumption of electricity of a whole building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Building ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Electrical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Meter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Building,
        tag:Electrical,
        tag:Equipment,
        tag:Meter .

brick:Building_Gas_Meter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Building Gas Meter" ;
    rdfs:subClassOf brick:Building_Meter,
        brick:Gas_Meter ;
    skos:definition "A meter that measures the usage or consumption of gas of a whole building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Building ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Meter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Building,
        tag:Equipment,
        tag:Gas,
        tag:Meter .

brick:Building_Hot_Water_Meter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Building Hot Water Meter" ;
    rdfs:subClassOf brick:Building_Meter,
        brick:Hot_Water_Meter ;
    skos:definition "A meter that measures the usage or consumption of hot water of a whole building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Building ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Meter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Building,
        tag:Equipment,
        tag:Hot,
        tag:Meter,
        tag:Water .

brick:Building_Water_Meter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Building Water Meter" ;
    rdfs:subClassOf brick:Building_Meter,
        brick:Water_Meter ;
    skos:definition "A meter that measures the usage or consumption of water of a whole building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Building ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Meter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Building,
        tag:Equipment,
        tag:Meter,
        tag:Water .

brick:Bus_Riser a owl:Class,
        sh:NodeShape ;
    rdfs:label "Bus Riser" ;
    rdfs:subClassOf brick:Electrical_Equipment ;
    skos:definition "Bus Risers are commonly fed from a switchgear and rise up through a series of floors to the main power distribution source for each floor."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Riser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Riser .

brick:Bypass_Air_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Bypass Air Flow Sensor" ;
    rdfs:subClassOf brick:Air_Flow_Sensor ;
    skos:definition "Measures the rate of flow of bypass air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Bypass ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Bypass,
        tag:Flow,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Bypass_Air .

brick:Bypass_Air_Humidity_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Bypass Air Humidity Setpoint" ;
    rdfs:subClassOf brick:Humidity_Setpoint ;
    skos:definition "Humidity setpoint for bypass air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Bypass ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Bypass,
        tag:Humidity,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Humidity ;
    brick:hasSubstance brick:Bypass_Air .

brick:Bypass_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Bypass Command" ;
    rdfs:subClassOf brick:Command ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Bypass ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Bypass,
        tag:Command,
        tag:Point .

brick:Bypass_Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Bypass Water Flow Sensor" ;
    rdfs:subClassOf brick:Water_Flow_Sensor ;
    skos:definition "Measures the rate of flow of bypass water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Bypass ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Bypass,
        tag:Flow,
        tag:Point,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Bypass_Water .

brick:Bypass_Water_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Bypass Water Flow Setpoint" ;
    rdfs:subClassOf brick:Water_Flow_Setpoint ;
    skos:definition "Sets the target flow rate of bypass water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Bypass ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Bypass,
        tag:Flow,
        tag:Point,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Bypass_Water .

brick:CO2_Differential_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "CO2 Differential Sensor" ;
    rdfs:subClassOf brick:CO2_Sensor ;
    skos:definition "Measures the difference between CO2 levels of inside and outside air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:CO2 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:CO2,
        tag:Differential,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Differential_CO2_Concentration ;
    brick:hasSubstance brick:Air .

brick:CO2_Level_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "CO2 Level Sensor" ;
    rdfs:subClassOf brick:CO2_Sensor ;
    skos:definition "Measures the concentration of CO2 in air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:CO2 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:CO2,
        tag:Level,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:CO2_Concentration ;
    brick:hasSubstance brick:Air .

brick:CO_Differential_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "CO Differential Sensor" ;
    rdfs:subClassOf brick:CO_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:CO ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:CO,
        tag:Differential,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Differential_CO_Concentration ;
    brick:hasSubstance brick:Air .

brick:CO_Level_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "CO Level Sensor" ;
    rdfs:subClassOf brick:CO_Sensor ;
    skos:definition "Measures the concentration of CO"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:CO ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:CO,
        tag:Level,
        tag:Point,
        tag:Sensor .

brick:Cafeteria a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cafeteria" ;
    rdfs:subClassOf brick:Common_Space ;
    skos:definition "A space to serve food and beverages"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cafeteria ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Common ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cafeteria,
        tag:Common,
        tag:Location,
        tag:Space .

brick:Capacity_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Capacity Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Capacity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Capacity,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Capacity .

brick:Ceiling_Fan a owl:Class,
        sh:NodeShape ;
    rdfs:label "Ceiling Fan" ;
    rdfs:subClassOf brick:Fan ;
    skos:definition "A fan installed on the ceiling of a room for the purpose of air circulation"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Ceiling ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Ceiling,
        tag:Equipment,
        tag:Fan .

brick:Centrifugal_Chiller a owl:Class,
        sh:NodeShape ;
    rdfs:label "Centrifugal Chiller" ;
    rdfs:seeAlso <https://bellomyims.com/your-definitive-guide-to-centrifugal-chillers/> ;
    rdfs:subClassOf brick:Chiller ;
    skos:definition "A chiller that uses the vapor compression cycle to chill water. It throws off the heat collected from the chilled water plus the heat from the compressor to a water loop"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Centrifugal ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Chiller ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Centrifugal,
        tag:Chiller,
        tag:Equipment .

brick:Change_Filter_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Change Filter Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "An alarm that indicates that a filter must be changed"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Change ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Filter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Change,
        tag:Filter,
        tag:Point .

brick:Chilled_Water_Coil a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Coil" ;
    rdfs:subClassOf brick:Cooling_Coil ;
    skos:definition "A cooling element made of pipe or tube that removes heat from equipment, machines or airflows that is filled with chilled water."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Coil ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Coil,
        tag:Cool,
        tag:Equipment,
        tag:Water .

brick:Chilled_Water_Differential_Pressure_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Differential Pressure Integral Time Parameter" ;
    rdfs:subClassOf brick:Differential_Pressure_Integral_Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Differential,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Time,
        tag:Water .

brick:Chilled_Water_Differential_Pressure_Load_Shed_Reset_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Differential Pressure Load Shed Reset Status" ;
    rdfs:subClassOf brick:Chilled_Water_Differential_Pressure_Load_Shed_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Differential,
        tag:Load,
        tag:Point,
        tag:Pressure,
        tag:Reset,
        tag:Shed,
        tag:Status,
        tag:Water .

brick:Chilled_Water_Differential_Pressure_Load_Shed_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Differential Pressure Load Shed Setpoint" ;
    rdfs:subClassOf brick:Chilled_Water_Differential_Pressure_Setpoint,
        brick:Load_Shed_Differential_Pressure_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Differential,
        tag:Load,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Shed,
        tag:Water .

brick:Chilled_Water_Differential_Pressure_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Differential Pressure Proportional Band Parameter" ;
    rdfs:subClassOf brick:Differential_Pressure_Proportional_Band ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Band,
        tag:Chilled,
        tag:Differential,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Proportional,
        tag:Water .

brick:Chilled_Water_Differential_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Differential Pressure Sensor" ;
    rdfs:subClassOf brick:Differential_Pressure_Sensor ;
    skos:definition "Measures the difference in water pressure on either side of a chilled water valve"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Differential,
        tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Chilled_Water .

brick:Chilled_Water_Differential_Pressure_Step_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Differential Pressure Step Parameter" ;
    rdfs:subClassOf brick:Differential_Pressure_Step_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Step ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Differential,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Step,
        tag:Water .

brick:Chilled_Water_Differential_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Differential Temperature Sensor" ;
    rdfs:subClassOf brick:Chilled_Water_Temperature_Sensor,
        brick:Water_Differential_Temperature_Sensor ;
    skos:definition "Measures the difference in temperature between the entering water to the chiller or other water cooling device and leaving water from the same chiller or other water cooling device"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Differential,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Chilled_Water ;
    brick:hasSubstance brick:Differential_Temperature .

brick:Chilled_Water_Loop a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Loop" ;
    rdfs:subClassOf brick:Water_Loop ;
    skos:definition "A collection of equipment that transport and regulate chilled water among each other"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Loop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Loop,
        tag:Water .

brick:Chilled_Water_Pump a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Pump" ;
    rdfs:subClassOf brick:Water_Pump ;
    skos:definition "A pump that performs work on chilled water; typically part of a chilled water system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pump ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Equipment,
        tag:Pump,
        tag:Water .

brick:Chilled_Water_Pump_Differential_Pressure_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Pump Differential Pressure Deadband Setpoint" ;
    rdfs:subClassOf brick:Chilled_Water_Differential_Pressure_Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of differential pressure of chilled water in a chilled water pump"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pump ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Deadband,
        tag:Differential,
        tag:Point,
        tag:Pressure,
        tag:Pump,
        tag:Setpoint,
        tag:Water .

brick:Chilled_Water_Return_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Return Flow Sensor" ;
    rdfs:subClassOf brick:Chilled_Water_Flow_Sensor,
        brick:Return_Water_Flow_Sensor ;
    skos:definition "Measures the rate of flow of chilled return water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Flow,
        tag:Point,
        tag:Return,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Return_Chilled_Water .

brick:Chilled_Water_Return_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Return Temperature Sensor" ;
    rdfs:subClassOf brick:Chilled_Water_Temperature_Sensor,
        brick:Return_Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of chilled water that is returned to a cooling tower"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Point,
        tag:Return,
        tag:Sensor,
        tag:Temperature,
        tag:Water .

brick:Chilled_Water_Static_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Static Pressure Setpoint" ;
    rdfs:subClassOf brick:Static_Pressure_Setpoint ;
    skos:definition "Sets static pressure of chilled water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static,
        tag:Water ;
    brick:hasQuantity brick:Static_Pressure ;
    brick:hasSubstance brick:Chilled_Water .

brick:Chilled_Water_Supply_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Supply Flow Sensor" ;
    rdfs:subClassOf brick:Chilled_Water_Flow_Sensor,
        brick:Supply_Water_Flow_Sensor ;
    owl:equivalentClass brick:Chilled_Water_Discharge_Flow_Sensor ;
    skos:definition "Measures the rate of flow of chilled supply water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Flow,
        tag:Point,
        tag:Sensor,
        tag:Supply,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Supply_Chilled_Water .

brick:Chilled_Water_Supply_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Supply Flow Setpoint" ;
    rdfs:subClassOf brick:Chilled_Water_Flow_Setpoint,
        brick:Supply_Water_Flow_Setpoint ;
    owl:equivalentClass brick:Chilled_Water_Discharge_Flow_Setpoint ;
    skos:definition "Sets the target flow rate of chilled supply water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Flow,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Water .

brick:Chilled_Water_Supply_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Supply Temperature Sensor" ;
    rdfs:subClassOf brick:Chilled_Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of chilled water that is supplied from a chiller"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Point,
        tag:Sensor,
        tag:Supply,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Supply_Chilled_Water .

brick:Chilled_Water_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water System" ;
    rdfs:subClassOf brick:Water_System ;
    skos:definition "The equipment, devices and conduits that handle the production and distribution of chilled water in a building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:System,
        tag:Water .

brick:Chilled_Water_System_Enable_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water System Enable Command" ;
    rdfs:subClassOf brick:System_Enable_Command ;
    skos:definition "Enables operation of the chilled water system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Command,
        tag:Enable,
        tag:Point,
        tag:System,
        tag:Water .

brick:Chilled_Water_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Valve" ;
    rdfs:subClassOf brick:HVAC_Valve,
        brick:Water_Valve ;
    skos:definition "A valve that modulates the flow of chilled water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Equipment,
        tag:Valve,
        tag:Water .

brick:Close_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Close Limit" ;
    rdfs:subClassOf brick:Limit ;
    skos:definition "A parameter that places a lower or upper bound on the range of permitted values of a Close_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Close ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Close,
        tag:Limit,
        tag:Parameter,
        tag:Point .

brick:Cloudage a brick:Quantity ;
    rdfs:label "Cloudage" ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Dimensionless ;
    skos:definition "The fraction of the sky obscured by clouds when observed from a particular location",
        "The fraction of the sky obscured by clouds when observed from a particular location"@en .

brick:Cold_Box a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cold Box" ;
    rdfs:subClassOf brick:Laboratory ;
    skos:definition "in a gas separation unit, the insulated section that contains the low-temperature heat exchangers and distillation columns."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Box ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cold ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Laboratory ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Box,
        tag:Cold,
        tag:Laboratory,
        tag:Location,
        tag:Room .

brick:Coldest_Zone_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Coldest Zone Air Temperature Sensor" ;
    rdfs:subClassOf brick:Zone_Air_Temperature_Sensor ;
    skos:definition "The zone temperature that is coldest; drives the supply temperature of hot air. A computed value rather than a physical sensor. Also referred to as a 'Lowest Zone Air Temperature Sensor'"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Coldest ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Coldest,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Zone .

brick:Collection_Basin_Water_Heater a owl:Class,
        sh:NodeShape ;
    rdfs:label "Collection Basin Water Heater" ;
    rdfs:seeAlso <https://www.coolingtowerworld.com/c-30-basin-heater.aspx> ;
    rdfs:subClassOf brick:Water_Heater ;
    skos:definition "Basin heaters prevent cold water basin freeze-up, e.g. in cooling towers, closed circuit fluid coolers, or evaporative condensers"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Basin ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Collection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heater ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Basin,
        tag:Collection,
        tag:Equipment,
        tag:Heater,
        tag:Water .

brick:Collection_Basin_Water_Level_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Collection Basin Water Level Alarm" ;
    rdfs:subClassOf brick:Water_Level_Alarm ;
    skos:definition "An alarm that indicates a high or low level of water in the collection basin, e.g. within a Cooling_Tower"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Basin ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Collection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Basin,
        tag:Collection,
        tag:Level,
        tag:Point,
        tag:Water .

brick:Collection_Basin_Water_Level_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Collection Basin Water Level Sensor" ;
    rdfs:subClassOf brick:Water_Level_Sensor ;
    skos:definition "Measures the level of the water in the collection basin, e.g. within a Cooling_Tower"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Basin ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Collection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Basin,
        tag:Collection,
        tag:Level,
        tag:Point,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Level ;
    brick:hasSubstance brick:Collection_Basin_Water .

brick:Collection_Basin_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Collection Basin Water Temperature Sensor" ;
    rdfs:subClassOf brick:Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of the water in the collection basin, e.g. within a Cooling_Tower"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Basin ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Collection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Basin,
        tag:Collection,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Collection_Basin_Water .

brick:Communication_Loss_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Communication Loss Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "An alarm that indicates a loss of communication e.g. with a device or controller"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Communication ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Loss ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Communication,
        tag:Loss,
        tag:Point .

brick:Complex_Power a brick:Quantity ;
    rdfs:label "Complex Power" ;
    qudt:applicableUnit unit:KiloV-A,
        unit:MegaV-A,
        unit:V-A ;
    skos:broader brick:Electric_Power ;
    skos:definition "Complex Power, under sinusoidal conditions, is the product of the phasor (U) representing the voltage between the terminals of a linear two-terminal element or two-terminal circuit and the complex conjugate of the phasor (I) representing the electric current in the element or circuit."@en ;
    brick:hasQUDTReference quantitykind:ComplexPower .

brick:Compressor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Compressor" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "(1) device for mechanically increasing the pressure of a gas. (2) often described as being either open, hermetic, or semihermetic to describe how the compressor and motor drive is situated in relation to the gas or vapor being compressed. Types include centrifugal, axial flow, reciprocating, rotary screw, rotary vane, scroll, or diaphragm. 1. device for mechanically increasing the pressure of a gas. 2. specific machine, with or without accessories, for compressing refrigerant vapor."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Compressor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Compressor,
        tag:Equipment .

brick:Concession a owl:Class,
        sh:NodeShape ;
    rdfs:label "Concession" ;
    rdfs:subClassOf brick:Food_Service_Room ;
    skos:definition "A space to sell food and beverages. Usually embedded in a larger space and does not include a space where people consume their purchases"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Concessions ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Food ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Service ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Concessions,
        tag:Food,
        tag:Location,
        tag:Room,
        tag:Service,
        tag:Space .

brick:Condensate_Leak_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Condensate Leak Alarm" ;
    rdfs:subClassOf brick:Leak_Alarm ;
    skos:definition "An alarm that indicates a leak of condensate from a cooling system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Condensate ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leak ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Condensate,
        tag:Leak,
        tag:Point .

brick:Condenser a owl:Class,
        sh:NodeShape ;
    rdfs:label "Condenser" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "A heat exchanger in which the primary heat transfer vapor changes its state to a liquid phase."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:Equipment .

brick:Condenser_Heat_Exchanger a owl:Class,
        sh:NodeShape ;
    rdfs:label "Condenser Heat Exchanger" ;
    rdfs:subClassOf brick:Heat_Exchanger ;
    skos:definition "A heat exchanger in which the primary heat transfer vapor changes its state to a liquid phase."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exchanger ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:Equipment,
        tag:Exchanger,
        tag:Heat .

brick:Condenser_Water_Bypass_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Condenser Water Bypass Valve" ;
    rdfs:subClassOf brick:Bypass_Valve ;
    skos:definition "A valve installed in a bypass line of a condenser water loop"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Bypass ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Bypass,
        tag:Condenser,
        tag:Equipment,
        tag:Valve,
        tag:Water .

brick:Condenser_Water_Isolation_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Condenser Water Isolation Valve" ;
    rdfs:subClassOf brick:Isolation_Valve ;
    skos:definition "An isolation valve installed in the condenser water loop"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Isolation ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:Equipment,
        tag:Isolation,
        tag:Valve,
        tag:Water .

brick:Condenser_Water_Pump a owl:Class,
        sh:NodeShape ;
    rdfs:label "Condenser Water Pump" ;
    rdfs:subClassOf brick:Water_Pump ;
    skos:definition "A pump that is part of a condenser system; the pump circulates condenser water from the chiller back to the cooling tower"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pump ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:Equipment,
        tag:Pump,
        tag:Water .

brick:Condenser_Water_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Condenser Water System" ;
    rdfs:seeAlso <https://www.linquip.com/blog/condenser-water-system-an-overview/> ;
    rdfs:subClassOf brick:Water_System ;
    skos:definition "A heat rejection system consisting of (typically) cooling towers, condenser water pumps, chillers and the piping connecting the components"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:System,
        tag:Water .

brick:Condenser_Water_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Condenser Water Valve" ;
    rdfs:subClassOf brick:HVAC_Valve,
        brick:Water_Valve ;
    skos:definition "A valve that modulates the flow of condenser water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:Equipment,
        tag:Valve,
        tag:Water .

brick:Condensing_Natural_Gas_Boiler a owl:Class,
        sh:NodeShape ;
    rdfs:label "Condensing Natural Gas Boiler" ;
    rdfs:subClassOf brick:Natural_Gas_Boiler ;
    skos:definition "A closed, pressure vessel that uses natural gas and heat exchanger that capture and reuse any latent heat for heating water or other fluids to supply steam or hot water for heating, humidification, or other applications."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Boiler ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Condensing ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Natural ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Boiler,
        tag:Condensing,
        tag:Equipment,
        tag:Gas,
        tag:Natural .

brick:Conference_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Conference Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A space dedicated in which to hold a meetings"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Conference ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Conference,
        tag:Location,
        tag:Room,
        tag:Space .

brick:Constant_Air_Volume_Box a owl:Class,
        sh:NodeShape ;
    rdfs:label "Constant Air Volume Box" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Constant_air_volume> ;
    rdfs:subClassOf brick:Terminal_Unit ;
    owl:equivalentClass brick:CAV ;
    skos:definition "A terminal unit for which supply air flow rate is constant and the supply air temperature is varied to meet thermal load"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Box ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Constant ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Volume ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Box,
        tag:Constant,
        tag:Equipment,
        tag:Volume .

brick:Contact_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Contact Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Senses or detects contact, such as for determining if a door is closed."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Contact ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Contact,
        tag:Point,
        tag:Sensor .

brick:Control_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Control Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A space from which operations are managed"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Control ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Control,
        tag:Location,
        tag:Room,
        tag:Space .

brick:Cooling_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Controls the amount of cooling to be delivered (typically as a proportion of total cooling output)"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Cool,
        tag:Point .

brick:Cooling_Demand_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Demand Setpoint" ;
    rdfs:subClassOf brick:Demand_Setpoint ;
    skos:definition "Sets the rate required for cooling"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Demand ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cool,
        tag:Demand,
        tag:Point,
        tag:Setpoint .

brick:Cooling_Enable_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Enable Command" ;
    rdfs:subClassOf brick:Enable_Command ;
    skos:definition "Command that enables cooling functionality in equipment but certain condition(s) must be met first before actively cooling. For the actively cooling control, see Cooling_Command."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cooling ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Cooling,
        tag:Enable,
        tag:Point .

brick:Cooling_Start_Stop_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Start Stop Status" ;
    rdfs:subClassOf brick:Start_Stop_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Start ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Stop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cool,
        tag:Point,
        tag:Start,
        tag:Status,
        tag:Stop .

brick:Cooling_Supply_Air_Temperature_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Supply Air Temperature Deadband Setpoint" ;
    rdfs:subClassOf brick:Cooling_Temperature_Setpoint,
        brick:Supply_Air_Temperature_Deadband_Setpoint ;
    owl:equivalentClass brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of temperature of supply air for cooling"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Deadband,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature .

brick:Cooling_Supply_Air_Temperature_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Supply Air Temperature Integral Time Parameter" ;
    rdfs:subClassOf brick:Air_Temperature_Integral_Time_Parameter ;
    owl:equivalentClass brick:Cooling_Discharge_Air_Temperature_Integral_Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Supply,
        tag:Temperature,
        tag:Time .

brick:Cooling_Supply_Air_Temperature_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Supply Air Temperature Proportional Band Parameter" ;
    rdfs:subClassOf brick:Supply_Air_Temperature_Proportional_Band_Parameter ;
    owl:equivalentClass brick:Cooling_Discharge_Air_Temperature_Proportional_Band_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Band,
        tag:Cool,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Proportional,
        tag:Supply,
        tag:Temperature .

brick:Cooling_Tower a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Tower" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Cooling_tower> ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "A cooling tower is a heat rejection device that rejects waste heat to the atmosphere through the cooling of a water stream to a lower temperature. Cooling towers may either use the evaporation of water to remove process heat and cool the working fluid to near the wet-bulb air temperature or, in the case of closed circuit dry cooling towers, rely solely on air to cool the working fluid to near the dry-bulb air temperature."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Tower ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cool,
        tag:Equipment,
        tag:Tower .

brick:Cooling_Tower_Fan a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Tower Fan" ;
    rdfs:seeAlso <https://highperformancehvac.com/cooling-tower-fan/> ;
    rdfs:subClassOf brick:Fan ;
    skos:definition "A fan that pulls air through a cooling tower and across the louvers where the water falls to aid in heat exchange by the process of evaporation"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Tower ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cool,
        tag:Equipment,
        tag:Fan,
        tag:Tower .

brick:Cooling_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Valve" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "A valve that controls air temperature by modulating the amount of cold water flowing through a cooling coil"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cool,
        tag:Equipment,
        tag:Valve .

brick:Copy_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Copy Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A room set aside for common office equipment, including printers and copiers"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Copy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Copy,
        tag:Location,
        tag:Room,
        tag:Space .

brick:Core_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Core Temperature Sensor" ;
    rdfs:subClassOf brick:Embedded_Temperature_Sensor ;
    skos:definition "Measures the internal temperature of the radiant layer at the heat source or sink level of the radiant heating and cooling HVAC system."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Core ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Core,
        tag:Point,
        tag:Sensor,
        tag:Temperature .

brick:Core_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Core Temperature Setpoint" ;
    rdfs:subClassOf brick:Embedded_Temperature_Setpoint ;
    skos:definition "Sets temperature for the core, i.e. the temperature at the heat source or sink level, of the radiant panel."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Core ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Core,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Cubicle a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cubicle" ;
    rdfs:subClassOf brick:Office ;
    skos:definition "A smaller space set aside for an individual, but not with a door and without full-height walls"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cubicle ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Office ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cubicle,
        tag:Location,
        tag:Office,
        tag:Room,
        tag:Space .

brick:Current_Angle a brick:Quantity ;
    rdfs:label "CurrentAngle" ;
    qudt:applicableUnit unit:ARCMIN,
        unit:ARCSEC,
        unit:DEG,
        unit:GON,
        unit:GRAD,
        unit:MIL,
        unit:MicroRAD,
        unit:MilliARCSEC,
        unit:MilliRAD,
        unit:RAD,
        unit:REV ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader brick:Phasor_Angle ;
    skos:definition "Angle of current phasor",
        "Angle of current phasor"@en ;
    skos:related brick:Electric_Current .

brick:Current_Imbalance_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Current Imbalance Sensor" ;
    rdfs:subClassOf brick:Imbalance_Sensor ;
    skos:definition "A sensor which measures the current difference (imbalance) between phases of an electrical system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Current ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Imbalance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Current,
        tag:Imbalance,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Current_Imbalance .

brick:Current_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Current Limit" ;
    rdfs:subClassOf brick:Limit ;
    skos:definition "A parameter that places a lower or upper bound on the range of permitted values of a Current_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Current ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Current,
        tag:Limit,
        tag:Parameter,
        tag:Point .

brick:Current_Total_Harmonic_Distortion a brick:Quantity ;
    rdfs:label "CurrentTotalHarmonicDistortion" ;
    qudt:applicableUnit unit:DeciB_M,
        unit:PERCENT ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Dimensionless ;
    skos:definition "Measurement of harmonic distortion present in a signal defined as the sum of the powers of all harmonic components to the power of the fundamental frequency. (https://en.wikipedia.org/wiki/Total_harmonic_distortion)",
        "Measurement of harmonic distortion present in a signal defined as the sum of the powers of all harmonic components to the power of the fundamental frequency. (https://en.wikipedia.org/wiki/Total_harmonic_distortion)"@en ;
    skos:related brick:Electric_Current .

brick:Curtailment_Override_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Curtailment Override Command" ;
    rdfs:subClassOf brick:Override_Command ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Curtailment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Override ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Curtailment,
        tag:Override,
        tag:Point .

brick:DC_Bus_Voltage_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "DC Bus Voltage Sensor" ;
    rdfs:subClassOf brick:Voltage_Sensor ;
    skos:definition "Measures the voltage across a DC bus"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Bus ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Dc ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Voltage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Bus,
        tag:Dc,
        tag:Point,
        tag:Sensor,
        tag:Voltage .

brick:Damper_Position_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Damper Position Command" ;
    rdfs:subClassOf brick:Damper_Command,
        brick:Position_Command ;
    skos:definition "Controls the position (the degree of openness) of a damper"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Damper ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Position ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Damper,
        tag:Point,
        tag:Position ;
    brick:hasQuantity brick:Position .

brick:Damper_Position_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Damper Position Sensor" ;
    rdfs:subClassOf brick:Position_Sensor ;
    skos:definition "Measures the current position of a damper in terms of the percent of fully open"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Damper ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Position ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Damper,
        tag:Point,
        tag:Position,
        tag:Sensor ;
    brick:hasQuantity brick:Position .

brick:Damper_Position_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Damper Position Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Sets the position of damper"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Damper ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Position ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Damper,
        tag:Point,
        tag:Position,
        tag:Setpoint ;
    brick:hasQuantity brick:Position .

brick:Damper_Position_Status a owl:Class ;
    rdfs:label "Damper Position Status" ;
    rdfs:subClassOf brick:Status ;
    brick:hasQuantity brick:Position .

brick:Deceleration_Time a brick:Quantity ;
    rdfs:label "Deceleration Time" ;
    skos:broader brick:Time .

brick:Deceleration_Time_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Deceleration Time Setpoint" ;
    rdfs:subClassOf brick:Time_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Deceleration ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Deceleration,
        tag:Point,
        tag:Setpoint,
        tag:Time .

brick:Dehumidification_Start_Stop_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Dehumidification Start Stop Status" ;
    rdfs:subClassOf brick:Start_Stop_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Dehumidification ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Start ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Stop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Dehumidification,
        tag:Point,
        tag:Start,
        tag:Status,
        tag:Stop .

brick:Deionised_Water_Conductivity_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Deionised Water Conductivity Sensor" ;
    rdfs:subClassOf brick:Conductivity_Sensor ;
    skos:definition "Measures the electrical conductance of deionised water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Conductivity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deionised ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Conductivity,
        tag:Deionised,
        tag:Point,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Conductivity ;
    brick:hasSubstance brick:Deionized_Water .

brick:Deionised_Water_Level_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Deionised Water Level Sensor" ;
    rdfs:subClassOf brick:Water_Level_Sensor ;
    skos:definition "Measures the height/level of deionised water in some container"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Deionised ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Deionised,
        tag:Level,
        tag:Point,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Level ;
    brick:hasSubstance brick:Deionized_Water .

brick:Deionized_Water_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Deionized Water Alarm" ;
    rdfs:subClassOf brick:Water_Alarm ;
    skos:definition "An alarm that indicates deionized water leaks."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deionized ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Deionized,
        tag:Point,
        tag:Water .

brick:Derivative_Gain_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Derivative Gain Parameter" ;
    rdfs:subClassOf brick:Gain_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Derivative ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gain ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Derivative,
        tag:Gain,
        tag:PID,
        tag:Parameter,
        tag:Point .

brick:Derivative_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Derivative Time Parameter" ;
    rdfs:subClassOf brick:Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Derivative ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Derivative,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Time .

brick:Detention_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Detention Room" ;
    rdfs:subClassOf brick:Security_Service_Room ;
    skos:definition "A space for the temporary involuntary confinement of people"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Detention ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Detention,
        tag:Location,
        tag:Room,
        tag:Space .

brick:Dewpoint_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Dewpoint Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Sets dew point"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Dewpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Dewpoint,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Dewpoint .

brick:Differential_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Differential Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint ;
    skos:definition "Sets temperature of diffrential air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Differential_Temperature ;
    brick:hasSubstance brick:Air .

brick:Differential_Dry_Bulb_Temperature a brick:Quantity ;
    rdfs:label "Differential Dry Bulb Temperature" ;
    qudt:isDeltaQuantity true ;
    skos:broader brick:Dry_Bulb_Temperature ;
    brick:hasQUDTReference quantitykind:Dry_Bulb_Temperature .

brick:Differential_Dynamic_Pressure a brick:Quantity ;
    rdfs:label "Differential Dynamic Pressure" ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CM_H2O,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:isDeltaQuantity true ;
    skos:broader brick:Differential_Pressure,
        brick:Velocity_Pressure ;
    brick:hasQUDTReference quantitykind:DynamicPressure .

brick:Differential_Pressure_Bypass_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Differential Pressure Bypass Valve" ;
    rdfs:subClassOf brick:Bypass_Valve ;
    skos:definition "A 2-way, self contained proportional valve with an integral differential pressure adjustment setting."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Bypass ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Bypass,
        tag:Differential,
        tag:Equipment,
        tag:Pressure,
        tag:Valve .

brick:Differential_Speed_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Differential Speed Sensor" ;
    rdfs:subClassOf brick:Speed_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Speed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Point,
        tag:Sensor,
        tag:Speed .

brick:Differential_Speed_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Differential Speed Setpoint" ;
    rdfs:subClassOf brick:Speed_Setpoint ;
    skos:definition "Sets differential speed"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Speed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Point,
        tag:Setpoint,
        tag:Speed .

brick:Differential_Static_Pressure a brick:Quantity ;
    rdfs:label "Differential Static Pressure" ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CM_H2O,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:isDeltaQuantity true ;
    skos:broader brick:Differential_Pressure,
        brick:Static_Pressure ;
    brick:hasQUDTReference quantitykind:StaticPressure .

brick:Differential_Supply_Return_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Differential Supply Return Water Temperature Sensor" ;
    rdfs:subClassOf brick:Return_Water_Temperature_Sensor,
        brick:Water_Differential_Temperature_Sensor ;
    skos:definition "Measures the difference in temperature between return and supply water of water a circuit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Point,
        tag:Return,
        tag:Sensor,
        tag:Supply,
        tag:Temperature ;
    brick:hasQuantity brick:Differential_Temperature ;
    brick:hasSubstance brick:Return_Water,
        brick:Supply_Water .

brick:Dimmer a owl:Class,
        sh:NodeShape ;
    rdfs:label "Dimmer" ;
    rdfs:subClassOf brick:Switch ;
    skos:definition "A switch providing continuous control over all or part of a lighting installation; typically potentiometer-based"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Dimmer ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Interface ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Switch ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Dimmer,
        tag:Equipment,
        tag:Interface,
        tag:Switch .

brick:Direct_Expansion_Cooling_Coil a owl:Class,
        sh:NodeShape ;
    rdfs:label "Direct Expansion Cooling Coil" ;
    rdfs:subClassOf brick:Cooling_Coil ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Coil ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Direct ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Expansion ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Coil,
        tag:Cool,
        tag:Direct,
        tag:Equipment,
        tag:Expansion .

brick:Direct_Expansion_Heating_Coil a owl:Class,
        sh:NodeShape ;
    rdfs:label "Direct Expansion Heating Coil" ;
    rdfs:subClassOf brick:Heating_Coil ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Coil ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Direct ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Expansion ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Coil,
        tag:Direct,
        tag:Equipment,
        tag:Expansion,
        tag:Heat .

brick:Direction_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Direction Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Commands that affect the direction of some phenomenon"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Direction ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Direction,
        tag:Point ;
    brick:hasQuantity brick:Direction .

brick:Disable_Differential_Enthalpy_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Disable Differential Enthalpy Command" ;
    rdfs:subClassOf brick:Disable_Command ;
    skos:definition "Disables the use of differential enthalpy control"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Disable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enthalpy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Differential,
        tag:Disable,
        tag:Enthalpy,
        tag:Point .

brick:Disable_Differential_Temperature_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Disable Differential Temperature Command" ;
    rdfs:subClassOf brick:Disable_Command ;
    skos:definition "Disables the use of differential temperature control"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Disable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Differential,
        tag:Disable,
        tag:Point,
        tag:Temperature .

brick:Disable_Fixed_Enthalpy_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Disable Fixed Enthalpy Command" ;
    rdfs:subClassOf brick:Disable_Command ;
    skos:definition "Disables the use of fixed enthalpy control"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Disable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enthalpy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fixed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Disable,
        tag:Enthalpy,
        tag:Fixed,
        tag:Point .

brick:Disable_Fixed_Temperature_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Disable Fixed Temperature Command" ;
    rdfs:subClassOf brick:Disable_Command ;
    skos:definition "Disables the use of fixed temperature temperature"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Disable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fixed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Disable,
        tag:Fixed,
        tag:Point,
        tag:Temperature .

brick:Disable_Hot_Water_System_Outside_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Disable Hot Water System Outside Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Outside_Air_Temperature_Setpoint ;
    skos:definition "Disables hot water system when outside air temperature reaches the indicated value"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Disable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Disable,
        tag:Hot,
        tag:Outside,
        tag:Point,
        tag:Setpoint,
        tag:System,
        tag:Temperature,
        tag:Water .

brick:Disable_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Disable Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if functionality has been disabled"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Disable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Disable,
        tag:Point,
        tag:Status .

brick:Discharge_Air_Dewpoint_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Dewpoint Sensor" ;
    rdfs:subClassOf brick:Dewpoint_Sensor ;
    skos:definition "Measures dewpoint of discharge air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Dewpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Dewpoint,
        tag:Discharge,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Dewpoint ;
    brick:hasSubstance brick:Discharge_Air .

brick:Discharge_Air_Flow_High_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Flow High Reset Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Flow_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Flow,
        tag:High,
        tag:Point,
        tag:Reset,
        tag:Setpoint .

brick:Discharge_Air_Flow_Low_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Flow Low Reset Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Flow_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Flow,
        tag:Low,
        tag:Point,
        tag:Reset,
        tag:Setpoint .

brick:Discharge_Air_Humidity_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Humidity Setpoint" ;
    rdfs:subClassOf brick:Humidity_Setpoint ;
    skos:definition "Humidity setpoint for discharge air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Humidity,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Humidity ;
    brick:hasSubstance brick:Discharge_Air .

brick:Discharge_Air_Smoke_Detection_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Smoke Detection Alarm" ;
    rdfs:subClassOf brick:Air_Alarm,
        brick:Smoke_Detection_Alarm ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Detection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Smoke ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Detection,
        tag:Discharge,
        tag:Point,
        tag:Smoke .

brick:Discharge_Air_Static_Pressure_Step_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Static Pressure Step Parameter" ;
    rdfs:subClassOf brick:Air_Static_Pressure_Step_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Step ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Static,
        tag:Step .

brick:Discharge_Water_Differential_Pressure_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Water Differential Pressure Integral Time Parameter" ;
    rdfs:subClassOf brick:Differential_Pressure_Integral_Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Discharge,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Time,
        tag:Water .

brick:Discharge_Water_Differential_Pressure_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Water Differential Pressure Proportional Band Parameter" ;
    rdfs:subClassOf brick:Differential_Pressure_Proportional_Band ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Band,
        tag:Differential,
        tag:Discharge,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Proportional,
        tag:Water .

brick:Discharge_Water_Temperature_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Water Temperature Proportional Band Parameter" ;
    rdfs:subClassOf brick:Proportional_Band_Parameter,
        brick:Temperature_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Band,
        tag:Discharge,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Proportional,
        tag:Temperature,
        tag:Water .

brick:Discharge_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Water Temperature Sensor" ;
    rdfs:subClassOf brick:Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of discharge water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Discharge,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Discharge_Water .

brick:Discharge_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Water_Temperature_Setpoint ;
    skos:definition "Sets temperature of discharge water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Discharge,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Discharge_Water .

brick:Disconnect_Switch a owl:Class,
        sh:NodeShape ;
    rdfs:label "Disconnect Switch" ;
    rdfs:subClassOf brick:Electrical_Equipment ;
    skos:definition "Building power is most commonly provided by utility company through a master disconnect switch (sometimes called a service disconnect) in the main electrical room of a building. The Utility Company provided master disconnect switch often owns or restricts access to this switch. There can also be other cases where a disconnect is placed into an electrical system to allow service cut-off to a portion of the building."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Disconnect ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Switch ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Disconnect,
        tag:Equipment,
        tag:Switch .

brick:Displacement_Flow_Air_Diffuser a owl:Class,
        sh:NodeShape ;
    rdfs:label "Displacement Flow Air Diffuser" ;
    rdfs:subClassOf brick:Air_Diffuser ;
    skos:definition "An air diffuser that is designed for low discharge air speeds to minimize turbulence and induction of room air. This diffuser is used with displacement ventilation systems."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Diffuser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Displacement ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Diffuser,
        tag:Displacement,
        tag:Equipment,
        tag:Flow .

brick:Domestic_Hot_Water_Supply_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Domestic Hot Water Supply Temperature Sensor" ;
    rdfs:subClassOf brick:Hot_Water_Supply_Temperature_Sensor ;
    skos:definition "Measures the temperature of domestic water supplied by a hot water system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Domestic ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Domestic,
        tag:Hot,
        tag:Point,
        tag:Sensor,
        tag:Supply,
        tag:Temperature,
        tag:Water .

brick:Domestic_Hot_Water_Supply_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Domestic Hot Water Supply Temperature Setpoint" ;
    rdfs:subClassOf brick:Domestic_Hot_Water_Temperature_Setpoint,
        brick:Supply_Water_Temperature_Setpoint ;
    skos:definition "Sets temperature of supplying part of domestic hot water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Domestic ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Domestic,
        tag:Hot,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature,
        tag:Water .

brick:Domestic_Hot_Water_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Domestic Hot Water System" ;
    rdfs:subClassOf brick:System ;
    skos:definition "The equipment, devices and conduits that handle the production and distribution of domestic hot water in a building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Domestic ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Domestic,
        tag:Hot,
        tag:System,
        tag:Water .

brick:Domestic_Hot_Water_System_Enable_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Domestic Hot Water System Enable Command" ;
    rdfs:subClassOf brick:Hot_Water_System_Enable_Command ;
    skos:definition "Enables operation of the domestic hot water system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Domestic ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Domestic,
        tag:Enable,
        tag:Hot,
        tag:Point,
        tag:System,
        tag:Water .

brick:Domestic_Hot_Water_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Domestic Hot Water Valve" ;
    rdfs:subClassOf brick:Hot_Water_Valve ;
    skos:definition "A valve regulating the flow of domestic hot water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Domestic ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Domestic,
        tag:Equipment,
        tag:Heat,
        tag:Hot,
        tag:Valve,
        tag:Water .

brick:Domestic_Water_Loop a owl:Class,
        sh:NodeShape ;
    rdfs:label "Domestic Water Loop" ;
    rdfs:subClassOf brick:Water_Loop ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Domestic ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Loop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Domestic,
        tag:Loop,
        tag:Water .

brick:Drench_Hose a owl:Class,
        sh:NodeShape ;
    rdfs:label "Drench Hose" ;
    rdfs:subClassOf brick:Emergency_Wash_Station ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Drench ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Emergency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hose ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Station ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Wash ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Drench,
        tag:Emergency,
        tag:Equipment,
        tag:Hose,
        tag:Safety,
        tag:Station,
        tag:Wash .

brick:Drive_Ready_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Drive Ready Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if a hard drive or other storage device is ready to be used, e.g. in the context of RAID"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Drive ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Ready ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Drive,
        tag:Point,
        tag:Ready,
        tag:Status .

brick:EconCycle_Start_Stop_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "EconCycle Start Stop Status" ;
    rdfs:subClassOf brick:Start_Stop_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Econcycle ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Start ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Stop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Econcycle,
        tag:Point,
        tag:Start,
        tag:Status,
        tag:Stop .

brick:Economizer a owl:Class,
        sh:NodeShape ;
    rdfs:label "Economizer" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "Device that, on proper variable sensing, initiates control signals or actions to conserve energy. A control system that reduces the mechanical heating and cooling requirement."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Economizer ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Economizer,
        tag:Equipment .

brick:Economizer_Damper a owl:Class,
        sh:NodeShape ;
    rdfs:label "Economizer Damper" ;
    rdfs:subClassOf brick:Damper ;
    skos:definition "A damper that is part of an economizer that is used to module the flow of air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Damper ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Economizer ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Damper,
        tag:Economizer,
        tag:Equipment .

brick:Effective_Air_Temperature_Cooling_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Effective Air Temperature Cooling Setpoint" ;
    rdfs:subClassOf brick:Cooling_Temperature_Setpoint,
        brick:Effective_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Effective ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Effective,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Effective_Air_Temperature_Heating_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Effective Air Temperature Heating Setpoint" ;
    rdfs:subClassOf brick:Effective_Air_Temperature_Setpoint,
        brick:Heating_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Effective ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Effective,
        tag:Heat,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Effective_Discharge_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Effective Discharge Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Setpoint,
        brick:Effective_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Effective ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Effective,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Effective_Return_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Effective Return Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Effective_Air_Temperature_Setpoint,
        brick:Return_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Effective ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Effective,
        tag:Heat,
        tag:Point,
        tag:Return,
        tag:Setpoint,
        tag:Temperature .

brick:Effective_Room_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Effective Room Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Effective_Air_Temperature_Setpoint,
        brick:Room_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Effective ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Effective,
        tag:Heat,
        tag:Point,
        tag:Room,
        tag:Setpoint,
        tag:Temperature .

brick:Effective_Supply_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Effective Supply Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Effective_Air_Temperature_Setpoint,
        brick:Supply_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Effective ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Effective,
        tag:Heat,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature .

brick:Effective_Zone_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Effective Zone Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Effective_Air_Temperature_Setpoint,
        brick:Zone_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Effective ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Effective,
        tag:Heat,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Zone .

brick:Electric_Baseboard_Radiator a owl:Class,
        sh:NodeShape ;
    rdfs:label "Electric Baseboard Radiator" ;
    rdfs:subClassOf brick:Baseboard_Radiator,
        brick:Electric_Radiator ;
    skos:definition "Electric heating device located at or near the floor"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Baseboard ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Electric ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radiator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Baseboard,
        tag:Electric,
        tag:Equipment,
        tag:Radiator .

brick:Electric_Boiler a owl:Class,
        sh:NodeShape ;
    rdfs:label "Electric Boiler" ;
    rdfs:subClassOf brick:Boiler ;
    skos:definition "A closed, pressure vessel that uses electricity for heating water or other fluids to supply steam or hot water for heating, humidification, or other applications."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Boiler ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Electric ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Boiler,
        tag:Electric,
        tag:Equipment .

brick:Elevator a owl:Class,
        sh:NodeShape ;
    rdfs:label "Elevator" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Elevator> ;
    rdfs:subClassOf brick:Equipment ;
    skos:definition "A device that provides vertical transportation between floors, levels or decks of a building, vessel or other structure"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Elevator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Elevator,
        tag:Equipment .

brick:Embedded_Surface_System_Panel a owl:Class,
        sh:NodeShape ;
    rdfs:label "Embedded Surface System Panel" ;
    rdfs:seeAlso <https://www.rehva.eu/eshop/detail/no07-low-temperature-heating-and-high-temperature-cooling> ;
    rdfs:subClassOf brick:Radiant_Panel ;
    owl:equivalentClass brick:ESS_Panel ;
    skos:definition "Radiant panel heating and cooling system where the energy heat source or sink is embedded in a radiant layer which is thermally insulated from the building structure."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Embedded ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Panel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Surface ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Embedded,
        tag:Equipment,
        tag:Panel,
        tag:Surface,
        tag:System .

brick:Emergency_Air_Flow_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Emergency Air Flow System" ;
    rdfs:subClassOf brick:Safety_System ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Emergency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Emergency,
        tag:Flow,
        tag:System .

brick:Emergency_Air_Flow_System_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Emergency Air Flow System Status" ;
    rdfs:subClassOf brick:System_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Emergency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Emergency,
        tag:Flow,
        tag:Point,
        tag:Status,
        tag:System .

brick:Emergency_Generator_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Emergency Generator Alarm" ;
    rdfs:subClassOf brick:Emergency_Alarm ;
    skos:definition "An alarm that indicates off-normal conditions associated with an emergency generator"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Emergency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Generator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Emergency,
        tag:Generator,
        tag:Point .

brick:Emergency_Generator_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Emergency Generator Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if an emergency generator is active"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Emergency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Generator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Emergency,
        tag:Generator,
        tag:Point,
        tag:Status .

brick:Emergency_Phone a owl:Class,
        sh:NodeShape ;
    rdfs:label "Emergency Phone" ;
    rdfs:subClassOf brick:Intercom_Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Emergency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Intercom ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Phone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Security ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Emergency,
        tag:Equipment,
        tag:Intercom,
        tag:Phone,
        tag:Security .

brick:Emergency_Power_Off_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Emergency Power Off System" ;
    rdfs:subClassOf brick:Safety_System ;
    skos:definition "A system that can power down a single piece of equipment or a single system from a single point"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Emergency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Power ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Emergency,
        tag:Off,
        tag:Power,
        tag:System .

brick:Emergency_Power_Off_System_Activated_By_High_Temperature_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Emergency Power Off System Activated By High Temperature Status" ;
    rdfs:subClassOf brick:Emergency_Power_Off_System_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Emergency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Power ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Emergency,
        tag:High,
        tag:Off,
        tag:Point,
        tag:Power,
        tag:Status,
        tag:System,
        tag:Temperature .

brick:Emergency_Power_Off_System_Activated_By_Leak_Detection_System_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Emergency Power Off System Activated By Leak Detection System Status" ;
    rdfs:subClassOf brick:Emergency_Power_Off_System_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Detection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Emergency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leak ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Power ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Detection,
        tag:Emergency,
        tag:Leak,
        tag:Off,
        tag:Point,
        tag:Power,
        tag:Status,
        tag:System .

brick:Emergency_Push_Button_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Emergency Push Button Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if an emergency button has been pushed"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Button ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Emergency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Push ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Button,
        tag:Emergency,
        tag:Point,
        tag:Push,
        tag:Status .

brick:Employee_Entrance_Lobby a owl:Class,
        sh:NodeShape ;
    rdfs:label "Employee Entrance Lobby" ;
    rdfs:subClassOf brick:Lobby ;
    skos:definition "An open space near an entrance that is typicaly only used for employees"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Common ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Employee ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Entrance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lobby ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Common,
        tag:Employee,
        tag:Entrance,
        tag:Lobby,
        tag:Location,
        tag:Space .

brick:Enable_Differential_Enthalpy_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Enable Differential Enthalpy Command" ;
    rdfs:subClassOf brick:Enable_Command ;
    skos:definition "Enables the use of differential enthalpy control"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enthalpy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Differential,
        tag:Enable,
        tag:Enthalpy,
        tag:Point .

brick:Enable_Differential_Temperature_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Enable Differential Temperature Command" ;
    rdfs:subClassOf brick:Enable_Command ;
    skos:definition "Enables the use of differential temperature control"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Differential,
        tag:Enable,
        tag:Point,
        tag:Temperature .

brick:Enable_Fixed_Enthalpy_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Enable Fixed Enthalpy Command" ;
    rdfs:subClassOf brick:Enable_Command ;
    skos:definition "Enables the use of fixed enthalpy control"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enthalpy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fixed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Enable,
        tag:Enthalpy,
        tag:Fixed,
        tag:Point .

brick:Enable_Fixed_Temperature_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Enable Fixed Temperature Command" ;
    rdfs:subClassOf brick:Enable_Command ;
    skos:definition "Enables the use of fixed temperature control"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fixed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Enable,
        tag:Fixed,
        tag:Point,
        tag:Temperature .

brick:Enable_Hot_Water_System_Outside_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Enable Hot Water System Outside Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Outside_Air_Temperature_Setpoint ;
    skos:definition "Enables hot water system when outside air temperature reaches the indicated value"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Enable,
        tag:Hot,
        tag:Outside,
        tag:Point,
        tag:Setpoint,
        tag:System,
        tag:Temperature,
        tag:Water .

brick:Energy_Usage_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Energy Usage Sensor" ;
    rdfs:subClassOf brick:Energy_Sensor,
        brick:Usage_Sensor ;
    skos:definition "Measures the total amount of energy used over some period of time"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Energy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Usage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Energy,
        tag:Point,
        tag:Sensor,
        tag:Usage .

brick:Energy_Zone a owl:Class,
        sh:NodeShape ;
    rdfs:label "Energy Zone" ;
    rdfs:subClassOf brick:Zone ;
    skos:definition "A space or group of spaces that are managed or monitored as one unit for energy purposes"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Energy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Energy,
        tag:Location,
        tag:Zone .

brick:Entering_Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Water Flow Sensor" ;
    rdfs:subClassOf brick:Water_Flow_Sensor ;
    skos:definition "Measures the rate of flow of water entering a piece of equipment or system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Entering,
        tag:Flow,
        tag:Point,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Entering_Water .

brick:Entering_Water_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Water Flow Setpoint" ;
    rdfs:subClassOf brick:Water_Flow_Setpoint ;
    skos:definition "Sets the target flow rate of entering water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Entering,
        tag:Flow,
        tag:Point,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Water .

brick:Entering_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Water Temperature Sensor" ;
    rdfs:subClassOf brick:Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of water entering a piece of equipment or system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Entering,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Entering_Water .

brick:Entering_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entering Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Water_Temperature_Setpoint ;
    skos:definition "Sets temperature of entering water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Entering,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Entering_Water .

brick:Enthalpy_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Enthalpy Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Sets enthalpy"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Enthalpy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Enthalpy,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Enthalpy .

brick:Entrance a owl:Class,
        sh:NodeShape ;
    rdfs:label "Entrance" ;
    rdfs:subClassOf brick:Space ;
    skos:definition "The location and space of a building where people enter and exit the building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Entrance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Entrance,
        tag:Location,
        tag:Space .

brick:Environment_Box a owl:Class,
        sh:NodeShape ;
    rdfs:label "Environment Box" ;
    rdfs:subClassOf brick:Laboratory ;
    skos:definition "(also known as climatic chamber), enclosed space designed to create a particular environment."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Box ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Environment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Laboratory ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Box,
        tag:Environment,
        tag:Laboratory,
        tag:Location,
        tag:Room .

brick:Equipment_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Equipment Room" ;
    rdfs:subClassOf brick:Telecom_Room ;
    skos:definition "A telecommunications room where equipment that serves the building is stored"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Telecom ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Location,
        tag:Room,
        tag:Space,
        tag:Telecom .

brick:Evaporative_Heat_Exchanger a owl:Class,
        sh:NodeShape ;
    rdfs:label "Evaporative Heat Exchanger" ;
    rdfs:subClassOf brick:Heat_Exchanger ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Evaporative ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exchanger ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Evaporative,
        tag:Exchanger,
        tag:Heat .

brick:Even_Month_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Even Month Status" ;
    rdfs:subClassOf brick:Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Even ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Month ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Even,
        tag:Month,
        tag:Point,
        tag:Status .

brick:Exercise_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exercise Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "An indoor room used for exercise and physical activities"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Exercise ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Exercise,
        tag:Location,
        tag:Room,
        tag:Space .

brick:Exhaust_Air_Dewpoint_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Dewpoint Sensor" ;
    rdfs:subClassOf brick:Dewpoint_Sensor ;
    skos:definition "Measures dewpoint of exhaust air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Dewpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Dewpoint,
        tag:Exhaust,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Dewpoint ;
    brick:hasSubstance brick:Exhaust_Air .

brick:Exhaust_Air_Differential_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Differential Pressure Sensor" ;
    rdfs:subClassOf brick:Air_Differential_Pressure_Sensor ;
    skos:definition "Measures the difference in pressure between an upstream and downstream of an air duct or other air conduit used to exhaust air from the building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Exhaust,
        tag:Point,
        tag:Pressure,
        tag:Sensor ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Exhaust_Air .

brick:Exhaust_Air_Differential_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Differential Pressure Setpoint" ;
    rdfs:subClassOf brick:Air_Differential_Pressure_Setpoint ;
    skos:definition "Sets the target air differential pressure between an upstream and downstream point in a exhaust air duct or conduit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Exhaust,
        tag:Point,
        tag:Pressure,
        tag:Setpoint ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Exhaust_Air .

brick:Exhaust_Air_Humidity_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Humidity Sensor" ;
    rdfs:subClassOf brick:Relative_Humidity_Sensor ;
    skos:definition "Measures the relative humidity of exhaust air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Relative ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Exhaust,
        tag:Humidity,
        tag:Point,
        tag:Relative,
        tag:Sensor ;
    brick:hasQuantity brick:Relative_Humidity ;
    brick:hasSubstance brick:Exhaust_Air .

brick:Exhaust_Air_Humidity_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Humidity Setpoint" ;
    rdfs:subClassOf brick:Humidity_Setpoint ;
    skos:definition "Humidity setpoint for exhaust air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Exhaust,
        tag:Humidity,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Humidity ;
    brick:hasSubstance brick:Exhaust_Air .

brick:Exhaust_Air_Stack_Flow_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Stack Flow Deadband Setpoint" ;
    rdfs:subClassOf brick:Air_Flow_Deadband_Setpoint,
        brick:Exhaust_Air_Stack_Flow_Setpoint ;
    skos:definition "Sets the size of a deadband of exhaust air stack flow"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Stack ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Deadband,
        tag:Exhaust,
        tag:Flow,
        tag:Point,
        tag:Setpoint,
        tag:Stack .

brick:Exhaust_Air_Stack_Flow_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Stack Flow Integral Time Parameter" ;
    rdfs:subClassOf brick:Exhaust_Air_Flow_Integral_Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Stack ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Exhaust,
        tag:Flow,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Stack,
        tag:Time .

brick:Exhaust_Air_Stack_Flow_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Stack Flow Proportional Band Parameter" ;
    rdfs:subClassOf brick:Exhaust_Air_Flow_Proportional_Band_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Stack ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Band,
        tag:Exhaust,
        tag:Flow,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Proportional,
        tag:Stack .

brick:Exhaust_Air_Stack_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Stack Flow Sensor" ;
    rdfs:subClassOf brick:Exhaust_Air_Flow_Sensor ;
    skos:definition "Measures the rate of flow of air in the exhaust air stack"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Stack ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Exhaust,
        tag:Flow,
        tag:Point,
        tag:Sensor,
        tag:Stack .

brick:Exhaust_Air_Static_Pressure_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Static Pressure Proportional Band Parameter" ;
    rdfs:subClassOf brick:Static_Pressure_Proportional_Band_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Band,
        tag:Exhaust,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Proportional,
        tag:Static .

brick:Exhaust_Air_Static_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Static Pressure Setpoint" ;
    rdfs:subClassOf brick:Static_Pressure_Setpoint ;
    skos:definition "Sets static pressure of exhaust air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Exhaust,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static ;
    brick:hasQuantity brick:Static_Pressure ;
    brick:hasSubstance brick:Exhaust_Air .

brick:Exhaust_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Temperature Sensor" ;
    rdfs:subClassOf brick:Air_Temperature_Sensor ;
    skos:definition "Measures the temperature of exhaust air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Exhaust,
        tag:Point,
        tag:Sensor,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Exhaust_Air .

brick:Exhaust_Air_Velocity_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Velocity Pressure Sensor" ;
    rdfs:subClassOf brick:Velocity_Pressure_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Velocity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Exhaust,
        tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Velocity ;
    brick:hasQuantity brick:Velocity_Pressure ;
    brick:hasSubstance brick:Exhaust_Air .

brick:Exhaust_Damper a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Damper" ;
    rdfs:subClassOf brick:Damper ;
    skos:definition "A damper that modulates the flow of exhaust air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Damper ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Damper,
        tag:Equipment,
        tag:Exhaust .

brick:Exhaust_Fan a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Fan" ;
    rdfs:subClassOf brick:Fan ;
    skos:definition "Fan moving exhaust air -- air that must be removed from a space due to contaminants"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Exhaust,
        tag:Fan .

brick:Exhaust_Fan_Disable_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Fan Disable Command" ;
    rdfs:subClassOf brick:Disable_Command ;
    skos:definition "Disables operation of the exhaust fan"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Disable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Disable,
        tag:Exhaust,
        tag:Fan,
        tag:Point .

brick:Exhaust_Fan_Enable_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Fan Enable Command" ;
    rdfs:subClassOf brick:Enable_Command ;
    skos:definition "Enables operation of the exhaust fan"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Enable,
        tag:Exhaust,
        tag:Fan,
        tag:Point .

brick:Eye_Wash_Station a owl:Class,
        sh:NodeShape ;
    rdfs:label "Eye Wash Station" ;
    rdfs:subClassOf brick:Emergency_Wash_Station ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Emergency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Eye ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Station ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Wash ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Emergency,
        tag:Equipment,
        tag:Eye,
        tag:Safety,
        tag:Station,
        tag:Wash .

brick:Fan_Coil_Unit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fan Coil Unit" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Fan_coil_unit> ;
    rdfs:subClassOf brick:Terminal_Unit ;
    owl:equivalentClass brick:FCU ;
    skos:definition "Terminal device consisting of a heating and/or cooling heat exchanger or 'coil' and fan that is used to control the temperature in the space where it is installed"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Coil ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Coil,
        tag:Equipment,
        tag:Fan,
        tag:Unit .

brick:Fan_On_Off_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fan On Off Status" ;
    rdfs:subClassOf brick:Fan_Status,
        brick:On_Off_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:On ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fan,
        tag:Off,
        tag:On,
        tag:Point,
        tag:Status .

brick:Fan_VFD a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fan VFD" ;
    rdfs:subClassOf brick:VFD ;
    skos:definition "Variable-frequency drive for fans"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:VFD ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Fan,
        tag:VFD .

brick:Fault_Reset_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fault Reset Command" ;
    rdfs:subClassOf brick:Reset_Command ;
    skos:definition "Clears a fault status"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fault ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Fault,
        tag:Point,
        tag:Reset .

brick:Field_Of_Play a owl:Class,
        sh:NodeShape ;
    rdfs:label "Field Of Play" ;
    rdfs:subClassOf brick:Outdoor_Area ;
    skos:definition "The area of a stadium where athletic events occur, e.g. the soccer pitch"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Area ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Field ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outdoor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Play ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Area,
        tag:Field,
        tag:Location,
        tag:Outdoor,
        tag:Play .

brick:Filter_Differential_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Filter Differential Pressure Sensor" ;
    rdfs:subClassOf brick:Differential_Pressure_Sensor ;
    skos:definition "Measures the difference in pressure on either side of a filter"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Filter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Filter,
        tag:Point,
        tag:Pressure,
        tag:Sensor .

brick:Filter_Reset_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Filter Reset Command" ;
    rdfs:subClassOf brick:Reset_Command ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Filter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Filter,
        tag:Point,
        tag:Reset .

brick:Final_Filter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Final Filter" ;
    rdfs:subClassOf brick:Filter ;
    skos:definition "The last, high-efficiency filter installed in a sequence to remove the finest particulates from the substance being filtered"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Filter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Final ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Filter,
        tag:Final .

brick:Fire_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fire Alarm" ;
    rdfs:subClassOf brick:Fire_Safety_Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fire ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Equipment,
        tag:Fire,
        tag:Safety .

brick:Fire_Alarm_Control_Panel a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fire Alarm Control Panel" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Fire_alarm_control_panel> ;
    rdfs:subClassOf brick:Fire_Safety_Equipment ;
    skos:definition "Fire alarm panel is the controlling component of a fire alarm system."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Control ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fire ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Panel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Control,
        tag:Equipment,
        tag:Fire,
        tag:Panel,
        tag:Safety .

brick:Fire_Alarm_Manual_Call_Point a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fire Alarm Manual Call Point" ;
    rdfs:seeAlso <http://www.coopermedc.com/products/manual-alarm-call-points> ;
    rdfs:subClassOf brick:Manual_Fire_Alarm_Activation_Equipment ;
    skos:definition "Manual alarm call points are designed for the purpose of raising an alarm manually once verification of a fire or emergency condition exists. by operating the push button or break glass the alarm signal can be raised."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Call ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fire ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Manual ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Station ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Call,
        tag:Equipment,
        tag:Fire,
        tag:Manual,
        tag:Safety,
        tag:Station .

brick:Fire_Alarm_Pull_Station a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fire Alarm Pull Station" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Manual_fire_alarm_activation#Fire_alarm_pull_station> ;
    rdfs:subClassOf brick:Manual_Fire_Alarm_Activation_Equipment ;
    skos:definition "An active fire protection device (usually wall-mounted) that when activated initiates an alarm on a fire alarm system. In its simplest form the user activates the alarm by pulling the handle down."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fire ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Manual ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pull ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Station ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Equipment,
        tag:Fire,
        tag:Manual,
        tag:Pull,
        tag:Safety,
        tag:Station .

brick:Fire_Control_Panel a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fire Control Panel" ;
    rdfs:subClassOf brick:Fire_Safety_Equipment ;
    skos:definition "A panel-mounted device that provides status and control of a fire safety system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Control ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fire ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Panel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Control,
        tag:Equipment,
        tag:Fire,
        tag:Panel,
        tag:Safety .

brick:Fire_Safety_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fire Safety System" ;
    rdfs:seeAlso <https://assetinsights.net/Glossary/G_Fire_Safety_System.html> ;
    rdfs:subClassOf brick:Safety_System ;
    skos:definition "A system containing devices and equipment that monitor, detect and suppress fire hazards"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fire ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fire,
        tag:Safety,
        tag:System .

brick:Fire_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fire Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the presence of fire"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fire ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fire,
        tag:Point,
        tag:Sensor .

brick:Fire_Zone a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fire Zone" ;
    rdfs:subClassOf brick:Zone ;
    skos:definition "combustion chamber in a furnace or boiler."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fire ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fire,
        tag:Location,
        tag:Zone .

brick:First_Aid_Kit a owl:Class,
        sh:NodeShape ;
    rdfs:label "First Aid Kit" ;
    rdfs:subClassOf brick:Safety_Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Aid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:FirstAid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Aid,
        tag:Equipment,
        tag:FirstAid,
        tag:Safety .

brick:First_Aid_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "First Aid Room" ;
    rdfs:subClassOf brick:Medical_Room ;
    skos:definition "A room for a person with minor injuries can be treated or temporarily treated until transferred to a more advanced medical facility"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Aid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:First ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Meidcal ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Aid,
        tag:First,
        tag:Location,
        tag:Meidcal,
        tag:Room,
        tag:Space .

brick:Flow_Loss a brick:Quantity ;
    rdfs:label "FlowLoss" ;
    qudt:applicableUnit unit:M3-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader brick:Flow ;
    skos:definition "The amount of flow rate that is lost during distribution" .

brick:Formaldehyde_Level_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Formaldehyde Level Sensor" ;
    rdfs:subClassOf brick:Air_Quality_Sensor ;
    skos:definition "Measures the concentration of formaldehyde in air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Formaldehyde ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Formaldehyde,
        tag:Level,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Formaldehyde_Concentration ;
    brick:hasSubstance brick:Air .

brick:Freeze_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Freeze Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if a substance contained within a vessel has frozen"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Freeze ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Freeze,
        tag:Point,
        tag:Status .

brick:Freezer a owl:Class,
        sh:NodeShape ;
    rdfs:label "Freezer" ;
    rdfs:subClassOf brick:Laboratory ;
    skos:definition "cold chamber usually kept at a temperature of 22°F to 31°F (–5°C to –1°C), with high-volume air circulation."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Freezer ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Laboratory ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Freezer,
        tag:Laboratory,
        tag:Location,
        tag:Room .

brick:Fresh_Air_Fan a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fresh Air Fan" ;
    rdfs:subClassOf brick:Fan ;
    skos:definition "Fan moving fresh air -- air that is supplied into the building from the outdoors"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fresh ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Equipment,
        tag:Fan,
        tag:Fresh .

brick:Frost_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Frost Sensor" ;
    rdfs:subClassOf brick:Sensor,
        brick:Temperature_Sensor ;
    skos:definition "Senses the presence of frost or conditions that may cause frost"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Frost ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Frost,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Frost ;
    brick:hasSubstance brick:Temperature .

brick:Fume_Hood a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fume Hood" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "A fume-collection device mounted over a work space, table, or shelf and serving to conduct unwanted gases away from the area enclosed."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fume ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hood ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Fume,
        tag:Hood .

brick:Fume_Hood_Air_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fume Hood Air Flow Sensor" ;
    rdfs:subClassOf brick:Air_Flow_Sensor ;
    skos:definition "Measures the rate of flow of air in a fume hood"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fume ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hood ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Fume,
        tag:Hood,
        tag:Point,
        tag:Sensor .

brick:Gas_Distribution a owl:Class,
        sh:NodeShape ;
    rdfs:label "Gas Distribution" ;
    rdfs:subClassOf brick:Equipment ;
    skos:definition "Utilize a gas distribution source to represent how gas is distributed across multiple destinations"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Distribution ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Distribution,
        tag:Equipment,
        tag:Gas .

brick:Gas_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Gas Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures gas concentration (other than CO2)"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Gas,
        tag:Point,
        tag:Sensor .

brick:Gas_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Gas System" ;
    rdfs:subClassOf brick:System ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Gas,
        tag:System .

brick:Gas_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Gas Valve" ;
    rdfs:subClassOf brick:Valve ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Gas,
        tag:Valve .

brick:Gatehouse a owl:Class,
        sh:NodeShape ;
    rdfs:label "Gatehouse" ;
    rdfs:subClassOf brick:Space ;
    skos:definition "The standalone building used to manage the entrance to a campus or building grounds"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Gatehouse ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Gatehouse,
        tag:Location,
        tag:Space .

brick:Generator_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Generator Room" ;
    rdfs:subClassOf brick:Electrical_Room ;
    skos:definition "A room for electrical equipment, specifically electrical generators."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Electrical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Generator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Service ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Electrical,
        tag:Generator,
        tag:Location,
        tag:Room,
        tag:Service,
        tag:Space .

brick:HVAC_Zone a owl:Class,
        sh:NodeShape ;
    rdfs:label "HVAC Zone" ;
    rdfs:subClassOf brick:Zone ;
    skos:definition "a space or group of spaces, within a building with heating, cooling, and ventilating requirements, that are sufficiently similar so that desired conditions (e.g., temperature) can be maintained throughout using a single sensor (e.g., thermostat or temperature sensor)."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:HVAC ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:HVAC,
        tag:Location,
        tag:Zone .

brick:Hail_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hail Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures hail in terms of its size and damage potential"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hail ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hail,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Hail .

brick:Hallway a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hallway" ;
    rdfs:subClassOf brick:Common_Space ;
    skos:definition "A common space, used to connect other parts of a building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Common ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hallway ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Common,
        tag:Hallway,
        tag:Location,
        tag:Space .

brick:Hazardous_Materials_Storage a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hazardous Materials Storage" ;
    rdfs:subClassOf brick:Storage_Room ;
    skos:definition "A storage space set aside (usually with restricted access) for the storage of materials that can be hazardous to living beings or the environment"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hazardous ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Materials ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Storage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hazardous,
        tag:Location,
        tag:Materials,
        tag:Room,
        tag:Space,
        tag:Storage .

brick:Heat_Detector a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heat Detector" ;
    rdfs:subClassOf brick:Fire_Safety_Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Detector ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fire ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Detector,
        tag:Equipment,
        tag:Fire,
        tag:Heat,
        tag:Safety .

brick:Heat_Exchanger_Supply_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heat Exchanger Supply Water Temperature Sensor" ;
    rdfs:subClassOf brick:Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of water supplied by a heat exchanger"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Exchanger ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Exchanger,
        tag:Heat,
        tag:Point,
        tag:Sensor,
        tag:Supply,
        tag:Temperature,
        tag:Water .

brick:Heat_Exchanger_System_Enable_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heat Exchanger System Enable Status" ;
    rdfs:subClassOf brick:Enable_Status,
        brick:System_Status ;
    skos:definition "Indicates if the heat exchanger system has been enabled"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exchanger ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Enable,
        tag:Exchanger,
        tag:Heat,
        tag:Point,
        tag:Status,
        tag:System .

brick:Heat_Recovery_Hot_Water_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heat Recovery Hot Water System" ;
    rdfs:subClassOf brick:Hot_Water_System ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Recovery ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Heat,
        tag:Hot,
        tag:Recovery,
        tag:System,
        tag:Water .

brick:Heat_Sink_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heat Sink Temperature Sensor" ;
    rdfs:subClassOf brick:Temperature_Sensor ;
    skos:definition "Measure temperature of the heat sink on a device such as a VFD."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Heat_Sink ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Heat_Sink,
        tag:Point,
        tag:Sensor,
        tag:Temperature .

brick:Heat_Wheel a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heat Wheel" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Thermal_wheel> ;
    rdfs:subClassOf brick:Heat_Exchanger ;
    skos:definition "A rotary heat exchanger positioned within the supply and exhaust air streams of an air handling system in order to recover heat energy"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Wheel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Heat,
        tag:Wheel .

brick:Heat_Wheel_VFD a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heat Wheel VFD" ;
    rdfs:subClassOf brick:VFD ;
    skos:definition "A VFD that drives a heat wheel"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:VFD ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Wheel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Heat,
        tag:VFD,
        tag:Wheel .

brick:Heating_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Controls the amount of heating to be delivered (typically as a proportion of total heating output)"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Heat,
        tag:Point .

brick:Heating_Demand_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Demand Setpoint" ;
    rdfs:subClassOf brick:Demand_Setpoint ;
    skos:definition "Sets the rate required for heating"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Demand ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Demand,
        tag:Heat,
        tag:Point,
        tag:Setpoint .

brick:Heating_Enable_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Enable Command" ;
    rdfs:subClassOf brick:Enable_Command ;
    skos:definition "Command that enables heating functionality in equipment but certain condition(s) must be met first before actively heating. For the actively heating control, see Heating_Command."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heating ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Enable,
        tag:Heating,
        tag:Point .

brick:Heating_Start_Stop_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Start Stop Status" ;
    rdfs:subClassOf brick:Start_Stop_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Start ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Stop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Heat,
        tag:Point,
        tag:Start,
        tag:Status,
        tag:Stop .

brick:Heating_Supply_Air_Temperature_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Supply Air Temperature Deadband Setpoint" ;
    rdfs:subClassOf brick:Heating_Temperature_Setpoint,
        brick:Supply_Air_Temperature_Deadband_Setpoint ;
    owl:equivalentClass brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of temperature of supply air for heating"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Deadband,
        tag:Heat,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature .

brick:Heating_Supply_Air_Temperature_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Supply Air Temperature Integral Time Parameter" ;
    rdfs:subClassOf brick:Air_Temperature_Integral_Time_Parameter ;
    owl:equivalentClass brick:Heating_Discharge_Air_Temperature_Integral_Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Heat,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Supply,
        tag:Temperature,
        tag:Time .

brick:Heating_Supply_Air_Temperature_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Supply Air Temperature Proportional Band Parameter" ;
    rdfs:subClassOf brick:Supply_Air_Temperature_Proportional_Band_Parameter ;
    owl:equivalentClass brick:Heating_Discharge_Air_Temperature_Proportional_Band_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Band,
        tag:Heat,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Proportional,
        tag:Supply,
        tag:Temperature .

brick:Heating_Thermal_Power_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Thermal Power Sensor" ;
    rdfs:subClassOf brick:Thermal_Power_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Power ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Thermal ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Heat,
        tag:Point,
        tag:Power,
        tag:Sensor,
        tag:Thermal .

brick:High_Air_Flow_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "High Air Flow Alarm" ;
    rdfs:subClassOf brick:Air_Flow_Alarm ;
    skos:definition "An alarm that indicates that the air flow is higher than normal."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Flow,
        tag:High,
        tag:Point .

brick:High_CO2_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "High CO2 Alarm" ;
    rdfs:subClassOf brick:CO2_Alarm ;
    skos:definition "A device that indicates high concentration of carbon dioxide."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:CO2 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:CO2,
        tag:High,
        tag:Point .

brick:High_Discharge_Air_Temperature_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "High Discharge Air Temperature Alarm" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Alarm,
        brick:High_Temperature_Alarm ;
    skos:definition "An alarm that indicates that discharge air temperature is too high"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Discharge,
        tag:High,
        tag:Point,
        tag:Temperature .

brick:High_Head_Pressure_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "High Head Pressure Alarm" ;
    rdfs:subClassOf brick:Pressure_Alarm ;
    skos:definition "An alarm that indicates a high pressure generated on the output side of a gas compressor in a refrigeration or air conditioning system."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Head ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Head,
        tag:High,
        tag:Point,
        tag:Pressure .

brick:High_Humidity_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "High Humidity Alarm" ;
    rdfs:subClassOf brick:Humidity_Alarm ;
    skos:definition "An alarm that indicates high concentration of water vapor in the air."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:High,
        tag:Humidity,
        tag:Point .

brick:High_Humidity_Alarm_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "High Humidity Alarm Parameter" ;
    rdfs:subClassOf brick:Humidity_Parameter ;
    skos:definition "A parameter determining the humidity level at which to trigger a high humidity alarm"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:High,
        tag:Humidity,
        tag:Parameter,
        tag:Point .

brick:High_Outside_Air_Lockout_Temperature_Differential_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "High Outside Air Lockout Temperature Differential Parameter" ;
    rdfs:subClassOf brick:Outside_Air_Lockout_Temperature_Differential_Parameter ;
    skos:definition "The upper bound of the outside air temperature lockout range"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lockout ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:High,
        tag:Lockout,
        tag:Outside,
        tag:Parameter,
        tag:Point,
        tag:Temperature .

brick:High_Return_Air_Temperature_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "High Return Air Temperature Alarm" ;
    rdfs:subClassOf brick:High_Temperature_Alarm,
        brick:Return_Air_Temperature_Alarm ;
    skos:definition "An alarm that indicates that return air temperature is too high"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:High,
        tag:Point,
        tag:Return,
        tag:Temperature .

brick:High_Static_Pressure_Cutout_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "High Static Pressure Cutout Setpoint Limit" ;
    rdfs:subClassOf brick:Static_Pressure_Setpoint_Limit ;
    skos:definition "A parameter that places a lower or upper bound on the range of permitted values of a High_Static_Pressure_Cutout_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cutout ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cutout,
        tag:High,
        tag:Limit,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static .

brick:High_Temperature_Alarm_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "High Temperature Alarm Parameter" ;
    rdfs:subClassOf brick:Temperature_Parameter ;
    skos:definition "A parameter determining the temperature level at which to trigger a high temperature alarm"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:High,
        tag:Parameter,
        tag:Point,
        tag:Temperature .

brick:High_Temperature_Hot_Water_Return_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "High Temperature Hot Water Return Temperature Sensor" ;
    rdfs:subClassOf brick:Hot_Water_Return_Temperature_Sensor ;
    skos:definition "Measures the temperature of high-temperature hot water returned to a hot water system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:High,
        tag:Hot,
        tag:Point,
        tag:Return,
        tag:Sensor,
        tag:Temperature,
        tag:Water .

brick:High_Temperature_Hot_Water_Supply_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "High Temperature Hot Water Supply Temperature Sensor" ;
    rdfs:subClassOf brick:Hot_Water_Supply_Temperature_Sensor ;
    skos:definition "Measures the temperature of high-temperature hot water supplied by a hot water system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:High,
        tag:Hot,
        tag:Point,
        tag:Sensor,
        tag:Supply,
        tag:Temperature,
        tag:Water .

brick:Hold_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hold Status" ;
    rdfs:subClassOf brick:Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hold ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hold,
        tag:Point,
        tag:Status .

brick:Hospitality_Box a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hospitality Box" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A room at a stadium, usually overlooking the field of play, that is physical separate from the other seating at the venue"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Box ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hospitality ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Box,
        tag:Hospitality,
        tag:Location,
        tag:Room,
        tag:Space .

brick:Hot_Box a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Box" ;
    rdfs:subClassOf brick:Laboratory ;
    skos:definition "hot air chamber forming part of an air handler."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Box ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Laboratory ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Box,
        tag:Hot,
        tag:Laboratory,
        tag:Location,
        tag:Room .

brick:Hot_Water_Baseboard_Radiator a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Baseboard Radiator" ;
    rdfs:subClassOf brick:Baseboard_Radiator,
        brick:Hot_Water_Radiator ;
    skos:definition "Hydronic heating device located at or near the floor"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Baseboard ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radiator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Baseboard,
        tag:Equipment,
        tag:Hot,
        tag:Radiator,
        tag:Water .

brick:Hot_Water_Coil a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Coil" ;
    rdfs:subClassOf brick:Heating_Coil ;
    skos:definition "A heating element typically made of pipe, tube or wire that emits heat that is filled with hot water."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Coil ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Coil,
        tag:Equipment,
        tag:Heat,
        tag:Hot,
        tag:Water .

brick:Hot_Water_Differential_Pressure_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Differential Pressure Deadband Setpoint" ;
    rdfs:subClassOf brick:Differential_Pressure_Deadband_Setpoint,
        brick:Hot_Water_Differential_Pressure_Setpoint ;
    skos:definition "Sets the size of a deadband of differential pressure of hot water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Deadband,
        tag:Differential,
        tag:Hot,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Hot_Water .

brick:Hot_Water_Differential_Pressure_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Differential Pressure Integral Time Parameter" ;
    rdfs:subClassOf brick:Differential_Pressure_Integral_Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Hot,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Time,
        tag:Water .

brick:Hot_Water_Differential_Pressure_Load_Shed_Reset_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Differential Pressure Load Shed Reset Status" ;
    rdfs:subClassOf brick:Hot_Water_Differential_Pressure_Load_Shed_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Hot,
        tag:Load,
        tag:Point,
        tag:Pressure,
        tag:Reset,
        tag:Shed,
        tag:Status,
        tag:Water .

brick:Hot_Water_Differential_Pressure_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Differential Pressure Proportional Band Parameter" ;
    rdfs:subClassOf brick:Differential_Pressure_Proportional_Band ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Band,
        tag:Differential,
        tag:Hot,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Proportional,
        tag:Water .

brick:Hot_Water_Differential_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Differential Temperature Sensor" ;
    rdfs:subClassOf brick:Hot_Water_Supply_Temperature_Sensor,
        brick:Water_Differential_Temperature_Sensor ;
    skos:definition "Measures the difference in temperature between the entering water to the boiler or other water heating device and leaving water from the same boiler or other water heating device"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Hot,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water .

brick:Hot_Water_Discharge_Temperature_Load_Shed_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Discharge Temperature Load Shed Status" ;
    rdfs:subClassOf brick:Load_Shed_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Discharge,
        tag:Hot,
        tag:Load,
        tag:Point,
        tag:Shed,
        tag:Status,
        tag:Temperature,
        tag:Water .

brick:Hot_Water_Loop a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Loop" ;
    rdfs:subClassOf brick:Water_Loop ;
    skos:definition "A collection of equipment that transport and regulate hot water among each other"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Loop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Loop,
        tag:Water .

brick:Hot_Water_Pump a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Pump" ;
    rdfs:subClassOf brick:Water_Pump ;
    skos:definition "A pump that performs work on hot water; typically part of a hot water system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pump ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Hot,
        tag:Pump,
        tag:Water .

brick:Hot_Water_Return_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Return Flow Sensor" ;
    rdfs:subClassOf brick:Hot_Water_Flow_Sensor,
        brick:Return_Water_Flow_Sensor ;
    skos:definition "Measures the rate of flow of hot return water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Flow,
        tag:Hot,
        tag:Point,
        tag:Return,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Return_Hot_Water .

brick:Hot_Water_Static_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Static Pressure Setpoint" ;
    rdfs:subClassOf brick:Static_Pressure_Setpoint ;
    skos:definition "Sets static pressure of hot air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static,
        tag:Water ;
    brick:hasQuantity brick:Static_Pressure ;
    brick:hasSubstance brick:Hot_Water .

brick:Hot_Water_Supply_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Supply Flow Sensor" ;
    rdfs:subClassOf brick:Hot_Water_Flow_Sensor,
        brick:Supply_Water_Flow_Sensor ;
    owl:equivalentClass brick:Hot_Water_Discharge_Flow_Sensor ;
    skos:definition "Measures the rate of flow of hot supply water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Flow,
        tag:Hot,
        tag:Point,
        tag:Sensor,
        tag:Supply,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Supply_Hot_Water .

brick:Hot_Water_Supply_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Supply Flow Setpoint" ;
    rdfs:subClassOf brick:Hot_Water_Flow_Setpoint,
        brick:Supply_Water_Flow_Setpoint ;
    owl:equivalentClass brick:Hot_Water_Discharge_Flow_Setpoint ;
    skos:definition "Sets the target flow rate of hot supply water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Flow,
        tag:Hot,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Water .

brick:Hot_Water_Usage_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Usage Sensor" ;
    rdfs:subClassOf brick:Water_Usage_Sensor ;
    skos:definition "Measures the amount of hot water that is consumed, over some period of time"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Usage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Point,
        tag:Sensor,
        tag:Usage,
        tag:Water .

brick:Humidification_Start_Stop_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Humidification Start Stop Status" ;
    rdfs:subClassOf brick:Start_Stop_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Humidification ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Start ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Stop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Humidification,
        tag:Point,
        tag:Start,
        tag:Status,
        tag:Stop .

brick:Humidifier a owl:Class,
        sh:NodeShape ;
    rdfs:label "Humidifier" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "A device that adds moisture to air or other gases"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidifier ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Humidifier .

brick:Humidifier_Fault_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Humidifier Fault Status" ;
    rdfs:subClassOf brick:Fault_Status ;
    skos:definition "Indicates the presence of a fault in a humidifier"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fault ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidifier ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fault,
        tag:Humidifier,
        tag:Point,
        tag:Status .

brick:Humidify_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Humidify Command" ;
    rdfs:subClassOf brick:Command ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidify ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Humidify,
        tag:Point ;
    brick:hasQuantity brick:Humidity .

brick:Humidity_Tolerance_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Humidity Tolerance Parameter" ;
    rdfs:subClassOf brick:Humidity_Parameter,
        brick:Tolerance_Parameter ;
    skos:definition "A parameter determining the difference between upper and lower limits of humidity."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Tolerance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Humidity,
        tag:Parameter,
        tag:Point,
        tag:Tolerance .

brick:IDF a owl:Class,
        sh:NodeShape ;
    rdfs:label "IDF" ;
    rdfs:subClassOf brick:Distribution_Frame ;
    skos:definition "An room for an intermediate distribution frame, where cables carrying signals from the main distrubtion frame terminate and then feed out to endpoints"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Distribution ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Frame ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:IDF ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Telecom ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Distribution,
        tag:Frame,
        tag:IDF,
        tag:Location,
        tag:Room,
        tag:Space,
        tag:Telecom .

brick:Ice_Tank_Leaving_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Ice Tank Leaving Water Temperature Sensor" ;
    rdfs:subClassOf brick:Leaving_Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of water leaving an ice tank"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Ice ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Tank ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Ice,
        tag:Leaving,
        tag:Point,
        tag:Sensor,
        tag:Tank,
        tag:Temperature,
        tag:Water .

brick:Illuminance_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Illuminance Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Target Illuminance of the zone."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Illuminance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Illuminance,
        tag:Point,
        tag:Setpoint .

brick:Induction_Unit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Induction Unit" ;
    rdfs:subClassOf brick:Terminal_Unit ;
    skos:definition "A device with an primary air connection and integrated coil and condensate pan that performs sensible and latent cooling of a space. Essentially an Active Chilled Beam with a built in condensate pan."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Induction ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Induction,
        tag:Unit .

brick:Information_Area a owl:Class,
        sh:NodeShape ;
    rdfs:label "Information Area" ;
    rdfs:subClassOf brick:Outdoor_Area ;
    skos:definition "An information booth or kiosk where visitors would look for information"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Area ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Information ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outdoor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Area,
        tag:Information,
        tag:Location,
        tag:Outdoor .

brick:Inside_Face_Surface_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Inside Face Surface Temperature Sensor" ;
    rdfs:subClassOf brick:Radiant_Panel_Temperature_Sensor ;
    skos:definition "Measures the inside surface (relative to the space) of the radiant panel of the radiant heating and cooling HVAC system."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Face ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Inside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Surface ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Face,
        tag:Inside,
        tag:Point,
        tag:Sensor,
        tag:Surface,
        tag:Temperature .

brick:Inside_Face_Surface_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Inside Face Surface Temperature Setpoint" ;
    rdfs:subClassOf brick:Radiant_Panel_Temperature_Setpoint ;
    skos:definition "Sets temperature for the inside face surface temperature of the radiant panel."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Face ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Inside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Surface ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Face,
        tag:Inside,
        tag:Point,
        tag:Setpoint,
        tag:Surface,
        tag:Temperature .

brick:Intake_Air_Filter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Intake Air Filter" ;
    rdfs:subClassOf brick:Filter ;
    skos:definition "Filters air intake"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Filter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Intake ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Equipment,
        tag:Filter,
        tag:Intake .

brick:Intake_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Intake Air Temperature Sensor" ;
    rdfs:subClassOf brick:Outside_Air_Temperature_Sensor ;
    skos:definition "Measures air at the interface between the building and the outside"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Intake ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Intake,
        tag:Outside,
        tag:Point,
        tag:Sensor,
        tag:Temperature .

brick:Intrusion_Detection_Equipment a owl:Class,
        sh:NodeShape ;
    rdfs:label "Intrusion Detection Equipment" ;
    rdfs:subClassOf brick:Security_Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Detection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Intrusion ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Security ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Detection,
        tag:Equipment,
        tag:Intrusion,
        tag:Security .

brick:Inverter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Inverter" ;
    rdfs:subClassOf brick:Electrical_Equipment ;
    skos:definition "A device that changes direct current into alternating current"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Inverter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Inverter .

brick:Janitor_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Janitor Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A room set aside for the storage of cleaning equipment and supplies"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Janitor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Janitor,
        tag:Location,
        tag:Room,
        tag:Space .

brick:Jet_Nozzle_Air_Diffuser a owl:Class,
        sh:NodeShape ;
    rdfs:label "Jet Nozzle Air Diffuser" ;
    rdfs:subClassOf brick:Air_Diffuser ;
    skos:definition "An air diffuser that is designed to produce high velocity discharge air stream to throw the air over a large distance or target the air stream to a localize area"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Diffuser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Jet ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Nozzle ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Diffuser,
        tag:Equipment,
        tag:Jet,
        tag:Nozzle .

brick:Laminar_Flow_Air_Diffuser a owl:Class,
        sh:NodeShape ;
    rdfs:label "Laminar Flow Air Diffuser" ;
    rdfs:subClassOf brick:Air_Diffuser ;
    skos:definition "An air diffuser that is designed for low discharge air speeds to provide uniform and unidirectional air pattern which minimizes room air entrainment"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Diffuser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Laminar ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Diffuser,
        tag:Equipment,
        tag:Flow,
        tag:Laminar .

brick:Last_Fault_Code_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Last Fault Code Status" ;
    rdfs:subClassOf brick:Fault_Status ;
    skos:definition "Indicates the last fault code that occurred"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Code ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fault ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Last ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Code,
        tag:Fault,
        tag:Last,
        tag:Point,
        tag:Status .

brick:Lead_Lag_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Lead Lag Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Enables lead/lag operation"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lag ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lead ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Lag,
        tag:Lead,
        tag:Point .

brick:Lead_Lag_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Lead Lag Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if lead/lag operation is enabled"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Lag ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lead ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Lag,
        tag:Lead,
        tag:Point,
        tag:Status .

brick:Lead_On_Off_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Lead On Off Command" ;
    rdfs:subClassOf brick:On_Off_Command ;
    skos:definition "Controls the active/inactive status of the \"lead\" part of a lead/lag system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lead ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:On ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Lead,
        tag:Off,
        tag:On,
        tag:Point .

brick:Leaving_Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Water Flow Sensor" ;
    rdfs:subClassOf brick:Water_Flow_Sensor ;
    skos:definition "Measures the rate of flow of water that is leaving a piece of equipment or system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Flow,
        tag:Leaving,
        tag:Point,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Leaving_Water .

brick:Leaving_Water_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Water Flow Setpoint" ;
    rdfs:subClassOf brick:Water_Flow_Setpoint ;
    skos:definition "Sets the target flow rate of leaving water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Flow,
        tag:Leaving,
        tag:Point,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Leaving_Water .

brick:Leaving_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Water_Temperature_Setpoint ;
    skos:definition "Sets temperature of leaving water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Leaving,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Leaving_Water .

brick:Library a owl:Class,
        sh:NodeShape ;
    rdfs:label "Library" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A place for the storage and/or consumption of physical media, e.g. books, periodicals, and DVDs/CDs"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Library ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Library,
        tag:Location,
        tag:Room,
        tag:Space .

brick:Lighting_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Lighting System" ;
    rdfs:subClassOf brick:System ;
    skos:definition "The equipment, devices and interfaces that serve or are a part of the lighting subsystem in a building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Lighting ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Lighting,
        tag:System .

brick:Lighting_Zone a owl:Class,
        sh:NodeShape ;
    rdfs:label "Lighting Zone" ;
    rdfs:subClassOf brick:Zone ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Lighting ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Lighting,
        tag:Location,
        tag:Zone .

brick:Liquid_Detection_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Liquid Detection Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Detection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Detection,
        tag:Liquid,
        tag:Point .

brick:Load_Current_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Load Current Sensor" ;
    rdfs:subClassOf brick:Current_Sensor ;
    skos:definition "Measures the current consumed by a load"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Current ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Current,
        tag:Load,
        tag:Point,
        tag:Sensor .

brick:Loading_Dock a owl:Class,
        sh:NodeShape ;
    rdfs:label "Loading Dock" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A part of a facility where delivery trucks can load and unload. Usually partially enclosed with specific traffic lanes leading to the dock"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Dock ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Loading ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Dock,
        tag:Loading,
        tag:Location,
        tag:Room,
        tag:Space .

brick:Locally_On_Off_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Locally On Off Status" ;
    rdfs:subClassOf brick:On_Off_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Locally ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:On ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Locally,
        tag:Off,
        tag:On,
        tag:Point,
        tag:Status .

brick:Lockout_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Lockout Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if a piece of equipment, system, or functionality has been locked out from operation"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Lockout ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Lockout,
        tag:Point,
        tag:Status .

brick:Louver a owl:Class,
        sh:NodeShape ;
    rdfs:label "Louver" ;
    rdfs:subClassOf brick:Shading_Equipment ;
    skos:definition "Device consisting of an assembly of parallel sloping vanes, intended to permit the passage of air while providing a measure of protection against environmental influences"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Louver ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shade ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Louver,
        tag:Shade .

brick:Low_Discharge_Air_Flow_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Discharge Air Flow Alarm" ;
    rdfs:subClassOf brick:Low_Air_Flow_Alarm ;
    skos:definition "An alarm that indicates that the discharge air flow is lower than normal."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Discharge,
        tag:Flow,
        tag:Low,
        tag:Point .

brick:Low_Discharge_Air_Temperature_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Discharge Air Temperature Alarm" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Alarm,
        brick:Low_Temperature_Alarm ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Discharge,
        tag:Low,
        tag:Point,
        tag:Temperature .

brick:Low_Freeze_Protect_Temperature_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Freeze Protect Temperature Parameter" ;
    rdfs:subClassOf brick:Temperature_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Freeze ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Protect ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Freeze,
        tag:Low,
        tag:Parameter,
        tag:Point,
        tag:Protect,
        tag:Temperature .

brick:Low_Humidity_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Humidity Alarm" ;
    rdfs:subClassOf brick:Humidity_Alarm ;
    skos:definition "An alarm that indicates low concentration of water vapor in the air."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Humidity,
        tag:Low,
        tag:Point .

brick:Low_Humidity_Alarm_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Humidity Alarm Parameter" ;
    rdfs:subClassOf brick:Humidity_Parameter ;
    skos:definition "A parameter determining the humidity level at which to trigger a low humidity alarm"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Humidity,
        tag:Low,
        tag:Parameter,
        tag:Point .

brick:Low_Outside_Air_Lockout_Temperature_Differential_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Outside Air Lockout Temperature Differential Parameter" ;
    rdfs:subClassOf brick:Outside_Air_Lockout_Temperature_Differential_Parameter ;
    skos:definition "The lower bound of the outside air temperature lockout range"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lockout ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Lockout,
        tag:Low,
        tag:Outside,
        tag:Parameter,
        tag:Point,
        tag:Temperature .

brick:Low_Outside_Air_Temperature_Enable_Differential_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Outside Air Temperature Enable Differential Sensor" ;
    rdfs:subClassOf brick:Outside_Air_Temperature_Enable_Differential_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Enable,
        tag:Low,
        tag:Outside,
        tag:Point,
        tag:Sensor,
        tag:Temperature .

brick:Low_Outside_Air_Temperature_Enable_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Outside Air Temperature Enable Setpoint" ;
    rdfs:subClassOf brick:Outside_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Enable,
        tag:Low,
        tag:Outside,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Low_Return_Air_Temperature_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Return Air Temperature Alarm" ;
    rdfs:subClassOf brick:Low_Temperature_Alarm,
        brick:Return_Air_Temperature_Alarm ;
    skos:definition "An alarm that indicates that return air temperature is too low"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Low,
        tag:Point,
        tag:Return,
        tag:Temperature .

brick:Low_Suction_Pressure_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Suction Pressure Alarm" ;
    rdfs:subClassOf brick:Pressure_Alarm ;
    skos:definition "An alarm that indicates a low suction pressure in the compressor in a refrigeration or air conditioning system."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Suction ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Low,
        tag:Point,
        tag:Pressure,
        tag:Suction .

brick:Low_Temperature_Alarm_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Temperature Alarm Parameter" ;
    rdfs:subClassOf brick:Temperature_Parameter ;
    skos:definition "A parameter determining the temperature level at which to trigger a low temperature alarm"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Low,
        tag:Parameter,
        tag:Point,
        tag:Temperature .

brick:Low_Voltage_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Voltage Alarm" ;
    rdfs:subClassOf brick:Voltage_Alarm ;
    skos:definition "An alarm that indicates the voltage is lower than its normal state."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Voltage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Low,
        tag:Point,
        tag:Voltage .

brick:Lowest_Exhaust_Air_Static_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Lowest Exhaust Air Static Pressure Sensor" ;
    rdfs:subClassOf brick:Exhaust_Air_Static_Pressure_Sensor ;
    skos:definition "The lowest observed static pressure of air in exhaust regions of an HVAC system over some period of time"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lowest ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Exhaust,
        tag:Lowest,
        tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Static .

brick:Luminaire a owl:Class,
        sh:NodeShape ;
    rdfs:label "Luminaire" ;
    rdfs:subClassOf brick:Lighting ;
    skos:definition "A complete lighting unit consisting of a lamp or lamps and ballast(s) (when applicable) together with the parts designed to distribute the light, to position and protect the lamps, and to connect the lamps to the power supply."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Luminaire ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Luminaire .

brick:Luminaire_Driver a owl:Class,
        sh:NodeShape ;
    rdfs:label "Luminaire Driver" ;
    rdfs:subClassOf brick:Lighting ;
    skos:definition "A power source for a luminaire"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Driver ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Luminaire ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Driver,
        tag:Equipment,
        tag:Luminaire .

brick:Luminance_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Luminance Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Luminance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Luminance,
        tag:Point .

brick:Luminance_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Luminance Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Controls the amount of luminance delivered by a lighting system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Luminance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Luminance,
        tag:Point .

brick:Luminance_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Luminance Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the luminous intensity per unit area of light travelling in a given direction"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Luminance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Luminance,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Luminance .

brick:Luminance_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Luminance Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Sets luminance"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Luminance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Luminance,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Luminance .

brick:Luminous_Flux a brick:Quantity ;
    rdfs:label "Luminous Flux" ;
    qudt:applicableUnit unit:LM ;
    skos:broader brick:Luminance ;
    brick:hasQUDTReference quantitykind:LuminousFlux .

brick:Luminous_Intensity a brick:Quantity ;
    rdfs:label "Luminous Intensity" ;
    qudt:applicableUnit unit:CD,
        unit:CP ;
    skos:broader brick:Luminance ;
    brick:hasQUDTReference quantitykind:LuminousIntensity .

brick:MDF a owl:Class,
        sh:NodeShape ;
    rdfs:label "MDF" ;
    rdfs:subClassOf brick:Distribution_Frame ;
    skos:definition "A room for the Main Distribution Frame, the central place of a building where cables carrying signals meet and connect to the outside world"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Distribution ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Frame ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:MDF ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Telecom ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Distribution,
        tag:Frame,
        tag:Location,
        tag:MDF,
        tag:Room,
        tag:Space,
        tag:Telecom .

brick:Mail_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Mail Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A room where mail is recieved and sorted for distribution to the rest of the building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mail ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Mail,
        tag:Room,
        tag:Space .

brick:Maintenance_Mode_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Maintenance Mode Command" ;
    rdfs:subClassOf brick:Mode_Command ;
    skos:definition "Controls whether or not a device or controller is operating in \"Maintenance\" mode"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Maintenance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mode ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Maintenance,
        tag:Mode,
        tag:Point .

brick:Maintenance_Required_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Maintenance Required Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "An alarm that indicates that repair/maintenance is required on an associated device or equipment"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Maintenance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Required ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Maintenance,
        tag:Point,
        tag:Required .

brick:Majlis a owl:Class,
        sh:NodeShape ;
    rdfs:label "Majlis" ;
    rdfs:subClassOf brick:Lounge ;
    skos:definition "In Arab countries, an Majlis is a private lounge where visitors are recieved and entertained"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Common ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lounge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Majlis ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Common,
        tag:Location,
        tag:Lounge,
        tag:Majlis,
        tag:Space .

brick:Makeup_Water_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Makeup Water Valve" ;
    rdfs:subClassOf brick:HVAC_Valve,
        brick:Water_Valve ;
    skos:definition "A valve regulating the flow of makeup water into a water holding tank, e.g. a cooling tower, hot water tank"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Makeup ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Fluid,
        tag:Liquid,
        tag:Makeup,
        tag:Valve,
        tag:Water .

brick:Manual_Auto_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Manual Auto Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if a system is under manual or automatic operation"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Auto ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Manual ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Auto,
        tag:Manual,
        tag:Point,
        tag:Status .

brick:Massage_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Massage Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "Usually adjunct to an athletic facility, a private/semi-private space where massages are performed"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Massage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Massage,
        tag:Room,
        tag:Space .

brick:Max_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint ;
    skos:definition "Setpoint for maximum air temperature"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Max,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Max_Chilled_Water_Differential_Pressure_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Chilled Water Differential Pressure Setpoint Limit" ;
    rdfs:subClassOf brick:Differential_Pressure_Setpoint_Limit,
        brick:Max_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Chilled_Water_Differential_Pressure_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Differential,
        tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Water .

brick:Max_Discharge_Air_Temperature_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Discharge Air Temperature Setpoint Limit" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Setpoint_Limit,
        brick:Max_Temperature_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Discharge_Air_Temperature_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Limit,
        tag:Max,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Max_Frequency_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Frequency Command" ;
    rdfs:subClassOf brick:Frequency_Command ;
    skos:definition "Sets the maximum permitted frequency"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fequency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Fequency,
        tag:Max,
        tag:Point .

brick:Max_Hot_Water_Differential_Pressure_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Hot Water Differential Pressure Setpoint Limit" ;
    rdfs:subClassOf brick:Differential_Pressure_Setpoint_Limit,
        brick:Max_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Hot_Water_Differential_Pressure_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Hot,
        tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Water .

brick:Max_Load_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Load Setpoint" ;
    rdfs:subClassOf brick:Load_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Load,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Setpoint .

brick:Max_Occupied_Cooling_Supply_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Occupied Cooling Supply Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Cooling_Supply_Air_Flow_Setpoint_Limit ;
    owl:equivalentClass brick:Max_Occupied_Cooling_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Occupied_Cooling_Supply_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Flow,
        tag:Limit,
        tag:Max,
        tag:Occupied,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Supply .

brick:Max_Occupied_Heating_Supply_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Occupied Heating Supply Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Heating_Supply_Air_Flow_Setpoint_Limit ;
    owl:equivalentClass brick:Max_Occupied_Heating_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Occupied_Heating_Supply_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Heat,
        tag:Limit,
        tag:Max,
        tag:Occupied,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Supply .

brick:Max_Position_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Position Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Limit,
        brick:Position_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Position_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Position ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Limit,
        tag:Max,
        tag:Point,
        tag:Position,
        tag:Setpoint .

brick:Max_Speed_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Speed Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Limit,
        brick:Speed_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Speed_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Speed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Speed .

brick:Max_Supply_Air_Static_Pressure_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Supply Air Static Pressure Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Limit,
        brick:Max_Static_Pressure_Setpoint_Limit ;
    owl:equivalentClass brick:Max_Discharge_Air_Static_Pressure_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Supply_Air_Static_Pressure_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static,
        tag:Supply .

brick:Max_Supply_Air_Temperature_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Supply Air Temperature Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Temperature_Setpoint_Limit,
        brick:Supply_Air_Temperature_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Supply_Air_Temperature_Setpoint."@en,
        "Parameter for the maximum value of a Supply_Air_Temperature_Setpoint"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Limit,
        tag:Max,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature .

brick:Max_Unoccupied_Cooling_Supply_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Unoccupied Cooling Supply Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Cooling_Supply_Air_Flow_Setpoint_Limit ;
    owl:equivalentClass brick:Max_Unoccupied_Cooling_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Unoccupied_Cooling_Supply_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Flow,
        tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Unoccupied .

brick:Max_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Unoccupied Heating Supply Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Heating_Supply_Air_Flow_Setpoint_Limit ;
    owl:equivalentClass brick:Max_Unoccupied_Heating_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Unoccupied_Heating_Supply_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Heat,
        tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Unoccupied .

brick:Max_Water_Level_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Water Level Alarm" ;
    rdfs:subClassOf brick:Water_Level_Alarm ;
    skos:definition "Alarm indicating that the maximum water level was reached"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Level,
        tag:Max,
        tag:Point,
        tag:Water .

brick:Max_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Water_Temperature_Setpoint ;
    skos:definition "Setpoint for max water temperature"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Max,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Water .

brick:Media_Hot_Desk a owl:Class,
        sh:NodeShape ;
    rdfs:label "Media Hot Desk" ;
    rdfs:subClassOf brick:Space ;
    skos:definition "A non-enclosed space used by members of the media temporarily to cover an event while they are present at a venue"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Desk ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Media ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Desk,
        tag:Location,
        tag:Media,
        tag:Space .

brick:Media_Production_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Media Production Room" ;
    rdfs:subClassOf brick:Media_Room ;
    skos:definition "A enclosed space used by media professionals for the production of media"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Media ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Production ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Media,
        tag:Production,
        tag:Room,
        tag:Space .

brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Reset_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Medium Temperature Hot Water Differential Pressure Load Shed Reset Status" ;
    rdfs:subClassOf brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Medium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Load,
        tag:Medium,
        tag:Point,
        tag:Pressure,
        tag:Reset,
        tag:Shed,
        tag:Status,
        tag:Temperature .

brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Medium Temperature Hot Water Differential Pressure Load Shed Setpoint" ;
    rdfs:subClassOf brick:Load_Shed_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Medium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Hot,
        tag:Load,
        tag:Medium,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Shed,
        tag:Temperature,
        tag:Water .

brick:Medium_Temperature_Hot_Water_Differential_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Medium Temperature Hot Water Differential Pressure Sensor" ;
    rdfs:subClassOf brick:Hot_Water_Differential_Pressure_Sensor ;
    skos:definition "Measures the difference in water pressure between sections of a medium temperature hot water system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Medium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Hot,
        tag:Medium,
        tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Temperature,
        tag:Water .

brick:Medium_Temperature_Hot_Water_Differential_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Medium Temperature Hot Water Differential Pressure Setpoint" ;
    rdfs:subClassOf brick:Hot_Water_Differential_Pressure_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Medium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Hot,
        tag:Medium,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Temperature,
        tag:Water .

brick:Medium_Temperature_Hot_Water_Discharge_Temperature_High_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Medium Temperature Hot Water Discharge Temperature High Reset Setpoint" ;
    rdfs:subClassOf brick:Hot_Water_Supply_Temperature_High_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Medium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Discharge,
        tag:High,
        tag:Hot,
        tag:Medium,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Temperature,
        tag:Water .

brick:Medium_Temperature_Hot_Water_Discharge_Temperature_Low_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Medium Temperature Hot Water Discharge Temperature Low Reset Setpoint" ;
    rdfs:subClassOf brick:Hot_Water_Supply_Temperature_Low_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Medium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Discharge,
        tag:Hot,
        tag:Low,
        tag:Medium,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Temperature,
        tag:Water .

brick:Medium_Temperature_Hot_Water_Return_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Medium Temperature Hot Water Return Temperature Sensor" ;
    rdfs:subClassOf brick:Hot_Water_Return_Temperature_Sensor ;
    skos:definition "Measures the temperature of medium-temperature hot water returned to a hot water system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Medium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Medium,
        tag:Point,
        tag:Return,
        tag:Sensor,
        tag:Temperature,
        tag:Water .

brick:Medium_Temperature_Hot_Water_Supply_Temperature_High_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Medium Temperature Hot Water Supply Temperature High Reset Setpoint" ;
    rdfs:subClassOf brick:Hot_Water_Supply_Temperature_High_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Medium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:High,
        tag:Hot,
        tag:Medium,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature,
        tag:Water .

brick:Medium_Temperature_Hot_Water_Supply_Temperature_Load_Shed_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Medium Temperature Hot Water Supply Temperature Load Shed Setpoint" ;
    rdfs:subClassOf brick:Load_Shed_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Medium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Load,
        tag:Medium,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Shed,
        tag:Supply,
        tag:Temperature,
        tag:Water .

brick:Medium_Temperature_Hot_Water_Supply_Temperature_Load_Shed_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Medium Temperature Hot Water Supply Temperature Load Shed Status" ;
    rdfs:subClassOf brick:Hot_Water_Supply_Temperature_Load_Shed_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Medium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Load,
        tag:Medium,
        tag:Point,
        tag:Shed,
        tag:Status,
        tag:Supply,
        tag:Temperature,
        tag:Water .

brick:Medium_Temperature_Hot_Water_Supply_Temperature_Low_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Medium Temperature Hot Water Supply Temperature Low Reset Setpoint" ;
    rdfs:subClassOf brick:Hot_Water_Supply_Temperature_Low_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Medium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Low,
        tag:Medium,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature,
        tag:Water .

brick:Medium_Temperature_Hot_Water_Supply_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Medium Temperature Hot Water Supply Temperature Sensor" ;
    rdfs:subClassOf brick:Hot_Water_Supply_Temperature_Sensor ;
    skos:definition "Measures the temperature of medium-temperature hot water supplied by a hot water system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Medium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Medium,
        tag:Point,
        tag:Sensor,
        tag:Supply,
        tag:Temperature,
        tag:Water .

brick:Methane_Level_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Methane Level Sensor" ;
    rdfs:subClassOf brick:Air_Quality_Sensor ;
    skos:definition "Measures the concentration of methane in air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Methane ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Level,
        tag:Methane,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Methane_Concentration ;
    brick:hasSubstance brick:Air .

brick:Min_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint ;
    skos:definition "Setpoint for minimum air temperature"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Min,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Min_Chilled_Water_Differential_Pressure_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Chilled Water Differential Pressure Setpoint Limit" ;
    rdfs:subClassOf brick:Differential_Pressure_Setpoint_Limit,
        brick:Min_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Chilled_Water_Differential_Pressure_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Differential,
        tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Water .

brick:Min_Discharge_Air_Temperature_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Discharge Air Temperature Setpoint Limit" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Setpoint_Limit,
        brick:Min_Temperature_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Discharge_Air_Temperature_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Limit,
        tag:Min,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Min_Fresh_Air_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Fresh Air Setpoint Limit" ;
    rdfs:subClassOf brick:Fresh_Air_Setpoint_Limit,
        brick:Min_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Fresh_Air_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fresh ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Fresh,
        tag:Limit,
        tag:Min,
        tag:Point,
        tag:Setpoint .

brick:Min_Hot_Water_Differential_Pressure_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Hot Water Differential Pressure Setpoint Limit" ;
    rdfs:subClassOf brick:Differential_Pressure_Setpoint_Limit,
        brick:Min_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Hot_Water_Differential_Pressure_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Hot,
        tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Water .

brick:Min_Occupied_Cooling_Supply_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Occupied Cooling Supply Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Cooling_Supply_Air_Flow_Setpoint_Limit ;
    owl:equivalentClass brick:Min_Occupied_Cooling_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Occupied_Cooling_Supply_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Flow,
        tag:Limit,
        tag:Min,
        tag:Occupied,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Supply .

brick:Min_Occupied_Heating_Supply_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Occupied Heating Supply Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Heating_Supply_Air_Flow_Setpoint_Limit ;
    owl:equivalentClass brick:Min_Occupied_Heating_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Occupied_Heating_Supply_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Heat,
        tag:Limit,
        tag:Min,
        tag:Occupied,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Supply .

brick:Min_Outside_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Outside Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Outside_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Limit,
        tag:Min,
        tag:Outside,
        tag:Parameter,
        tag:Point,
        tag:Setpoint .

brick:Min_Position_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Position Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Limit,
        brick:Position_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Position_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Position ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Limit,
        tag:Min,
        tag:Point,
        tag:Position,
        tag:Setpoint .

brick:Min_Speed_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Speed Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Limit,
        brick:Speed_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Speed_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Speed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Speed .

brick:Min_Supply_Air_Static_Pressure_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Supply Air Static Pressure Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Limit,
        brick:Min_Static_Pressure_Setpoint_Limit ;
    owl:equivalentClass brick:Min_Discharge_Air_Static_Pressure_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Supply_Air_Static_Pressure_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static,
        tag:Supply .

brick:Min_Supply_Air_Temperature_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Supply Air Temperature Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Temperature_Setpoint_Limit,
        brick:Supply_Air_Temperature_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Supply_Air_Temperature_Setpoint."@en,
        "Parameter for the minimum value of a Supply_Air_Temperature_Setpoint"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Limit,
        tag:Min,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature .

brick:Min_Unoccupied_Cooling_Supply_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Unoccupied Cooling Supply Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Cooling_Supply_Air_Flow_Setpoint_Limit ;
    owl:equivalentClass brick:Min_Unoccupied_Cooling_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Unoccupied_Cooling_Supply_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Flow,
        tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Unoccupied .

brick:Min_Unoccupied_Heating_Supply_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Unoccupied Heating Supply Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Heating_Supply_Air_Flow_Setpoint_Limit ;
    owl:equivalentClass brick:Min_Unoccupied_Heating_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Unoccupied_Heating_Supply_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Heat,
        tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Unoccupied .

brick:Min_Water_Level_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Water Level Alarm" ;
    rdfs:subClassOf brick:Water_Level_Alarm ;
    skos:definition "Alarm indicating that the minimum water level was reached"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Level,
        tag:Min,
        tag:Point,
        tag:Water .

brick:Min_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Water_Temperature_Setpoint ;
    skos:definition "Setpoint for min water temperature"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Min,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Water .

brick:Mixed_Air_Filter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Mixed Air Filter" ;
    rdfs:subClassOf brick:Filter ;
    skos:definition "A filter that is applied to the mixture of recirculated and outside air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Filter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mixed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Equipment,
        tag:Filter,
        tag:Mixed .

brick:Mixed_Air_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Mixed Air Flow Sensor" ;
    rdfs:subClassOf brick:Air_Flow_Sensor ;
    skos:definition "Measures the rate of flow of mixed air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mixed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Mixed,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Mixed_Air .

brick:Mixed_Air_Humidity_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Mixed Air Humidity Sensor" ;
    rdfs:subClassOf brick:Relative_Humidity_Sensor ;
    skos:definition "Measures the humidity of mixed air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mixed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Relative ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Humidity,
        tag:Mixed,
        tag:Point,
        tag:Relative,
        tag:Sensor ;
    brick:hasQuantity brick:Relative_Humidity ;
    brick:hasSubstance brick:Mixed_Air .

brick:Mixed_Air_Humidity_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Mixed Air Humidity Setpoint" ;
    rdfs:subClassOf brick:Humidity_Setpoint ;
    skos:definition "Humidity setpoint for mixed air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mixed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Humidity,
        tag:Mixed,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Humidity ;
    brick:hasSubstance brick:Mixed_Air .

brick:Mixed_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Mixed Air Temperature Sensor" ;
    rdfs:subClassOf brick:Air_Temperature_Sensor ;
    skos:definition "Measures the temperature of mixed air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mixed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Mixed,
        tag:Point,
        tag:Sensor,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Mixed_Air .

brick:Mixed_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Mixed Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint ;
    skos:definition "Sets temperature of mixed air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mixed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Mixed,
        tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Mixed_Air .

brick:Mixed_Damper a owl:Class,
        sh:NodeShape ;
    rdfs:label "Mixed Damper" ;
    rdfs:subClassOf brick:Damper ;
    skos:definition "A damper that modulates the flow of the mixed outside and return air streams"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Damper ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mixed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Damper,
        tag:Equipment,
        tag:Mixed .

brick:Motor_Control_Center a owl:Class,
        sh:NodeShape ;
    rdfs:label "Motor Control Center" ;
    rdfs:subClassOf brick:Electrical_Equipment ;
    skos:definition "The Motor Control Center is a specialized type of switchgear which provides electrical power to major mechanical systems in the building such as HVAC components."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Center ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Control ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Center,
        tag:Control,
        tag:Equipment .

brick:Motor_Current_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Motor Current Sensor" ;
    rdfs:subClassOf brick:Current_Sensor ;
    skos:definition "Measures the current consumed by a motor"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Current ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Motor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Current,
        tag:Motor,
        tag:Point,
        tag:Sensor .

brick:Motor_Direction_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Motor Direction Status" ;
    rdfs:subClassOf brick:Direction_Status ;
    skos:definition "Indicates which direction a motor is operating in, e.g. forward or reverse"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Direction ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Motor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Direction,
        tag:Motor,
        tag:Point,
        tag:Status .

brick:Motor_On_Off_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Motor On Off Status" ;
    rdfs:subClassOf brick:On_Off_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Motor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:On ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Motor,
        tag:Off,
        tag:On,
        tag:Point,
        tag:Status .

brick:Motor_Speed_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Motor Speed Sensor" ;
    rdfs:subClassOf brick:Speed_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Motor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Speed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Motor,
        tag:Point,
        tag:Sensor,
        tag:Speed .

brick:Motor_Torque_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Motor Torque Sensor" ;
    rdfs:subClassOf brick:Torque_Sensor ;
    skos:definition "Measures the torque, or rotating power, of a motor"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Motor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Torque ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Motor,
        tag:Point,
        tag:Sensor,
        tag:Torque .

brick:NO2_Level_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "NO2 Level Sensor" ;
    rdfs:subClassOf brick:Air_Quality_Sensor ;
    skos:definition "Measures the concentration of NO2 in air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:NO2 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Level,
        tag:NO2,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Air ;
    brick:hasSubstance brick:NO2_Concentration .

brick:No_Water_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "No Water Alarm" ;
    rdfs:subClassOf brick:Water_Alarm ;
    skos:definition "Alarm indicating that there is no water in the equipment or system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:No ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:No,
        tag:Point,
        tag:Water .

brick:Noncondensing_Natural_Gas_Boiler a owl:Class,
        sh:NodeShape ;
    rdfs:label "Noncondensing Natural Gas Boiler" ;
    rdfs:subClassOf brick:Natural_Gas_Boiler ;
    skos:definition "A closed, pressure vessel that uses natural gas with no system to capture latent heat for heating water or other fluids to supply steam or hot water for heating, humidification, or other applications."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Boiler ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Natural ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Noncondensing ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Boiler,
        tag:Equipment,
        tag:Gas,
        tag:Natural,
        tag:Noncondensing .

brick:Occupancy_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupancy Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Controls whether or not a device or controller is operating in \"Occupied\" mode"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupancy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Occupancy,
        tag:Point .

brick:Occupancy_Count a brick:Quantity ;
    rdfs:label "Occupancy_Count" ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Dimensionless,
        brick:Occupancy ;
    skos:definition "Number of people in an area",
        "Number of people in an area"@en .

brick:Occupancy_Percentage a brick:Quantity ;
    rdfs:label "Occupancy_Percentage" ;
    qudt:applicableUnit unit:PERCENT ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Dimensionless,
        brick:Occupancy ;
    skos:definition "Percent of total occupancy of space that is occupied",
        "Percent of total occupancy of space that is occupied"@en .

brick:Occupied_Cooling_Supply_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Cooling Supply Air Flow Setpoint" ;
    rdfs:subClassOf brick:Cooling_Supply_Air_Flow_Setpoint,
        brick:Occupied_Supply_Air_Flow_Setpoint ;
    owl:equivalentClass brick:Occupied_Cooling_Discharge_Air_Flow_Setpoint ;
    skos:definition "Sets supply air flow rate for cooling when occupied"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Flow,
        tag:Occupied,
        tag:Point,
        tag:Setpoint,
        tag:Supply .

brick:Occupied_Cooling_Temperature_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Cooling Temperature Deadband Setpoint" ;
    rdfs:subClassOf brick:Cooling_Temperature_Setpoint,
        brick:Temperature_Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of temperature for cooling when occupied"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cool,
        tag:Deadband,
        tag:Occupied,
        tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature .

brick:Occupied_Cooling_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Cooling Temperature Setpoint" ;
    rdfs:subClassOf brick:Cooling_Temperature_Setpoint ;
    skos:definition "Sets temperature for cooling when occupied"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cool,
        tag:Occupied,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Occupied_Discharge_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Discharge Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Setpoint,
        brick:Occupied_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Occupied,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Occupied_Heating_Supply_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Heating Supply Air Flow Setpoint" ;
    rdfs:subClassOf brick:Heating_Supply_Air_Flow_Setpoint,
        brick:Occupied_Supply_Air_Flow_Setpoint ;
    owl:equivalentClass brick:Occupied_Heating_Discharge_Air_Flow_Setpoint ;
    skos:definition "Sets supply air flow rate for heating when occupied"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Heat,
        tag:Occupied,
        tag:Point,
        tag:Setpoint,
        tag:Supply .

brick:Occupied_Heating_Temperature_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Heating Temperature Deadband Setpoint" ;
    rdfs:subClassOf brick:Heating_Temperature_Setpoint,
        brick:Temperature_Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of temperature for heating when occupied"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Deadband,
        tag:Heat,
        tag:Occupied,
        tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature .

brick:Occupied_Heating_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Heating Temperature Setpoint" ;
    rdfs:subClassOf brick:Heating_Temperature_Setpoint ;
    skos:definition "Sets temperature for heating when occupied"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Heat,
        tag:Occupied,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Occupied_Humidity_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Humidity Setpoint" ;
    rdfs:subClassOf brick:Humidity_Setpoint ;
    skos:definition "Target humidity level when the location is occupied."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Humidity,
        tag:Occupied,
        tag:Point,
        tag:Setpoint .

brick:Occupied_Mode_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Mode Status" ;
    rdfs:subClassOf brick:Mode_Status ;
    skos:definition "Indicates if a system, device or control loop is in \"Occupied\" mode"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Mode ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Mode,
        tag:Occupied,
        tag:Point,
        tag:Status .

brick:Occupied_Return_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Return Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Occupied_Air_Temperature_Setpoint,
        brick:Return_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Heat,
        tag:Occupied,
        tag:Point,
        tag:Return,
        tag:Setpoint,
        tag:Temperature .

brick:Occupied_Room_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Room Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Occupied_Air_Temperature_Setpoint,
        brick:Room_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Heat,
        tag:Occupied,
        tag:Point,
        tag:Room,
        tag:Setpoint,
        tag:Temperature .

brick:Occupied_Supply_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Supply Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Occupied_Air_Temperature_Setpoint,
        brick:Supply_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Heat,
        tag:Occupied,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature .

brick:Occupied_Zone_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Zone Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Occupied_Air_Temperature_Setpoint,
        brick:Zone_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Heat,
        tag:Occupied,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Zone .

brick:Off_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Off Command" ;
    rdfs:subClassOf brick:On_Off_Command ;
    skos:definition "An Off Command controls or reports the binary 'off' status of a control loop, relay or equipment activity. It can only be used to stop/deactivate an associated equipment or process, or determine that the related entity is 'off'"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Off,
        tag:Point .

brick:Office_Kitchen a owl:Class,
        sh:NodeShape ;
    rdfs:label "Office Kitchen" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A common space, usually near or in a breakroom, where minor food preperation occurs"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Kitchen ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Office ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Kitchen,
        tag:Location,
        tag:Office,
        tag:Room,
        tag:Space .

brick:On_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "On Command" ;
    rdfs:subClassOf brick:On_Off_Command ;
    skos:definition "An On Command controls or reports the binary 'on' status of a control loop, relay or equipment activity. It can only be used to start/activate an associated equipment or process, or determine that the related entity is 'on'"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:On ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:On,
        tag:Point .

brick:On_Timer_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "On Timer Sensor" ;
    rdfs:subClassOf brick:Duration_Sensor ;
    owl:equivalentClass brick:Run_Time_Sensor ;
    skos:definition "Measures the duration for which a device was in an active or \"on\" state"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:On ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Timer ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:On,
        tag:Point,
        tag:Sensor,
        tag:Timer .

brick:Open_Close_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Open Close Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates the open/close status of a device such as a damper or valve"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Close ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Open ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Close,
        tag:Open,
        tag:Point,
        tag:Status .

brick:Open_Heating_Valve_Outside_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Open Heating Valve Outside Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Heating_Temperature_Setpoint,
        brick:Outside_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Open ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Heat,
        tag:Open,
        tag:Outside,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Valve .

brick:Open_Office a owl:Class,
        sh:NodeShape ;
    rdfs:label "Open Office" ;
    rdfs:subClassOf brick:Office ;
    skos:definition "An open space used for work or study by mulitple people. Usuaully subdivided into cubicles or desks"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Office ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Open ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Office,
        tag:Open,
        tag:Room,
        tag:Space .

brick:Operative_Temperature a brick:Quantity ;
    rdfs:label "Operative_Temperature" ;
    qudt:applicableUnit unit:DEG_C,
        unit:DEG_F,
        unit:K ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Temperature,
        brick:Temperature ;
    skos:definition "The uniform temperature of an imaginary black enclosure in which an occupant would exchange the same amount of heat by radiation plus convection as in the actual nonuniform environment (https://en.wikipedia.org/wiki/Operative_temperature)",
        "The uniform temperature of an imaginary black enclosure in which an occupant would exchange the same amount of heat by radiation plus convection as in the actual nonuniform environment (https://en.wikipedia.org/wiki/Operative_temperature)"@en .

brick:Output_Frequency_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Output Frequency Sensor" ;
    rdfs:subClassOf brick:Frequency_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Frequency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Output ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Frequency,
        tag:Output,
        tag:Point,
        tag:Sensor .

brick:Output_Voltage_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Output Voltage Sensor" ;
    rdfs:subClassOf brick:Voltage_Sensor ;
    skos:definition "Measures the voltage output by some process or device"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Output ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Voltage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Output,
        tag:Point,
        tag:Sensor,
        tag:Voltage .

brick:Outside a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside" ;
    rdfs:subClassOf brick:Location ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Outside .

brick:Outside_Air_CO2_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air CO2 Sensor" ;
    rdfs:subClassOf brick:CO2_Sensor ;
    skos:definition "Measures the concentration of CO2 in outside air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:CO2 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:CO2,
        tag:Outside,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:CO2_Concentration ;
    brick:hasSubstance brick:Outside_Air .

brick:Outside_Air_CO_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air CO Sensor" ;
    rdfs:subClassOf brick:CO_Sensor ;
    skos:definition "Measures the concentration of CO in outside air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:CO ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:CO,
        tag:Outside,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:CO_Concentration ;
    brick:hasSubstance brick:Outside_Air .

brick:Outside_Air_Dewpoint_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air Dewpoint Sensor" ;
    rdfs:subClassOf brick:Dewpoint_Sensor ;
    skos:definition "Senses the dewpoint temperature of outside air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Dewpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Dewpoint,
        tag:Outside,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Dewpoint ;
    brick:hasSubstance brick:Outside_Air .

brick:Outside_Air_Enthalpy_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air Enthalpy Sensor" ;
    rdfs:subClassOf brick:Air_Enthalpy_Sensor ;
    skos:definition "Measures the total heat content of outside air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enthalpy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Enthalpy,
        tag:Outside,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Enthalpy ;
    brick:hasSubstance brick:Outside_Air .

brick:Outside_Air_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air Flow Sensor" ;
    rdfs:subClassOf brick:Air_Flow_Sensor ;
    skos:definition "Measures the rate of flow of outside air into the system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Outside,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Outside_Air .

brick:Outside_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air Flow Setpoint" ;
    rdfs:subClassOf brick:Air_Flow_Setpoint ;
    skos:definition "Sets outside air flow rate"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Outside,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Outside_Air .

brick:Outside_Air_Grains_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air Grains Sensor" ;
    rdfs:subClassOf brick:Air_Grains_Sensor ;
    skos:definition "Measures the mass of water vapor in outside air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Grains ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Grains,
        tag:Outside,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:GrainsOfMoisture ;
    brick:hasSubstance brick:Outside_Air .

brick:Outside_Air_Humidity_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air Humidity Sensor" ;
    rdfs:subClassOf brick:Relative_Humidity_Sensor ;
    skos:definition "Measures the relative humidity of outside air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Relative ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Humidity,
        tag:Outside,
        tag:Point,
        tag:Relative,
        tag:Sensor ;
    brick:hasQuantity brick:Relative_Humidity ;
    brick:hasSubstance brick:Outside_Air .

brick:Outside_Air_Humidity_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air Humidity Setpoint" ;
    rdfs:subClassOf brick:Humidity_Setpoint ;
    skos:definition "Humidity setpoint for outside air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Humidity,
        tag:Outside,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Humidity ;
    brick:hasSubstance brick:Outside_Air .

brick:Outside_Air_Lockout_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air Lockout Temperature Setpoint" ;
    rdfs:subClassOf brick:Outside_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lockout ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Lockout,
        tag:Outside,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Outside_Air_Temperature_High_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air Temperature High Reset Setpoint" ;
    rdfs:subClassOf brick:Temperature_High_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:High,
        tag:Outside,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Outside_Air .

brick:Outside_Air_Temperature_Low_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air Temperature Low Reset Setpoint" ;
    rdfs:subClassOf brick:Temperature_Low_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Low,
        tag:Outside,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Outside_Air .

brick:Outside_Air_Wet_Bulb_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air Wet Bulb Temperature Sensor" ;
    rdfs:subClassOf brick:Air_Wet_Bulb_Temperature_Sensor,
        brick:Outside_Air_Temperature_Sensor ;
    skos:definition "A sensor measuring the wet-bulb temperature of outside air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Bulb ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Wet ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Bulb,
        tag:Outside,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Wet ;
    brick:hasQuantity brick:Wet_Bulb_Temperature ;
    brick:hasSubstance brick:Outside_Air .

brick:Outside_Damper a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Damper" ;
    rdfs:subClassOf brick:Damper ;
    skos:definition "A damper that modulates the flow of outside air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Damper ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Damper,
        tag:Equipment,
        tag:Outside .

brick:Outside_Face_Surface_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Face Surface Temperature Sensor" ;
    rdfs:subClassOf brick:Radiant_Panel_Temperature_Sensor ;
    skos:definition "Measures the outside surface (relative to the space) of the radiant panel of a radiant heating and cooling HVAC system."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Face ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Surface ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Face,
        tag:Outside,
        tag:Point,
        tag:Sensor,
        tag:Surface,
        tag:Temperature .

brick:Outside_Face_Surface_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Face Surface Temperature Setpoint" ;
    rdfs:subClassOf brick:Radiant_Panel_Temperature_Setpoint ;
    skos:definition "Sets temperature for the outside face surface temperature of the radiant panel."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Face ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Surface ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Face,
        tag:Outside,
        tag:Point,
        tag:Setpoint,
        tag:Surface,
        tag:Temperature .

brick:Outside_Illuminance_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Illuminance Sensor" ;
    rdfs:subClassOf brick:Illuminance_Sensor ;
    skos:definition "Measures the total luminous flux incident on an outside, per unit area"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Illuminance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Illuminance,
        tag:Outside,
        tag:Point,
        tag:Sensor .

brick:Overload_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Overload Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "An alarm that can indicate when a full-load current is exceeded."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Overload ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Overload,
        tag:Point .

brick:Overridden_Off_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Overridden Off Status" ;
    rdfs:subClassOf brick:Off_Status,
        brick:Overridden_Status ;
    skos:definition "Indicates if a control loop, relay or equipment has been turned off when it would otherwise be scheduled to be on"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Overridden ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Off,
        tag:Overridden,
        tag:Point,
        tag:Status .

brick:Overridden_On_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Overridden On Status" ;
    rdfs:subClassOf brick:On_Status,
        brick:Overridden_Status ;
    skos:definition "Indicates if a control loop, relay or equipment has been turned on when it would otherwise be scheduled to be off"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:On ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Overridden ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:On,
        tag:Overridden,
        tag:Point,
        tag:Status .

brick:Ozone_Level_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Ozone Level Sensor" ;
    rdfs:subClassOf brick:Air_Quality_Sensor ;
    skos:definition "Measures the concentration of ozone in air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Ozone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Level,
        tag:Ozone,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Ozone_Concentration ;
    brick:hasSubstance brick:Air .

brick:PAU a owl:Class,
        sh:NodeShape ;
    rdfs:label "PAU" ;
    rdfs:subClassOf brick:AHU ;
    skos:definition "A type of AHU, use to pre-treat the outdoor air before feed to AHU"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PAU ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:PAU .

brick:PIR_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "PIR Sensor" ;
    rdfs:subClassOf brick:Motion_Sensor,
        brick:Occupancy_Sensor ;
    skos:definition "Detects the presense of motion in some area using the differential change in infrared intensity between two or more receptors"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:PIR ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:PIR,
        tag:Point,
        tag:Sensor .

brick:PM10_Level_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "PM10 Level Sensor" ;
    rdfs:subClassOf brick:PM10_Sensor ;
    skos:definition "Detects level of particulates of size 10 microns"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Matter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PM10 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Particulate ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Level,
        tag:Matter,
        tag:PM10,
        tag:Particulate,
        tag:Point,
        tag:Sensor .

brick:PM1_Level_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "PM1 Level Sensor" ;
    rdfs:subClassOf brick:PM1_Sensor ;
    skos:definition "Detects level of particulates of size 1 micron"@en,
        "Detects level of particulates of size 1 microns"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Matter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PM1 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Particulate ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Level,
        tag:Matter,
        tag:PM1,
        tag:Particulate,
        tag:Point,
        tag:Sensor .

brick:PM2.5_Level_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "PM2.5 Level Sensor" ;
    rdfs:subClassOf brick:PM2.5_Sensor ;
    skos:definition "Detects level of particulates of size 2.5 microns"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Matter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PM2.5 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Particulate ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Level,
        tag:Matter,
        tag:PM2.5,
        tag:Particulate,
        tag:Point,
        tag:Sensor .

brick:PVT_Panel a owl:Class,
        sh:NodeShape ;
    rdfs:label "PVT Panel" ;
    rdfs:subClassOf brick:PV_Panel,
        brick:Solar_Thermal_Collector ;
    skos:definition "A type of solar panels that convert solar radiation into usable thermal and electrical energy"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Collector ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PV ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Panel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Solar ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Thermal ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Collector,
        tag:Equipment,
        tag:PV,
        tag:Panel,
        tag:Solar,
        tag:Thermal .

brick:PV_Generation_System a owl:Class ;
    rdfs:label "PV Generation System" ;
    rdfs:subClassOf brick:Energy_Generation_System ;
    skos:definition "A collection of photovoltaic devices that generates energy"@en .

brick:Parking_Level a owl:Class,
        sh:NodeShape ;
    rdfs:label "Parking Level" ;
    rdfs:subClassOf brick:Floor ;
    skos:definition "A floor of a parking structure"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Floor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parking ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Floor,
        tag:Level,
        tag:Location,
        tag:Parking .

brick:Parking_Space a owl:Class,
        sh:NodeShape ;
    rdfs:label "Parking Space" ;
    rdfs:subClassOf brick:Space ;
    skos:definition "An area large enough to park an individual vehicle"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parking ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Parking,
        tag:Space .

brick:Parking_Structure a owl:Class,
        sh:NodeShape ;
    rdfs:label "Parking Structure" ;
    rdfs:subClassOf brick:Building ;
    skos:definition "A building or part of a building devoted to vehicle parking"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Building ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parking ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Structure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Building,
        tag:Location,
        tag:Parking,
        tag:Structure .

brick:Passive_Chilled_Beam a owl:Class,
        sh:NodeShape ;
    rdfs:label "Passive Chilled Beam" ;
    rdfs:subClassOf brick:Chilled_Beam ;
    skos:definition "A chilled beam that does not have an integral air supply and instead relies on natural convection to draw air through the device."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Beam ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Passive ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Beam,
        tag:Chilled,
        tag:Equipment,
        tag:Passive .

brick:Peak_Power_Demand_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Peak Power Demand Sensor" ;
    rdfs:subClassOf brick:Demand_Sensor,
        brick:Electric_Power_Sensor ;
    skos:definition "The peak power consumed by a process over some period of time"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Demand ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Electric ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Peak ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Power ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Demand,
        tag:Electric,
        tag:Peak,
        tag:Point,
        tag:Power,
        tag:Sensor ;
    brick:hasQuantity brick:Peak_Power .

brick:Phasor_Magnitude a brick:Quantity ;
    rdfs:label "PhasorMagnitude" ;
    qudt:applicableUnit unit:ARCMIN,
        unit:ARCSEC,
        unit:DEG,
        unit:GON,
        unit:GRAD,
        unit:MIL,
        unit:MicroRAD,
        unit:MilliARCSEC,
        unit:MilliRAD,
        unit:RAD,
        unit:REV ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:definition "Magnitude component of a phasor" ;
    skos:related brick:Phasor .

brick:Photovoltaic_Current_Output_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Photovoltaic Current Output Sensor" ;
    rdfs:subClassOf brick:Current_Output_Sensor ;
    owl:equivalentClass brick:PV_Current_Output_Sensor ;
    skos:definition "Senses the amperes of electrical current produced as output by a photovoltaic device"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Current ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Output ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Photovoltaic ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Current,
        tag:Output,
        tag:Photovoltaic,
        tag:Point,
        tag:Sensor .

brick:Piezoelectric_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Piezoelectric Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Senses changes pressure, acceleration, temperature, force or strain via the piezoelectric effect"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Piezoelectric ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Piezoelectric,
        tag:Point,
        tag:Sensor .

brick:PlugStrip a owl:Class,
        sh:NodeShape ;
    rdfs:label "PlugStrip" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Power_strip> ;
    rdfs:subClassOf brick:Electrical_Equipment ;
    skos:definition "A device containing a block of electrical sockets allowing multiple electrical devices to be powered from a single electrical socket."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PlugStrip ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:PlugStrip .

brick:Plumbing_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Plumbing Room" ;
    rdfs:subClassOf brick:Service_Room ;
    skos:definition "A service room devoted to the operation and routing of water in a building. Usually distinct from the HVAC subsystems."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Plumbing ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Service ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Plumbing,
        tag:Room,
        tag:Service,
        tag:Space .

brick:Portfolio a owl:Class,
        sh:NodeShape ;
    rdfs:label "Portfolio" ;
    rdfs:subClassOf brick:Collection ;
    skos:definition "A collection of sites"@en ;
    sh:property [ sh:or ( [ sh:class brick:Site ] ) ;
            sh:path brick:hasPart ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Collection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Portfolio ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Collection,
        tag:Portfolio .

brick:Power_Factor a brick:Quantity ;
    rdfs:label "Power Factor" ;
    qudt:applicableUnit unit:UNITLESS ;
    skos:definition "Power Factor, under periodic conditions, is the ratio of the absolute value of the active power (P) to the apparent power (S)."@en ;
    brick:hasQUDTReference quantitykind:PowerFactor .

brick:Power_Loss_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Power Loss Alarm" ;
    rdfs:subClassOf brick:Power_Alarm ;
    skos:definition "An alarm that indicates a power failure."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Loss ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Power ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Loss,
        tag:Point,
        tag:Power .

brick:Prayer_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Prayer Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A room set aside for prayer"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Prayer ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Prayer,
        tag:Room,
        tag:Space .

brick:Pre_Filter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Pre Filter" ;
    rdfs:subClassOf brick:Filter ;
    skos:definition "A filter installed in front of a more efficient filter to extend the life of the more expensive higher efficiency filter"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Filter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pre ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Filter,
        tag:Pre .

brick:Pre_Filter_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Pre Filter Status" ;
    rdfs:subClassOf brick:Filter_Status ;
    skos:definition "Indicates if a prefilter needs to be replaced"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Filter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pre ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Filter,
        tag:Point,
        tag:Pre,
        tag:Status .

brick:Preheat_Demand_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Preheat Demand Setpoint" ;
    rdfs:subClassOf brick:Demand_Setpoint ;
    skos:definition "Sets the rate required for preheat"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Demand ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Preheat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Demand,
        tag:Point,
        tag:Preheat,
        tag:Setpoint .

brick:Preheat_Hot_Water_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Preheat Hot Water System" ;
    rdfs:subClassOf brick:Hot_Water_System ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Preheat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Preheat,
        tag:System,
        tag:Water .

brick:Preheat_Hot_Water_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Preheat Hot Water Valve" ;
    rdfs:subClassOf brick:Hot_Water_Valve ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Preheat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Heat,
        tag:Hot,
        tag:Preheat,
        tag:Valve,
        tag:Water .

brick:Preheat_Supply_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Preheat Supply Air Temperature Sensor" ;
    rdfs:subClassOf brick:Supply_Air_Temperature_Sensor ;
    owl:equivalentClass brick:Preheat_Discharge_Air_Temperature_Sensor ;
    skos:definition "Measures the temperature of supply air before it is heated"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Preheat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Preheat,
        tag:Sensor,
        tag:Supply,
        tag:Temperature .

brick:Private_Office a owl:Class,
        sh:NodeShape ;
    rdfs:label "Private Office" ;
    rdfs:subClassOf brick:Enclosed_Office ;
    skos:definition "An office devoted to a single individual, with walls and door"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Enclosed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Office ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Private ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Enclosed,
        tag:Location,
        tag:Office,
        tag:Private,
        tag:Room,
        tag:Space .

brick:Pump_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Pump Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Controls or reports the speed of a pump (typically as a proportion of its full pumping capacity)"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pump ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Point,
        tag:Pump .

brick:Pump_On_Off_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Pump On Off Status" ;
    rdfs:subClassOf brick:On_Off_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:On ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pump ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Off,
        tag:On,
        tag:Point,
        tag:Pump,
        tag:Status .

brick:Pump_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Pump Room" ;
    rdfs:subClassOf brick:Mechanical_Room ;
    skos:definition "A mechanical room that houses pumps"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mechanical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pump ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Service ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Mechanical,
        tag:Pump,
        tag:Room,
        tag:Service,
        tag:Space .

brick:Pump_VFD a owl:Class,
        sh:NodeShape ;
    rdfs:label "Pump VFD" ;
    rdfs:subClassOf brick:VFD ;
    skos:definition "Variable-frequency drive for pumps"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pump ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:VFD ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Pump,
        tag:VFD .

brick:Radiant_Ceiling_Panel a owl:Class,
        sh:NodeShape ;
    rdfs:label "Radiant Ceiling Panel" ;
    rdfs:seeAlso <https://www.rehva.eu/eshop/detail/no07-low-temperature-heating-and-high-temperature-cooling> ;
    rdfs:subClassOf brick:Radiant_Panel ;
    owl:equivalentClass brick:RC_Panel ;
    skos:definition "Radiant panel heating and cooling system that are usually made from metal and suspended under the ceiling or insulated from the building structure."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Ceiling ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Panel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radiant ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Ceiling,
        tag:Equipment,
        tag:Panel,
        tag:Radiant .

brick:Radiant_Temperature a brick:Quantity ;
    rdfs:label "Radiant_Temperature" ;
    qudt:applicableUnit unit:DEG_C,
        unit:DEG_F,
        unit:K ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Temperature,
        brick:Temperature ;
    skos:definition "the uniform temperature of an imaginary enclosure in which the radiant heat transfer from the human body is equal to the radiant heat transfer in the actual non-uniform enclosure. (https://en.wikipedia.org/wiki/Mean_radiant_temperature)",
        "the uniform temperature of an imaginary enclosure in which the radiant heat transfer from the human body is equal to the radiant heat transfer in the actual non-uniform enclosure. (https://en.wikipedia.org/wiki/Mean_radiant_temperature)"@en .

brick:Radiation_Hot_Water_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Radiation Hot Water System" ;
    rdfs:subClassOf brick:Hot_Water_System ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radiation ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Radiation,
        tag:System,
        tag:Water .

brick:Radon_Concentration_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Radon Concentration Sensor" ;
    rdfs:subClassOf brick:Radioactivity_Concentration_Sensor ;
    skos:definition "Measures the concentration of radioactivity due to radon"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Concentration ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radon ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Concentration,
        tag:Point,
        tag:Radon,
        tag:Sensor ;
    brick:hasQuantity brick:Radon_Concentration ;
    brick:hasSubstance brick:Air .

brick:Rain_Duration_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Rain Duration Sensor" ;
    rdfs:subClassOf brick:Duration_Sensor,
        brick:Rain_Sensor ;
    skos:definition "Measures the duration of precipitation within some time frame"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Duration ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Rain ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Duration,
        tag:Point,
        tag:Rain,
        tag:Sensor .

brick:Rated_Speed_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Rated Speed Setpoint" ;
    rdfs:subClassOf brick:Speed_Setpoint ;
    skos:definition "Sets rated speed"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Rated ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Speed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Rated,
        tag:Setpoint,
        tag:Speed .

brick:Reactive_Power_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Reactive Power Sensor" ;
    rdfs:subClassOf brick:Electric_Power_Sensor ;
    skos:definition "Measures the portion of power that, averaged over a complete cycle of the AC waveform, is due to stored energy which returns to the source in each cycle"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Electric ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Power ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reactive ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Electric,
        tag:Point,
        tag:Power,
        tag:Reactive,
        tag:Sensor ;
    brick:hasQuantity brick:Reactive_Power .

brick:Reception a owl:Class,
        sh:NodeShape ;
    rdfs:label "Reception" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A space, usually in a lobby, where visitors to a building or space can go to after arriving at a building and inform building staff that they have arrived"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reception ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Reception,
        tag:Room,
        tag:Space .

brick:Region a owl:Class,
        sh:NodeShape ;
    rdfs:label "Region" ;
    rdfs:subClassOf brick:Location ;
    skos:definition "A unit of geographic space, usually contigious or somehow related to a geopolitical feature"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Region ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Region .

brick:Reheat_Hot_Water_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Reheat Hot Water System" ;
    rdfs:subClassOf brick:Hot_Water_System ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reheat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Reheat,
        tag:System,
        tag:Water .

brick:Reheat_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Reheat Valve" ;
    rdfs:subClassOf brick:Heating_Valve ;
    skos:definition "A valve that controls air temperature by modulating the amount of hot water flowing through a reheat coil"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reheat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Heat,
        tag:Reheat,
        tag:Valve .

brick:Relief_Damper a owl:Class,
        sh:NodeShape ;
    rdfs:label "Relief Damper" ;
    rdfs:subClassOf brick:Damper ;
    skos:definition "A damper that is a component of a Relief Air System, ensuring building doesn't become over-pressurised"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Damper ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Relief ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Damper,
        tag:Equipment,
        tag:Relief .

brick:Relief_Fan a owl:Class,
        sh:NodeShape ;
    rdfs:label "Relief Fan" ;
    rdfs:subClassOf brick:Fan ;
    skos:definition "A fan that is a component of a Relief Air System, ensuring building doesn't become over-pressurised"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Relief ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Fan,
        tag:Relief .

brick:Remotely_On_Off_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Remotely On Off Status" ;
    rdfs:subClassOf brick:On_Off_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:On ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Remotely ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Off,
        tag:On,
        tag:Point,
        tag:Remotely,
        tag:Status .

brick:Retail_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Retail Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A space set aside for retail in a larger establishment, e.g. a gift shop in a hospital"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Retail ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Retail,
        tag:Room,
        tag:Space .

brick:Return_Air_CO2_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air CO2 Sensor" ;
    rdfs:subClassOf brick:CO2_Sensor ;
    skos:definition "Measures the concentration of CO2 in return air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:CO2 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:CO2,
        tag:Point,
        tag:Return,
        tag:Sensor ;
    brick:hasQuantity brick:CO2_Concentration ;
    brick:hasSubstance brick:Return_Air .

brick:Return_Air_CO2_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air CO2 Setpoint" ;
    rdfs:subClassOf brick:CO2_Setpoint ;
    skos:definition "Sets some property of CO2 in Return Air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:CO2 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:CO2,
        tag:Point,
        tag:Return,
        tag:Setpoint .

brick:Return_Air_CO_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air CO Sensor" ;
    rdfs:subClassOf brick:CO_Sensor ;
    skos:definition "Measures the concentration of CO in return air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:CO ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:CO,
        tag:Point,
        tag:Return,
        tag:Sensor ;
    brick:hasQuantity brick:CO_Concentration ;
    brick:hasSubstance brick:Return_Air .

brick:Return_Air_Dewpoint_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air Dewpoint Sensor" ;
    rdfs:subClassOf brick:Dewpoint_Sensor ;
    skos:definition "Senses the dewpoint temperature of return air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Dewpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Dewpoint,
        tag:Point,
        tag:Return,
        tag:Sensor ;
    brick:hasQuantity brick:Dewpoint ;
    brick:hasSubstance brick:Return_Air .

brick:Return_Air_Differential_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air Differential Pressure Sensor" ;
    rdfs:subClassOf brick:Air_Differential_Pressure_Sensor ;
    skos:definition "Measures the difference in pressure between the return and supply side"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Point,
        tag:Pressure,
        tag:Return,
        tag:Sensor ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Return_Air .

brick:Return_Air_Differential_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air Differential Pressure Setpoint" ;
    rdfs:subClassOf brick:Air_Differential_Pressure_Setpoint ;
    skos:definition "Sets the target air differential pressure between an upstream and downstream point in a return air duct or conduit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Point,
        tag:Pressure,
        tag:Return,
        tag:Setpoint ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Return_Air .

brick:Return_Air_Enthalpy_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air Enthalpy Sensor" ;
    rdfs:subClassOf brick:Air_Enthalpy_Sensor ;
    skos:definition "Measures the total heat content of return air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enthalpy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Enthalpy,
        tag:Point,
        tag:Return,
        tag:Sensor ;
    brick:hasQuantity brick:Enthalpy ;
    brick:hasSubstance brick:Return_Air .

brick:Return_Air_Filter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air Filter" ;
    rdfs:subClassOf brick:Filter ;
    skos:definition "Filters return air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Filter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Equipment,
        tag:Filter,
        tag:Return .

brick:Return_Air_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air Flow Sensor" ;
    rdfs:subClassOf brick:Air_Flow_Sensor ;
    skos:definition "Measures the rate of flow of return air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Point,
        tag:Return,
        tag:Sensor ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Return_Air .

brick:Return_Air_Grains_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air Grains Sensor" ;
    rdfs:subClassOf brick:Air_Grains_Sensor ;
    skos:definition "Measures the mass of water vapor in return air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Grains ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Grains,
        tag:Point,
        tag:Return,
        tag:Sensor ;
    brick:hasQuantity brick:GrainsOfMoisture ;
    brick:hasSubstance brick:Return_Air .

brick:Return_Air_Humidity_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air Humidity Sensor" ;
    rdfs:subClassOf brick:Relative_Humidity_Sensor ;
    skos:definition "Measures the relative humidity of return air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Relative ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Humidity,
        tag:Point,
        tag:Relative,
        tag:Return,
        tag:Sensor ;
    brick:hasQuantity brick:Relative_Humidity ;
    brick:hasSubstance brick:Return_Air .

brick:Return_Air_Humidity_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air Humidity Setpoint" ;
    rdfs:subClassOf brick:Humidity_Setpoint ;
    skos:definition "Humidity setpoint for return air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Humidity,
        tag:Point,
        tag:Return,
        tag:Setpoint ;
    brick:hasQuantity brick:Humidity ;
    brick:hasSubstance brick:Return_Air .

brick:Return_Air_Plenum a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air Plenum" ;
    rdfs:subClassOf brick:Air_Plenum ;
    skos:definition "A component of the HVAC the receives air from the room to recirculate or exhaust to or from the building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Plenum ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Equipment,
        tag:Plenum,
        tag:Return .

brick:Return_Air_Temperature_High_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air Temperature High Reset Setpoint" ;
    rdfs:subClassOf brick:Temperature_High_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:High,
        tag:Point,
        tag:Reset,
        tag:Return,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Return_Air .

brick:Return_Air_Temperature_Low_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air Temperature Low Reset Setpoint" ;
    rdfs:subClassOf brick:Temperature_Low_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Low,
        tag:Point,
        tag:Reset,
        tag:Return,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Return_Air .

brick:Return_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air Temperature Sensor" ;
    rdfs:subClassOf brick:Air_Temperature_Sensor ;
    skos:definition "Measures the temperature of return air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Return,
        tag:Sensor,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Return_Air .

brick:Return_Chilled_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Chilled Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Chilled_Water_Temperature_Setpoint,
        brick:Return_Water_Temperature_Setpoint ;
    skos:definition "Sets the temperature of return (downstream of the chilled water load) chilled water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Point,
        tag:Return,
        tag:Setpoint,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Return_Chilled_Water .

brick:Return_Condenser_Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Condenser Water Flow Sensor" ;
    rdfs:subClassOf brick:Return_Water_Flow_Sensor ;
    skos:definition "Measures the flow of the return condenser water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:Flow,
        tag:Point,
        tag:Return,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Return_Condenser_Water .

brick:Return_Condenser_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Condenser Water Temperature Sensor" ;
    rdfs:subClassOf brick:Condenser_Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of the return condenser water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:Point,
        tag:Return,
        tag:Sensor,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Return_Condenser_Water .

brick:Return_Condenser_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Condenser Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Supply_Water_Temperature_Setpoint ;
    skos:definition "The temperature setpoint for the return condenser water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:Point,
        tag:Return,
        tag:Setpoint,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Return_Condenser_Water .

brick:Return_Damper a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Damper" ;
    rdfs:subClassOf brick:Damper ;
    skos:definition "A damper that modulates the flow of return air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Damper ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Damper,
        tag:Equipment,
        tag:Return .

brick:Return_Fan a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Fan" ;
    rdfs:subClassOf brick:Fan ;
    skos:definition "Fan moving return air -- air that is circulated from the building back into the HVAC system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Fan,
        tag:Return .

brick:Return_Heating_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Heating Valve" ;
    rdfs:subClassOf brick:Heating_Valve ;
    skos:definition "A valve installed on the return side of a heat exchanger"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Heat,
        tag:Return,
        tag:Valve .

brick:Return_Hot_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Hot Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Hot_Water_Temperature_Setpoint,
        brick:Return_Water_Temperature_Setpoint ;
    skos:definition "Sets the temperature of return (downstream of the hot water load) hot water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Point,
        tag:Return,
        tag:Setpoint,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Return_Hot_Water .

brick:Riser a owl:Class,
        sh:NodeShape ;
    rdfs:label "Riser" ;
    rdfs:subClassOf brick:Vertical_Space ;
    skos:definition "A vertical shaft indented for installing building infrastructure e.g., electrical wire, network communication wire, plumbing, etc"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Riser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Vertical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Riser,
        tag:Space,
        tag:Vertical .

brick:Rooftop a owl:Class,
        sh:NodeShape ;
    rdfs:label "Rooftop" ;
    rdfs:subClassOf brick:Floor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Floor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Rooftop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Floor,
        tag:Location,
        tag:Rooftop .

brick:Rotational_Speed a brick:Quantity ;
    rdfs:label "Rotational_Speed" ;
    qudt:applicableUnit unit:DEG-PER-HR,
        unit:DEG-PER-MIN,
        unit:DEG-PER-SEC,
        unit:RAD-PER-HR,
        unit:RAD-PER-MIN,
        unit:RAD-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Frequency,
        quantitykind:Speed,
        brick:Speed ;
    skos:definition "Rotational speed" .

brick:Run_Enable_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Run Enable Command" ;
    rdfs:subClassOf brick:Enable_Command ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Run ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Enable,
        tag:Point,
        tag:Run .

brick:Run_Request_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Run Request Status" ;
    rdfs:subClassOf brick:Run_Status ;
    skos:definition "Indicates if a request has been filed to start a device or equipment"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Request ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Run ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Request,
        tag:Run,
        tag:Status .

brick:Safety_Shower a owl:Class,
        sh:NodeShape ;
    rdfs:label "Safety Shower" ;
    rdfs:subClassOf brick:Emergency_Wash_Station ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Emergency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shower ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Station ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Wash ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Emergency,
        tag:Equipment,
        tag:Safety,
        tag:Shower,
        tag:Station,
        tag:Wash .

brick:Sash_Position_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Sash Position Sensor" ;
    rdfs:subClassOf brick:Position_Sensor ;
    skos:definition "Measures the current position of a sash in terms of the percent of fully open"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Position ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sash ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Position,
        tag:Sash,
        tag:Sensor ;
    brick:hasQuantity brick:Position .

brick:Schedule_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Schedule Temperature Setpoint" ;
    rdfs:subClassOf brick:Temperature_Setpoint ;
    skos:definition "The current setpoint as indicated by the schedule"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Schedule ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Schedule,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature .

brick:Sensor_Failure_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Sensor Failure Alarm" ;
    rdfs:subClassOf brick:Failure_Alarm ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Failure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Failure,
        tag:Point,
        tag:Sensor .

brick:Server_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Server Room" ;
    rdfs:subClassOf brick:Room ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Server ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Room,
        tag:Server .

brick:Shade a owl:Class,
        sh:NodeShape ;
    rdfs:label "Shade" ;
    rdfs:subClassOf brick:Shading_Equipment ;
    skos:definition "A screen on a window."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shade ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Shade .

brick:Shade_Array a owl:Class,
        sh:NodeShape ;
    rdfs:label "Shade Array" ;
    rdfs:subClassOf brick:Shading_System ;
    skos:definition "An array of Shade commonly attached to a single controller."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Array ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shade ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Array,
        tag:Shade,
        tag:System .

brick:Shared_Office a owl:Class,
        sh:NodeShape ;
    rdfs:label "Shared Office" ;
    rdfs:subClassOf brick:Enclosed_Office ;
    skos:definition "An office used by multiple people"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Enclosed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Office ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shared ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Enclosed,
        tag:Location,
        tag:Office,
        tag:Room,
        tag:Shared,
        tag:Space .

brick:Short_Cycle_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Short Cycle Alarm" ;
    rdfs:subClassOf brick:Cycle_Alarm ;
    skos:definition "An alarm that indicates a short cycle occurred. A short cycle occurs when a cooling cycle is prevented from completing its full cycle"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cycle ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Short ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Cycle,
        tag:Point,
        tag:Short .

brick:Shower a owl:Class,
        sh:NodeShape ;
    rdfs:label "Shower" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A space containing showers, usually adjacent to an athletic or execise area"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shower ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Room,
        tag:Shower,
        tag:Space .

brick:Smoke_Detector a owl:Class,
        sh:NodeShape ;
    rdfs:label "Smoke Detector" ;
    rdfs:subClassOf brick:Fire_Safety_Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Detector ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fire ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Smoke ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Detector,
        tag:Equipment,
        tag:Fire,
        tag:Safety,
        tag:Smoke .

brick:Solar_Azimuth_Angle_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Solar Azimuth Angle Sensor" ;
    rdfs:subClassOf brick:Angle_Sensor ;
    skos:definition "Measures the azimuth angle of the sun"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Angle ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Azimuth ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Solar ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Angle,
        tag:Azimuth,
        tag:Point,
        tag:Sensor,
        tag:Solar .

brick:Solar_Irradiance a brick:Quantity ;
    rdfs:label "SolarIrradiance" ;
    qudt:applicableUnit unit:W-PER-CentiM2,
        unit:W-PER-FT2,
        unit:W-PER-IN2,
        unit:W-PER-M2 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader brick:Irradiance ;
    skos:definition "The power per unit area of solar electromagnetic radiation incident on a surface",
        "The power per unit area of solar electromagnetic radiation incident on a surface"@en .

brick:Solar_Radiance_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Solar Radiance Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "The amount of light that passes through or is emitted from the sun and falls within a given solid angle in a specified direction"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radiance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Solar ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Radiance,
        tag:Sensor,
        tag:Solar ;
    brick:hasQuantity brick:Solar_Radiance .

brick:Solar_Zenith_Angle_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Solar Zenith Angle Sensor" ;
    rdfs:subClassOf brick:Angle_Sensor ;
    skos:definition "Measures the zenith angle of the sun"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Angle ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Solar ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zenith ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Angle,
        tag:Point,
        tag:Sensor,
        tag:Solar,
        tag:Zenith .

brick:Space_Heater a owl:Class,
        sh:NodeShape ;
    rdfs:label "Space Heater" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "A heater used to warm the air in an enclosed area, such as a room or office"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heater ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Heater,
        tag:Space .

brick:Speed_Reset_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Speed Reset Command" ;
    rdfs:subClassOf brick:Reset_Command ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Speed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Point,
        tag:Reset,
        tag:Speed ;
    brick:hasQuantity brick:Speed .

brick:Speed_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Speed Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates the operating speed of a device or equipment, e.g. fan"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Speed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Speed,
        tag:Status .

brick:Sports_Service_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Sports Service Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A class of spaces used in the support of sports"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Service ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sports ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Room,
        tag:Service,
        tag:Space,
        tag:Sports .

brick:Stage_Enable_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Stage Enable Command" ;
    rdfs:subClassOf brick:Enable_Command ;
    skos:definition "A point representing a discrete stage which the equipment should be operating at. The desired stage number should be identified by an entity property"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Stage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Enable,
        tag:Point,
        tag:Stage .

brick:Stage_Riser a owl:Class,
        sh:NodeShape ;
    rdfs:label "Stage Riser" ;
    rdfs:subClassOf brick:Furniture ;
    skos:definition "A low platform in a space or on a stage"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Furniture ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Riser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Stage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Furniture,
        tag:Riser,
        tag:Stage .

brick:Stages_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Stages Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates which stage a control loop or equipment is in"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Stages ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Stages,
        tag:Status .

brick:Staircase a owl:Class,
        sh:NodeShape ;
    rdfs:label "Staircase" ;
    rdfs:subClassOf brick:Vertical_Space ;
    skos:definition "A vertical space containing stairs"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Staircase ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Vertical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Space,
        tag:Staircase,
        tag:Vertical .

brick:Standby_CRAC a owl:Class,
        sh:NodeShape ;
    rdfs:label "Standby CRAC" ;
    rdfs:subClassOf brick:CRAC ;
    skos:definition "A CRAC that is activated as part of a lead/lag operation or when an alarm occurs in a primary unit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:CRAC ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Standby ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:CRAC,
        tag:Equipment,
        tag:Standby .

brick:Standby_Fan a owl:Class,
        sh:NodeShape ;
    rdfs:label "Standby Fan" ;
    rdfs:subClassOf brick:Fan ;
    skos:definition "Fan that is activated as part of a lead/lag operation or when a primary fan raises an alarm"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Standby ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Fan,
        tag:Standby .

brick:Standby_Glycool_Unit_On_Off_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Standby Glycool Unit On Off Status" ;
    rdfs:subClassOf brick:Standby_Unit_On_Off_Status ;
    skos:definition "Indicates the on/off status of a standby glycool unit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Glycool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:On ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Standby ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Glycool,
        tag:Off,
        tag:On,
        tag:Point,
        tag:Standby,
        tag:Status,
        tag:Unit .

brick:Start_Stop_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Start Stop Command" ;
    rdfs:subClassOf brick:On_Off_Command ;
    skos:definition "A Start/Stop Command controls or reports the active/inactive status of a control sequence"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Start ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Stop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Point,
        tag:Start,
        tag:Stop .

brick:Steam_Baseboard_Radiator a owl:Class,
        sh:NodeShape ;
    rdfs:label "Steam Baseboard Radiator" ;
    rdfs:subClassOf brick:Baseboard_Radiator,
        brick:Steam_Radiator ;
    skos:definition "Steam heating device located at or near the floor"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Baseboard ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radiator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Steam ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Baseboard,
        tag:Equipment,
        tag:Radiator,
        tag:Steam .

brick:Steam_Distribution a owl:Class,
        sh:NodeShape ;
    rdfs:label "Steam Distribution" ;
    rdfs:subClassOf brick:Equipment ;
    skos:definition "Utilize a steam distribution source to represent how steam is distributed across multiple destinations"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Distribution ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Steam ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Distribution,
        tag:Equipment,
        tag:Steam .

brick:Steam_On_Off_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Steam On Off Command" ;
    rdfs:subClassOf brick:On_Off_Command ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:On ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Steam ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Off,
        tag:On,
        tag:Point,
        tag:Steam .

brick:Steam_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Steam System" ;
    rdfs:subClassOf brick:Heating_Ventilation_Air_Conditioning_System ;
    skos:definition "The equipment, devices and conduits that handle the production and distribution of steam in a building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Steam ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Steam,
        tag:System .

brick:Steam_Usage_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Steam Usage Sensor" ;
    rdfs:subClassOf brick:Usage_Sensor ;
    skos:definition "Measures the amount of steam that is consumed or used, over some period of time"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Steam ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Usage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Sensor,
        tag:Steam,
        tag:Usage .

brick:Steam_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Steam Valve" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Steam ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Steam,
        tag:Valve .

brick:Studio a owl:Class,
        sh:NodeShape ;
    rdfs:label "Studio" ;
    rdfs:subClassOf brick:Media_Room ;
    skos:definition "A room used for the production or media, usually with either a specialized set or a specialized sound booth for recording"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Media ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Studio ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Media,
        tag:Room,
        tag:Space,
        tag:Studio .

brick:Supply_Air_Differential_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Differential Pressure Sensor" ;
    rdfs:subClassOf brick:Air_Differential_Pressure_Sensor ;
    skos:definition "Measures the difference in pressure between an upstream and downstream of an air duct or other air conduit used to supply air into the building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Supply ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Air_Differential_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Differential Pressure Setpoint" ;
    rdfs:subClassOf brick:Air_Differential_Pressure_Setpoint ;
    skos:definition "Sets the target air differential pressure between an upstream and downstream point in a supply air duct or conduit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Supply ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Air_Duct_Pressure_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Duct Pressure Status" ;
    rdfs:subClassOf brick:Pressure_Status ;
    owl:equivalentClass brick:Discharge_Air_Duct_Pressure_Status ;
    skos:definition "Indicates if air pressure in supply duct is within expected bounds"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Duct ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Duct,
        tag:Point,
        tag:Pressure,
        tag:Status,
        tag:Supply .

brick:Supply_Air_Flow_Demand_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Flow Demand Setpoint" ;
    rdfs:subClassOf brick:Air_Flow_Demand_Setpoint,
        brick:Supply_Air_Flow_Setpoint ;
    owl:equivalentClass brick:Discharge_Air_Flow_Demand_Setpoint ;
    skos:definition "Sets the rate of supply air flow required for a process"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Demand ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Demand,
        tag:Flow,
        tag:Point,
        tag:Setpoint,
        tag:Supply ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Air_Humidity_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Humidity Sensor" ;
    rdfs:subClassOf brick:Relative_Humidity_Sensor ;
    owl:equivalentClass brick:Discharge_Air_Humidity_Sensor ;
    skos:definition "Measures the relative humidity of supply air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Relative ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Humidity,
        tag:Point,
        tag:Relative,
        tag:Sensor,
        tag:Supply ;
    brick:hasQuantity brick:Relative_Humidity ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Air_Humidity_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Humidity Setpoint" ;
    rdfs:subClassOf brick:Humidity_Setpoint ;
    skos:definition "Humidity setpoint for supply air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Humidity,
        tag:Point,
        tag:Setpoint,
        tag:Supply ;
    brick:hasQuantity brick:Humidity ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Air_Integral_Gain_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Integral Gain Parameter" ;
    rdfs:subClassOf brick:Integral_Gain_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gain ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Gain,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Supply .

brick:Supply_Air_Proportional_Gain_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Proportional Gain Parameter" ;
    rdfs:subClassOf brick:Proportional_Gain_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gain ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Gain,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Proportional,
        tag:Supply .

brick:Supply_Air_Static_Pressure_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Static Pressure Deadband Setpoint" ;
    rdfs:subClassOf brick:Static_Pressure_Deadband_Setpoint,
        brick:Supply_Air_Static_Pressure_Setpoint ;
    owl:equivalentClass brick:Discharge_Air_Static_Pressure_Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of static pressure of supply air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Deadband,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static,
        tag:Supply ;
    brick:hasQuantity brick:Static_Pressure ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Air_Static_Pressure_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Static Pressure Integral Time Parameter" ;
    rdfs:subClassOf brick:Static_Pressure_Integral_Time_Parameter ;
    owl:equivalentClass brick:Discharge_Air_Static_Pressure_Integral_Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Static,
        tag:Supply,
        tag:Time .

brick:Supply_Air_Static_Pressure_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Static Pressure Proportional Band Parameter" ;
    rdfs:subClassOf brick:Static_Pressure_Proportional_Band_Parameter ;
    owl:equivalentClass brick:Discharge_Air_Static_Pressure_Proportional_Band_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Band,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Proportional,
        tag:Static,
        tag:Supply .

brick:Supply_Air_Static_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Static Pressure Sensor" ;
    rdfs:subClassOf brick:Static_Pressure_Sensor ;
    owl:equivalentClass brick:Discharge_Air_Static_Pressure_Sensor ;
    skos:definition "The static pressure of air within supply regions of an HVAC system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Static,
        tag:Supply ;
    brick:hasQuantity brick:Static_Pressure ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Air_Temperature_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Temperature Alarm" ;
    rdfs:subClassOf brick:Air_Temperature_Alarm ;
    owl:equivalentClass brick:Discharge_Air_Temperature_Alarm ;
    skos:definition "An alarm that indicates the off-normal conditions associated with the temperature of supply air."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Point,
        tag:Supply,
        tag:Temperature .

brick:Supply_Air_Temperature_High_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Temperature High Reset Setpoint" ;
    rdfs:subClassOf brick:Temperature_High_Reset_Setpoint ;
    owl:equivalentClass brick:Discharge_Air_Temperature_High_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:High,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Air_Temperature_Low_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Temperature Low Reset Setpoint" ;
    rdfs:subClassOf brick:Temperature_Low_Reset_Setpoint ;
    owl:equivalentClass brick:Discharge_Air_Temperature_Low_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Low,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Air_Temperature_Reset_Differential_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Temperature Reset Differential Setpoint" ;
    rdfs:subClassOf brick:Temperature_Differential_Reset_Setpoint ;
    owl:equivalentClass brick:Discharge_Air_Temperature_Reset_Differential_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Air_Temperature_Step_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Temperature Step Parameter" ;
    rdfs:subClassOf brick:Air_Temperature_Step_Parameter ;
    owl:equivalentClass brick:Discharge_Air_Temperature_Step_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Step ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Parameter,
        tag:Point,
        tag:Step,
        tag:Supply,
        tag:Temperature .

brick:Supply_Air_Velocity_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Velocity Pressure Sensor" ;
    rdfs:subClassOf brick:Velocity_Pressure_Sensor ;
    owl:equivalentClass brick:Discharge_Air_Velocity_Pressure_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Velocity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Supply,
        tag:Velocity ;
    brick:hasQuantity brick:Velocity_Pressure ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Chilled_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Chilled Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Chilled_Water_Temperature_Setpoint,
        brick:Supply_Water_Temperature_Setpoint ;
    skos:definition "Temperature setpoint for supply chilled water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Supply_Chilled_Water .

brick:Supply_Condenser_Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Condenser Water Flow Sensor" ;
    rdfs:subClassOf brick:Supply_Water_Flow_Sensor ;
    skos:definition "Measures the flow of the supply condenser water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:Flow,
        tag:Point,
        tag:Sensor,
        tag:Supply,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Supply_Condenser_Water .

brick:Supply_Condenser_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Condenser Water Temperature Sensor" ;
    rdfs:subClassOf brick:Condenser_Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of the supply condenser water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:Point,
        tag:Sensor,
        tag:Supply,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Supply_Condenser_Water .

brick:Supply_Condenser_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Condenser Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Supply_Water_Temperature_Setpoint ;
    skos:definition "The temperature setpoint for the supply condenser water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Supply_Condenser_Water .

brick:Supply_Fan a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Fan" ;
    rdfs:subClassOf brick:Fan ;
    owl:equivalentClass brick:Discharge_Fan ;
    skos:definition "Fan moving supply air -- air that is supplied from the HVAC system into the building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Fan,
        tag:Supply .

brick:Supply_Hot_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Hot Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Hot_Water_Temperature_Setpoint,
        brick:Supply_Water_Temperature_Setpoint ;
    skos:definition "Temperature setpoint for supply hot water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Supply_Hot_Water .

brick:Supply_Water_Differential_Pressure_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Water Differential Pressure Deadband Setpoint" ;
    rdfs:subClassOf brick:Differential_Pressure_Deadband_Setpoint ;
    owl:equivalentClass brick:Discharge_Water_Differential_Pressure_Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of differential pressure of supply water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Deadband,
        tag:Differential,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Supply,
        tag:Water ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Supply_Water .

brick:Supply_Water_Differential_Pressure_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Water Differential Pressure Integral Time Parameter" ;
    rdfs:subClassOf brick:Differential_Pressure_Integral_Time_Parameter,
        brick:Integral_Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Supply,
        tag:Time,
        tag:Water .

brick:Supply_Water_Differential_Pressure_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Water Differential Pressure Proportional Band Parameter" ;
    rdfs:subClassOf brick:Differential_Pressure_Proportional_Band ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Band,
        tag:Differential,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Proportional,
        tag:Supply,
        tag:Water .

brick:Supply_Water_Temperature_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Water Temperature Alarm" ;
    rdfs:subClassOf brick:Water_Temperature_Alarm ;
    owl:equivalentClass brick:Discharge_Water_Temperature_Alarm ;
    skos:definition "An alarm that indicates the off-normal conditions associated with temperature of the supply water."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Point,
        tag:Supply,
        tag:Temperature,
        tag:Water .

brick:Supply_Water_Temperature_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Water Temperature Deadband Setpoint" ;
    rdfs:subClassOf brick:Supply_Water_Temperature_Setpoint,
        brick:Temperature_Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of temperature of supply water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Deadband,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Supply_Water .

brick:Supply_Water_Temperature_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Water Temperature Integral Time Parameter" ;
    rdfs:subClassOf brick:Integral_Time_Parameter,
        brick:Temperature_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Supply,
        tag:Temperature,
        tag:Time,
        tag:Water .

brick:Supply_Water_Temperature_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Water Temperature Proportional Band Parameter" ;
    rdfs:subClassOf brick:Proportional_Band_Parameter,
        brick:Temperature_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Band,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Proportional,
        tag:Supply,
        tag:Temperature,
        tag:Water .

brick:Surveillance_Camera a owl:Class,
        sh:NodeShape ;
    rdfs:label "Surveillance Camera" ;
    rdfs:subClassOf brick:Camera,
        brick:Video_Surveillance_Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Camera ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Security ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Surveillance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Video ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Camera,
        tag:Equipment,
        tag:Security,
        tag:Surveillance,
        tag:Video .

brick:Switch_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Switch Room" ;
    rdfs:subClassOf brick:Telecom_Room ;
    skos:definition "A telecommuncations room housing network switches"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Switch ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Telecom ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Room,
        tag:Space,
        tag:Switch,
        tag:Telecom .

brick:Switchgear a owl:Class,
        sh:NodeShape ;
    rdfs:label "Switchgear" ;
    rdfs:subClassOf brick:Electrical_Equipment ;
    skos:definition "A main disconnect or service disconnect feeds power to a switchgear, which then distributes power to the rest of the building through smaller amperage-rated disconnects."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Switchgear ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Switchgear .

brick:System_Shutdown_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "System Shutdown Status" ;
    rdfs:subClassOf brick:Status,
        brick:System_Status ;
    skos:definition "Indicates if a system has been shutdown"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shutdown ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Shutdown,
        tag:Status,
        tag:System .

brick:TETRA_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "TETRA Room" ;
    rdfs:subClassOf brick:Telecom_Room ;
    skos:definition "A room used for local two-way radio networks, e.g. the portable radios carried by facilities staff"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:TETRA ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Telecom ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Room,
        tag:Space,
        tag:TETRA,
        tag:Telecom .

brick:TVOC_Level_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "TVOC Level Sensor" ;
    rdfs:subClassOf brick:TVOC_Sensor ;
    skos:definition "A sensor measuring the level of all VOCs in air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Matter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Particulate ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:TVOC ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Level,
        tag:Matter,
        tag:Particulate,
        tag:Point,
        tag:Sensor,
        tag:TVOC .

brick:Team_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Team Room" ;
    rdfs:subClassOf brick:Enclosed_Office ;
    skos:definition "An office used by multiple team members for specific work tasks. Distinct from Conference Room"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Enclosed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Office ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Team ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Enclosed,
        tag:Location,
        tag:Office,
        tag:Room,
        tag:Space,
        tag:Team .

brick:Temperature_Tolerance_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Temperature Tolerance Parameter" ;
    rdfs:subClassOf brick:Temperature_Parameter,
        brick:Tolerance_Parameter ;
    skos:definition "A parameter determining the difference between upper and lower limits of temperature."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Tolerance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Parameter,
        tag:Point,
        tag:Temperature,
        tag:Tolerance .

brick:Temporary_Occupancy_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Temporary Occupancy Status" ;
    rdfs:subClassOf brick:Occupancy_Status ;
    skos:definition "For systems that differentiate between scheduled occupied/unoccupied mode, this indicates if a space is temporarily occupied when it would otherwise be unoccupied"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Occupancy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temporary ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Occupancy,
        tag:Point,
        tag:Status,
        tag:Temporary .

brick:Thermal_Energy a brick:Quantity ;
    rdfs:label "Thermal Energy" ;
    qudt:applicableUnit unit:BTU_IT,
        unit:BTU_MEAN,
        unit:BTU_TH,
        unit:CAL_15_DEG_C,
        unit:CAL_IT,
        unit:CAL_MEAN,
        unit:CAL_TH,
        unit:GigaJ,
        unit:J,
        unit:KiloCAL,
        unit:KiloCAL_IT,
        unit:KiloCAL_Mean,
        unit:KiloCAL_TH,
        unit:KiloJ,
        unit:MegaJ,
        unit:N-M,
        unit:THM_EEC,
        unit:THM_US ;
    skos:broader brick:Energy ;
    skos:definition "Thermal Energy} is the portion of the thermodynamic or internal energy of a system that is responsible for the temperature of the system. From a macroscopic thermodynamic description, the thermal energy of a system is given by its constant volume specific heat capacity C(T), a temperature coefficient also called thermal capacity, at any given absolute temperature (T): (U_{thermal = C(T) \\cdot T)."@en ;
    brick:hasQUDTReference quantitykind:ThermalEnergy .

brick:Thermal_Power a brick:Quantity ;
    rdfs:label "ThermalPower" ;
    qudt:applicableUnit unit:BTU_IT,
        unit:KiloW,
        unit:MegaW,
        unit:MilliW,
        unit:W ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Power,
        brick:Power ;
    skos:definition "`"@en .

brick:Thermal_Power_Meter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Thermal Power Meter" ;
    rdfs:subClassOf brick:Meter ;
    skos:definition "A standalone thermal power meter"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Meter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Power ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Thermal ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Meter,
        tag:Power,
        tag:Thermal .

brick:Thermally_Activated_Building_System_Panel a owl:Class,
        sh:NodeShape ;
    rdfs:label "Thermally Activated Building System Panel" ;
    rdfs:seeAlso <https://www.rehva.eu/eshop/detail/no07-low-temperature-heating-and-high-temperature-cooling> ;
    rdfs:subClassOf brick:Radiant_Panel ;
    owl:equivalentClass brick:TABS_Panel ;
    skos:definition "Radiant panel heating and cooling system where the energy heat source or sink is embedded in the building structure such as in slabs and walls."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Activated ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Building ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Panel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Thermally ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Activated,
        tag:Building,
        tag:Equipment,
        tag:Panel,
        tag:System,
        tag:Thermally .

brick:Thermostat a owl:Class,
        sh:NodeShape ;
    rdfs:label "Thermostat" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "An automatic control device used to maintain temperature at a fixed or adjustable setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Thermostat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Thermostat .

brick:Thermostatic_Mixing_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Thermostatic Mixing Valve" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Thermostatic_mixing_valve> ;
    rdfs:subClassOf brick:Water_Valve ;
    skos:definition "A valve that blends hot water with cold water to ensure constant, safe shower and bath outlet temperatures, preventing scalding."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mixed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Thermal ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Mixed,
        tag:Thermal,
        tag:Valve,
        tag:Water .

brick:Ticketing_Booth a owl:Class,
        sh:NodeShape ;
    rdfs:label "Ticketing Booth" ;
    rdfs:subClassOf brick:Space ;
    skos:definition "A room or space used to sell or distribute tickets to events at a venue"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Booth ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Ticketing ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Booth,
        tag:Location,
        tag:Space,
        tag:Ticketing .

brick:Tint_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Tint Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "The target level of window tint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Tint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Point,
        tag:Tint .

brick:Tint_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Tint Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "The current level of window tint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Tint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Status,
        tag:Tint .

brick:Touchpanel a owl:Class,
        sh:NodeShape ;
    rdfs:label "Touchpanel" ;
    rdfs:subClassOf brick:Interface ;
    skos:definition "A switch used to operate all or part of a lighting installation that uses a touch-based mechanism (typically resistive or capacitive) rather than a mechanical actuator"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Interface ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Touchpanel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Interface,
        tag:Touchpanel .

brick:Trace_Heat_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Trace Heat Sensor" ;
    rdfs:subClassOf brick:Heat_Sensor ;
    skos:definition "Measures the surface temperature of pipelines carrying temperature-sensitive products; typically used to avoid frosting/freezing"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Trace ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Heat,
        tag:Point,
        tag:Sensor,
        tag:Trace .

brick:Transformer a owl:Class,
        sh:NodeShape ;
    rdfs:label "Transformer" ;
    rdfs:subClassOf brick:Electrical_Equipment ;
    skos:definition "A Transformer is usually fed by a high-voltage source and then steps down the voltage to a lower-voltage feed for low-voltage application (such as lights). Transformers also can step up voltage, but this generally does not apply to in building distribution."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Transformer ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Transformer .

brick:Transformer_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Transformer Room" ;
    rdfs:subClassOf brick:Electrical_Room ;
    skos:definition "An electrical room where electricity enters and is transformed to different voltages and currents by the equipment contained in the room"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Electrical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Service ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Transformer ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Electrical,
        tag:Location,
        tag:Room,
        tag:Service,
        tag:Space,
        tag:Transformer .

brick:Tunnel a owl:Class,
        sh:NodeShape ;
    rdfs:label "Tunnel" ;
    rdfs:subClassOf brick:Space ;
    skos:definition "An enclosed space that connects buildings. Often underground"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Tunnel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Space,
        tag:Tunnel .

brick:Underfloor_Air_Plenum a owl:Class,
        sh:NodeShape ;
    rdfs:label "Underfloor Air Plenum" ;
    rdfs:subClassOf brick:Supply_Air_Plenum ;
    skos:definition "An open space between a structural concrete slab and the underside of a raised access floor system that connects to an air handling unit to receive conditioned and/or ventilating air before delivery to the room(s)"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Plenum ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Underfloor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Equipment,
        tag:Plenum,
        tag:Underfloor .

brick:Underfloor_Air_Plenum_Static_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Underfloor Air Plenum Static Pressure Sensor" ;
    rdfs:subClassOf brick:Static_Pressure_Sensor ;
    skos:definition "Measures the outward push of air against the plenum surfaces and used to measure the resistance when air moves through the plenum"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Plenum ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Underfloor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Plenum,
        tag:Pressure,
        tag:Sensor,
        tag:Static,
        tag:Underfloor .

brick:Underfloor_Air_Plenum_Static_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Underfloor Air Plenum Static Pressure Setpoint" ;
    rdfs:subClassOf brick:Static_Pressure_Setpoint ;
    skos:definition "Sets the underfloor air plenum static pressure"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Plenum ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Underfloor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Plenum,
        tag:Pressure,
        tag:Setpoint,
        tag:Static,
        tag:Underfloor .

brick:Underfloor_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Underfloor Air Temperature Sensor" ;
    rdfs:subClassOf brick:Air_Temperature_Sensor ;
    skos:definition "Measures the temperature of underfloor air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Underfloor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Underfloor .

brick:Unit_Failure_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unit Failure Alarm" ;
    rdfs:subClassOf brick:Failure_Alarm ;
    skos:definition "An alarm that indicates the failure of an equipment or device"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Failure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Failure,
        tag:Point,
        tag:Unit .

brick:Unoccupied_Air_Temperature_Cooling_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Air Temperature Cooling Setpoint" ;
    rdfs:subClassOf brick:Cooling_Temperature_Setpoint,
        brick:Unoccupied_Air_Temperature_Setpoint ;
    skos:definition "Sets temperature of air when unoccupied for cooling"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Unoccupied .

brick:Unoccupied_Air_Temperature_Heating_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Air Temperature Heating Setpoint" ;
    rdfs:subClassOf brick:Heating_Temperature_Setpoint,
        brick:Unoccupied_Air_Temperature_Setpoint ;
    skos:definition "Sets temperature of air when unoccupied for heating"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Heat,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Unoccupied .

brick:Unoccupied_Cooling_Discharge_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Cooling Discharge Air Flow Setpoint" ;
    rdfs:subClassOf brick:Cooling_Discharge_Air_Flow_Setpoint ;
    skos:definition "Sets discharge air flow for cooling when unoccupied"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Discharge,
        tag:Flow,
        tag:Point,
        tag:Setpoint,
        tag:Unoccupied .

brick:Unoccupied_Discharge_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Discharge Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Setpoint,
        brick:Unoccupied_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Unoccupied .

brick:Unoccupied_Humidity_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Humidity Setpoint" ;
    rdfs:subClassOf brick:Humidity_Setpoint ;
    skos:definition "Target humidity level when the location is unoccupied."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Humidity,
        tag:Point,
        tag:Setpoint,
        tag:Unoccupied .

brick:Unoccupied_Return_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Return Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Return_Air_Temperature_Setpoint,
        brick:Unoccupied_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Heat,
        tag:Point,
        tag:Return,
        tag:Setpoint,
        tag:Temperature,
        tag:Unoccupied .

brick:Unoccupied_Room_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Room Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Room_Air_Temperature_Setpoint,
        brick:Unoccupied_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Heat,
        tag:Point,
        tag:Room,
        tag:Setpoint,
        tag:Temperature,
        tag:Unoccupied .

brick:Unoccupied_Supply_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Supply Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Supply_Air_Temperature_Setpoint,
        brick:Unoccupied_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Heat,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature,
        tag:Unoccupied .

brick:Unoccupied_Zone_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Zone Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Unoccupied_Air_Temperature_Setpoint,
        brick:Zone_Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Heat,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Unoccupied,
        tag:Zone .

brick:VFD_Enable_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "VFD Enable Command" ;
    rdfs:subClassOf brick:Enable_Command ;
    skos:definition "Enables operation of a variable frequency drive"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:VFD ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Enable,
        tag:Point,
        tag:VFD .

brick:Valve_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Valve Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Controls or reports the openness of a valve (typically as a proportion of its full range of motion)"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Point,
        tag:Valve .

brick:Valve_Position_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Valve Position Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "An alarm that indicates that the valve position is not in a normal state."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Position ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Point,
        tag:Position,
        tag:Valve .

brick:Valve_Position_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Valve Position Sensor" ;
    rdfs:subClassOf brick:Position_Sensor ;
    skos:definition "Measures the current position of a valve in terms of the percent of fully open"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Position ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Position,
        tag:Sensor,
        tag:Valve ;
    brick:hasQuantity brick:Position .

brick:Valve_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Valve Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "The current status of the valve."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Status,
        tag:Valve .

brick:Variable_Air_Volume_Box_With_Reheat a owl:Class,
        sh:NodeShape ;
    rdfs:label "Variable Air Volume Box With Reheat" ;
    rdfs:subClassOf brick:Variable_Air_Volume_Box ;
    owl:equivalentClass brick:RVAV ;
    skos:definition "A VAV box with a reheat coil mounted on the discharge end of the unit that can heat the air delivered to a zone"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Box ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reheat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Variable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Volume ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Box,
        tag:Equipment,
        tag:Reheat,
        tag:Variable,
        tag:Volume .

brick:Variable_Frequency_Drive a owl:Class,
        sh:NodeShape ;
    rdfs:label "Variable Frequency Drive" ;
    rdfs:seeAlso <https://xp20.ashrae.org/terminology/index.php?term=vfd&submit=Search> ;
    rdfs:subClassOf brick:Motor ;
    owl:equivalentClass brick:VFD ;
    skos:definition "Electronic device that varies its output frequency to vary the rotating speed of a motor, given a fixed input frequency. Used with fans or pumps to vary the flow in the system as a function of a maintained pressure."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Drive ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Frequency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Variable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Drive,
        tag:Equipment,
        tag:Frequency,
        tag:Variable .

brick:Velocity_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Velocity Pressure Setpoint" ;
    rdfs:subClassOf brick:Pressure_Setpoint ;
    skos:definition "Sets static veloicty pressure"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Velocity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Velocity .

brick:Vent_Operating_Mode_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Vent Operating Mode Status" ;
    rdfs:subClassOf brick:Operating_Mode_Status ;
    skos:definition "Indicates the current operating mode of a vent"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Mode ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Operating ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Vent ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Mode,
        tag:Operating,
        tag:Point,
        tag:Status,
        tag:Vent .

brick:Ventilation_Air_Flow_Ratio_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Ventilation Air Flow Ratio Limit" ;
    rdfs:subClassOf brick:Limit ;
    skos:definition "A parameter that places a lower or upper bound on the range of permitted values of a Ventilation_Air_Flow_Ratio_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Ratio ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Ventilation ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Limit,
        tag:Point,
        tag:Ratio,
        tag:Ventilation .

brick:Ventilation_Air_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Ventilation Air System" ;
    rdfs:subClassOf brick:Air_System ;
    skos:definition "The equipment, devices, and conduits that handle the introduction and distribution of ventilation air in the building"@en,
        "The equipment, distribution systems and terminals that introduce or exhaust, either collectively or individually, the air used for the ventilation system of the building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Ventilation ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:System,
        tag:Ventilation .

brick:Video_Intercom a owl:Class,
        sh:NodeShape ;
    rdfs:label "Video Intercom" ;
    rdfs:subClassOf brick:Intercom_Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Intercom ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Security ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Video ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Intercom,
        tag:Security,
        tag:Video .

brick:Visitor_Lobby a owl:Class,
        sh:NodeShape ;
    rdfs:label "Visitor Lobby" ;
    rdfs:subClassOf brick:Lobby ;
    skos:definition "A lobby for visitors to the building. Sometimes used to distinguish from an employee entrance looby"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Common ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lobby ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Visitor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Common,
        tag:Lobby,
        tag:Location,
        tag:Space,
        tag:Visitor .

brick:Voltage_Angle a brick:Quantity ;
    rdfs:label "VoltageAngle" ;
    qudt:applicableUnit unit:ARCMIN,
        unit:ARCSEC,
        unit:DEG,
        unit:GON,
        unit:GRAD,
        unit:MIL,
        unit:MicroRAD,
        unit:MilliARCSEC,
        unit:MilliRAD,
        unit:RAD,
        unit:REV ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader brick:Phasor_Angle ;
    skos:definition "Angle of voltage phasor",
        "Angle of voltage phasor"@en ;
    skos:related brick:Voltage .

brick:Voltage_Imbalance_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Voltage Imbalance Sensor" ;
    rdfs:subClassOf brick:Imbalance_Sensor ;
    skos:definition "A sensor which measures the voltage difference (imbalance) between phases of an electrical system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Imbalance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Voltage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Imbalance,
        tag:Point,
        tag:Sensor,
        tag:Voltage ;
    brick:hasQuantity brick:Voltage_Imbalance .

brick:Wardrobe a owl:Class,
        sh:NodeShape ;
    rdfs:label "Wardrobe" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "Storage for clothing, costumes, or uniforms"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Wardrobe ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Room,
        tag:Space,
        tag:Wardrobe .

brick:Warm_Cool_Adjust_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Warm Cool Adjust Sensor" ;
    rdfs:subClassOf brick:Adjust_Sensor ;
    skos:definition "User provided adjustment of zone temperature, typically in the range of +/- 5 degrees"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Adjust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Warm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Adjust,
        tag:Cool,
        tag:Point,
        tag:Sensor,
        tag:Warm .

brick:Warmest_Zone_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Warmest Zone Air Temperature Sensor" ;
    rdfs:subClassOf brick:Zone_Air_Temperature_Sensor ;
    skos:definition "The zone temperature that is warmest; drives the supply temperature of cold air. A computed value rather than a physical sensor. Also referred to as a 'Highest Zone Air Temperature Sensor'"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Warmest ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Warmest,
        tag:Zone .

brick:Waste_Storage a owl:Class,
        sh:NodeShape ;
    rdfs:label "Waste Storage" ;
    rdfs:subClassOf brick:Storage_Room ;
    skos:definition "A room used for storing waste such as trash or recycling"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Storage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Waste ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Room,
        tag:Space,
        tag:Storage,
        tag:Waste .

brick:Water_Differential_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Differential Temperature Setpoint" ;
    rdfs:subClassOf brick:Water_Temperature_Setpoint ;
    skos:definition "Sets the target differential temperature between the start and end of a heat transfer cycle in a water circuit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Differential_Temperature ;
    brick:hasSubstance brick:Water .

brick:Water_Distribution a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Distribution" ;
    rdfs:subClassOf brick:Equipment ;
    skos:definition "Utilize a water distribution source to represent how water is distributed across multiple destinations (pipes)"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Distribution ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Distribution,
        tag:Equipment,
        tag:Water .

brick:Water_Loss_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Loss Alarm" ;
    rdfs:subClassOf brick:Water_Alarm ;
    skos:definition "An alarm that indicates a loss of water e.g. during transport"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Loss ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Loss,
        tag:Point,
        tag:Water .

brick:Water_Tank a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Tank" ;
    rdfs:subClassOf brick:Space ;
    skos:definition "A space used to hold water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Tank ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Space,
        tag:Tank,
        tag:Water .

brick:Weather_Condition a brick:Quantity ;
    rdfs:label "Weather Condition" .

brick:Weather_Station a owl:Class,
        sh:NodeShape ;
    rdfs:label "Weather Station" ;
    rdfs:seeAlso <https://bedes.lbl.gov/bedes-online/weather-station> ;
    rdfs:subClassOf brick:Equipment ;
    skos:definition "A dedicated weather measurement station"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Station ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Weather ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Station,
        tag:Weather .

brick:Wind_Direction_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Wind Direction Sensor" ;
    rdfs:subClassOf brick:Direction_Sensor ;
    skos:definition "Measures the direction of wind in degrees relative to North"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Direction ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Wind ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Direction,
        tag:Point,
        tag:Sensor,
        tag:Wind ;
    brick:hasQuantity brick:Wind_Direction .

brick:Wind_Speed_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Wind Speed Sensor" ;
    rdfs:subClassOf brick:Speed_Sensor ;
    skos:definition "Measured speed of wind, caused by air moving from high to low pressure"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Speed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Wind ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Sensor,
        tag:Speed,
        tag:Wind ;
    brick:hasQuantity brick:Linear_Speed .

brick:Wing a owl:Class,
        sh:NodeShape ;
    rdfs:label "Wing" ;
    rdfs:subClassOf brick:Location ;
    skos:definition "A wing is part of a building – or any feature of a building – that is subordinate to the main, central structure."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Wing ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Wing .

brick:Workshop a owl:Class,
        sh:NodeShape ;
    rdfs:label "Workshop" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A space used to house equipment that can be used to repair or fabricate things"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Workshop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Room,
        tag:Space,
        tag:Workshop .

brick:Zone_Air_Cooling_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Zone Air Cooling Temperature Setpoint" ;
    rdfs:subClassOf brick:Cooling_Temperature_Setpoint,
        brick:Zone_Air_Temperature_Setpoint ;
    skos:definition "The upper (cooling) setpoint for zone air temperature"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Zone .

brick:Zone_Air_Dewpoint_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Zone Air Dewpoint Sensor" ;
    rdfs:subClassOf brick:Dewpoint_Sensor ;
    skos:definition "Measures dewpoint of zone air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Dewpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Dewpoint,
        tag:Point,
        tag:Sensor,
        tag:Zone ;
    brick:hasQuantity brick:Dewpoint ;
    brick:hasSubstance brick:Zone_Air .

brick:Zone_Air_Heating_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Zone Air Heating Temperature Setpoint" ;
    rdfs:subClassOf brick:Heating_Temperature_Setpoint,
        brick:Zone_Air_Temperature_Setpoint ;
    skos:definition "The lower (heating) setpoint for zone air temperature"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heating ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Heating,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Zone .

brick:Zone_Air_Humidity_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Zone Air Humidity Sensor" ;
    rdfs:subClassOf brick:Relative_Humidity_Sensor ;
    skos:definition "Measures the relative humidity of zone air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Relative ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Humidity,
        tag:Point,
        tag:Relative,
        tag:Sensor,
        tag:Zone ;
    brick:hasQuantity brick:Relative_Humidity ;
    brick:hasSubstance brick:Zone_Air .

brick:Zone_Air_Humidity_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Zone Air Humidity Setpoint" ;
    rdfs:subClassOf brick:Humidity_Setpoint ;
    skos:definition "Humidity setpoint for zone air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Humidity,
        tag:Point,
        tag:Setpoint,
        tag:Zone ;
    brick:hasQuantity brick:Humidity ;
    brick:hasSubstance brick:Zone_Air .

brick:Zone_Standby_Load_Shed_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Zone Standby Load Shed Command" ;
    rdfs:subClassOf brick:Standby_Load_Shed_Command ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Standby ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Load,
        tag:Point,
        tag:Shed,
        tag:Standby,
        tag:Zone .

brick:Zone_Unoccupied_Load_Shed_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Zone Unoccupied Load Shed Command" ;
    rdfs:subClassOf brick:Unoccupied_Load_Shed_Command ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Load,
        tag:Point,
        tag:Shed,
        tag:Unoccupied,
        tag:Zone .

brick:aggregate a brick:EntityProperty ;
    rdfs:label "Aggregate" ;
    rdfs:domain brick:Point ;
    rdfs:range brick:AggregationShape ;
    skos:definition "Description of how the dta for this point is aggregated" .

brick:azimuth a brick:EntityProperty ;
    rdfs:label "Azimuth" ;
    rdfs:range brick:AzimuthShape ;
    skos:definition "(Horizontal) angle between a projected vector and a reference vector (typically a compass bearing). The projected vector usually indicates the direction of a face or plane." .

brick:buildingPrimaryFunction a brick:EntityProperty ;
    rdfs:label "Building primary function" ;
    rdfs:domain brick:Building ;
    rdfs:range brick:BuildingPrimaryFunctionShape ;
    rdfs:seeAlso "https://project-haystack.org/tag/primaryFunction" ;
    skos:definition "Enumerated string applied to a site record to indicate the building's primary function. The list of primary functions is derived from the US Energy Star program (adopted from Project Haystack)" .

brick:buildingThermalTransmittance a brick:EntityProperty ;
    rdfs:label "Building thermal transmittance" ;
    rdfs:domain brick:Building ;
    rdfs:range brick:ThermalTransmittanceShape ;
    rdfs:seeAlso "https://www.iso.org/obp/ui/#iso:std:iso:13789:ed-3:v1:en" ;
    rdfs:subPropertyOf brick:thermalTransmittance ;
    skos:definition "The area-weighted average heat transfer coefficient (commonly referred to as a U-value) for a building envelope" .

brick:coolingCapacity a brick:EntityProperty ;
    rdfs:label "Cooling capacity" ;
    rdfs:domain brick:Chiller ;
    rdfs:range brick:CoolingCapacityShape ;
    rdfs:seeAlso "https://project-haystack.org/tag/coolingCapacity" ;
    skos:definition "Measurement of a chiller ability to remove heat (adopted from Project Haystack)" .

brick:coordinates a brick:EntityProperty ;
    rdfs:label "Coordinates" ;
    rdfs:range brick:CoordinateShape ;
    skos:definition "The location of an entity in latitude/longitude" .

brick:currentFlowType a brick:EntityProperty ;
    rdfs:label "Current flow type" ;
    rdfs:range brick:CurrentFlowTypeShape ;
    skos:definition "The current flow type of the entity" .

brick:electricalPhaseCount a brick:EntityProperty ;
    rdfs:label "Electrical phase count" ;
    rdfs:range brick:PhaseCountShape ;
    skos:definition "Entity has these phases" .

brick:electricalPhases a brick:EntityProperty ;
    rdfs:label "Electrical phases" ;
    rdfs:range brick:PhasesShape ;
    skos:definition "Entity has these electrical AC phases" .

brick:feedsAir rdfs:subPropertyOf brick:feeds ;
    skos:definition "Passes air"@en .

brick:grossArea a brick:EntityProperty ;
    rdfs:label "Gross area" ;
    rdfs:range brick:AreaShape ;
    rdfs:subPropertyOf brick:area ;
    skos:definition "Entity has gross 2-dimensional area" .

brick:hasAddress rdfs:label "Has address" ;
    rdfs:domain brick:Building ;
    rdfs:range vcard:Address ;
    rdfs:subPropertyOf vcard:hasAddress ;
    skos:definition "To specify the address of a building."@en .

brick:hasBACnetReference a brick:EntityProperty ;
    rdfs:domain brick:Point ;
    rdfs:range brick:BACnetReference ;
    rdfs:subPropertyOf brick:hasExternalReference ;
    skos:definition "BACnet metadata" .

brick:hasCSVReference a brick:EntityProperty ;
    rdfs:domain brick:Point ;
    rdfs:range brick:CSVReference ;
    rdfs:subPropertyOf brick:timeseries ;
    skos:definition "Metadata for accessing CSV data" .

brick:hasIFCReference a brick:EntityProperty ;
    rdfs:domain brick:Entity ;
    rdfs:range brick:IFCReference ;
    rdfs:subPropertyOf brick:hasExternalReference ;
    skos:definition "IFC metadata" .

brick:hasInputSubstance a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Has input substance" ;
    rdfs:range brick:Substance ;
    skos:definition "The subject receives the given substance as an input to its internal process"@en .

brick:hasOutputSubstance a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Has output substance" ;
    rdfs:range brick:Substance ;
    skos:definition "The subject produces or exports the given substance from its internal process"@en .

brick:hasQUDTReference a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Has QUDT reference" ;
    skos:definition "Points to the relevant QUDT definition"@en .

brick:hasQuantity a owl:AsymmetricProperty,
        owl:IrreflexiveProperty ;
    rdfs:label "Has QUDT reference" ;
    rdfs:subPropertyOf qudt:hasQuantityKind .

brick:hasSubstance a owl:AsymmetricProperty,
        owl:IrreflexiveProperty ;
    rdfs:label "Has QUDT reference" .

brick:measuredModuleConversionEfficiency a brick:EntityProperty ;
    rdfs:label "Measured module conversion efficiency" ;
    rdfs:domain brick:PV_Panel ;
    rdfs:range brick:EfficiencyShape ;
    rdfs:subPropertyOf brick:conversionEfficiency ;
    skos:definition "The measured percentage of sunlight that is converted into usable power" .

brick:measuredPowerInput a brick:EntityProperty ;
    rdfs:range brick:PowerShape ;
    skos:definition "The nominal measured power input of the entity" .

brick:measuredPowerOutput a brick:EntityProperty ;
    rdfs:range brick:PowerShape ;
    skos:definition "The nominal measured power output of the entity" .

brick:netArea a brick:EntityProperty ;
    rdfs:label "Net area" ;
    rdfs:range brick:AreaShape ;
    rdfs:subPropertyOf brick:area ;
    skos:definition "Entity has net 2-dimensional area" .

brick:operationalStage a brick:EntityProperty ;
    rdfs:label "Operational stage" ;
    rdfs:range brick:StageShape ;
    skos:definition "The associated operational stage" .

brick:operationalStageCount a brick:EntityProperty ;
    rdfs:label "Operational stage count" ;
    rdfs:domain brick:Equipment ;
    rdfs:range brick:StageShape ;
    skos:definition "The number of operational stages supported by this eqiupment" .

brick:panelArea a brick:EntityProperty ;
    rdfs:label "Panel area" ;
    rdfs:range brick:AreaShape ;
    rdfs:subPropertyOf brick:area ;
    skos:definition "Surface area of a panel, such as a PV panel" .

brick:powerComplexity a brick:EntityProperty ;
    rdfs:label "Power complexity" ;
    rdfs:range brick:PowerComplexityShape ;
    skos:definition "Entity has this power complexity" .

brick:powerFlow a brick:EntityProperty ;
    rdfs:label "Power flow" ;
    rdfs:range brick:PowerFlowShape ;
    skos:definition "Entity has this power flow relative to the building'" .

brick:ratedMaximumCurrentInput a brick:EntityProperty ;
    rdfs:range brick:CurrentShape ;
    rdfs:subPropertyOf brick:ratedCurrentInput ;
    skos:definition "The maximum current that can be input to the entity" .

brick:ratedMaximumCurrentOutput a brick:EntityProperty ;
    rdfs:range brick:CurrentShape ;
    rdfs:subPropertyOf brick:ratedCurrentOutput ;
    skos:definition "The maximum current that can be output by the entity" .

brick:ratedMaximumVoltageInput a brick:EntityProperty ;
    rdfs:range brick:VoltageShape ;
    rdfs:subPropertyOf brick:ratedVoltageInput ;
    skos:definition "The maximum voltage that can be input to the entity" .

brick:ratedMaximumVoltageOutput a brick:EntityProperty ;
    rdfs:range brick:VoltageShape ;
    rdfs:subPropertyOf brick:ratedVoltageOutput ;
    skos:definition "The maximum voltage that can be output by the entity" .

brick:ratedMinimumCurrentInput a brick:EntityProperty ;
    rdfs:range brick:CurrentShape ;
    rdfs:subPropertyOf brick:ratedCurrentInput ;
    skos:definition "The minimum current that can be input to the entity" .

brick:ratedMinimumCurrentOutput a brick:EntityProperty ;
    rdfs:range brick:CurrentShape ;
    rdfs:subPropertyOf brick:ratedCurrentOutput ;
    skos:definition "The minimum current that can be output by the entity" .

brick:ratedMinimumVoltageInput a brick:EntityProperty ;
    rdfs:range brick:VoltageShape ;
    rdfs:subPropertyOf brick:ratedVoltageInput ;
    skos:definition "The minimum voltage that can be input to the entity" .

brick:ratedMinimumVoltageOutput a brick:EntityProperty ;
    rdfs:range brick:VoltageShape ;
    rdfs:subPropertyOf brick:ratedVoltageOutput ;
    skos:definition "The minimum voltage that can be output by the entity" .

brick:ratedModuleConversionEfficiency a brick:EntityProperty ;
    rdfs:label "Rated module conversion efficiency" ;
    rdfs:domain brick:PV_Panel ;
    rdfs:range brick:EfficiencyShape ;
    rdfs:subPropertyOf brick:conversionEfficiency ;
    skos:definition "The *rated* percentage of sunlight that is converted into usable power, as measured using Standard Test Conditions (STC): 1000 W/sqm irradiance, 25 degC panel temperature, no wind" .

brick:ratedPowerInput a brick:EntityProperty ;
    rdfs:range brick:PowerShape ;
    skos:definition "The nominal rated power input of the entity" .

brick:ratedPowerOutput a brick:EntityProperty ;
    rdfs:range brick:PowerShape ;
    skos:definition "The nominal rated power output of the entity" .

brick:regulates a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Regulates" ;
    rdfs:domain brick:Equipment ;
    rdfs:range brick:Substance ;
    owl:inverseOf brick:isRegulatedBy ;
    skos:definition "The subject contributes to or performs the regulation of the substance given by the object"@en .

brick:temperatureCoefficientofPmax a brick:EntityProperty ;
    rdfs:label "Temperature coefficient" ;
    rdfs:range brick:TemperatureCoefficientPerDegreeCelsiusShape ;
    skos:definition "The % change in power output for every degree celsius that the entity is hotter than 25 degrees celsius" .

brick:tilt a brick:EntityProperty ;
    rdfs:label "Tilt" ;
    rdfs:range brick:TiltShape ;
    skos:definition "The direction an entity is facing in degrees above the horizon" .

brick:volume a brick:EntityProperty ;
    rdfs:label "Volume" ;
    rdfs:range brick:VolumeShape ;
    skos:definition "Entity has 3-dimensional volume" .

brick:yearBuilt a brick:EntityProperty ;
    rdfs:label "Year built" ;
    rdfs:domain brick:Building ;
    rdfs:range brick:YearBuiltShape ;
    rdfs:seeAlso "https://project-haystack.org/tag/yearBuilt" ;
    skos:definition "Four digit year that a building was first built. (adopted from Project Haystack)" .

bsh:CollectionShape a sh:NodeShape ;
    sh:and ( [ sh:message "Collection is an exclusive top class." ;
                sh:not [ sh:class brick:Equipment ] ] [ sh:message "Collection is an exclusive top class." ;
                sh:not [ sh:class brick:Location ] ] [ sh:message "Collection is an exclusive top class." ;
                sh:not [ sh:class brick:Substance ] ] [ sh:message "Collection is an exclusive top class." ;
                sh:not [ sh:class brick:Quantity ] ] [ sh:message "Collection is an exclusive top class." ;
                sh:not [ sh:class brick:Point ] ] ) ;
    sh:message "Collection is an exclusive top class." ;
    sh:or ( sh:property [ sh:class brick:Equipment ;
                sh:message "A Collection can be associated with Equipments, Locations, Points, and other Collections." ;
                sh:path brick:hasPart ] sh:property [ sh:class brick:Location ;
                sh:message "A Collection can be associated with Equipments, Locations, Points, and other Collections." ;
                sh:path brick:hasPart ] sh:property [ sh:class brick:Point ;
                sh:message "A Collection can be associated with Equipments, Locations, Points, and other Collections." ;
                sh:path brick:hasPart ] sh:property [ sh:class brick:Collection ;
                sh:message "A Collection can be associated with Equipments, Locations, Points, and other Collections." ;
                sh:path brick:hasPart ] ) ;
    sh:targetClass brick:Collection .

bsh:EquipmentShape a sh:NodeShape ;
    sh:and ( [ sh:message "Equipment is an exclusive top class." ;
                sh:not [ sh:class brick:Point ] ] [ sh:message "Equipment is an exclusive top class." ;
                sh:not [ sh:class brick:Location ] ] [ sh:message "Equipment is an exclusive top class." ;
                sh:not [ sh:class brick:Substance ] ] [ sh:message "Equipment is an exclusive top class." ;
                sh:not [ sh:class brick:Quantity ] ] [ sh:message "Equipment is an exclusive top class." ;
                sh:not [ sh:class brick:Collection ] ] ) ;
    sh:message "Equipment is an exclusive top class." ;
    sh:or ( sh:property [ sh:class brick:System ;
                sh:message "Equipment can be part of a Collection, System or other Equipment" ;
                sh:path brick:isPartOf ] sh:property [ sh:class brick:Equipment ;
                sh:message "Equipment can be part of a Collection, System or other Equipment" ;
                sh:path brick:isPartOf ] sh:property [ sh:class brick:Collection ;
                sh:message "Equipment can be part of a Collection, System or other Equipment" ;
                sh:path brick:isPartOf ] ),
        ( sh:property [ sh:class brick:Equipment ;
                sh:message "A piece of Equipment can feed a Equipment" ;
                sh:path brick:feeds ] sh:property [ sh:class brick:Location ;
                sh:message "A piece of Equipment can feed a Location" ;
                sh:path brick:feeds ] ) ;
    sh:property [ sh:class brick:Equipment ;
            sh:message "A piece of Equipment's parts should be always other Equipment." ;
            sh:path brick:hasPart ],
        [ sh:class brick:Location ;
            sh:message "A piece of Equipment can be located only at a Location" ;
            sh:path brick:hasLocation ],
        [ sh:class brick:Point ;
            sh:message "A piece of Equipment may have associated Points" ;
            sh:path brick:hasPoint ] ;
    sh:targetClass brick:Equipment .

bsh:InferInverseProperties a sh:NodeShape ;
    sh:rule [ a sh:SPARQLRule ;
            sh:construct """
CONSTRUCT {
?o ?invP $this .
}
WHERE {
  $this ?p ?o .
  ?p owl:inverseOf ?invP .
}
			""" ;
            sh:prefixes owl: ] ;
    sh:targetClass brick:Entity .

bsh:InferSymmetricProperties a sh:NodeShape ;
    sh:rule [ a sh:SPARQLRule ;
            sh:construct """
CONSTRUCT {
?o ?prop $this .
}
WHERE {
  $this ?prop ?o .
  ?prop a owl:SymmetricProperty .
}
			""" ;
            sh:prefixes rdf:,
                owl: ] ;
    sh:targetClass brick:Entity .

bsh:LocationShape a sh:NodeShape ;
    sh:and ( [ sh:message "Location is an exclusive top class." ;
                sh:not [ sh:class brick:Point ] ] [ sh:message "Location is an exclusive top class." ;
                sh:not [ sh:class brick:Equipment ] ] [ sh:message "Location is an exclusive top class." ;
                sh:not [ sh:class brick:Substance ] ] [ sh:message "Location is an exclusive top class." ;
                sh:not [ sh:class brick:Quantity ] ] [ sh:message "Location is an exclusive top class." ;
                sh:not [ sh:class brick:Collection ] ] ) ;
    sh:property [ sh:class brick:Location ;
            sh:message "A Location's parts should be always Locations." ;
            sh:path brick:hasPart ],
        [ sh:class brick:Location ;
            sh:message "A Location's parts should be always Locations." ;
            sh:path brick:isPartOf ],
        [ sh:class brick:Equipment ;
            sh:message "Locations can be fed only by other Equipment." ;
            sh:path brick:isFedBy ],
        [ sh:class brick:Point ;
            sh:message "A Location may have associated Points" ;
            sh:path brick:hasPoint ] ;
    sh:targetClass brick:Location .

bsh:PointShape a sh:NodeShape ;
    sh:and ( [ sh:message "Point is an exclusive top class." ;
                sh:not [ sh:class brick:Equipment ] ] [ sh:message "Point is an exclusive top class." ;
                sh:not [ sh:class brick:Location ] ] [ sh:message "Point is an exclusive top class." ;
                sh:not [ sh:class brick:Substance ] ] [ sh:message "Point is an exclusive top class." ;
                sh:not [ sh:class brick:Quantity ] ] [ sh:message "Point is an exclusive top class." ;
                sh:not [ sh:class brick:Collection ] ] ) ;
    sh:message "Point is an exclusive top class." ;
    sh:or ( sh:property [ sh:class brick:Location ;
                sh:message "A point can be associated with Locations or Equipment" ;
                sh:path brick:isPointOf ] sh:property [ sh:class brick:Equipment ;
                sh:message "A point can be associated with Locations or Equipment" ;
                sh:path brick:isPointOf ] ) ;
    sh:targetClass brick:Point .

bsh:RDFSRangeRule a sh:NodeShape ;
    sh:rule [ a sh:SPARQLRule ;
            sh:construct """
CONSTRUCT {
    ?val a ?shape .
} WHERE {
    $this rdfs:range ?shape .
    ?shape a sh:NodeShape .
    ?ent $this ?val .
}""" ;
            sh:prefixes rdf:,
                rdfs:,
                sh: ] ;
    sh:targetSubjectsOf rdfs:range .

bsh:RDFSSubPropertyOfRule a sh:NodeShape ;
    sh:rule [ a sh:SPARQLRule ;
            sh:construct """
CONSTRUCT {
    ?s ?super ?o .
} WHERE {
    $this rdfs:subPropertyOf ?super .
    ?s $this ?o .
}""" ;
            sh:prefixes rdfs: ] ;
    sh:targetSubjectsOf rdfs:subPropertyOf .

bsh:TagInferenceRule a sh:NodeShape ;
    sh:rule [ a sh:SPARQLRule ;
            sh:construct """
CONSTRUCT {
$this brick:hasTag ?tag .
} WHERE {
    $this rdf:type/rdfs:subClassOf* ?class .
    ?class brick:hasAssociatedTag ?tag .
}""" ;
            sh:prefixes rdf:,
                brick: ] ;
    sh:targetClass brick:Entity .

bsh:hasLocationShape a sh:Nodeshape ;
    sh:message "Points are a virtual concept and always belonging to a physical device, represented by Equipment. Thus, it cannot have a Location alone." ;
    sh:not [ sh:class brick:Point ] ;
    sh:targetSubjectsOf brick:hasLocation .

bacnet:description a bacnet:StandardProperty,
        owl:DatatypeProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-description ;
    bacnet:propertyName "description" ;
    bacnet:propertyRef bacnet:Description .

bacnet:object-identifier a bacnet:StandardProperty,
        rdf:Property,
        owl:DatatypeProperty ;
    rdfs:label "object-identifier" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-object-identifier ;
    bacnet:propertyName "object-identifier" ;
    bacnet:propertyOf bacnet:Object ;
    bacnet:propertyRef bacnet:Object_Identifier ;
    rdfs:subPropertyOf bacnet:ReadableProperty .

bacnet:object-name a bacnet:StandardProperty,
        owl:DatatypeProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-object-name ;
    bacnet:propertyName "object-name" ;
    bacnet:propertyOf bacnet:Object ;
    bacnet:propertyRef bacnet:Object_Name ;
    rdfs:subPropertyOf bacnet:ReadableProperty .

bacnet:object-type a bacnet:StandardProperty,
        rdf:Property,
        owl:DatatypeProperty ;
    rdfs:label "object-type" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-object-type ;
    bacnet:propertyName "object-type" ;
    bacnet:propertyOf bacnet:Object ;
    bacnet:propertyRef bacnet:Object_Type ;
    rdfs:subPropertyOf bacnet:ReadableProperty .

bacnet:objectOf a owl:ObjectProperty .

s223:BidirectionalConnectionPoint a s223:Class,
        sh:NodeShape ;
    rdfs:label "Bidirectional Connection Point" ;
    rdfs:comment "A predefined subClassOf ConnectionPoint for which the hasDirection property has the value s223:Bidirectional." ;
    rdfs:subClassOf s223:ConnectionPoint ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue s223:Bidirectional ;
            sh:path s223:hasDirection ] .

s223:BidirectionalSystemConnectionPoint a s223:Class,
        sh:NodeShape ;
    rdfs:label "Bidirectional System Connection Point" ;
    rdfs:comment "This class is analogous to the BidirectionalConnectionPoint class, but for SystemConnectionPoints." ;
    rdfs:subClassOf s223:SystemConnectionPoint ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue s223:Bidirectional ;
            sh:path s223:hasDirection ] .

s223:ContextualRole a sh:NodeShape ;
    rdfs:comment "A ContextualRole is a role where the role value is only meaningful in a specified context, such as from a particular perspective (relativeTo) or only under certain conditions (inState). The ContextualRole instance must have at least one of these contexts, but may have several." ;
    sh:or ( [ sh:property [ sh:class s223:State ;
                        sh:minCount 1 ;
                        sh:path s223:inState ] ] [ sh:property [ sh:class s223:Device ;
                        sh:minCount 1 ;
                        sh:path s223:relativeTo ] ] ) ;
    sh:property [ sh:class s223:Role ;
            sh:minCount 1 ;
            sh:path s223:hasRole ] .

s223:EnumeratedActuatableProperty a s223:Class,
        sh:NodeShape ;
    rdfs:label "Enumerated actuatable property" ;
    rdfs:subClassOf s223:ActuatableProperty,
        s223:Enumerable,
        s223:NonQuantifiableProperty .

s223:EnumeratedObservableProperty a s223:Class,
        sh:NodeShape ;
    rdfs:label "Enumerated observable property" ;
    rdfs:subClassOf s223:Enumerable,
        s223:NonQuantifiableProperty,
        s223:ObservableProperty .

s223:ExternalSource a s223:Class,
        sh:NodeShape ;
    rdfs:label "External source" ;
    rdfs:subClassOf s223:Concept .

s223:InletConnectionPoint a s223:Class,
        sh:NodeShape ;
    rdfs:label "Inlet Connection Point" ;
    rdfs:comment "A predefined subClassOf ConnectionPoint which has the direction of Inlet." ;
    rdfs:subClassOf s223:ConnectionPoint ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue s223:Inlet ;
            sh:path s223:hasDirection ] ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "If an instance of InletConnectionPoint doesn't have a value for hasDirection, then set it." ;
            sh:object s223:Inlet ;
            sh:predicate s223:hasDirection ;
            sh:subject sh:this ] .

s223:InletSystemConnectionPoint a s223:Class,
        sh:NodeShape ;
    rdfs:label "Inlet System Connection Point" ;
    rdfs:comment "This class is analogous to the InletConnectionPoint class, but for SystemConnectionPoints." ;
    rdfs:subClassOf s223:SystemConnectionPoint ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue s223:Inlet ;
            sh:path s223:hasDirection ] ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "If an instance of InletSystemConnectionPoint doesn't have a value for hasDirection, then set it." ;
            sh:object s223:Inlet ;
            sh:predicate s223:hasDirection ;
            sh:subject sh:this ] .

s223:OutletConnectionPoint a s223:Class,
        sh:NodeShape ;
    rdfs:label "Outlet Connection Point" ;
    rdfs:comment "A predefined subClassOf ConnectionPoint which has the direction of Outlet." ;
    rdfs:subClassOf s223:ConnectionPoint ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue s223:Outlet ;
            sh:path s223:hasDirection ] ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "If an instance of OutletConnectionPoint doesn't have a value for hasDirection, then set it." ;
            sh:object s223:Outlet ;
            sh:predicate s223:hasDirection ;
            sh:subject sh:this ] .

s223:OutletSystemConnectionPoint a s223:Class,
        sh:NodeShape ;
    rdfs:label "Outlet System Connection Point" ;
    rdfs:comment "This class is analogous to the OutletConnectionPoint class, but for SystemConnectionPoints." ;
    rdfs:subClassOf s223:SystemConnectionPoint ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue s223:Outlet ;
            sh:path s223:hasDirection ] ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "If an instance of OutletSystemConnectionPoint doesn't have a value for hasDirection, then set it." ;
            sh:object s223:Outlet ;
            sh:predicate s223:hasDirection ;
            sh:subject sh:this ] .

s223:QuantifiableActuatableProperty a s223:Class,
        sh:NodeShape ;
    rdfs:label "Quantifiable Actuatable Property" ;
    rdfs:comment "This class is for quantifiable values that are specified for an object (System, Device, etc.), such as a setpoint." ;
    rdfs:subClassOf s223:ActuatableProperty,
        s223:QuantifiableProperty .

s223:QuantifiableObservableProperty a s223:Class,
        sh:NodeShape ;
    rdfs:label "Quantifiable Observable Property" ;
    rdfs:comment "This class is for measured (observed) properties that have numerical values, such as a temperature reading." ;
    rdfs:subClassOf s223:ObservableProperty,
        s223:QuantifiableProperty .

s223:Setpoint a s223:Class,
        sh:NodeShape ;
    rdfs:label "Setpoint" ;
    rdfs:subClassOf s223:Property,
        qudt:Quantity ;
    sh:property [ sh:class s223:EnumerationValue ;
            sh:path s223:hasAspect ],
        [ sh:datatype xsd:decimal ;
            sh:path s223:hasDeadband ],
        [ sh:datatype xsd:decimal ;
            sh:path s223:hasValue ] ;
    sh:rule [ a sh:SPARQLRule ;
            sh:construct """
CONSTRUCT {$this qudt:hasQuantityKind ?qk .}
WHERE {
FILTER (NOT EXISTS {$this qudt:hasQuantityKind ?something}) .
$this ^s223:hasSetpoint ?property .
?property qudt:hasQuantityKind ?qk .
}
""" ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/inference/model-rules> ] .

s223:State a s223:Class,
        sh:NodeShape ;
    rdfs:label "State" ;
    rdfs:subClassOf s223:Concept .

s223:VirtualSensor a s223:Class,
        sh:NodeShape ;
    rdfs:label "Virtual sensor" ;
    rdfs:subClassOf s223:Sensor ;
    sh:property [ sh:class s223:Property ;
            sh:path s223:hasFunctionInput ],
        [ sh:maxCount 0 ;
            sh:path s223:hasMeasurementLocation ] .

s223:abstract a rdf:Property ;
    rdfs:label "abstract" ;
    rdfs:range xsd:boolean .

s223:commandedState a rdf:Property ;
    rdfs:label "commanded state" ;
    rdfs:range xsd:boolean .

s223:connectedFrom a rdf:Property ;
    rdfs:label "connected from" ;
    rdfs:domain s223:Device ;
    rdfs:range s223:Device .

s223:connectsFrom a rdf:Property ;
    rdfs:label "connects from" .

s223:connectsTo a rdf:Property ;
    rdfs:label "connects to" ;
    rdfs:domain s223:Connection ;
    rdfs:range s223:Device .

s223:electricConsumption a rdf:Property ;
    rdfs:label "Electric Consumption" .

s223:encloses a rdf:Property ;
    rdfs:label "encloses" .

s223:hasAspect a rdf:Property ;
    rdfs:label "has aspect" .

s223:hasContextualRole a rdf:Property ;
    rdfs:label "has Contextual Role" .

s223:hasDeadband a rdf:Property ;
    rdfs:label "has deadband" .

s223:hasDevice a rdf:Property ;
    rdfs:label "has device" ;
    s223:inverseOf s223:isDeviceOf ;
    rdfs:domain s223:System ;
    rdfs:range s223:Device ;
    rdfs:subPropertyOf s223:contains .

s223:hasFunctionInput a rdf:Property ;
    rdfs:label "has function input" .

s223:hasInletPressure a rdf:Property ;
    rdfs:label "Inlet Pressure" ;
    rdfs:subPropertyOf s223:hasProperty .

s223:hasLocation a rdf:Property ;
    rdfs:label "has location" .

s223:hasSetpoint a rdf:Property ;
    rdfs:label "has setpoint" .

s223:hasSubSystem a rdf:Property ;
    rdfs:label "has sub system" ;
    s223:inverseOf s223:isSubSystemOf ;
    rdfs:domain s223:System ;
    rdfs:range s223:System ;
    rdfs:subPropertyOf s223:contains .

s223:hasSystemConnectionPoint a rdf:Property ;
    rdfs:label "hasSystemConnectionPoint" .

s223:inState a rdf:Property ;
    rdfs:label "in State" .

s223:includes a rdf:Property ;
    rdfs:label "includes" .

s223:isActuatedBy a rdf:Property ;
    rdfs:label "isActuatedBy" ;
    s223:inverseOf s223:actuatesProperty .

s223:isDeviceOf a rdf:Property ;
    rdfs:label "is device of" ;
    s223:inverseOf s223:hasDevice ;
    rdfs:domain s223:Device ;
    rdfs:subPropertyOf s223:isContainedIn .

s223:isObservedBy a rdf:Property ;
    rdfs:label "is observed by" ;
    s223:inverseOf s223:observesProperty .

s223:isSubSystemOf a rdf:Property ;
    rdfs:label "is sub system of" ;
    s223:inverseOf s223:hasSubSystem ;
    rdfs:domain s223:System ;
    rdfs:range s223:System ;
    rdfs:subPropertyOf s223:isContainedIn .

s223:isValueOf a rdf:Property ;
    rdfs:label "isValueOf" ;
    s223:inverseOf s223:hasValue .

s223:returnsTo a rdf:Property ;
    rdfs:label "returns to" .

s223:serves a rdf:Property ;
    rdfs:label "serves" .

s223:suppliesTo a rdf:Property ;
    rdfs:label "supplies to" .

s223:zoneConnected a s223:SymmetricProperty ;
    rdfs:label "Zone CP Connected" .

<http://data.ashrae.org/standard223/1.0/extension/g36> a owl:Ontology ;
    owl:imports <http://data.ashrae.org/standard223/1.0/model/all> ;
    owl:versionInfo "Created with TopBraid Composer" .

g36:RunCommand a s223:EnumerationKind ;
    rdfs:label "Run command" ;
    s223:hasMember g36:RunCommand-Start,
        g36:RunCommand-Stop .

g36:RunCommand-Start a s223:EnumerationValue ;
    rdfs:label "Start" .

g36:RunCommand-Stop a s223:EnumerationValue ;
    rdfs:label "Stop" .

g36:RunStatus a s223:EnumerationKind ;
    rdfs:label "Run status" ;
    s223:hasMember g36:RunStatus-Off,
        g36:RunStatus-On,
        g36:RunStatus-Unknown .

g36:RunStatus-Off a s223:EnumerationValue ;
    rdfs:label "Off" .

g36:RunStatus-On a s223:EnumerationValue ;
    rdfs:label "On" .

g36:RunStatus-Unknown a s223:EnumerationValue ;
    rdfs:label "Unknown" .

<http://data.ashrae.org/standard223/1.0/extensions/settings> a owl:Ontology ;
    rdfs:comment """This file can be used to control which extensions are to be loaded with the 223 ontology by importing the appropriate graph(s). Options include:
For access to magic properties and other SPIN functions - http://data.ashraw.org/standard223/1.0/function/spin.  
For validation of the schema, model, or data - http://data.ashrae.org/standard223/1.0/validation/schema (or model or data).  
For inferred properties - http://data.ashrae.org/standard223/1.0/inference/model-rules (and/or schema-rules, data-rules)""" ;
    owl:imports <http://data.ashrae.org/standard223/1.0/extension/g36>,
        <http://data.ashrae.org/standard223/1.0/inference/data-rules>,
        <http://data.ashrae.org/standard223/1.0/inference/model-rules>,
        <http://data.ashrae.org/standard223/1.0/inference/owl-subset>,
        <http://data.ashrae.org/standard223/1.0/validation/data>,
        <http://data.ashrae.org/standard223/1.0/validation/model>,
        <http://data.ashrae.org/standard223/1.0/validation/schema> ;
    owl:versionInfo "Created with TopBraid Composer" .

<http://data.ashrae.org/standard223/1.0/model/device> a owl:Ontology ;
    owl:imports <http://data.ashrae.org/standard223/1.0/model/core>,
        <http://data.ashrae.org/standard223/1.0/vocab/enumeration>,
        sh: ;
    owl:versionInfo "Created with TopBraid Composer" ;
    sh:declare [ sh:namespace "http://qudt.org/schema/qudt/"^^xsd:anyURI ;
            sh:prefix "qudt" ],
        [ sh:namespace "http://qudt.org/vocab/quantitykind/"^^xsd:anyURI ;
            sh:prefix "quantitykind" ] .

<http://data.ashrae.org/standard223/1.0/model/system> a owl:Ontology ;
    spin:imports <http://topbraid.org/spin/owlrl-all> ;
    owl:imports <http://data.ashrae.org/standard223/1.0/model/core>,
        sh: ;
    owl:versionInfo "Created with TopBraid Composer" ;
    sh:declare [ sh:namespace "http://qudt.org/schema/qudt/"^^xsd:anyURI ;
            sh:prefix "qudt" ],
        [ sh:namespace "http://qudt.org/vocab/quantitykind/"^^xsd:anyURI ;
            sh:prefix "quantitykind" ] .

<http://data.ashrae.org/standard223/1.0/vocab/domain> a owl:Ontology ;
    owl:imports <http://data.ashrae.org/standard223/1.0/model/core>,
        sh: ;
    owl:versionInfo "Created with TopBraid Composer" .

enum:DayOfWeek-Weekday a s223:EnumerationValue ;
    rdfs:label "Day of week-Weekday" .

enum:DayOfWeek-Weekend a s223:EnumerationValue ;
    rdfs:label "Day of week-Weekend" .

enum:Effectiveness-Active a s223:EnumerationValue ;
    rdfs:label "Active" .

enum:HVACOperatingMode-Auto a s223:EnumerationValue ;
    rdfs:label "Auto" .

enum:HVACOperatingMode-CoolOnly a s223:EnumerationValue ;
    rdfs:label "CoolOnly" .

enum:HVACOperatingMode-FanOnly a s223:EnumerationValue ;
    rdfs:label "FanOnly" .

enum:HVACOperatingMode-HeatOnly a s223:EnumerationValue ;
    rdfs:label "HeatOnly" .

enum:HVACOperatingMode-Off a s223:EnumerationValue ;
    rdfs:label "Off" .

enum:HVACOperatingStatus-Cooling a s223:EnumerationValue ;
    rdfs:label "Cooling" .

enum:HVACOperatingStatus-Dehumidifying a s223:EnumerationValue ;
    rdfs:label "Dehumidifying" .

enum:HVACOperatingStatus-Heating a s223:EnumerationValue ;
    rdfs:label "Heating" .

enum:HVACOperatingStatus-Off a s223:EnumerationValue ;
    rdfs:label "Off" .

enum:HVACOperatingStatus-Ventilating a s223:EnumerationValue ;
    rdfs:label "Ventilating" .

enum:OccupancyStatus-Occupied a s223:EnumerationValue ;
    rdfs:label "Occupied" .

enum:OccupancyStatus-Unknown a s223:EnumerationValue ;
    rdfs:label "Unknown" .

enum:OccupancyStatus-Unoccupied a s223:EnumerationValue ;
    rdfs:label "Unoccupied" .

enum:PositionStatus-Closed a s223:EnumerationValue ;
    rdfs:label "Closed" .

enum:PositionStatus-Open a s223:EnumerationValue ;
    rdfs:label "Open" .

enum:PositionStatus-Unknown a s223:EnumerationValue ;
    rdfs:label "Unknown" .

enum:RunStatus-Off a s223:EnumerationValue ;
    rdfs:label "Off" .

enum:RunStatus-On a s223:EnumerationValue ;
    rdfs:label "On" .

enum:RunStatus-Unknown a s223:EnumerationValue ;
    rdfs:label "Unknown" .

enum:ThreeSpeedSetting-High a s223:EnumerationValue ;
    rdfs:label "High" .

enum:ThreeSpeedSetting-Low a s223:EnumerationValue ;
    rdfs:label "Low" .

enum:ThreeSpeedSetting-Medium a s223:EnumerationValue ;
    rdfs:label "Medium" .

enum:ThreeSpeedSetting-Off a s223:EnumerationValue ;
    rdfs:label "Off" .

enum:Water a s223:EnumerationKind ;
    rdfs:label "Water" ;
    s223:hasMember enum:Water-ChilledWater,
        enum:Water-HotWater .

enum:Weekday a s223:EnumerationKind ;
    rdfs:label "Weekday" ;
    s223:hasMember enum:Weekday-Friday,
        enum:Weekday-Monday,
        enum:Weekday-Thursday,
        enum:Weekday-Tuesday,
        enum:Weekday-Wednesday .

enum:Weekday-Friday a s223:EnumerationValue ;
    rdfs:label "Friday" .

enum:Weekday-Monday a s223:EnumerationValue ;
    rdfs:label "Monday" .

enum:Weekday-Thursday a s223:EnumerationValue ;
    rdfs:label "Thursday" .

enum:Weekday-Tuesday a s223:EnumerationValue ;
    rdfs:label "Tuesday" .

enum:Weekday-Wednesday a s223:EnumerationValue ;
    rdfs:label "Wednesday" .

enum:Weekend a s223:EnumerationKind ;
    rdfs:label "Weekend" ;
    s223:hasMember enum:Weekend-Saturday,
        enum:Weekend-Sunday .

enum:Weekend-Saturday a s223:EnumerationValue ;
    rdfs:label "Saturday" .

enum:Weekend-Sunday a s223:EnumerationValue ;
    rdfs:label "Sunday" .

<http://data.ashrae.org/standard223/1.0/vocab/role> a owl:Ontology ;
    owl:imports <http://data.ashrae.org/standard223/1.0/model/core>,
        sh: ;
    owl:versionInfo "Created with TopBraid Composer" .

dcterms:author a owl:AnnotationProperty ;
    rdfs:label "author"^^xsd:string ;
    rdfs:isDefinedBy dcterms: ;
    rdfs:range xsd:string .

voaf:Vocabulary a owl:Class .

<http://qudt.org/2.1/schema/extensions/functions> a owl:Ontology ;
    owl:imports <http://spinrdf.org/spl> ;
    owl:versionInfo "Created with TopBraid Composer" .

<http://qudt.org/2.1/schema/extensions/imports> a owl:Ontology ;
    rdfs:comment "This file is imported by the QUDT schema graph. To add new behavior to QUDT, use this file to import files containing additional triples. e.g. import the file skos.ttl (URI of http://qudt.org/2.1/schema/extensions/skos) located in this directory to make all qudt:Concepts a subClass of skos:Concept. " ;
    owl:imports <http://qudt.org/2.0/schema/qudt/mathematics>,
        <http://qudt.org/2.1/schema/extensions/functions> ;
    owl:versionInfo "Created with TopBraid Composer" .

qudt:AbstractQuantityKind-qudt_latexSymbol a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype qudt:LatexString ;
    sh:group qudt:IdentifiersAndDescriptionsPropertyGroup ;
    sh:minCount 0 ;
    sh:order 40.0 ;
    sh:path qudt:latexSymbol .

qudt:AbstractQuantityKind-qudt_symbol a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:group qudt:IdentifiersAndDescriptionsPropertyGroup ;
    sh:minCount 0 ;
    sh:order 40.0 ;
    sh:path qudt:symbol .

qudt:AbstractQuantityKind-skos_broader a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:QuantityKind ;
    sh:group qudt:PropertiesGroup ;
    sh:order 120.0 ;
    sh:path skos:broader .

qudt:ApplicableUnitsGroup a sh:PropertyGroup ;
    rdfs:label "Applicable Units" ;
    sh:order 30.0 .

qudt:BaseDimensionMagnitude-qudt_hasBaseQuantityKind a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:QuantityKind ;
    sh:maxCount 1 ;
    sh:minCount 1 ;
    sh:path qudt:hasBaseQuantityKind .

qudt:BaseDimensionMagnitude-qudt_vectorMagnitude a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:float ;
    sh:maxCount 1 ;
    sh:minCount 1 ;
    sh:path qudt:vectorMagnitude .

qudt:ByteEncodingType a owl:Class,
        sh:NodeShape ;
    rdfs:label "Byte Encoding" ;
    dcterms:description "This class contains the various ways that information may be encoded into bytes." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Encoding .

qudt:CT_COUNTABLY-INFINITE a qudt:CardinalityType ;
    rdfs:label "Countably Infinite Cardinality Type" ;
    dcterms:description "A set of numbers is called countably infinite if there is a way to enumerate them.  Formally this is done with a bijection function that associates each number in the set with exactly one of the positive integers.  The set of all fractions is also countably infinite.  In other words, any set \\(X\\) that has the same cardinality as the set of the natural numbers, or \\(| X | \\; =  \\; | \\mathbb N | \\; = \\; \\aleph0\\), is said to be a countably infinite set."^^qudt:LatexString ;
    qudt:informativeReference "http://www.math.vanderbilt.edu/~schectex/courses/infinity.pdf"^^xsd:anyURI ;
    qudt:literal "countable" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:CT_FINITE a qudt:CardinalityType ;
    rdfs:label "Finite Cardinality Type" ;
    dcterms:description "Any set \\(X\\) with cardinality less than that of the natural numbers, or \\(| X | \\\\; <  \\; | \\\\mathbb N | \\), is said to be a finite set."^^qudt:LatexString ;
    qudt:literal "finite" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:CharEncodingType a owl:Class,
        sh:NodeShape ;
    rdfs:label "Char Encoding Type" ;
    dcterms:description "The class of all character encoding schemes, each of which defines a rule or algorithm for encoding character data as a sequence of bits or bytes." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Encoding .

qudt:Citation-qudt_description a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype rdf:HTML ;
    sh:maxCount 1 ;
    sh:minCount 1 ;
    sh:or qudt:HTMLOrStringOrLangStringOrLatexString ;
    sh:path qudt:description .

qudt:Citation-qudt_url a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:anyURI ;
    sh:maxCount 1 ;
    sh:path qudt:url .

qudt:Comment a owl:Class,
        sh:NodeShape ;
    rdfs:label "Comment" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Verifiable,
        owl:Thing ;
    sh:property qudt:Comment-dcterms_description,
        qudt:Comment-qudt_description,
        qudt:Comment-qudt_rationale .

qudt:Comment-dcterms_description a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:maxCount 1 ;
    sh:path dcterms:description .

qudt:Comment-qudt_description a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype rdf:HTML ;
    sh:maxCount 1 ;
    sh:path qudt:description .

qudt:Comment-qudt_rationale a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype rdf:HTML ;
    sh:minCount 0 ;
    sh:path qudt:rationale .

qudt:Concept-dcterms_description a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:group qudt:IdentifiersAndDescriptionsPropertyGroup ;
    sh:maxCount 1 ;
    sh:name "dcterms description" ;
    sh:order 60.0 ;
    sh:path dcterms:description .

qudt:Concept-qudt_abbreviation a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:path qudt:abbreviation .

qudt:Concept-qudt_code a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:path qudt:code .

qudt:Concept-qudt_description a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype rdf:HTML ;
    sh:group qudt:IdentifiersAndDescriptionsPropertyGroup ;
    sh:maxCount 1 ;
    sh:name "full description" ;
    sh:order 60.0 ;
    sh:path qudt:description .

qudt:Concept-qudt_guidance a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype rdf:HTML ;
    sh:group qudt:IdentifiersAndDescriptionsPropertyGroup ;
    sh:order 60.0 ;
    sh:path qudt:guidance .

qudt:Concept-qudt_hasRule a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:Rule ;
    sh:path qudt:hasRule .

qudt:Concept-qudt_id a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:path qudt:id .

qudt:Concept-qudt_plainTextDescription a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:group qudt:IdentifiersAndDescriptionsPropertyGroup ;
    sh:maxCount 1 ;
    sh:order 40.0 ;
    sh:path qudt:plainTextDescription .

qudt:Concept-rdf_type a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/shacl/overlay/qudt> ;
    sh:group qudt:IdentifiersAndDescriptionsPropertyGroup ;
    sh:minCount 1 ;
    sh:name "type" ;
    sh:order 10.0 ;
    sh:path rdf:type .

qudt:Concept-rdfs_label a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/shacl/overlay/qudt> ;
    sh:group qudt:IdentifiersAndDescriptionsPropertyGroup ;
    sh:minCount 1 ;
    sh:order 10.0 ;
    sh:path rdfs:label .

qudt:Concept-rdfs_seeAlso a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/shacl/overlay/qudt> ;
    sh:group qudt:IdentifiersAndDescriptionsPropertyGroup ;
    sh:order 900.0 ;
    sh:path rdfs:seeAlso .

qudt:ConstantValue-qudt_exactConstant a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:boolean ;
    sh:maxCount 1 ;
    sh:path qudt:exactConstant .

qudt:DataEncoding a owl:Class,
        sh:NodeShape ;
    rdfs:label "Data Encoding" ;
    rdfs:comment "<p><em>Data Encoding</em> expresses the properties that specify how data is represented at the bit and byte level. These properties are applicable to describing raw data.</p>"^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Aspect ;
    sh:property qudt:DataEncoding-qudt_bitOrder,
        qudt:DataEncoding-qudt_byteOrder,
        qudt:DataEncoding-qudt_encoding .

qudt:DataEncoding-qudt_bitOrder a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:EndianType ;
    sh:maxCount 1 ;
    sh:path qudt:bitOrder .

qudt:DataEncoding-qudt_byteOrder a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:EndianType ;
    sh:maxCount 1 ;
    sh:path qudt:byteOrder .

qudt:DataEncoding-qudt_encoding a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:Encoding ;
    sh:maxCount 1 ;
    sh:path qudt:encoding .

qudt:Datatype-qudt_ansiSQLName a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:path qudt:ansiSQLName .

qudt:Datatype-qudt_basis a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:Datatype ;
    sh:maxCount 1 ;
    sh:path qudt:basis .

qudt:Datatype-qudt_bounded a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:maxCount 1 ;
    sh:path qudt:bounded .

qudt:Datatype-qudt_cName a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:path qudt:cName .

qudt:Datatype-qudt_cardinality a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:CardinalityType ;
    sh:maxCount 1 ;
    sh:path qudt:cardinality .

qudt:Datatype-qudt_id a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:path qudt:id .

qudt:Datatype-qudt_javaName a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:path qudt:javaName .

qudt:Datatype-qudt_jsName a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:path qudt:jsName .

qudt:Datatype-qudt_matlabName a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:path qudt:matlabName .

qudt:Datatype-qudt_microsoftSQLServerName a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:path qudt:microsoftSQLServerName .

qudt:Datatype-qudt_mySQLName a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:path qudt:mySQLName .

qudt:Datatype-qudt_odbcName a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:path qudt:odbcName .

qudt:Datatype-qudt_oleDBName a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:path qudt:oleDBName .

qudt:Datatype-qudt_oracleSQLName a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:path qudt:oracleSQLName .

qudt:Datatype-qudt_orderedType a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:OrderedType ;
    sh:maxCount 1 ;
    sh:path qudt:orderedType .

qudt:Datatype-qudt_protocolBuffersName a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:path qudt:protocolBuffersName .

qudt:Datatype-qudt_pythonName a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:path qudt:pythonName .

qudt:Datatype-qudt_vbName a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:path qudt:vbName .

qudt:DateTimeStringEncodingType a owl:Class,
        sh:NodeShape ;
    rdfs:label "Date Time String Encoding Type" ;
    dcterms:description "Date Time encodings are logical encodings for expressing date/time quantities as strings by applying unambiguous formatting and parsing rules." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:StringEncodingType ;
    sh:property qudt:DateTimeStringEncodingType-qudt_allowedPattern .

qudt:DateTimeStringEncodingType-qudt_allowedPattern a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:minCount 1 ;
    sh:path qudt:allowedPattern .

qudt:Encoding-qudt_bits a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:integer ;
    sh:maxCount 1 ;
    sh:path qudt:bits .

qudt:Encoding-qudt_bytes a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:integer ;
    sh:maxCount 1 ;
    sh:path qudt:bytes .

qudt:EnumeratedValue-qudt_abbreviation a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:path qudt:abbreviation .

qudt:EnumeratedValue-qudt_description a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype rdf:HTML ;
    sh:maxCount 1 ;
    sh:or qudt:HTMLOrStringOrLangStringOrLatexString ;
    sh:path qudt:description .

qudt:EnumeratedValue-qudt_symbol a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:path qudt:symbol .

qudt:Enumeration a owl:Class,
        sh:NodeShape ;
    rdfs:label "Enumeration" ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Enumeration"^^xsd:anyURI ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Enumerated_type"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Enumeration"^^xsd:anyURI ;
    rdfs:comment """<p>An enumeration is a set of literals from which a single value is selected. Each literal can have a tag as an integer within a standard encoding appropriate to the range of integer values. Consistency of enumeration types will allow them, and the enumerated values, to be referred to unambiguously either through symbolic name or encoding. Enumerated values are also controlled vocabularies and as such need to be standardized. Without this consistency enumeration literals can be stated differently and result in  data conflicts and misinterpretations.</p>

<p>The tags are a set of positive whole numbers, not necessarily contiguous and having no numerical significance, each corresponding to the associated literal identifier. An order attribute can also be given on the enumeration elements. An enumeration can itself be a member of an enumeration. This allows enumerations to be enumerated in a selection. Enumerations are also subclasses of <em>Scalar Datatype</em>. This allows them to be used as the reference of a datatype specification.</p>"""^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Concept,
        dtype:Enumeration ;
    sh:property qudt:Enumeration-qudt_abbreviation,
        qudt:Enumeration-qudt_default,
        qudt:Enumeration-qudt_element .

qudt:Enumeration-qudt_abbreviation a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:path qudt:abbreviation .

qudt:Enumeration-qudt_default a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:EnumeratedValue ;
    sh:maxCount 1 ;
    sh:path qudt:default .

qudt:Enumeration-qudt_element a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:EnumeratedValue ;
    sh:minCount 1 ;
    sh:path qudt:element .

qudt:Figure-qudt_figureCaption a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:path qudt:figureCaption .

qudt:Figure-qudt_figureLabel a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:path qudt:figureLabel .

qudt:Figure-qudt_height a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:path qudt:height .

qudt:Figure-qudt_image a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:anyURI ;
    sh:maxCount 1 ;
    sh:path qudt:image .

qudt:Figure-qudt_imageLocation a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:anyURI ;
    sh:maxCount 1 ;
    sh:minCount 1 ;
    sh:path qudt:imageLocation .

qudt:Figure-qudt_landscape a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:boolean ;
    sh:maxCount 1 ;
    sh:path qudt:landscape .

qudt:Figure-qudt_width a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:path qudt:width .

qudt:GMD_QUDT-SCHEMA-MATHEMATICS a vaem:GraphMetaData ;
    rdfs:label "QUDT Schema for Mathematics - Version 2.0" ;
    dcterms:contributor "Daniel Mekonnen",
        "David Price",
        "Irene Polikoff",
        "James E. Masters" ;
    dcterms:created "2019-03-10"^^xsd:date ;
    dcterms:creator "Ralph Hodgson" ;
    dcterms:description "The QUDT, or \"Quantity, Unit, Dimension and Type\" schema defines the base classes properties, and restrictions used for modeling physical quantities, units of measure, and their dimensions in various measurement systems. The goal of the QUDT ontology is to provide a unified model of, measurable quantities, units for measuring different kinds of quantities, the numerical values of quantities in different units of measure and the data structures and data types used to store and manipulate these objects in software. Except for unit prefixes, all units are specified in separate vocabularies. Descriptions are provided in both HTML and LaTeX formats. " ;
    dcterms:modified "2019-03-10T12:28:04.426000-04:00"^^xsd:dateTime ;
    dcterms:rights "The QUDT Ontologies are issued under a Creative Commons Attribution Share Alike 3.0 United States License. Attribution should be made to NASA Ames Research Center and TopQuadrant, Inc." ;
    dcterms:subject "Mathematics Schema" ;
    dcterms:title "QUDT Schema for Mathematics - Version 2.0" ;
    vaem:hasGraphRole vaem:SchemaGraph ;
    vaem:hasLicenseType voag:CC-SHAREALIKE_3PT0-US ;
    vaem:hasOwner vaem:QUDT ;
    vaem:hasSteward vaem:QUDT ;
    vaem:intent "Specifies the schema for QUDT use of mathematics" ;
    vaem:isMetadataFor "http://qudt.org/2.0/schema/qudt" ;
    vaem:latestPublishedVersion "http://www.linkedmodel.org/doc/2014/SCHEMA_qudt-v2.0"^^xsd:anyURI ;
    vaem:logo "http://www.linkedmodel.org/lib/lm/images/logos/qudt_logo-300x110.png"^^xsd:anyURI ;
    vaem:name "qudt" ;
    vaem:namespace "http://qudt.org/schema/qudt/" ;
    vaem:namespacePrefix "qudt" ;
    vaem:owner "QUDT.org" ;
    vaem:previousPublishedVersion "http://linkedmodel.org/catalog/qudt/1.1/"^^xsd:anyURI ;
    vaem:rdfxmlFileURL "http://www.linkedmodel.org/2.0/schema/SCHEMA_qudt-v2.0.rdf"^^xsd:anyURI ;
    vaem:revision "2.0" ;
    vaem:title "QUDT Schema for Mathematics - Version 2.0" ;
    vaem:usesNonImportedResource dcterms:abstract,
        dcterms:contributor,
        dcterms:created,
        dcterms:creator,
        dcterms:description,
        dcterms:modified,
        dcterms:rights,
        dcterms:source,
        dcterms:subject,
        dcterms:title,
        voag:QUDT-Attribution,
        voag2:CC-SHAREALIKE_3PT0-US,
        skos:closeMatch,
        skos:exactMatch,
        prov:wasInfluencedBy ;
    vaem:withAttributionTo voag:QUDT-Attribution ;
    rdfs:isDefinedBy <http://qudt.org/2.0/schema/qudt/mathematics>,
        qudt:mathematics ;
    owl:versionIRI <http://qudt.org/2.1/schema/qudt> .

qudt:Narratable a qudt:AspectClass,
        sh:NodeShape ;
    rdfs:label "Narratable" ;
    rdfs:comment "<p><em>Narratable</em> specifies properties that provide for documentation and references.</p>"^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/shacl/overlay/qudt> ;
    rdfs:subClassOf qudt:Aspect .

qudt:OrdinalScale-qudt_order a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:nonNegativeInteger ;
    sh:maxCount 1 ;
    sh:minCount 1 ;
    sh:path qudt:order .

qudt:Organization a owl:Class,
        sh:NodeShape ;
    rdfs:label "Organization" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Concept ;
    sh:property qudt:Organization-qudt_url .

qudt:Organization-qudt_url a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:anyURI ;
    sh:minCount 0 ;
    sh:path qudt:url .

qudt:PartiallyOrdered a qudt:OrderedType ;
    rdfs:label "Partially Ordered" ;
    qudt:literal "partial" ;
    qudt:plainTextDescription "Partial ordered structure." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:PhysicalConstant a owl:Class,
        sh:NodeShape ;
    rdfs:label "Physical Constant" ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Physical_constant"^^xsd:anyURI ;
    rdfs:comment "A physical constant is a physical quantity that is generally believed to be both universal in nature and constant in time. It can be contrasted with a mathematical constant, which is a fixed numerical value but does not directly involve any physical measurement. There are many physical constants in science, some of the most widely recognized being the speed of light in vacuum c, Newton's gravitational constant G, Planck's constant h, the electric permittivity of free space ε0, and the elementary charge e. Physical constants can take many dimensional forms, or may be dimensionless depending on the system of quantities and units used."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Quantity ;
    sh:property qudt:PhysicalConstant-qudt_latexDefinition,
        qudt:PhysicalConstant-qudt_latexSymbol,
        qudt:PhysicalConstant-qudt_mathMLdefinition,
        qudt:PhysicalConstant-qudt_symbol .

qudt:PhysicalConstant-qudt_latexDefinition a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype qudt:LatexString ;
    sh:maxCount 1 ;
    sh:path qudt:latexDefinition .

qudt:PhysicalConstant-qudt_latexSymbol a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype qudt:LatexString ;
    sh:group qudt:IdentifiersAndDescriptionsPropertyGroup ;
    sh:order 40.0 ;
    sh:path qudt:latexSymbol .

qudt:PhysicalConstant-qudt_mathMLdefinition a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:path qudt:mathMLdefinition .

qudt:PhysicalConstant-qudt_symbol a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:path qudt:symbol .

qudt:Prefix-qudt_latexSymbol a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype qudt:LatexString ;
    sh:minCount 0 ;
    sh:path qudt:latexSymbol .

qudt:Prefix-qudt_prefixMultiplier a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:double ;
    sh:maxCount 1 ;
    sh:path qudt:prefixMultiplier .

qudt:Prefix-qudt_symbol a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:minCount 0 ;
    sh:path qudt:symbol .

qudt:Prefix-qudt_ucumCode a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:path qudt:ucumCode ;
    sh:pattern "[\\x21,\\x23-\\x27,\\x2a,\\x2c,\\x30-\\x3c,\\x3e-\\x5a,\\x5c,\\x5e-\\x7a,\\x7c,\\x7e]+" .

qudt:Quantifiable-qudt_dataEncoding a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:DataEncoding ;
    sh:maxCount 1 ;
    sh:path qudt:dataEncoding .

qudt:Quantifiable-qudt_dataType a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:Datatype ;
    sh:maxCount 1 ;
    sh:path qudt:dataType .

qudt:Quantifiable-qudt_relativeStandardUncertainty a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:double ;
    sh:maxCount 1 ;
    sh:path qudt:relativeStandardUncertainty .

qudt:Quantifiable-qudt_standardUncertainty a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:double ;
    sh:maxCount 1 ;
    sh:path qudt:standardUncertainty .

qudt:Quantifiable-qudt_unit a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:Unit ;
    sh:maxCount 1 ;
    sh:path qudt:unit .

qudt:Quantifiable-qudt_value a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:maxCount 1 ;
    sh:or ( [ sh:datatype xsd:float ] [ sh:datatype xsd:double ] [ sh:datatype xsd:integer ] [ sh:datatype xsd:decimal ] ) ;
    sh:path qudt:value .

qudt:Quantity-qudt_hasQuantityKind a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:QuantityKind ;
    sh:minCount 0 ;
    sh:path qudt:hasQuantityKind .

qudt:Quantity-qudt_isDeltaQuantity a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:boolean ;
    sh:path qudt:isDeltaQuantity .

qudt:Quantity-qudt_quantityValue a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:QuantityValue ;
    sh:path qudt:quantityValue .

qudt:QuantityKind-qudt_applicableCGSUnit a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:Unit ;
    sh:deactivated true ;
    sh:minCount 0 ;
    sh:path qudt:applicableCGSUnit .

qudt:QuantityKind-qudt_applicableISOUnit a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:Unit ;
    sh:minCount 0 ;
    sh:path qudt:applicableISOUnit .

qudt:QuantityKind-qudt_applicableImperialUnit a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:Unit ;
    sh:minCount 0 ;
    sh:path qudt:applicableImperialUnit .

qudt:QuantityKind-qudt_applicableSIUnit a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:Unit ;
    sh:deactivated true ;
    sh:minCount 0 ;
    sh:path qudt:applicableSIUnit .

qudt:QuantityKind-qudt_applicableUSCustomaryUnit a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:Unit ;
    sh:deactivated true ;
    sh:minCount 0 ;
    sh:path qudt:applicableUSCustomaryUnit .

qudt:QuantityKind-qudt_applicableUnit a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:Unit ;
    sh:group qudt:ApplicableUnitsGroup ;
    sh:minCount 0 ;
    sh:order 10.0 ;
    sh:path qudt:applicableUnit .

qudt:QuantityKind-qudt_baseCGSUnitDimensions a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:group qudt:PropertiesGroup ;
    sh:maxCount 1 ;
    sh:or qudt:HTMLOrStringOrLangStringOrLatexString ;
    sh:path qudt:baseCGSUnitDimensions .

qudt:QuantityKind-qudt_baseISOUnitDimensions a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:group qudt:PropertiesGroup ;
    sh:maxCount 1 ;
    sh:or qudt:HTMLOrStringOrLangStringOrLatexString ;
    sh:path qudt:baseISOUnitDimensions .

qudt:QuantityKind-qudt_baseImperialUnitDimensions a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:group qudt:PropertiesGroup ;
    sh:maxCount 1 ;
    sh:or qudt:HTMLOrStringOrLangStringOrLatexString ;
    sh:path qudt:baseImperialUnitDimensions .

qudt:QuantityKind-qudt_baseSIUnitDimensions a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:group qudt:PropertiesGroup ;
    sh:maxCount 1 ;
    sh:or qudt:HTMLOrStringOrLangStringOrLatexString ;
    sh:path qudt:baseSIUnitDimensions .

qudt:QuantityKind-qudt_baseUSCustomaryUnitDimensions a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:group qudt:PropertiesGroup ;
    sh:maxCount 1 ;
    sh:or qudt:HTMLOrStringOrLangStringOrLatexString ;
    sh:path qudt:baseUSCustomaryUnitDimensions .

qudt:QuantityKind-qudt_baseUnitDimensions a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:group qudt:PropertiesGroup ;
    sh:maxCount 4 ;
    sh:or qudt:HTMLOrStringOrLangStringOrLatexString ;
    sh:order 90.0 ;
    sh:path qudt:baseUnitDimensions .

qudt:QuantityKind-qudt_belongsToSystemOfQuantities a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:SystemOfQuantityKinds ;
    sh:group qudt:PropertiesGroup ;
    sh:order 90.0 ;
    sh:path qudt:belongsToSystemOfQuantities .

qudt:QuantityKind-qudt_dimensionVectorForSI a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:QuantityKindDimensionVector_SI ;
    sh:group qudt:PropertiesGroup ;
    sh:maxCount 1 ;
    sh:order 100.0 ;
    sh:path qudt:dimensionVectorForSI .

qudt:QuantityKind-qudt_expression a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:group qudt:IdentifiersAndDescriptionsPropertyGroup ;
    sh:minCount 0 ;
    sh:name "symbol expression" ;
    sh:order 10.0 ;
    sh:path qudt:expression .

qudt:QuantityKind-qudt_generalization a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:QuantityKind ;
    sh:maxCount 1 ;
    sh:path qudt:generalization .

qudt:QuantityKind-qudt_hasDimensionVector a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:QuantityKindDimensionVector ;
    sh:group qudt:PropertiesGroup ;
    sh:order 50.0 ;
    sh:path qudt:hasDimensionVector .

qudt:QuantityKind-qudt_latexDefinition a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype qudt:LatexString ;
    sh:group qudt:IdentifiersAndDescriptionsPropertyGroup ;
    sh:maxCount 1 ;
    sh:order 40.0 ;
    sh:path qudt:latexDefinition .

qudt:QuantityKind-qudt_mathMLdefinition a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:group qudt:IdentifiersAndDescriptionsPropertyGroup ;
    sh:maxCount 1 ;
    sh:order 70.0 ;
    sh:path qudt:mathMLdefinition .

qudt:QuantityKind-qudt_qkdvDenominator a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:QuantityKindDimensionVector ;
    sh:group qudt:PropertiesGroup ;
    sh:maxCount 1 ;
    sh:order 61.0 ;
    sh:path qudt:qkdvDenominator .

qudt:QuantityKind-qudt_qkdvNumerator a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:QuantityKindDimensionVector ;
    sh:group qudt:PropertiesGroup ;
    sh:maxCount 1 ;
    sh:order 60.0 ;
    sh:path qudt:qkdvNumerator .

qudt:QuantityKindDimensionVector-qudt_baseUnitDimensions a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:group qudt:PropertiesGroup ;
    sh:maxCount 1 ;
    sh:order 90.0 ;
    sh:path qudt:baseUnitDimensions .

qudt:QuantityKindDimensionVector-qudt_dimensionExponentForAmountOfSubstance a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:maxCount 1 ;
    sh:minCount 1 ;
    sh:path qudt:dimensionExponentForAmountOfSubstance .

qudt:QuantityKindDimensionVector-qudt_dimensionExponentForElectricCurrent a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:integer ;
    sh:maxCount 1 ;
    sh:minCount 1 ;
    sh:path qudt:dimensionExponentForElectricCurrent .

qudt:QuantityKindDimensionVector-qudt_dimensionExponentForLength a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:maxCount 1 ;
    sh:minCount 1 ;
    sh:path qudt:dimensionExponentForLength .

qudt:QuantityKindDimensionVector-qudt_dimensionExponentForLuminousIntensity a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:maxCount 1 ;
    sh:minCount 1 ;
    sh:path qudt:dimensionExponentForLuminousIntensity .

qudt:QuantityKindDimensionVector-qudt_dimensionExponentForMass a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:maxCount 1 ;
    sh:minCount 1 ;
    sh:path qudt:dimensionExponentForMass .

qudt:QuantityKindDimensionVector-qudt_dimensionExponentForThermodynamicTemperature a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:maxCount 1 ;
    sh:minCount 1 ;
    sh:path qudt:dimensionExponentForThermodynamicTemperature .

qudt:QuantityKindDimensionVector-qudt_dimensionExponentForTime a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:maxCount 1 ;
    sh:minCount 1 ;
    sh:path qudt:dimensionExponentForTime .

qudt:QuantityKindDimensionVector-qudt_dimensionlessExponent a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:maxCount 1 ;
    sh:minCount 1 ;
    sh:path qudt:dimensionlessExponent .

qudt:QuantityKindDimensionVector-qudt_latexDefinition a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype qudt:LatexString ;
    sh:maxCount 1 ;
    sh:path qudt:latexDefinition .

qudt:QuantityType-dtype_value a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:QuantityKind ;
    sh:path dtype:value .

qudt:QuantityValue-qudt_unit a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:Unit ;
    sh:maxCount 1 ;
    sh:minCount 1 ;
    sh:path qudt:unit .

qudt:Rule a owl:Class,
        sh:NodeShape ;
    rdfs:label "Rule" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Concept,
        qudt:Verifiable ;
    sh:property qudt:Rule-qudt_example,
        qudt:Rule-qudt_rationale,
        qudt:Rule-qudt_ruleType .

qudt:Rule-qudt_example a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:minCount 0 ;
    sh:or qudt:HTMLOrStringOrLangStringOrLatexString ;
    sh:path qudt:example .

qudt:Rule-qudt_rationale a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype rdf:HTML ;
    sh:minCount 0 ;
    sh:path qudt:rationale .

qudt:Rule-qudt_ruleType a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:RuleType ;
    sh:path qudt:ruleType .

qudt:RuleType a owl:Class,
        sh:NodeShape ;
    rdfs:label "Rule Type" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:EnumeratedValue .

qudt:SIGNED a qudt:SignednessType ;
    rdfs:label "Signed" ;
    dtype:literal "signed" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:ScalarDatatype-qudt_bits a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:integer ;
    sh:maxCount 1 ;
    sh:path qudt:bits .

qudt:ScalarDatatype-qudt_bytes a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:integer ;
    sh:maxCount 1 ;
    sh:path qudt:bytes .

qudt:ScalarDatatype-qudt_length a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:integer ;
    sh:maxCount 1 ;
    sh:path qudt:length .

qudt:ScalarDatatype-qudt_maxExclusive a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:path qudt:maxExclusive .

qudt:ScalarDatatype-qudt_maxInclusive a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:maxCount 1 ;
    sh:path qudt:maxInclusive .

qudt:ScalarDatatype-qudt_minExclusive a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:maxCount 1 ;
    sh:path qudt:minExclusive .

qudt:ScalarDatatype-qudt_minInclusive a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:maxCount 1 ;
    sh:path qudt:minInclusive .

qudt:ScalarDatatype-qudt_rdfsDatatype a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class rdfs:Datatype ;
    sh:maxCount 1 ;
    sh:path qudt:rdfsDatatype .

qudt:Scale-qudt_dataStructure a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:path qudt:dataStructure .

qudt:Scale-qudt_permissibleMaths a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:MathsFunctionType ;
    sh:path qudt:permissibleMaths .

qudt:Scale-qudt_permissibleTransformation a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:TransformType ;
    sh:path qudt:permissibleTransformation .

qudt:Scale-qudt_scaleType a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:ScaleType ;
    sh:maxCount 1 ;
    sh:path qudt:scaleType .

qudt:ScaleType a owl:Class,
        sh:NodeShape ;
    rdfs:label "Scale type" ;
    qudt:plainTextDescription "Scales, or scales of measurement (or categorization) provide ways of quantifying measurements, values and other enumerated values according to a normative frame of reference.  Four different types of scales are typically used. These are interval, nominal, ordinal and ratio scales." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:EnumeratedValue ;
    sh:property qudt:ScaleType-qudt_dataStructure,
        qudt:ScaleType-qudt_permissibleMaths,
        qudt:ScaleType-qudt_permissibleTransformation .

qudt:ScaleType-qudt_dataStructure a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:path qudt:dataStructure .

qudt:ScaleType-qudt_permissibleMaths a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:MathsFunctionType ;
    sh:path qudt:permissibleMaths .

qudt:ScaleType-qudt_permissibleTransformation a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:TransformType ;
    sh:path qudt:permissibleTransformation .

qudt:StructuredDatatype-qudt_elementType a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:maxCount 1 ;
    sh:path qudt:elementType .

qudt:Symbol a owl:Class,
        sh:NodeShape ;
    rdfs:label "Symbol" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Concept .

qudt:SystemOfQuantityKinds a owl:Class,
        sh:NodeShape ;
    rdfs:label "System of Quantity Kinds" ;
    rdfs:comment "A system of quantity kinds is a set of one or more quantity kinds together with a set of zero or more algebraic equations that define relationships between quantity kinds in the set. In the physical sciences, the equations relating quantity kinds are typically physical laws and definitional relations, and constants of proportionality. Examples include Newton’s First Law of Motion, Coulomb’s Law, and the definition of velocity as the instantaneous change in position.  In almost all cases, the system identifies a subset of base quantity kinds. The base set is chosen so that all other quantity kinds of interest can be derived from the base quantity kinds and the algebraic equations. If the unit system is explicitly associated with a quantity kind system, then the unit system must define at least one unit for each quantity kind.  From a scientific point of view, the division of quantities into base quantities and derived quantities is a matter of convention."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Concept ;
    sh:property qudt:SystemOfQuantityKinds-qudt_baseDimensionEnumeration,
        qudt:SystemOfQuantityKinds-qudt_hasQuantityKind,
        qudt:SystemOfQuantityKinds-qudt_hasUnitSystem .

qudt:SystemOfQuantityKinds-qudt_baseDimensionEnumeration a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:Enumeration ;
    sh:maxCount 1 ;
    sh:path qudt:baseDimensionEnumeration .

qudt:SystemOfQuantityKinds-qudt_hasQuantityKind a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:QuantityKind ;
    sh:minCount 0 ;
    sh:path qudt:hasQuantityKind .

qudt:SystemOfQuantityKinds-qudt_hasUnitSystem a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:SystemOfUnits ;
    sh:maxCount 1 ;
    sh:path qudt:hasUnitSystem .

qudt:SystemOfUnits-qudt_applicablePhysicalConstant a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:PhysicalConstant ;
    sh:path qudt:applicablePhysicalConstant .

qudt:SystemOfUnits-qudt_hasAllowedUnit a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:Unit ;
    sh:path qudt:hasAllowedUnit .

qudt:SystemOfUnits-qudt_hasBaseUnit a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:Unit ;
    sh:path qudt:hasBaseUnit .

qudt:SystemOfUnits-qudt_hasCoherentUnit a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:Unit ;
    sh:path qudt:hasCoherentUnit .

qudt:SystemOfUnits-qudt_hasDefinedUnit a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:Unit ;
    sh:path qudt:hasDefinedUnit .

qudt:SystemOfUnits-qudt_hasDerivedCoherentUnit a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:Unit ;
    sh:path qudt:hasDerivedCoherentUnit .

qudt:SystemOfUnits-qudt_hasDerivedUnit a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:Unit ;
    sh:path qudt:hasDerivedUnit .

qudt:SystemOfUnits-qudt_hasUnit a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:Unit ;
    sh:path qudt:hasUnit .

qudt:TotallyOrdered a qudt:OrderedType ;
    rdfs:label "Totally Ordered" ;
    qudt:literal "total" ;
    qudt:plainTextDescription "Totally ordered structure." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:UCUMcs a rdfs:Datatype,
        sh:NodeShape ;
    rdfs:label "case-sensitive UCUM code" ;
    dcterms:source <https://ucum.org/ucum.html> ;
    rdfs:comment "Lexical pattern for the case-sensitive version of UCUM code" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:seeAlso <https://ucum.org/ucum.html> ;
    rdfs:subClassOf rdfs:Resource ;
    owl:onDatatype xsd:string ;
    owl:withRestrictions ( [ xsd:pattern "[\\x21-\\x7e]+" ] ) .

qudt:UNSIGNED a qudt:SignednessType ;
    rdfs:label "Unsigned" ;
    dtype:literal "unsigned" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:Unit-qudt_abbreviation a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:group qudt:PropertiesGroup ;
    sh:maxCount 1 ;
    sh:order 10.0 ;
    sh:path qudt:abbreviation .

qudt:Unit-qudt_conversionMultiplier a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:decimal ;
    sh:group qudt:UnitConversionGroup ;
    sh:maxCount 1 ;
    sh:order 10.0 ;
    sh:path qudt:conversionMultiplier .

qudt:Unit-qudt_conversionOffset a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:decimal ;
    sh:group qudt:UnitConversionGroup ;
    sh:maxCount 1 ;
    sh:order 20.0 ;
    sh:path qudt:conversionOffset .

qudt:Unit-qudt_denominatorDimensionVector a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:QuantityKindDimensionVector ;
    sh:maxCount 1 ;
    sh:path qudt:qkdvDenominator .

qudt:Unit-qudt_expression a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:group qudt:PropertiesGroup ;
    sh:minCount 0 ;
    sh:order 30.0 ;
    sh:path qudt:expression .

qudt:Unit-qudt_hasDimensionVector a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:QuantityKindDimensionVector ;
    sh:group qudt:PropertiesGroup ;
    sh:maxCount 1 ;
    sh:path qudt:hasDimensionVector .

qudt:Unit-qudt_hasQuantityKind a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:QuantityKind ;
    sh:group qudt:PropertiesGroup ;
    sh:name "quantity kind" ;
    sh:order 40.0 ;
    sh:path qudt:hasQuantityKind .

qudt:Unit-qudt_iec61360Code a sh:PropertyShape ;
    rdfs:label "IEC-61369 code" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:group qudt:UnitEquivalencePropertyGroup ;
    sh:order 40.0 ;
    sh:path qudt:iec61360Code .

qudt:Unit-qudt_latexDefinition a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype qudt:LatexString ;
    sh:group qudt:IdentifiersAndDescriptionsPropertyGroup ;
    sh:minCount 0 ;
    sh:order 40.0 ;
    sh:path qudt:latexDefinition .

qudt:Unit-qudt_latexSymbol a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype qudt:LatexString ;
    sh:group qudt:IdentifiersAndDescriptionsPropertyGroup ;
    sh:minCount 0 ;
    sh:order 60.0 ;
    sh:path qudt:latexSymbol .

qudt:Unit-qudt_mathMLdefinition a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:group qudt:PropertiesGroup ;
    sh:maxCount 1 ;
    sh:order 70.0 ;
    sh:path qudt:mathMLdefinition .

qudt:Unit-qudt_numeratorDimensionVector a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:QuantityKindDimensionVector ;
    sh:maxCount 1 ;
    sh:path qudt:qkdvNumerator .

qudt:Unit-qudt_omUnit a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:group qudt:UnitEquivalencePropertyGroup ;
    sh:order 10.0 ;
    sh:path qudt:omUnit .

qudt:Unit-qudt_siUnitsExpression a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:group qudt:PropertiesGroup ;
    sh:minCount 0 ;
    sh:order 35.0 ;
    sh:path qudt:siUnitsExpression .

qudt:Unit-qudt_symbol a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:group qudt:IdentifiersAndDescriptionsPropertyGroup ;
    sh:minCount 0 ;
    sh:order 40.0 ;
    sh:path qudt:symbol .

qudt:Unit-qudt_ucumCode a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype qudt:UCUMcs ;
    sh:group qudt:UnitEquivalencePropertyGroup ;
    sh:order 50.0 ;
    sh:path qudt:ucumCode ;
    sh:pattern "[\\x21-\\x7e]+" .

qudt:Unit-qudt_uneceCommonCode a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:string ;
    sh:group qudt:UnitEquivalencePropertyGroup ;
    sh:order 40.0 ;
    sh:path qudt:uneceCommonCode .

qudt:Unit-qudt_unitOfSystem a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:SystemOfUnits ;
    sh:group qudt:PropertiesGroup ;
    sh:order 60.0 ;
    sh:path qudt:unitOfSystem .

qudt:Unordered a qudt:OrderedType ;
    rdfs:label "Unordered" ;
    qudt:literal "unordered" ;
    qudt:plainTextDescription "Unordered structure." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:UserQuantityKind-qudt_hasQuantityKind a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:class qudt:QuantityKind ;
    sh:group qudt:PropertiesGroup ;
    sh:maxCount 1 ;
    sh:minCount 1 ;
    sh:name "quantity kind" ;
    sh:order 40.0 ;
    sh:path qudt:hasQuantityKind .

qudt:Verifiable-qudt_dbpediaMatch a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:anyURI ;
    sh:group qudt:IdentifiersAndDescriptionsPropertyGroup ;
    sh:minCount 0 ;
    sh:order 90.0 ;
    sh:path qudt:dbpediaMatch .

qudt:Verifiable-qudt_informativeReference a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:anyURI ;
    sh:group qudt:IdentifiersAndDescriptionsPropertyGroup ;
    sh:minCount 0 ;
    sh:order 84.0 ;
    sh:path qudt:informativeReference .

qudt:Verifiable-qudt_isoNormativeReference a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:anyURI ;
    sh:group qudt:IdentifiersAndDescriptionsPropertyGroup ;
    sh:minCount 0 ;
    sh:order 82.0 ;
    sh:path qudt:isoNormativeReference .

qudt:Verifiable-qudt_normativeReference a sh:PropertyShape ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    sh:datatype xsd:anyURI ;
    sh:group qudt:IdentifiersAndDescriptionsPropertyGroup ;
    sh:minCount 0 ;
    sh:order 80.0 ;
    sh:path qudt:normativeReference .

qudt:allowedPattern a rdf:Property ;
    rdfs:label "allowed pattern" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:ansiSQLName a rdf:Property ;
    rdfs:label "ANSI SQL Name" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:applicableCGSUnit a owl:ObjectProperty ;
    rdfs:label "applicable CGS unit" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:applicableUnit .

qudt:applicableISOUnit a owl:ObjectProperty ;
    rdfs:label "applicable ISO unit" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:applicableUnit .

qudt:applicableImperialUnit a owl:ObjectProperty ;
    rdfs:label "applicable Imperial unit" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:applicableUnit .

qudt:applicablePhysicalConstant a owl:ObjectProperty ;
    rdfs:label "applicable physical constant" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:applicableSIUnit a owl:ObjectProperty ;
    rdfs:label "applicable SI unit" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:applicableUnit .

qudt:applicableUSCustomaryUnit a owl:ObjectProperty ;
    rdfs:label "applicable US Customary unit" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:applicableUnit .

qudt:baseCGSUnitDimensions a owl:DatatypeProperty ;
    rdfs:label "base CGS unit dimensions" ;
    dcterms:description "<em>qudt:baseCGSUnitDimensions</em> is a string datatype property expressing the dimensions of a unit, or quantity, as a vector over the base units in the CGS System."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:baseUnitDimensions .

qudt:baseDimensionEnumeration a owl:FunctionalProperty,
        owl:ObjectProperty ;
    rdfs:label "base dimension enumeration" ;
    dcterms:description "This property associates a system of quantities with an enumeration that enumerates the base dimensions of the system in canonical order."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:baseISOUnitDimensions a owl:DatatypeProperty ;
    rdfs:label "base ISO unit dimensions" ;
    dcterms:description "<strong>qudt:baseISOUnitDimensions</strong> is a string datatype property expressing the dimensions of a unit, or quantity, as a vector over the base units in the ISO System."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:baseUnitDimensions .

qudt:baseImperialUnitDimensions a owl:DatatypeProperty ;
    rdfs:label "base Imperial unit dimensions" ;
    dcterms:description "<strong>qudt:baseImperialUnitDimensions</strong> is a string datatype property expressing the dimensions of a unit, or quantity, as a vector over the base units in the Imperial System."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:baseUnitDimensions .

qudt:baseSIUnitDimensions a owl:DatatypeProperty ;
    rdfs:label "base SI unit dimensions" ;
    dcterms:description "<strong>qudt:baseSIUnitDimensions</strong> is a string datatype property expressing the dimensions of a unit, or quantity, as a vector over the base units. For example, in the SI system \\(capacitance\\) has the unit \\(Farad\\) and base unit dimensions of \\(C^2 \\cdot s^2 / (kg \\cdot m^2)\\)."^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:baseUnitDimensions .

qudt:baseUSCustomaryUnitDimensions a owl:DatatypeProperty ;
    rdfs:label "base US Customary unit dimensions" ;
    dcterms:description "\"qudt:baseUSCustomaryUnitDimensions\" is a string datatype property expressing the dimensions of a unit, or quantity, as a vector over the base units in the US Customary System."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:baseUnitDimensions .

qudt:baseUnitOfSystem a owl:ObjectProperty ;
    rdfs:label "is base unit of system" ;
    dcterms:description "This property relates a unit of measure to the system of units in which it is defined as a base unit for the system. The base units of a system are used to define the derived units of the system by expressing the derived units as products of the base units raised to a rational power."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:coherentUnitOfSystem ;
    owl:inverseOf qudt:hasBaseUnit .

qudt:basis a rdf:Property ;
    rdfs:label "basis" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:belongsToSystemOfQuantities a owl:ObjectProperty ;
    rdfs:label "belongs to system of quantities" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:bitOrder a owl:ObjectProperty ;
    rdfs:label "bit order" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:bounded a rdf:Property ;
    rdfs:label "bounded" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:byteOrder a owl:ObjectProperty ;
    rdfs:label "byte order" ;
    dcterms:description "Byte order is an enumeration of two values: 'Big Endian' and 'Little Endian' and is used to denote whether the most signiticant byte is either first or last, respectively." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:cName a rdf:Property ;
    rdfs:label "C Language name" ;
    rdfs:comment "Datatype name in the C programming language" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:cardinality a rdf:Property ;
    rdfs:label "cardinality" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:code a owl:DatatypeProperty ;
    rdfs:label "code" ;
    dcterms:description "A code is a string that uniquely identifies a QUDT concept.  The code is constructed from the designator. The use of this property has been deprecated."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    owl:deprecated true .

qudt:conversionMultiplier a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    rdfs:label "conversion multiplier" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:conversionOffset a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    rdfs:label "conversion offset" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:dataEncoding a owl:ObjectProperty ;
    rdfs:label "data encoding" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:dataType a owl:ObjectProperty ;
    rdfs:label "datatype" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:dbpediaMatch a owl:AnnotationProperty ;
    rdfs:label "dbpedia match" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:default a owl:ObjectProperty ;
    rdfs:label "default" ;
    dcterms:description "The default element in an enumeration"^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:definedUnitOfSystem a owl:ObjectProperty ;
    rdfs:label "defined unit of system" ;
    dcterms:description "This property relates a unit of measure with the unit system that defines the unit."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:unitOfSystem ;
    owl:inverseOf qudt:hasDefinedUnit .

qudt:derivedCoherentUnitOfSystem a owl:ObjectProperty ;
    rdfs:label "is coherent derived unit of system" ;
    dcterms:description "This property relates a unit of measure to the unit system in which the unit is derived from the system's base units with a proportionality constant of one."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:coherentUnitOfSystem,
        qudt:derivedUnitOfSystem ;
    owl:inverseOf qudt:hasDerivedCoherentUnit .

qudt:derivedNonCoherentUnitOfSystem a owl:ObjectProperty ;
    rdfs:label "is non-coherent derived unit of system" ;
    dcterms:description "This property relates a unit of measure to the unit system in which the unit is derived from the system's base units without proportionality constant of one."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:derivedUnitOfSystem ;
    owl:inverseOf qudt:hasDerivedNonCoherentUnit .

qudt:derivedQuantityKindOfSystem a owl:ObjectProperty ;
    rdfs:label "derived quantity kind of system" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:isQuantityKindOf ;
    owl:inverseOf qudt:systemDerivedQuantityKind .

qudt:dimensionExponentForAmountOfSubstance a owl:DatatypeProperty ;
    rdfs:label "dimension exponent for amount of substance" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:dimensionExponent .

qudt:dimensionExponentForElectricCurrent a owl:DatatypeProperty ;
    rdfs:label "dimension exponent for electric current" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:dimensionExponent .

qudt:dimensionExponentForLength a owl:DatatypeProperty ;
    rdfs:label "dimension exponent for length" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:dimensionExponent .

qudt:dimensionExponentForLuminousIntensity a owl:DatatypeProperty ;
    rdfs:label "dimension exponent for luminous intensity" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:dimensionExponent .

qudt:dimensionExponentForMass a owl:DatatypeProperty ;
    rdfs:label "dimension exponent for mass" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:dimensionExponent .

qudt:dimensionExponentForThermodynamicTemperature a owl:DatatypeProperty ;
    rdfs:label "dimension exponent for thermodynamic temperature" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:dimensionExponent .

qudt:dimensionExponentForTime a owl:DatatypeProperty ;
    rdfs:label "dimension exponent for time" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:dimensionExponent .

qudt:dimensionInverse a owl:FunctionalProperty,
        owl:InverseFunctionalProperty,
        owl:ObjectProperty,
        owl:SymmetricProperty ;
    rdfs:label "dimension inverse" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    owl:inverseOf qudt:dimensionInverse .

qudt:dimensionVectorForSI a owl:ObjectProperty ;
    rdfs:label "dimension vector for SI" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:dimensionlessExponent a owl:DatatypeProperty ;
    rdfs:label "dimensionless exponent" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:dimensionExponent .

qudt:element a owl:ObjectProperty ;
    rdfs:label "element" ;
    dcterms:description "An element of an enumeration"^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:elementType a rdf:Property ;
    rdfs:label "element type" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:encoding a owl:ObjectProperty ;
    rdfs:label "encoding" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:exactConstant a owl:DatatypeProperty ;
    rdfs:label "exact constant" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:example a owl:AnnotationProperty ;
    rdfs:label "example" ;
    rdfs:comment "The 'qudt:example' property is used to annotate an instance of a class with a reference to a concept that is an example. The type of this property is 'rdf:Property'. This allows both scalar and object ranges."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:figureCaption a owl:DatatypeProperty ;
    rdfs:label "figure caption" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:figureLabel a owl:DatatypeProperty ;
    rdfs:label "figure label" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:guidance a owl:AnnotationProperty ;
    rdfs:label "guidance" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:hasDerivedNonCoherentUnit a owl:ObjectProperty ;
    rdfs:label "has coherent derived unit" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:hasDerivedUnit ;
    owl:inverseOf qudt:derivedNonCoherentUnitOfSystem .

qudt:hasRule a owl:ObjectProperty ;
    rdfs:label "has rule" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:height a owl:DatatypeProperty ;
    rdfs:label "height" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:iec61360Code a owl:DatatypeProperty ;
    rdfs:label "iec-61360 code" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:image a owl:DatatypeProperty ;
    rdfs:label "image" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:imageLocation a owl:DatatypeProperty ;
    rdfs:label "image location" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:inferredApplicableUnit a spin:MagicProperty ;
    rdfs:label "applicable units for a QuantityKind instance" ;
    spin:body [ a sp:Select ;
            sp:distinct true ;
            sp:resultVariables ( [ sp:varName "unit" ] ) ;
            sp:where ( [ a sp:Union ;
                        sp:elements ( ( [ sp:object spin:_arg1 ;
                                        sp:predicate qudt:hasQuantityKind ;
                                        sp:subject [ sp:varName "unit" ] ] [ sp:object qudt:Unit ;
                                        sp:predicate rdf:type ;
                                        sp:subject [ sp:varName "unit" ] ] ) ( [ a sp:NotExists ;
                                        sp:elements ( [ sp:object spin:_arg1 ;
                                                    sp:predicate qudt:hasQuantityKind ;
                                                    sp:subject [ sp:varName "unit" ] ] [ sp:object qudt:Unit ;
                                                    sp:predicate rdf:type ;
                                                    sp:subject [ sp:varName "unit" ] ] ) ] [ sp:object [ sp:varName "parent1" ] ;
                                        sp:predicate skos:broader ;
                                        sp:subject spin:_arg1 ] [ sp:object [ sp:varName "unit" ] ;
                                        sp:predicate qudt:inferredApplicableUnit ;
                                        sp:subject [ sp:varName "parent1" ] ] ) ) ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType qudt:QuantityKind ;
            rdfs:comment "The QuantityKind instance" ] ;
    spin:returnType rdfs:Class ;
    rdfs:comment """A magic property that returns all units that are "applicable" to a given QuantityKind, found by examining the incoming qudt:hasQuantityKind property for the provided QuantityKind. If there are none found, recurse up the skos:broader relation until such a QuantityKind is found.

Example use:
quantitykind:Power qudt:inferredApplicableUnit ?unit . """ ;
    rdfs:subClassOf spin:MagicProperties .

qudt:informativeReference a owl:AnnotationProperty ;
    rdfs:label "informative reference" ;
    dcterms:description "Provides a way to reference a source that provided useful but non-normative information."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:isBaseQuantityKindOfSystem a owl:ObjectProperty ;
    rdfs:label "is base quantity kind of system" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:isQuantityKindOf ;
    owl:inverseOf qudt:hasBaseQuantityKind .

qudt:isDeltaQuantity a owl:DatatypeProperty ;
    rdfs:label "is Delta Quantity" ;
    rdfs:comment "This property is used to identify a Quantity instance that is a measure of a change, or interval, of some property, rather than a measure of its absolute value. This is important for measurements such as temperature differences where the conversion among units would be calculated differently because of offsets." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:isoNormativeReference a owl:AnnotationProperty ;
    rdfs:label "normative reference (ISO)" ;
    dcterms:description "Provides a way to reference the ISO unit definition."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:normativeReference .

qudt:javaName a owl:DatatypeProperty ;
    rdfs:label "java name" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:jsName a owl:DatatypeProperty ;
    rdfs:label "Javascript name" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:landscape a owl:DatatypeProperty ;
    rdfs:label "landscape" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:length a rdf:Property ;
    rdfs:label "length" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:literal a owl:DatatypeProperty ;
    rdfs:label "literal" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf dtype:literal .

qudt:mathDefinition a owl:AnnotationProperty ;
    rdfs:label "math definition" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:matlabName a owl:DatatypeProperty ;
    rdfs:label "matlab name" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:maxExclusive a owl:DatatypeProperty ;
    rdfs:label "max exclusive" ;
    dcterms:description "maxExclusive is the exclusive upper bound of the value space for a datatype with the ordered property. The value of maxExclusive must be in the value space of the base type or be equal to {value} in {base type definition}." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:upperBound .

qudt:maxInclusive a owl:DatatypeProperty ;
    rdfs:label "max inclusive" ;
    dcterms:description "maxInclusive is the inclusive upper bound of the value space for a datatype with the ordered property. The value of maxInclusive must be in the value space of the base type." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:upperBound .

qudt:microsoftSQLServerName a owl:DatatypeProperty ;
    rdfs:label "Microsoft SQL Server name" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:minExclusive a rdf:Property,
        owl:DatatypeProperty ;
    rdfs:label "min exclusive" ;
    dcterms:description "minExclusive is the exclusive lower bound of the value space for a datatype with the ordered property. The value of minExclusive must be in the value space of the base type or be equal to {value} in {base type definition}." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:lowerBound .

qudt:minInclusive a owl:DatatypeProperty ;
    rdfs:label "min inclusive" ;
    dcterms:description "minInclusive is the inclusive lower bound of the value space for a datatype with the ordered property. The value of minInclusive must be in the value space of the base type." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:lowerBound .

qudt:mySQLName a owl:DatatypeProperty ;
    rdfs:label "MySQL name" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:odbcName a owl:DatatypeProperty ;
    rdfs:label "ODBC name" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:oleDBName a owl:DatatypeProperty ;
    rdfs:label "OLE DB name" ;
    dcterms:description "OLE DB (Object Linking and Embedding, Database, sometimes written as OLEDB or OLE-DB), an API designed by Microsoft, allows accessing data from a variety of sources in a uniform manner. The API provides a set of interfaces implemented using the Component Object Model (COM); it is otherwise unrelated to OLE. " ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/OLE_DB"^^xsd:anyURI,
        "http://msdn.microsoft.com/en-us/library/windows/desktop/ms714931(v=vs.85).aspx"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:omUnit a owl:ObjectProperty ;
    rdfs:label "om unit" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:oracleSQLName a rdf:Property ;
    rdfs:label "ORACLE SQL name" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:order a owl:DatatypeProperty ;
    rdfs:label "order" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:orderedType a rdf:Property ;
    rdfs:label "ordered type" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:plainTextDescription a owl:AnnotationProperty ;
    rdfs:label "description (plain text)" ;
    dcterms:description "A plain text description is used to provide a description with only simple ASCII characters for cases where LaTeX , HTML or other markup would not be appropriate."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:prefixMultiplier a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    rdfs:label "prefix multiplier" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:protocolBuffersName a rdf:Property ;
    rdfs:label "protocol buffers name" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:pythonName a rdf:Property ;
    rdfs:label "python name" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:rdfsDatatype a rdf:Property ;
    rdfs:label "rdfs datatype" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:relativeStandardUncertainty a owl:DatatypeProperty ;
    rdfs:label "relative standard uncertainty" ;
    dcterms:description "The relative standard uncertainty of a measurement is the (absolute) standard uncertainty divided by the magnitude of the exact value."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:ruleType a owl:ObjectProperty ;
    rdfs:label "rule type" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:scaleType a owl:ObjectProperty ;
    rdfs:label "scale type" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:siUnitsExpression a owl:DatatypeProperty ;
    rdfs:label "si units expression" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:specialization a owl:ObjectProperty ;
    rdfs:label "specialization" ;
    dcterms:description "This property relates a quantity kind to its specialization(s). For example, linear velocity and angular velocity are both specializations of velocity."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    owl:inverseOf qudt:generalization .

qudt:standardUncertainty a owl:DatatypeProperty ;
    rdfs:label "standard uncertainty" ;
    dcterms:description "The standard uncertainty of a quantity is the estimated standard deviation of the mean taken from a series of measurements."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:systemDerivedQuantityKind a owl:ObjectProperty ;
    rdfs:label "system derived quantity kind" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:hasQuantityKind ;
    owl:inverseOf qudt:derivedQuantityKindOfSystem .

qudt:uneceCommonCode a owl:DatatypeProperty ;
    rdfs:label "unece common code" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:unitFor a owl:ObjectProperty ;
    rdfs:label "unit for" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    owl:inverseOf qudt:unit .

qudt:vbName a rdf:Property ;
    rdfs:label "Vusal Basic name" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:vectorMagnitude a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    rdfs:label "vector magnitude" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:width a owl:DatatypeProperty ;
    rdfs:label "width" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qkdv:A-1E0L-3I0M0H0T0D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A-1E0L-3I0M0H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance -1 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -3 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A-1E1L-3I0M0H0T0D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A-1E1L-3I0M0H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance -1 ;
    qudt:dimensionExponentForElectricCurrent 1 ;
    qudt:dimensionExponentForLength -3 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E-1L1I0M0H0T0D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E-1L1I0M0H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent -1 ;
    qudt:dimensionExponentForLength 1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:LengthPerUnitElectricCurrent ;
    qudt:latexDefinition "\\(L I^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E-1L2I0M1H-1T-3D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E-1L2I0M1H-1T-3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent -1 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature -1 ;
    qudt:dimensionExponentForTime -3 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E-1L3I0M0H0T-1D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E-1L3I0M0H0T-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent -1 ;
    qudt:dimensionExponentForLength 3 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E-2L4I0M2H-2T-6D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E-2L4I0M2H-2T-6D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent -2 ;
    qudt:dimensionExponentForLength 4 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 2 ;
    qudt:dimensionExponentForThermodynamicTemperature -2 ;
    qudt:dimensionExponentForTime -6 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-1I0M0H0T1D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-1I0M0H0T1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:latexDefinition "\\(L^-1 T\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-1I0M1H1T-3D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-1I0M1H1T-3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 1 ;
    qudt:dimensionExponentForTime -3 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-2I0M0H0T-2D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-2I0M0H0T-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-2I0M1H0T-3D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-2I0M1H0T-3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -3 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:RadiantIntensity ;
    qudt:latexDefinition "\\(L^-2 M T^-3\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-2I0M1H1T0D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-2I0M1H1T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 1 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-2I0M2H0T-3D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-2I0M2H0T-3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 2 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -3 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-2I0M2H0T-6D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-2I0M2H0T-6D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 2 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -6 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-3I0M0H0T1D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-3I0M0H0T1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -3 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 1 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-3I0M1H0T-3D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-3I0M1H0T-3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -3 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -3 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-4I0M1H0T-1D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-4I0M1H0T-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -4 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L0I0M0H0T-1D1 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M0H0T-1D1" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 1 ;
    qudt:hasReferenceQuantityKind quantitykind:AngularVelocity ;
    qudt:latexDefinition "\\(U T^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L0I0M0H2T-1D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M0H2T-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 2 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L0I0M0H2T0D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M0H2T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 2 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L0I0M1H0T-4D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M1H0T-4D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -4 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L0I0M2H0T-2D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M2H0T-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 2 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L1I0M-1H0T1D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L1I0M-1H0T1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 1 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L1I0M0H0T-3D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L1I0M0H0T-3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -3 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L1I0M0H0T1D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L1I0M0H0T1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 1 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L1I0M0H0T2D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L1I0M0H0T2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 2 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L1I0M0H1T-1D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L1I0M0H1T-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 1 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L1I0M0H1T1D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L1I0M0H1T1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 1 ;
    qudt:dimensionExponentForTime 1 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L2I0M-1H1T-1D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L2I0M-1H1T-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 1 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L2I0M0H0T-4D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L2I0M0H0T-4D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -4 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L2I0M0H0T2D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L2I0M0H0T2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 2 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L3I0M0H1T0D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L3I0M0H1T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance "0"^^dtype:numericUnion ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength "3"^^dtype:numericUnion ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature "1"^^dtype:numericUnion ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L4I0M0H0T-1D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L4I0M0H0T-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 4 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L4I0M0H0T-2D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L4I0M0H0T-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 4 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L4I0M1H0T-2D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L4I0M1H0T-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 4 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L4I0M2H0T-4D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L4I0M2H0T-4D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 4 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 2 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -4 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:SquareEnergy ;
    qudt:latexDefinition "\\(L^4 M^2 T^-4\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E1L-2I0M0H-2T0D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E1L-2I0M0H-2T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 1 ;
    qudt:dimensionExponentForLength -2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature -2 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E1L0I0M-1H0T4D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E1L0I0M-1H0T4D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 1 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 4 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A1E0L-3I0M-1H0T2D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A1E0L-3I0M-1H0T2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 1 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -3 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 2 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

quantitykind:AbsoluteActivity a qudt:QuantityKind ;
    rdfs:label "Absolute Activity"@en ;
    dcterms:description "The \"Absolute Activity\" is the exponential of the ratio of the chemical potential to \\(RT\\) where \\(R\\) is the gas constant and \\(T\\) the thermodynamic temperature."^^qudt:LatexString ;
    qudt:applicableUnit unit:BQ-SEC-PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:informativeReference "http://goldbook.iupac.org/A00019.html"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\lambda_B = e^{\\frac{\\mu_B}{RT}}\\), where \\(\\mu_B\\) is the chemical potential of substance \\(B\\), \\(R\\) is the molar gas constant, and \\(T\\) is thermodynamic temperature."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\lambda_B\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:InverseVolume .

quantitykind:Absorptance a qudt:QuantityKind ;
    rdfs:label "Absorptance"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Absorptance"^^xsd:anyURI,
        "https://www.researchgate.net/post/Absorptance_or_absorbance"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\alpha = \\frac{\\Phi_a}{\\Phi_m}\\), where \\(\\Phi_a\\) is the absorbed radiant flux or the absorbed luminous flux, and \\(\\Phi_m\\) is the radiant flux or luminous flux of the incident radiation."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\alpha\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Absorptance is the ratio of the radiation absorbed by a surface to that incident upon it. Also known as absorbance." ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Absorbance> .

quantitykind:AcceptorIonizationEnergy a qudt:QuantityKind ;
    rdfs:label "Acceptor Ionization Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:description "\"Acceptor Ionization Energy\" is the ionization energy of an acceptor."^^rdf:HTML ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Ionization_energy"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Acceptor Ionization Energy\" is the ionization energy of an acceptor." ;
    qudt:symbol "E_a" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:IonizationEnergy ;
    skos:closeMatch quantitykind:DonorIonizationEnergy .

quantitykind:ActivityCoefficient a qudt:QuantityKind ;
    rdfs:label "Activity Coefficient"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Activity_coefficient"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(f_B = \\frac{\\lambda_B}{(\\lambda_B^*x_B)}\\), where \\(\\lambda_B\\) the absolute activity of substance \\(B\\), \\(\\lambda_B^*\\) is the absolute activity of the pure substance \\(B\\) at the same temperature and pressure, and \\(x_B\\) is the amount-of-substance fraction of substance \\(B\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "An \"Activity Coefficient\" is a factor used in thermodynamics to account for deviations from ideal behaviour in a mixture of chemical substances. In an ideal mixture, the interactions between each pair of chemical species are the same (or more formally, the enthalpy change of solution is zero) and, as a result, properties of the mixtures can be expressed directly in terms of simple concentrations or partial pressures of the substances present e.g. Raoult's law. Deviations from ideality are accommodated by modifying the concentration by an activity coefficient. " ;
    qudt:symbol "f_B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:AmountOfSubstanceConcentrationOfB a qudt:QuantityKind ;
    rdfs:label "Amount of Substance of Concentration of B"@en ;
    qudt:applicableUnit unit:MOL-PER-M3 ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Amount_of_substance_concentration"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(C_B = \\frac{n_B}{V}\\), where \\(n_B\\) is the amount of substance \\(B\\) and \\(V\\) is the volume."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Amount of Substance of Concentration of B\" is defined as the amount of a constituent divided by the volume of the mixture." ;
    qudt:symbol "C_B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:AmountOfSubstanceFractionOfB a qudt:QuantityKind ;
    rdfs:label "Amount of Substance of Fraction of B"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Amount_fraction"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(x_B = \\frac{n_B}{n}\\), where \\(n_B\\) is the amount of substance \\(B\\) and \\(n\\) is the total amount of substance."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Amount of Substance of Fraction of B\" is defined as tthe amount of a constituent divided by the total amount of all constituents in a mixture." ;
    qudt:symbol "X_B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:AngularMomentumPerAngle a qudt:QuantityKind ;
    rdfs:label "Angular Momentum per Angle"@en ;
    qudt:applicableUnit unit:N-M-SEC-PER-RAD ;
    qudt:baseUnitDimensions "\\(L^2 \\cdot M/T\\)"^^qudt:LatexString,
        "\\(kg \\cdot m^2/s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:AreaAngle a qudt:QuantityKind ;
    rdfs:label "Area Angle"@en ;
    qudt:applicableUnit unit:M2-SR ;
    qudt:baseUnitDimensions "\\(L^2 \\cdot U\\)"^^qudt:LatexString,
        "\\(m^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Asset a qudt:QuantityKind ;
    rdfs:label "Asset"@en ;
    qudt:plainTextDescription "An Asset is an economic resource owned by a business or company. Simply stated, assets are things of value that can be readily converted into cash (although cash itself is also considered an asset)." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:AtmosphericPressure a qudt:QuantityKind ;
    rdfs:label "Atmospheric Pressure"@en ;
    dcterms:description "The pressure exerted by the weight of the air above it at any point on the earth's surface. At sea level the atmosphere will support a column of mercury about \\(760 mm\\) high. This decreases with increasing altitude. The standard value for the atmospheric pressure at sea level in SI units is \\(101,325 pascals\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CM_H2O,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Atmospheric_pressure"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.oxfordreference.com/views/ENTRY.html?subview=Main&entry=t83.e178"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Pressure .

quantitykind:AtomScatteringFactor a qudt:QuantityKind ;
    rdfs:label "Atom Scattering Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://reference.iucr.org/dictionary/Atomic_scattering_factor"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "\\(f = \\frac{E_a}{E_e}\\), where \\(E_a\\) is the radiation amplitude scattered by the atom and \\(E_e\\) is the radiation ampliture scattered by a single electron."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Atom Scattering Factor\" is measure of the scattering power of an isolated atom." ;
    qudt:symbol "f" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:AtomicNumber a qudt:QuantityKind ;
    rdfs:label "Atomic Number"@en ;
    qudt:applicableUnit unit:Z ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Atomic_number"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31895"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Atomic Number\", also known as the proton number, is the number of protons found in the nucleus of an atom and therefore identical to the charge number of the nucleus. A nuclide is a species of atom with specified numbers of protons and neutrons. Nuclides with the same value of Z but different values of N are called isotopes of an element. The ordinal number of an element in the periodic table is equal to the atomic number. The atomic number equals the charge of the nucleus in units of the elementary charge." ;
    qudt:symbol "Z" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Dimensionless .

quantitykind:AttenuationCoefficient a qudt:QuantityKind ;
    rdfs:label "Attenuation Coefficient"@en ;
    qudt:applicableUnit unit:PER-M ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Attenuation_coefficient"^^xsd:anyURI ;
    qudt:latexDefinition "\\(F(x) = Ae^{-\\alpha x} \\cos{[\\beta (x - x_0)]}\\), then \\(\\alpha\\) is the attenuation coefficient and \\(\\beta\\) is the phase coefficient."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\alpha\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The attenuation coefficient is a quantity that characterizes how easily a material or medium can be penetrated by a beam of light, sound, particles, or other energy or matter. A large attenuation coefficient means that the beam is quickly \"attenuated\" (weakened) as it passes through the medium, and a small attenuation coefficient means that the medium is relatively transparent to the beam. The Attenuation Coefficient is also called linear attenuation coefficient, narrow beam attenuation coefficient, or absorption coefficient." ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:AverageLogarithmicEnergyDecrement a qudt:QuantityKind ;
    rdfs:label "Average Logarithmic Energy Decrement"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://everything2.com/title/Average+logarithmic+energy+decrement+per+collision"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\xi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Average Logarithmic Energy Decrement\" is a measure of the amount of energy a neutron loses upon colliding with various nuclei. It is the average value of the increase in lethargy in elastic collisions between neutrons and nuclei whose kinetic energy is negligible compared with that of the neutrons." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:BindingFraction a qudt:QuantityKind ;
    rdfs:label "Binding Fraction"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://encyclopedia2.thefreedictionary.com/binding+fraction"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(b = \\frac{B_r}{A}\\), where \\(B_r\\) is the relative mass defect and \\(A\\) is the nucleon number."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Binding Fraction\" is the ratio of the binding energy of a nucleus to the atomic mass number." ;
    qudt:symbol "b" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:BulkModulus a qudt:QuantityKind ;
    rdfs:label "Bulk Modulus"@en ;
    qudt:applicableUnit unit:PA ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Bulk_modulus"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(K = \\frac{p}{\\vartheta}\\), where \\(p\\) is pressure and \\(\\vartheta\\) is volume strain."^^qudt:LatexString ;
    qudt:plainTextDescription "The bulk modulus of a substance measures the substance's resistance to uniform compression. It is defined as the ratio of the infinitesimal pressure increase to the resulting relative decrease of the volume." ;
    qudt:symbol "K" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:BurnRate a qudt:QuantityKind ;
    rdfs:label "Burn Rate"@en ;
    qudt:applicableUnit unit:CentiM-PER-HR,
        unit:CentiM-PER-KiloYR,
        unit:CentiM-PER-SEC,
        unit:FT-PER-HR,
        unit:FT-PER-MIN,
        unit:FT-PER-SEC,
        unit:GigaHZ-M,
        unit:IN-PER-SEC,
        unit:KN,
        unit:KiloM-PER-DAY,
        unit:KiloM-PER-HR,
        unit:KiloM-PER-SEC,
        unit:M-PER-HR,
        unit:M-PER-MIN,
        unit:M-PER-SEC,
        unit:M-PER-YR,
        unit:MI-PER-HR,
        unit:MI-PER-MIN,
        unit:MI_N-PER-HR,
        unit:MI_N-PER-MIN,
        unit:MilliM-PER-DAY,
        unit:MilliM-PER-HR,
        unit:MilliM-PER-MIN,
        unit:MilliM-PER-SEC,
        unit:MilliM-PER-YR ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Velocity .

quantitykind:Capacity a qudt:QuantityKind ;
    rdfs:label "Capacity"@en ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Capacity"^^xsd:anyURI ;
    qudt:plainTextDescription "In computer operations, (a) the largest quantity which can be stored, processed, or transferred; (b) the largest number of digits or characters which may regularly be processed; (c) the upper and lower limits of the quantities which may be processed. In other contexts, the amount of material that  can be stored, such as fuel or food." ;
    qudt:symbol "TBD" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:CharacteristicAcousticImpedance a qudt:QuantityKind ;
    rdfs:label "Characteristic Acoustic Impedance"@en ;
    dcterms:description "Characteristic impedance at a point in a non-dissipative medium and for a plane progressive wave, the quotient of the sound pressure \\(p\\) by the component of the sound particle velocity \\(v\\) in the direction of the wave propagation."^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloGM-PER-M2-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Acoustic_impedance#Characteristic_acoustic_impedance"^^xsd:anyURI ;
    qudt:latexDefinition "\\(Z_c = pc\\), where \\(p\\) is the sound pressure and \\(c\\) is the phase speed of sound."^^qudt:LatexString ;
    qudt:symbol "Z" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:AcousticImpedance .

quantitykind:ChargeNumber a qudt:QuantityKind ;
    rdfs:label "Charge Number"@en ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Charge_number"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Charge Number\", or just valance of an ion is the coefficient that, when multiplied by the elementary charge, gives the ion's charge." ;
    qudt:symbol "z" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Dimensionless .

quantitykind:ChemicalAffinity a qudt:QuantityKind ;
    rdfs:label "Chemical Affinity"@en ;
    qudt:applicableUnit unit:J-PER-MOL ;
    qudt:hasDimensionVector qkdv:A-1E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Chemical_affinity"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(A = -\\sum \\nu_b\\mu_B\\), where \\(\\nu_b\\) is the stoichiometric number of substance \\(B\\) and \\(\\mu_B\\) is the chemical potential of substance \\(B\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "In chemical physics and physical chemistry, \"Chemical Affinity\" is the electronic property by which dissimilar chemical species are capable of forming chemical compounds. Chemical affinity can also refer to the tendency of an atom or compound to combine by chemical reaction with atoms or compounds of unlike composition." ;
    qudt:symbol "A" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ChemicalPotential a qudt:QuantityKind ;
    rdfs:label "Chemical Potential"@en ;
    qudt:applicableUnit unit:J-PER-MOL,
        unit:KiloCAL-PER-MOL,
        unit:KiloJ-PER-MOL ;
    qudt:hasDimensionVector qkdv:A-1E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Chemical_potential"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mu_B = (\\frac{\\partial G}{\\partial n_B})_{T,p,n_i}\\), where \\(G\\) is Gibbs energy, and \\(n_B\\) is the amount of substance \\(B\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\mu_B\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Chemical Potential\", also known as partial molar free energy, is a form of potential energy that can be absorbed or released during a chemical reaction." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:MolarEnergy .

quantitykind:Coercivity a qudt:QuantityKind ;
    rdfs:label "Coercivity"@en ;
    dcterms:description "\\(\\textit{Coercivity}\\), also referred to as \\(\\textit{Coercive Field Strength}\\), is the magnetic field strength to be applied to bring the magnetic flux density in a substance from its remaining magnetic flux density to zero. This is defined as the coercive field strength in a substance when either the magnetic flux density or the magnetic polarization and magnetization is brought from its value at magnetic saturation to zero by monotonic reduction of the applied magnetic field strength. The quantity which is brought to zero should be stated, and the appropriate symbol used: \\(H_{cB}\\), \\(H_{cJ}\\) or \\(H_{cM}\\) for the coercivity relating to the magnetic flux density, the magnetic polarization or the magnetization respectively, where \\(H_{cJ} = H_{cM}\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:A-PER-M ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-12-69"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:symbol "H_{c,B}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:MagneticFieldStrength_H .

quantitykind:CombinedNonEvaporativeHeatTransferCoefficient a qudt:QuantityKind ;
    rdfs:label "Combined Non Evaporative Heat Transfer Coefficient"@en ;
    qudt:applicableUnit unit:W-PER-M2-K ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H-1T-3D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexDefinition "\\(h = h_r + h_c + h_k\\), where \\(h_r\\) is the linear radiative heat transfer coefficient, \\(h_c\\) is the convective heat transfer coefficient, and \\(h_k\\) is the conductive heat transfer coefficient."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Combined Non Evaporative Heat Transfer Coefficient\" is the " ;
    qudt:symbol "h" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:CouplingFactor a qudt:QuantityKind ;
    rdfs:label "Coupling Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=161-03-18"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "For inductive coupling between two inductive elements, \\(k = \\frac{\\left | L_{mn} \\right |}{\\sqrt{L_m L_n}}\\), where \\(L_m\\) and \\(L_n\\) are their self inductances, and \\(L_{mn}\\) is their mutual inductance."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Coupling Factor\" is the ratio of an electromagnetic quantity, usually voltage or current, appearing at a specified location of a given circuit to the corresponding quantity at a specified location in the circuit from which energy is transferred by coupling." ;
    qudt:symbol "k" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:CubicExpansionCoefficient a qudt:QuantityKind ;
    rdfs:label "Cubic Expansion Coefficient"@en ;
    qudt:applicableUnit unit:PER-K ;
    qudt:expression "\\(cubic-exp-coef\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H-1T0D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\alpha_V = \\frac{1}{V} \\; \\frac{dV}{dT}\\), where \\(V\\) is \\(volume\\) and \\(T\\) is thermodynamic temperature."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\alpha_v\\)"^^qudt:LatexString ;
    qudt:qkdvDenominator qkdv:A0E0L3I0M0H1T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L3I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:CurrentLinkage a qudt:QuantityKind ;
    rdfs:label "Current Linkage"@en ;
    qudt:applicableUnit unit:A ;
    qudt:expression "\\(current-linkage\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-60"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\Theta\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Current Linkage\" is the net electric current through a surface delimited by a closed loop." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:CurvatureFromRadius a qudt:QuantityKind ;
    rdfs:label "Curvature"@en ;
    qudt:applicableUnit unit:PER-M ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Curvature"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\kappa = \\frac{1}{\\rho}\\), where \\(\\rho\\) is the radius of the curvature."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\kappa\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "In mathematics \"Curvature\" is the amount by which a geometric object deviates from being flat, or straight in the case of a line, but this is defined in different ways depending on the context." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:closeMatch quantitykind:Curvature .

quantitykind:Debye-WallerFactor a qudt:QuantityKind ;
    rdfs:label "Debye-Waller Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Debye–Waller_factor"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "\\(u = R - R_0\\), where \\(R\\) is the particle position vector and \\(R_0\\) is the equilibrium position vector of a particle."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Debye-Waller Factor\" (DWF), named after Peter Debye and Ivar Waller, is used in condensed matter physics to describe the attenuation of x-ray scattering or coherent neutron scattering caused by thermal motion. Also, a factor by which the intensity of a diffraction line is reduced because of the lattice vibrations." ;
    qudt:symbol "D, B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:DebyeAngularWavenumber a qudt:QuantityKind ;
    rdfs:label "Debye Angular Wavenumber"@en ;
    qudt:applicableUnit unit:RAD-PER-M ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Debye Angular Wavenumber\" is the cut-off angular wavenumber in the Debye model of the vibrational spectrum of a solid." ;
    qudt:symbol "q_D" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:InverseLength .

quantitykind:DecayConstant a qudt:QuantityKind ;
    rdfs:label "Decay Constant"@en ;
    qudt:applicableUnit unit:KiloCi ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Exponential_decay"^^xsd:anyURI,
        "http://www.britannica.com/EBchecked/topic/154945/decay-constant"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "Relative variation \\(\\frac{dN}{N}\\) of the number \\(N\\) of atoms or nuclei in a system, due to spontaneous emission from these atoms or nuclei during an infinitesimal time interval, divided by its duration \\(dt\\), thus \\(\\lambda = -\\frac{1}{N}\\frac{dN}{dt}\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\lambda\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Decay Constant\" is the proportionality between the size of a population of radioactive atoms and the rate at which the population decreases because of radioactive decay." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:InverseTime .

quantitykind:DegreeOfDissociation a qudt:QuantityKind ;
    rdfs:label "Degree of Dissociation"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Faraday_constant"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Dissociation_(chemistry)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\alpha\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Degree of Dissociation\" is the fraction of original solute molecules that have dissociated." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:DensityOfStates a qudt:QuantityKind ;
    rdfs:label "Density of states"@en ;
    qudt:applicableUnit unit:SEC-PER-RAD-M3 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Density_of_states"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Density of States\" is the number of vibrational modes in an infinitesimal interval of angular frequency divided by the range of that interval and by volume." ;
    qudt:symbol "g" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:DewPointTemperature a qudt:QuantityKind ;
    rdfs:label "Dew Point Temperature"@en ;
    qudt:applicableUnit unit:DEG_C,
        unit:DEG_F,
        unit:DEG_R,
        unit:K,
        unit:MilliDEG_C,
        unit:PlanckTemperature ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Dew Point Temperature\" is the temperature at which vapour in air reaches saturation." ;
    qudt:symbol "T_d" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Temperature .

quantitykind:DiastolicBloodPressure a qudt:QuantityKind ;
    rdfs:label "Diastolic Blood Pressure"@en ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CM_H2O,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.oxfordreference.com/view/10.1093/acref/9780199549351.001.0001/acref-9780199549351-e-1162"^^xsd:anyURI ;
    qudt:plainTextDescription "The pressure of blood in the arteries which rises to a maximum as blood is pumped out by the left ventricle (systole) and drops to a minimum in diastole. The systolic/diastolic pressure is normally ~120/80 mmHg in a young adult." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:SystolicBloodPressure ;
    skos:broader quantitykind:Pressure .

quantitykind:DiffusionCoefficient a qudt:QuantityKind ;
    rdfs:label "Diffusion Coefficient"@en ;
    qudt:applicableUnit unit:M2-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mass_diffusivity"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(C_B \\left \\langle \\nu_B \\right \\rangle = -D grad C_B\\), where \\(C_B\\) the local molecular concentration of substance \\(B\\) in the mixture and \\(\\left \\langle \\nu_B \\right \\rangle\\) is the local average velocity of the molecules of \\(B\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Diffusion Coefficient\" is a proportionality constant between the molar flux due to molecular diffusion and the gradient in the concentration of the species (or the driving force for diffusion). Diffusivity is encountered in Fick's law and numerous other equations of physical chemistry." ;
    qudt:symbol "D" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Dissipance a qudt:QuantityKind ;
    rdfs:label "Dissipance"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Dissipation_factor"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\delta = \\frac{P_d}{P_i}\\), where \\(P_d\\) is the dissipated sound power, and \\(P_i\\) is the incident sound power."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\delta\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Dissipance, or dissipation factor for sound power, is the ratio of dissipated sound power to incident sound power. The dissipation factor (DF) is a measure of loss-rate of energy of a mode of oscillation (mechanical, electrical, or electromechanical) in a dissipative system. It is the reciprocal of quality factor, which represents the quality of oscillation." ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:DonorIonizationEnergy a qudt:QuantityKind ;
    rdfs:label "Donor Ionization Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Ionization_energy"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Donor Ionization Energy\" is the ionization energy of a donor." ;
    qudt:symbol "E_d" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:IonizationEnergy ;
    skos:closeMatch quantitykind:AcceptorIonizationEnergy .

quantitykind:DoseEquivalentQualityFactor a qudt:QuantityKind ;
    rdfs:label "Dose Equivalent Quality Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Equivalent_dose"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Dose Equivalent Quality Factor\" is a factor in the caculation and measurement of dose equivalent, by which the absorbed dose is to be weighted in order to account for different biological effectiveness of radiations, for radiation protection purposes." ;
    qudt:symbol "Q" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:EffectiveMultiplicationFactor a qudt:QuantityKind ;
    rdfs:label "Effective Multiplication Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Nuclear_chain_reaction#Effective_neutron_multiplication_factor"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Effective Multiplication Factor\" is the multiplication factor for a finite medium." ;
    qudt:symbol "k_{eff}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:MultiplicationFactor ;
    skos:closeMatch quantitykind:InfiniteMultiplicationFactor .

quantitykind:EinsteinTransitionProbability a qudt:QuantityKind ;
    rdfs:label "Einstein Transition Probability"@en ;
    dcterms:description "Given two atomic states of energy \\(E_j\\) and \\(E_k\\).  Let \\(E_j > E_k\\).  Assume the atom is bathed in radiation of energy density \\(u(w)\\).  Transitions between these states can take place in three different ways. Spontaneous, induced/stimulated emission, and induced absorption. \\(A_jk\\) represents the Einstein transition probability for spontaneous emission."^^qudt:LatexString ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:latexDefinition "\\(\\frac{-dN_j}{dt} = A_jkN_j\\), where \\(-dN_j\\) is the number of molecules spontaneously leaving the state j for the state k during a time interval of duration \\(dt\\), \\(N_j\\) is the number of molecules in the state j, and \\(E_j > E_k\\)."^^qudt:LatexString ;
    qudt:symbol "A_jkN_j" ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:exactMatch <http://electron6.phys.utk.edu/qm2/modules/m10/einstein.htm> .

quantitykind:ElectricChargeLinearDensity a qudt:QuantityKind ;
    rdfs:label "Electric Charge Linear Density"@en ;
    qudt:applicableUnit unit:C-PER-M ;
    qudt:expression "\\(linear-charge-density\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M0H0T1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Charge_density"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\rho_l = \\frac{dQ}{dl}\\), where \\(Q\\) is electric charge and \\(l\\) is length."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\rho_l\\)"^^qudt:LatexString,
        "\\(\\tau\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "In electromagnetism, charge density is a measure of electric charge per unit volume of space, in one, two or three dimensions. More specifically: the linear, surface, or volume charge density is the amount of electric charge per unit length, surface area, or volume, respectively." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricChargeDensity .

quantitykind:ElectricCurrentPerAngle a qudt:QuantityKind ;
    rdfs:label "Electric Current per Angle"@en ;
    qudt:applicableUnit unit:A-PER-RAD ;
    qudt:baseUnitDimensions "\\(A\\)"^^qudt:LatexString,
        "\\(I/U\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectricDisplacement a qudt:QuantityKind ;
    rdfs:label "Electric Displacement"@en ;
    dcterms:description "In a dielectric material the presence of an electric field E causes the bound charges in the material (atomic nuclei and their electrons) to slightly separate, inducing a local electric dipole moment. The Electric Displacement Field, \\(D\\), is a vector field that accounts for the effects of free charges within such dielectric materials. This describes also the charge density on an extended surface that could be causing the field."^^qudt:LatexString ;
    qudt:applicableUnit unit:C-PER-CentiM2,
        unit:C-PER-M2,
        unit:C-PER-MilliM2,
        unit:C_Ab-PER-CentiM2,
        unit:C_Stat-PER-CentiM2,
        unit:KiloC-PER-M2,
        unit:MegaC-PER-M2,
        unit:MicroC-PER-M2,
        unit:MilliC-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T1D0 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI,
        "http://www.oxfordreference.com/view/10.1093/acref/9780199233991.001.0001/acref-9780199233991-e-895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(D = \\epsilon_0 E + P\\), where \\(\\epsilon_0\\) is the electric constant, \\(E\\) is electric field strength, and \\(P\\) is electric polarization."^^qudt:LatexString ;
    qudt:symbol "D" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:ElectricFluxDensity ;
    skos:broader quantitykind:ElectricChargePerArea .

quantitykind:ElectricPolarizability a qudt:QuantityKind ;
    rdfs:label "Electric Polarizability"@en ;
    qudt:applicableUnit unit:J-PER-MOL ;
    qudt:hasDimensionVector qkdv:A-1E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Polarizability"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\alpha_{i,j} = \\frac{\\partial p_i}{\\partial E_j}\\), where \\(p_i\\) is the cartesian component along the \\(i-axis\\) of the electric dipole moment induced by the applied electric field strength acting on the molecule, and \\(E_j\\) is the component along the \\(j-axis\\) of this electric field strength."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\alpha\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Electric Polarizability\" is the relative tendency of a charge distribution, like the electron cloud of an atom or molecule, to be distorted from its normal shape by an external electric field, which is applied typically by inserting the molecule in a charged parallel-plate capacitor, but may also be caused by the presence of a nearby ion or dipole." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectricPotential a qudt:QuantityKind ;
    rdfs:label "Electric Potential"@en ;
    dcterms:description "The Electric Potential is a scalar valued quantity associated with an electric field. The electric potential \\(\\phi(x)\\) at a point, \\(x\\), is formally defined as the line integral of the electric field taken along a path from x to the point at infinity. If the electric field is static, that is time independent, then the choice of the path is arbitrary; however if the electric field is time dependent, taking the integral a different paths will produce different results."^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloV,
        unit:MegaV,
        unit:MicroV,
        unit:MilliV,
        unit:PlanckVolt,
        unit:V,
        unit:V_Ab,
        unit:V_Stat ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexDefinition "\\(-\\textbf{grad} \\; V = E + \\frac{\\partial A}{\\partial t}\\), where \\(E\\) is electric field strength, \\(A\\) is magentic vector potential and \\(t\\) is time."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\phi\\)"^^qudt:LatexString ;
    qudt:symbol "V" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:EnergyPerElectricCharge ;
    skos:broader quantitykind:EnergyPerElectricCharge .

quantitykind:ElectricPotentialDifference a qudt:QuantityKind ;
    rdfs:label "Electric Potential Difference"@en ;
    qudt:applicableUnit unit:KiloV,
        unit:MegaV,
        unit:MicroV,
        unit:MilliV,
        unit:PlanckVolt,
        unit:V,
        unit:V_Ab,
        unit:V_Stat ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(V_{ab} = \\int_{r_a(C)}^{r_b} (E +\\frac{\\partial A}{\\partial t}) \\), where \\(E\\) is electric field strength, \\(A\\) is magentic vector potential,  \\(t\\) is time, and \\(r\\) is position vector along a curve C from a point \\(a\\) to \\(b\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Electric Potential Difference\" is a scalar valued quantity associated with an electric field." ;
    qudt:symbol "V_{ab}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:EnergyPerElectricCharge ;
    skos:broader quantitykind:EnergyPerElectricCharge .

quantitykind:ElectricSusceptibility a qudt:QuantityKind ;
    rdfs:label "Electric Susceptibility"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Permittivity"^^xsd:anyURI ;
    qudt:expression "\\(e-susceptibility\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\chi = \\frac{P}{(\\epsilon_0 E)}\\), where \\(P\\) is electric polorization, \\(\\epsilon_0\\) is the electric constant, and \\(E\\) is electric field strength."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\chi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Electric Susceptibility\" is the ratio of electric polarization to electric field strength, normalized to the electric constant. The definition applies to an isotropic medium. For an anisotropic medium, electric susceptibility is a second order tensor." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricFieldStrength,
        quantitykind:ElectricPolarization .

quantitykind:ElectrolyticConductivity a qudt:QuantityKind ;
    rdfs:label "Electrolytic Conductivity"@en ;
    qudt:applicableUnit unit:S-PER-M ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Conductivity_(electrolytic)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(x = \\frac{J}{E}\\), where \\(J\\) is the electrolytic current density and \\(E\\) is the electric field strength."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Electrolytic Conductivity\" of an electrolyte solution is a measure of its ability to conduct electricity." ;
    qudt:symbol "x" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectromagneticPermeabilityRatio a qudt:QuantityKind ;
    rdfs:label "Electromagnetic Permeability Ratio"@en ;
    qudt:applicableUnit unit:PERMEABILITY_EM_REL ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:plainTextDescription "The ratio of the electromagnetic permeability of a specific medium to the electromagnetic permeability of free space." ;
    qudt:qkdvDenominator qkdv:A0E-2L1I0M1H0T-2D0 ;
    qudt:qkdvNumerator qkdv:A0E-2L1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectromagneticWavePhaseSpeed a qudt:QuantityKind ;
    rdfs:label "Electromagnetic Wave Phase Speed"@en ;
    qudt:applicableUnit unit:M-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-66"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(c  = w/k\\) where \\(w\\) is angular velocity and \\(k\\) is angular wavenumber."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Electromagnetic Wave Phase Speed\" is the ratio of angular velocity and wavenumber." ;
    qudt:symbol "c" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElementaryCharge a qudt:QuantityKind ;
    rdfs:label "Elementary Charge"@en ;
    qudt:applicableUnit unit:C ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Elementary_charge"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Elementary Charge\" is the electric charge carried by a single proton, or equivalently, the negation (opposite) of the electric charge carried by a single electron." ;
    qudt:symbol "e" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:exactMatch quantitykind:AtomicUnitOfCharge .

quantitykind:Emissivity a qudt:QuantityKind ;
    rdfs:label "Emissivity"@en ;
    dcterms:description "Emissivity of a material (usually written \\(\\varepsilon\\) or e) is the relative ability of its surface to emit energy by radiation."^^qudt:LatexString ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:latexDefinition "\\(\\varepsilon = \\frac{M}{M_b}\\), where \\(M\\) is the radiant exitance of a thermal radiator and \\(M_b\\) is the radiant exitance of a blackbody at the same temperature."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\varepsilon\\)"^^qudt:LatexString ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Emissivity> .

quantitykind:EnergyDensityOfStates a qudt:QuantityKind ;
    rdfs:label "Energy Density of States"@en ;
    qudt:applicableUnit unit:PER-J-M3 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Density_of_states"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\rho(E) = n_E(E) = \\frac{dN(E)}{dE}\\frac{1}{V}\\), where \\(N(E)\\) is the total number of states with energy less than \\(E\\), and \\(V\\) is the volume."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Energy Density of States\" refers to electrons or other entities, e.g. phonons. It can, for example, refer to amount of substance instead of volume." ;
    qudt:symbol "n_E" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:EnergyFluence a qudt:QuantityKind ;
    rdfs:label "Energy Fluence"@en ;
    qudt:applicableUnit unit:J-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Fluence"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Psi = \\frac{dR}{dA}\\), where \\(dR\\) describes the sum of radiant energies, exclusive of rest energy, of all particles incident on a small spherical domain, and \\(dA\\) describes the cross-sectional area of that domain."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\Psi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Energy Fluence\" can be used to describe the energy delivered per unit area" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:EnergyPerMassAmountOfSubstance a qudt:QuantityKind ;
    rdfs:label "Energy and work per mass amount of substance"@en ;
    qudt:applicableUnit unit:BTU_IT-PER-LB-MOL ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:EquilibriumConstantOnConcentrationBasis a qudt:QuantityKind ;
    rdfs:label "Equilibrium Constant on Concentration Basis"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Equilibrium_constant"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(K_c = \\Pi_B(c_B)^{-\\nu_B}\\), for solutions"^^qudt:LatexString ;
    qudt:latexSymbol "\\(K_c\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Equlilbrium Constant\", also known as the thermodynamic equilibrium constant, is an expression that gives us a ratio of the products and reactants of a reaction at equilibrium with respect to a specific unit." ;
    qudt:qkdvDenominator qkdv:A1E0L0I0M0H0T0D0 ;
    qudt:qkdvNumerator qkdv:A1E0L0I0M0H0T0D0 ;
    rdfs:comment "The unit is unit:MOL-PER-M3 raised to the N where N is the summation of stoichiometric numbers. I don't know what to do with this." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:EquilibriumConstant .

quantitykind:EquilibriumConstantOnPressureBasis a qudt:QuantityKind ;
    rdfs:label "Equilibrium Constant on Pressure Basis"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Equilibrium_constant"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(K_p = \\Pi_B(p_B)^{-\\nu_B}\\), for gases"^^qudt:LatexString ;
    qudt:latexSymbol "\\(K_p\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Equlilbrium Constant\", also known as the thermodynamic equilibrium constant, is an expression that gives us a ratio of the products and reactants of a reaction at equilibrium with respect to a specific unit." ;
    qudt:qkdvDenominator qkdv:A0E0L-2I0M1H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L-2I0M1H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:EquilibriumConstant .

quantitykind:EvaporativeHeatTransferCoefficient a qudt:QuantityKind ;
    rdfs:label "Combined Non Evaporative Heat Transfer Coefficient"@en ;
    qudt:applicableUnit unit:W-PER-M2-PA ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H-1T-3D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Evaporative Heat Transfer Coefficient\" is the areic heat transfer coefficient multiplied by the water vapor pressure difference between skind and the environment, and by the exchange area." ;
    qudt:symbol "h_e" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ExchangeIntegral a qudt:QuantityKind ;
    rdfs:label "Exchange Integral"@en ;
    qudt:applicableUnit unit:J ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Exchange_interaction"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Exchange Integral\" is the constituent of the interaction energy between the spins of adjacent electrons in matter arising from the overlap of electron state functions." ;
    qudt:symbol "K" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ExpansionRatio a qudt:QuantityKind ;
    rdfs:label "Expansion Ratio"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H-1T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ExtentOfReaction a qudt:QuantityKind ;
    rdfs:label "Extent of Reaction"@en ;
    qudt:applicableUnit unit:MOL ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Extent_of_reaction"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(dn_B = \\nu_B d\\xi\\), where \\(n_B\\) is the amount of substance \\(B\\) and \\(\\nu_B\\) is the stoichiometric number of substance \\(B\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\xi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "In physical chemistry, the \"Extent of Reaction\" is a quantity that measures the extent in which the reaction proceeds." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:FastFissionFactor a qudt:QuantityKind ;
    rdfs:label "Fast Fission Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Four_factor_formula"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\varphi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Fast Fission Factor\" in an infinite medium, is the ratio of the mean number of neutrons produced by fission due to neutrons of all energies to the mean number of neutrons produced by fissions due to thermal neutrons only." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:FermiAngularWavenumber a qudt:QuantityKind ;
    rdfs:label "Fermi Angular Wavenumber"@en ;
    qudt:applicableUnit unit:RAD-PER-M ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Heavy_fermion"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:symbol "k_F" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:InverseLength .

quantitykind:ForcePerAngle a qudt:QuantityKind ;
    rdfs:label "Force per Angle"@en ;
    qudt:applicableUnit unit:N-PER-RAD ;
    qudt:baseUnitDimensions "\\(L \\cdot M/T^2\\)"^^qudt:LatexString,
        "\\(kg \\cdot m/s^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ForcePerElectricCharge a qudt:QuantityKind ;
    rdfs:label "Force per Electric Charge"@en ;
    dcterms:description "The electric field depicts the force exerted on other electrically charged objects by the electrically charged particle the field is surrounding. The electric field is a vector field with SI units of newtons per coulomb (\\(N C^{-1}\\)) or, equivalently, volts per metre (\\(V m^{-1}\\) ). The SI base units of the electric field are \\(kg m s^{-3} A^{-1}\\). The strength or magnitude of the field at a given point is defined as the force that would be exerted on a positive test charge of 1 coulomb placed at that point"^^qudt:LatexString ;
    qudt:applicableUnit unit:N-PER-C ;
    qudt:baseUnitDimensions "\\(L \\cdot M/I \\cdot T^3\\)"^^qudt:LatexString,
        "\\(kg \\cdot m/A \\cdot s^3\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Electric_field"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Fugacity a qudt:QuantityKind ;
    rdfs:label "Fugacity"@en ;
    qudt:applicableUnit unit:PA ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Fugacity"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\tilde{p}_B\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Fugacity\" of a real gas is an effective pressure which replaces the true mechanical pressure in accurate chemical equilibrium calculations. It is equal to the pressure of an ideal gas which has the same chemical potential as the real gas." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:GFactorOfNucleus a qudt:QuantityKind ;
    rdfs:label "g-Factor of Nucleus"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Landé_g-factor"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(g = \\frac{\\mu}{I\\mu_B}\\), where \\(\\mu\\) is the magnitude of magnetic dipole moment, \\(I\\) is the nuclear angular momentum quantum number, and \\(\\mu_B\\) is the Bohr magneton."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"g-Factor of Nucleus\" is associated with the spin and magnetic moments of protons, neutrons, and many nuclei." ;
    qudt:symbol "g" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:GapEnergy a qudt:QuantityKind ;
    rdfs:label "Gap Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Band_gap"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Gap Energy\" is the difference in energy between the lowest level of conduction band and the highest level of valence band. It is an energy range in a solid where no electron states can exist." ;
    qudt:symbol "E_g" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:GeneralizedCoordinate a qudt:QuantityKind ;
    rdfs:label "Generalized Coordinate"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Generalized_coordinates"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(q_i\\), where \\(q_i\\) is one of the coordinates that is used to describe the position of the system under consideration, and \\(N\\) is the lowest number of coordinates necessary to fully define the position of the system."^^qudt:LatexString ;
    qudt:plainTextDescription "Generalized Coordinates refers to the parameters that describe the configuration of the system relative to some reference configuration. These parameters must uniquely define the configuration of the system relative to the reference configuration." ;
    qudt:symbol "q_i" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:GeneralizedForce a qudt:QuantityKind ;
    rdfs:label "Generalized Force"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Generalized_forces"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\delta A = \\sum Q_i\\delta q_i\\), where \\(A\\) is work and \\(q_i\\) is a generalized coordinate."^^qudt:LatexString ;
    qudt:plainTextDescription "Generalized Forces find use in Lagrangian mechanics, where they play a role conjugate to generalized coordinates." ;
    qudt:symbol "Q_i" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:GeneralizedMomentum a qudt:QuantityKind ;
    rdfs:label "Generalized Force"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Momentum"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(p_i = \\frac{\\partial L}{\\partial \\dot{q_i}}\\), where \\(L\\) is the Langrange function and \\(\\dot{q_i}\\) is a generalized velocity."^^qudt:LatexString ;
    qudt:plainTextDescription "Generalized Momentum, also known as the canonical or conjugate momentum, extends the concepts of both linear momentum and angular momentum. To distinguish it from generalized momentum, the product of mass and velocity is also referred to as mechanical, kinetic or kinematic momentum." ;
    qudt:symbol "p_i" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:GeneralizedVelocity a qudt:QuantityKind ;
    rdfs:label "Generalized Velocity"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Generalized_coordinates"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\dot{q_i} = \\frac{dq_i}{dt}\\), where \\(q_i\\) is the generalized coordinate and \\(t\\) is time."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\dot{q_i}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Generalized Velocities are the time derivatives of the generalized coordinates of the system." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Gravity_API a qudt:QuantityKind ;
    rdfs:label "API Gravity"@en ;
    qudt:applicableUnit unit:DEGREE_API ;
    qudt:baseSIUnitDimensions "\\(qkdv:A0E0L0I0M0H0T0D1\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/API_gravity"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:plainTextDescription """The American Petroleum Institute gravity, or API gravity, is a measure of how heavy or light a petroleum liquid is compared to water: if its API gravity is greater than 10, it is lighter and floats on water; if less than 10, it is heavier and sinks.

API gravity is thus an inverse measure of a petroleum liquid's density relative to that of water (also known as specific gravity). It is used to compare densities of petroleum liquids. For example, if one petroleum liquid is less dense than another, it has a greater API gravity. Although API gravity is mathematically a dimensionless quantity (see the formula below), it is referred to as being in 'degrees'. API gravity is graduated in degrees on a hydrometer instrument. API gravity values of most petroleum liquids fall between 10 and 70 degrees.""" ;
    qudt:qkdvDenominator qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L-3I0M1H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:GruneisenParameter a qudt:QuantityKind ;
    rdfs:label "Gruneisen Parameter"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Grüneisen_parameter"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\gamma = \\frac{\\alpha_V}{x_T c_V\\rho}\\), where \\(\\alpha_V\\) is the cubic expansion coefficient, \\(x_T\\) is isothermal compressibility, \\(c_V\\) is specific heat capacity at constant volume, and \\(\\rho\\) is mass density."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\gamma\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Gruneisen Parameter\" named after Eduard Grüneisen, describes the effect that changing the volume of a crystal lattice has on its vibrational properties, and, as a consequence, the effect that changing temperature has on the size or dynamics of the lattice." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:GyromagneticRatio a qudt:QuantityKind ;
    rdfs:label "Gyromagnetic Ratio"@en ;
    dcterms:description "\"Gyromagnetic Ratio}, also sometimes known as the magnetogyric ratio in other disciplines, of a particle or system is the ratio of its magnetic dipole moment to its angular momentum, and it is often denoted by the symbol, \\(\\gamma\\). Its SI units are radian per second per tesla (\\(rad s^{-1} \\cdot T^{1}\\)) or, equivalently, coulomb per kilogram (\\(C \\cdot kg^{-1\"\\))."^^qudt:LatexString ;
    qudt:applicableUnit unit:A-M2-PER-J-SEC ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Gyromagnetic_ratio"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E1L2I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Gyromagnetic_ratio"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mu = \\gamma J\\), where \\(\\mu\\) is the magnetic dipole moment, and \\(J\\) is the total angular momentum."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\gamma\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:HallCoefficient a qudt:QuantityKind ;
    rdfs:label "Hall Coefficient"@en ;
    qudt:applicableUnit unit:M3-PER-C ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H-1T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Hall_effect"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "In an isotropic conductor, the relation between electric field strength, \\(E\\), and electric current density, \\(J\\) is \\(E = \\rho J + R_H(B X J)\\), where \\(\\rho\\) is resistivity, and \\(B\\) is magnetic flux density."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Hall Coefficient\" is defined as the ratio of the induced electric field to the product of the current density and the applied magnetic field." ;
    qudt:symbol "R_H, A_H" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:HamiltonFunction a qudt:QuantityKind ;
    rdfs:label "Hamilton Function"@en ;
    qudt:applicableUnit unit:J ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Hamilton–Jacobi_equation"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(H = \\sum p_i\\dot{q_i} - L\\), where \\(p_i\\) is a generalized momentum, \\(\\dot{q_i}\\) is a generalized velocity, and \\(L\\) is the Lagrange function."^^qudt:LatexString ;
    qudt:plainTextDescription "The Hamilton–Jacobi equation (HJE) is a necessary condition describing extremal geometry in generalizations of problems from the calculus of variations." ;
    qudt:symbol "H" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:HeadEndPressure a qudt:QuantityKind ;
    rdfs:label "Head End Pressure"@en ;
    qudt:abbreviation "HEP" ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CM_H2O,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Pressure .

quantitykind:HeartRate a qudt:QuantityKind ;
    rdfs:label "Heart Rate"@en ;
    qudt:applicableUnit unit:BEAT-PER-MIN ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Heart_rate"^^xsd:anyURI ;
    qudt:informativeReference "http://www.medterms.com/script/main/art.asp?articlekey=3674"^^xsd:anyURI,
        "http://www.oxfordreference.com/view/10.1093/oi/authority.20110803100354463"^^xsd:anyURI ;
    qudt:plainTextDescription "The number of heartbeats per unit of time, usually per minute. The heart rate is based on the number of contractions of the ventricles (the lower chambers of the heart). The heart rate may be too fast (tachycardia) or too slow (bradycardia). The average adult pulse rate at rest is 60–80 per minute, but exercise, injury, illness, and emotion may produce much faster rates." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:HyperfineStructureQuantumNumber a qudt:QuantityKind ;
    rdfs:label "Hyperfine Structure Quantum Number"@en ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Hyperfine_structure"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Quantum_number"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Hyperfine Structure Quantum Number\" is a quantum number of an atom describing inclination of the nuclear spin with respect to a quantization axis given by the magnetic field produced by the orbital electrons." ;
    qudt:symbol "F" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:QuantumNumber .

quantitykind:IncidenceProportion a qudt:QuantityKind ;
    rdfs:label "Incidence Proportion"@en ;
    qudt:applicableUnit unit:CASES-PER-1000I-YR ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Cumulative_incidence"^^xsd:anyURI,
        "https://en.wikipedia.org/wiki/Incidence_(epidemiology)"^^xsd:anyURI ;
    qudt:plainTextDescription "Incidence proportion (also known as cumulative incidence) is the number of new cases within a specified time period divided by the size of the population initially at risk. For example, if a population initially contains 1,000 non-diseased persons and 28 develop a condition over two years of observation, the incidence proportion is 28 cases per 1,000 persons per two years, i.e. 2.8% per two years." ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:IncidenceRate ;
    skos:broader quantitykind:Incidence .

quantitykind:IncidenceRate a qudt:QuantityKind ;
    rdfs:label "Incidence Rate"@en ;
    qudt:applicableUnit unit:CASES-PER-1000I-YR ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Incidence_(epidemiology)"^^xsd:anyURI ;
    qudt:plainTextDescription "The incidence rate is a measure of the frequency with which a disease or other incident occurs over a specified time period. It is also known as the incidence density rate or person-time incidence rate, when the denominator is the combined person-time of the population at risk (the sum of the time duration of exposure across all persons exposed)" ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:IncidenceProportion ;
    skos:broader quantitykind:Incidence .

quantitykind:InfiniteMultiplicationFactor a qudt:QuantityKind ;
    rdfs:label "Infinite Multiplication Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Four_factor_formula"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexSymbol "\\(k_\\infty\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Infinite Multiplication Factor\" is the multiplication factor for an infinite medium or for an infinite repeating lattice." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:MultiplicationFactor ;
    skos:closeMatch quantitykind:EffectiveMultiplicationFactor .

quantitykind:InternalConversionFactor a qudt:QuantityKind ;
    rdfs:label "InternalConversionFactor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Internal_conversion_coefficient"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"InternalConversionFactor\" describes the rate of internal conversion. It is the ratio of the number of internal conversion electrons to the number of gamma quanta emitted by the radioactive atom in a given transition." ;
    qudt:symbol "a" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:InverseSquareMass a qudt:QuantityKind ;
    rdfs:label "Inverse Square Mass"@en ;
    qudt:applicableUnit unit:PER-PlanckMass2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-2H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:InverseSquareTime a qudt:QuantityKind ;
    rdfs:label "Inverse Square Time"@en ;
    qudt:baseUnitDimensions "\\(/T^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:InverseTemperature a qudt:QuantityKind ;
    rdfs:label "Inverse Temperature"@en ;
    qudt:applicableUnit unit:PER-K ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:IonTransportNumber a qudt:QuantityKind ;
    rdfs:label "Ion Transport Number"@en ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Ion_transport_number"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(t_B = \\frac{i_B}{i}\\), where \\(i_B\\) is the electric current carried by the ion \\(B\\) and \\(i\\) is the total electric current."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Ion Transport Number\" is a quantity which indicates the different contribution of ions to the electric current in electrolytes due to different electrical mobility." ;
    qudt:symbol "t_B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:Kerma a qudt:QuantityKind ;
    rdfs:label "Kerma"@en ;
    qudt:applicableUnit unit:GRAY ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Kerma_(physics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "For indirectly ionizing (uncharged) particles, \\(K= \\frac{dE_{tr}}{dm}\\), where \\(dE_{tr}\\) is the mean sum of the initial kinetic energies of all the charged ionizing particles liberated by uncharged ionizing particles in an element of matter, and \\(dm\\) is the mass of that element."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Kerma\" is the sum of the initial kinetic energies of all the charged particles liberated by uncharged ionizing radiation (i.e., indirectly ionizing radiation such as photons and neutrons) in a sample of matter, divided by the mass of the sample." ;
    qudt:symbol "K" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:KermaRate a qudt:QuantityKind ;
    rdfs:label "Kerma Rate"@en ;
    qudt:applicableUnit unit:GRAY-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Half-value_layer"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\dot{K} = \\frac{dK}{dt}\\), where \\(K\\) is the increment of kerma during time interval with duration \\(t\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\dot{K}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Kerma Rate\" is the kerma per unit time." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LagrangeFunction a qudt:QuantityKind ;
    rdfs:label "Lagrange Function"@en ;
    qudt:applicableUnit unit:J ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Lagrangian"^^xsd:anyURI,
        "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=113-03-76"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(L(q_i, \\dot{q_i}) = T(q_i, \\dot{q_i}) - V(q_i)\\), where \\(T\\) is kinetic energy, \\(V\\) is potential energy, \\(q_i\\) is a generalized coordinate, and \\(\\dot{q_i}\\) is a generalized velocity."^^qudt:LatexString ;
    qudt:plainTextDescription "The Lagrange Function is a function that summarizes the dynamics of the system." ;
    qudt:symbol "L" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Landau-GinzburgNumber a qudt:QuantityKind ;
    rdfs:label "Landau-Ginzburg Number"@en ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Ginzburg–Landau_theory"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "At zero thermodynamic temperature \\(\\kappa = \\frac{\\lambda_L}{(\\varepsilon\\sqrt{2})}\\), where \\(\\lambda_L\\) is London penetration depth and \\(\\varepsilon\\) is coherence length."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\kappa\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Landau-Ginzburg Number\", also known as the Ginzburg-Landau parameter, describes the relationship between London penetration depth and coherence length." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:LandeGFactor a qudt:QuantityKind ;
    rdfs:label "Lande g-Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/G-factor_(physics)"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Landé_g-factor"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(g = \\frac{\\mu}{J\\mu_B}\\), where \\(\\mu\\) is the magnitude of magnetic dipole moment, \\(J\\) is the total angular momentum quantum number, and \\(\\mu_B\\) is the Bohr magneton."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Lande g-Factor\" is a particular example of a g-factor, namely for an electron with both spin and orbital angular momenta. It is named after Alfred Landé, who first described it in 1921." ;
    qudt:symbol "g" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LatticeVector a qudt:QuantityKind ;
    rdfs:label "Lattice Vector"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://www.matter.org.uk/diffraction/geometry/lattice_vectors.htm"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Lattice Vector\" is a translation vector that maps the crystal lattice on itself." ;
    qudt:symbol "R" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:LeakageFactor a qudt:QuantityKind ;
    rdfs:label "Leakage Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:expression "\\(leakage-factor\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=221-04-12"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\sigma = 1 - k^2\\), where \\(k\\) is the coupling factor."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\sigma\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Leakage Factor\" is the ratio of the total magnetic flux to the useful magnetic flux of a magnetic circuit." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LengthPerUnitElectricCurrent a qudt:QuantityKind ;
    rdfs:label "Length per Unit Electric Current"@en ;
    qudt:baseUnitDimensions "\\(L/I\\)"^^qudt:LatexString,
        "\\(m/A\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LengthPercentage a qudt:QuantityKind ;
    rdfs:label "Length Percentage"@en ;
    qudt:applicableUnit unit:PERCENT ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvDenominator qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L1I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:LengthTemperatureTime a qudt:QuantityKind ;
    rdfs:label "Length Temperature Time"@en ;
    qudt:applicableUnit unit:CentiM-SEC-DEG_C ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Lethargy a qudt:QuantityKind ;
    rdfs:label "Lethargy"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.scribd.com/doc/51548050/149/Lethargy"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(u = \\ln(\\frac{E_0}{E})\\), where \\(E_0\\) is a reference energy."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Lethargy\" is a dimensionless logarithm of the ratio of the energy of source neutrons to the energy of neutrons after a collision." ;
    qudt:symbol "u" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LevelWidth a qudt:QuantityKind ;
    rdfs:label "Level Width"@en ;
    qudt:applicableUnit unit:J ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://encyclopedia2.thefreedictionary.com/Level+Width"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Gamma = \\frac{\\hbar}{\\tau}\\), where \\(\\hbar\\) is the reduced Planck constant and \\(\\tau\\) is the mean lifetime."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\Gamma\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Level Width\" is the uncertainty in the energy of a quantum-mechanical system having discrete energy levels in a state that is not strictly stationary. The system may be an atom, a molecule, or an atomic nucleus." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LinearAbsorptionCoefficient a qudt:QuantityKind ;
    rdfs:label "Linear Absorption Coefficient"@en ;
    qudt:applicableUnit unit:PER-M ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:latexDefinition "\\(\\alpha(\\lambda) = \\frac{1}{\\Phi_\\lambda(\\lambda)}\\frac{d\\Phi_\\lambda(\\lambda)}{dl}\\), where \\(\\frac{d\\Phi}{\\Phi}\\) is the relative decrease, caused by absorption, in the spectral radiant flux \\(\\Phi\\) of a collimated beam of electromagnetic radiation corresponding to the wavelength \\(\\lambda\\) during traversal of an infinitesimal layer of a medium and \\(dl\\) is the length traversed."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\mu\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The Linear Absorption Coefficient is a quantity that characterizes how easily a material or medium can be penetrated by a beam of light, sound, particles, or other energy or matter." ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Attenuation_coefficient> .

quantitykind:LinearAttenuationCoefficient a qudt:QuantityKind ;
    rdfs:label "Linear Attenuation Coefficient"@en ;
    qudt:applicableUnit unit:PER-M ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Attenuation_coefficient"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition """\\(\\mu = -\\frac{1}{J}\\frac{dJ}{dx}\\), where \\(J\\) is the magnitude of the current rate of a beam of particles parallel to the \\(x-direction\\).

Or:

\\(\\mu(\\lambda) = \\frac{1}{\\Phi_\\lambda(\\lambda)}\\frac{d\\Phi_\\lambda(\\lambda)}{dl}\\), where \\(\\frac{d\\Phi}{\\Phi}\\) is the relative decrease in the spectral radiant flux \\(\\Phi\\) of a collimated beam of electromagnetic radiation corresponding to the wavelength \\(\\lambda\\) during traversal of an infinitesimal layer of a medium and \\(dl\\) is the length traversed."""^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\mu\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Linear Attenuation Coefficient\", also called the attenuation coefficient,  narrow beam attenuation coefficient, or absorption coefficient, is a quantity that characterizes how easily a material or medium can be penetrated by a beam of light, sound, particles, or other energy or matter." ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Attenuation_coefficient> .

quantitykind:LinearCompressibility a qudt:QuantityKind ;
    rdfs:label "Linear Compressibility"@en ;
    qudt:applicableUnit unit:MicroM-PER-N ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-1H0T2D0 ;
    qudt:plainTextDescription "Linear Compressibility is a measure of the relative length change of a solid as a response to a normal force change." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LinearElectricCurrent a qudt:QuantityKind ;
    rdfs:label "Linear Electric Current"@en ;
    qudt:applicableUnit unit:A-PER-CentiM,
        unit:A-PER-M,
        unit:A-PER-MilliM,
        unit:KiloA-PER-M,
        unit:MilliA-PER-IN,
        unit:MilliA-PER-MilliM ;
    qudt:baseUnitDimensions "\\(A/m\\)"^^qudt:LatexString ;
    qudt:informativeReference "http://www.asknumbers.com/ElectricalConversion.aspx"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Linear Electric Linear Current\" is the electric current per unit line." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:LinearElectricCurrentDensity .

quantitykind:LinearExpansionCoefficient a qudt:QuantityKind ;
    rdfs:label "Linear Expansion Coefficient"@en ;
    qudt:applicableUnit unit:PER-K ;
    qudt:expression "\\(lnr-exp-coef\\)"^^qudt:LatexString ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\alpha_l = \\frac{1}{l} \\; \\frac{dl}{dT}\\), where \\(l\\) is \\(length\\) and \\(T\\) is thermodynamic temperature."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\alpha_l\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LinearIonization a qudt:QuantityKind ;
    rdfs:label "Linear Ionization"@en ;
    qudt:applicableUnit unit:PER-M ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Ionization#Classical_ionization"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(N_{il} = \\frac{1}{e}\\frac{dQ}{dl}\\), where \\(e\\) is the elementary charge and \\(dQ\\) is the average total charge of all positive ions produced over an infinitesimal element of the path with length \\(dl\\) by an ionizing charged particle."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Linear Ionization\"  is a description of how the ionization of an atom or molecule takes place. For example, an ion with a +2 charge can be created only from an ion with a +1 charge or a +3 charge. That is, the numerical charge of an atom or molecule must change sequentially, always moving from one number to an adjacent, or sequential, number. Using sequential ionization definition." ;
    qudt:symbol "N_{il}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LinearStrain a qudt:QuantityKind ;
    rdfs:label "Linear Strain"@en ;
    qudt:applicableUnit unit:DeciB_M,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Deformation_(mechanics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\xi = \\frac{\\Delta l}{l_0}\\), where \\(\\Delta l\\) is the increase in length and \\(l_0\\) is the length in a reference state to be specified."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\xi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "A strain is a normalized measure of deformation representing the displacement between particles in the body relative to a reference length." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Strain .

quantitykind:LinearVelocity a qudt:QuantityKind ;
    rdfs:label "Linear Velocity"@en ;
    dcterms:description "Linear Velocity, as the name implies deals with speed in a straight line, the units are often \\(km/hr\\) or \\(m/s\\) or \\(mph\\) (miles per hour). Linear Velocity (v) = change in distance/change in time, where \\(v = \\bigtriangleup d/\\bigtriangleup t\\)"^^qudt:LatexString ;
    qudt:baseUnitDimensions "\\(L/T\\)"^^qudt:LatexString,
        "\\(m/s\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Velocity"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:informativeReference "http://au.answers.yahoo.com/question/index?qid=20080319082534AAtrClv"^^xsd:anyURI ;
    qudt:symbol "v" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:Velocity .

quantitykind:LogarithmicFrequencyInterval a qudt:QuantityKind ;
    rdfs:label "Logarithmic frequency interval"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:latexDefinition "\\(G = \\log_{2}(f2/f1)\\), where \\(f1\\) and \\(f2 \\geq f1\\) are frequencies of two tones."^^qudt:LatexString ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Long-RangeOrderParameter a qudt:QuantityKind ;
    rdfs:label "Long-Range Order Parameter"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Long-Range Order Parameter\" is the fraction of atoms in an Ising ferromagnet having magnetic moments in one direction, minus the fraction having magnetic moments in the opposite direction." ;
    qudt:symbol "R, s" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LorenzCoefficient a qudt:QuantityKind ;
    rdfs:label "Lorenz Coefficient"@en ;
    qudt:applicableUnit unit:V2-PER-K2 ;
    qudt:informativeReference "http://www.matter.org.uk/diffraction/geometry/lattice_vectors.htm"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "\\(L = \\frac{\\lambda}{\\sigma T}\\), where \\(\\lambda\\) is thermal conductivity, \\(\\sigma\\) is electric conductivity, and \\(T\\) is thermodynamic temperature."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Lorenz Coefficient\" is part mof the Lorenz curve." ;
    qudt:symbol "L" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LossFactor a qudt:QuantityKind ;
    rdfs:label "Loss Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(d = \\frac{1}{Q}\\), where \\(Q\\) is quality factor."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Loss Factor} is the inverse of \\textit{Quality Factor} and is the ratio of the \\textit{resistance} and modulus of \\textit{reactance\"." ;
    qudt:symbol "d" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:QualityFactor,
        quantitykind:Reactance,
        quantitykind:Resistance .

quantitykind:LowerCriticalMagneticFluxDensity a qudt:QuantityKind ;
    rdfs:label "Lower Critical Magnetic Flux Density"@en ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Lower Critical Magnetic Flux Density\" for type II superconductors, is the threshold magnetic flux density for magnetic flux entering the superconductor." ;
    qudt:symbol "B_{c1}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:closeMatch quantitykind:UpperCriticalMagneticFluxDensity .

quantitykind:LuminousEfficacy a qudt:QuantityKind ;
    rdfs:label "Luminous Efficacy"@en ;
    qudt:applicableUnit unit:LM-PER-W ;
    qudt:baseUnitDimensions "\\(J \\cdot T^3 \\cdot U/L^2 \\cdot M\\)"^^qudt:LatexString,
        "\\(cd \\cdot s^3/kg \\cdot m^2\\)"^^qudt:LatexString ;
    qudt:expression "\\(lm/w\\)"^^qudt:LatexString ;
    qudt:latexDefinition "\\(K = \\frac{\\Phi_v}{\\Phi}\\), where \\(\\Phi_v\\) is the luminous flux and \\(\\Phi\\) is the corresponding radiant flux."^^qudt:LatexString ;
    qudt:plainTextDescription "Luminous Efficacy is the ratio of luminous flux (in lumens) to power (usually measured in watts). Depending on context, the power can be either the radiant flux of the source's output, or it can be the total electric power consumed by the source." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Luminous_efficacy> .

quantitykind:LuminousExposure a qudt:QuantityKind ;
    rdfs:label "Luminous Exposure"@en ;
    qudt:applicableUnit unit:LUX-HR ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Exposure_(photography)#Photometric_and_radiometric_exposure"^^xsd:anyURI ;
    qudt:plainTextDescription "Luminous Exposure is the time-integrated illuminance." ;
    qudt:symbol "H_v",
        "Hv" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Luminous_energy> .

quantitykind:MachNumber a qudt:QuantityKind ;
    rdfs:label "Mach Number"@en ;
    qudt:applicableUnit unit:MACH ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Mach_number"^^xsd:anyURI ;
    qudt:description "\"Mach Number\" is a dimensionless quantity representing the speed of an object moving through air or other fluid divided by the local speed of sound. It is commonly used to represent the speed of an object when it is traveling close to or above the speed of sound. The Mach number is commonly used both with objects traveling at high speed in a fluid, and with high-speed fluid flows inside channels such as nozzles, diffusers or wind tunnels. As it is defined as a ratio of two speeds, it is a dimensionless number."^^rdf:HTML ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31896"^^xsd:anyURI ;
    qudt:latexDefinition "\\(Ma = \\frac{v_o}{c_o}\\), where \\(v_0\\) is speed, and \\(c_o\\) is speed of sound."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31896"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Mach Number\" is a dimensionless quantity representing the speed of an object moving through air or other fluid divided by the local speed of sound. It is commonly used to represent the speed of an object when it is traveling close to or above the speed of sound. The Mach number is commonly used both with objects traveling at high speed in a fluid, and with high-speed fluid flows inside channels such as nozzles, diffusers or wind tunnels. As it is defined as a ratio of two speeds, it is a dimensionless number." ;
    qudt:qkdvDenominator qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:qkdvNumerator qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:symbol "Ma" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio ;
    skos:closeMatch <http://dbpedia.org/resource/Mach_number> ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Mach_number> .

quantitykind:MadelungConstant a qudt:QuantityKind ;
    rdfs:label "Madelung Constant"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Madelung_constant"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "For a uni-univalent ionic crystal of specified structure, the binding energy \\(V_b\\) per pair of ions is \\(V_b = \\alpha\\frac{e^2}{4\\pi \\varepsilon_0 a}\\), where \\(e\\) is the elementary charge, \\(\\varepsilon_0\\) is the electric constant, and \\(a\\) is the lattice constant which should be specified."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\alpha\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Madelung Constant\" is used in determining the electrostatic potential of a single ion in a crystal by approximating the ions by point charges. It is named after Erwin Madelung, a German physicist." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MagneticAreaMoment a qudt:QuantityKind ;
    rdfs:label "Magnetic Area Moment"@en ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-49"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(m = I e_n A\\), where \\(I\\) is electric current in a small closed loop, \\(e_n\\) is a unit vector perpendicular to the loop, and \\(A\\) is the area of the loop. The magnetic moment of a substance within a domain is the vector sum of the magnetic moments of all entities included in the domain."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Magnetic Area Moment\", for a magnetic dipole, is a vector quantity equal to the product of the current, the loop area, and the unit vector normal to the loop plane, the direction of which corresponds to the loop orientation. \"Magnetic Area Moment\" is also referred to as \"Magnetic Moment\"." ;
    qudt:symbol "m" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:MagneticMoment .

quantitykind:MagneticMoment a qudt:QuantityKind ;
    rdfs:label "Magnetic Moment"@en ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-49"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(m = I e_n A\\), where \\(I\\) is electric current in a small closed loop, \\(e_n\\) is a unit vector perpendicular to the loop, and \\(A\\) is the area of the loop. The magnetic moment of a substance within a domain is the vector sum of the magnetic moments of all entities included in the domain."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Magnetic Moment\", for a magnetic dipole, is a vector quantity equal to the product of the current, the loop area, and the unit vector normal to the loop plane, the direction of which corresponds to the loop orientation. \"Magnetic Moment\" is also referred to as \"Magnetic Area Moment\"." ;
    qudt:symbol "m" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:MagneticAreaMoment .

quantitykind:MagneticSusceptability a qudt:QuantityKind ;
    rdfs:label "Magnetic Susceptability"@en ;
    dcterms:description "\"Magnetic Susceptability\" is a scalar or tensor quantity the product of which by the magnetic constant \\(\\mu_0\\) and by the magnetic field strength \\(H\\) is equal to the magnetic polarization \\(J\\). The definition given applies to an isotropic medium. For an anisotropic medium permeability is a second order tensor."^^qudt:LatexString ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:expression "\\(\\kappa = \\frac{M}{H}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-12-37"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\kappa = \\frac{M}{H}\\),  where \\(M\\) is magnetization,  and \\(H\\) is magnetic field strength."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\kappa\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso constant:MagneticConstant,
        quantitykind:MagneticFieldStrength_H,
        quantitykind:Magnetization .

quantitykind:MassAbsorptionCoefficient a qudt:QuantityKind ;
    rdfs:label "Mass Absorption Coefficient"@en ;
    qudt:applicableUnit unit:M2-PER-KiloGM ;
    qudt:latexDefinition "\\(a_m = \\frac{a}{\\rho}\\), where \\(a\\) is the linear absorption coefficient and \\(\\rho\\) is the mass density of the medium."^^qudt:LatexString ;
    qudt:latexSymbol "\\(a_m\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The mass absorption coefficient is the linear absorption coefficient divided by the density of the absorber." ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:exactMatch <http://medical-dictionary.thefreedictionary.com/mass+absorption+coefficient> .

quantitykind:MassAmountOfSubstance a qudt:QuantityKind ;
    rdfs:label "Mass Amount of Substance"@en ;
    qudt:applicableUnit unit:LB-MOL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MassAmountOfSubstanceTemperature a qudt:QuantityKind ;
    rdfs:label "Mass Amount of Substance Temperature"@en ;
    qudt:applicableUnit unit:LB-MOL-DEG_F ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MassConcentrationOfWater a qudt:QuantityKind ;
    rdfs:label "Mass Concentration of Water"@en ;
    qudt:applicableUnit unit:KiloGM-PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(w = m/V\\), where \\(m\\) is mass of water, irrespective of the form of aggregation, and \\(V\\) is volume. Mass concentration of water at saturation is denoted \\(w_{sat}\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Mass Concentration of Water Valour} is one of a number of \\textit{Concentration\" quantities defined by ISO 8000." ;
    qudt:symbol "w" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MassConcentrationOfWaterVapour a qudt:QuantityKind ;
    rdfs:label "Mass Concentration of Water Vapour"@en ;
    qudt:applicableUnit unit:KiloGM-PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(w = m/V\\), where \\(m\\) is mass of water vapour and \\(V\\) is total gas volume. Mass concentration of water vapour at saturation is denoted \\(v_{sat}\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Mass Concentration of Water} is one of a number of \\textit{Concentration\" quantities  defined by ISO 8000." ;
    qudt:symbol "v" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MassDefect a qudt:QuantityKind ;
    rdfs:label "Mass Defect"@en ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Binding_energy"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(B = Zm(^{1}\\textrm{H}) + Nm_n - m_a\\), where \\(Z\\) is the proton number of the atom, \\(m(^{1}\\textrm{H})\\) is atomic mass of \\(^{1}\\textrm{H}\\), \\(N\\) is the neutron number, \\(m_n\\) is the rest mass of the neutron, and \\(m_a\\) is the rest mass of the atom."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Mass Defect\", also termed mass deficit, or mass packing fraction, describes mass change (decrease) in bound systems, particularly atomic nuclei." ;
    qudt:symbol "B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:MassEnergyTransferCoefficient a qudt:QuantityKind ;
    rdfs:label "Mass Energy Transfer Coefficient"@en ;
    qudt:applicableUnit unit:M2-PER-KiloGM ;
    qudt:informativeReference "http://physics.nist.gov/PhysRefData/XrayMassCoef/chap3.html"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\frac{\\mu_{tr}}{\\rho} = -\\frac{1}{\\rho}\\frac{1}{R}\\frac{dR_{tr}}{dl}\\), where \\(dR_{tr}\\) is the mean energy that is transferred to kinetic energy of charged particles by interactions of the incident radiation \\(R\\) in traversing a distance \\(dl\\) in the material of density \\(\\rho\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\frac{\\mu_{tr}}{\\rho}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Mass Energy Transfer Coefficient\" is that fraction of the mass attenuation coefficient which contributes to the production of kinetic energy in charged particles." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:closeMatch quantitykind:MassAttenuationCoefficient .

quantitykind:MassFraction a qudt:QuantityKind ;
    rdfs:label "Mass Fraction"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mass_fraction_(chemistry)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(w_B = \\frac{m_B}{m}\\), where \\(m_B\\) is the mass of substance \\(B\\) and \\(m\\) is the total."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Mass Fraction\" is the fraction of one substance with mass to the mass of the total mixture ." ;
    qudt:symbol "w_B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MassNumber a qudt:QuantityKind ;
    rdfs:label "Mass Number"@en ;
    dcterms:description "The \"Mass Number\" (A), also called atomic mass number or nucleon number, is the total number of protons and neutrons (together known as nucleons) in an atomic nucleus. Nuclides with the same value of \\(A\\) are called isobars."^^qudt:LatexString ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mass_number"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(A = Z + N\\), where \\(Z\\) is the atomic number and \\(N\\) is the neutron number."^^qudt:LatexString ;
    qudt:symbol "A" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Dimensionless .

quantitykind:MassRatioOfWaterToDryMatter a qudt:QuantityKind ;
    rdfs:label "Mass Concentration of Water To Dry Matter"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(u = m/m_d\\), where \\(m\\) is mass of water vapour and \\(m_d\\) is mass of dry matter. Mass ratio of water to dry matter at saturation is denoted \\(u_{sat}\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Mass Ratio of Water to Dry Matter} is one of a number of \\textit{Concentration Ratio\" quantities  defined by ISO 8000." ;
    qudt:symbol "u" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MassRatioOfWaterVapourToDryGas a qudt:QuantityKind ;
    rdfs:label "Mass Ratio of Water Vapour to Dry Gas"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(x = m/m_d\\), where \\(m\\) is mass of water vapour and \\(m_d\\) is mass of dry gas. Mass ratio of water vapour to dry gas  at saturation is denoted \\(x_{sat}\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Mass Ratio of Water Vapour to Dry Gas} is one of a number of \\textit{Concentration Ratio\" quantities  defined by ISO 8000." ;
    qudt:symbol "x" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MassicActivity a qudt:QuantityKind ;
    rdfs:label "Massic Activity"@en ;
    qudt:applicableUnit unit:BQ-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-1H0T-1D0 ;
    qudt:informativeReference "http://www.encyclo.co.uk/define/massic%20activity"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Massic Activity\" is the activity divided by the total mass of the sample." ;
    qudt:symbol "a" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MaxOperatingThrust a qudt:QuantityKind ;
    rdfs:label "Max Operating Thrust"@en ;
    qudt:applicableUnit unit:DYN,
        unit:KIP_F,
        unit:KiloGM_F,
        unit:KiloN,
        unit:KiloP,
        unit:KiloPOND,
        unit:LB_F,
        unit:MegaLB_F,
        unit:MegaN,
        unit:MicroN,
        unit:MilliN,
        unit:N,
        unit:OZ_F,
        unit:PDL,
        unit:PlanckForce,
        unit:TON_F_US ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "MOT" ;
    skos:broader quantitykind:Thrust .

quantitykind:MechanicalMobility a qudt:QuantityKind ;
    rdfs:label "Mechanical Mobility"@en ;
    qudt:applicableUnit unit:MOHM ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MicrobialFormation a qudt:QuantityKind ;
    rdfs:label "Microbial Formation"@en ;
    qudt:applicableUnit unit:CFU ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Mobility a qudt:QuantityKind ;
    rdfs:label "Mobility"@en ;
    qudt:applicableUnit unit:M2-PER-V-SEC ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Electron_mobility"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\mu\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Mobility\" characterizes how quickly a particle can move through a metal or semiconductor, when pulled by an electric field. The average drift speed imparted to a charged particle in a medium by an electric field, divided by the electric field strength." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MobilityRatio a qudt:QuantityKind ;
    rdfs:label "Mobility Ratio"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://baervan.nmt.edu/research_groups/reservoir_sweep_improvement/pages/clean_up/mobility.html"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "\\(b = \\frac{\\mu_n}{\\mu_p}\\), where \\(\\mu_n\\) and \\(\\mu_p\\) are mobilities for electrons and holes, respectively."^^qudt:LatexString ;
    qudt:plainTextDescription "\"MobilityRatio\" describes permeability of a porous material to a given phase divided by the viscosity of that phase." ;
    qudt:symbol "b" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ModulusOfElasticity a qudt:QuantityKind ;
    rdfs:label "Modulus of Elasticity"@en ;
    qudt:applicableUnit unit:PA ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Elastic_modulus"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(E = \\frac{\\sigma}{\\varepsilon}\\), where \\(\\sigma\\) is the normal stress and \\(\\varepsilon\\) is the linear strain."^^qudt:LatexString ;
    qudt:plainTextDescription "The Modulus of Elasticity is the mathematical description of an object or substance's tendency to be deformed elastically (that is, non-permanently) when a force is applied to it." ;
    qudt:symbol "E" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ModulusOfImpedance a qudt:QuantityKind ;
    rdfs:label "Modulus Of Impedance"@en ;
    dcterms:description """"Modulus Of Impedance} is the absolute value of the quantity \\textit{impedance". Apparent impedance is defined more generally as

the quotient of rms voltage and rms electric current; it is often denoted by \\(Z\\)."""^^qudt:LatexString ;
    qudt:applicableUnit unit:OHM ;
    qudt:hasDimensionVector qkdv:A0E-2L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Absolute_value"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Electrical_impedance"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(Z = \\left | \\underline{Z} \\right |\\), where \\(\\underline{Z}\\) is impedance."^^qudt:LatexString ;
    qudt:symbol "Z" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Impedance .

quantitykind:MolarAbsorptionCoefficient a qudt:QuantityKind ;
    rdfs:label "Molar Absorption Coefficient"@en ;
    qudt:applicableUnit unit:M2-PER-KiloGM ;
    qudt:latexDefinition "\\(x = aV_m\\), where \\(a\\) is the linear absorption coefficient and \\(V_m\\) is the molar volume."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Molar Absorption Coefficient\" is a spectrophotometric unit indicating the light a substance absorbs with respect to length, usually centimeters, and concentration, usually moles per liter." ;
    qudt:symbol "x" ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:exactMatch <http://medical-dictionary.thefreedictionary.com/molar+absorption+coefficient> .

quantitykind:MolarConductivity a qudt:QuantityKind ;
    rdfs:label "Molar Conductivity"@en ;
    qudt:applicableUnit unit:S-M2-PER-MOL ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Molar_conductivity"^^xsd:anyURI,
        "http://encyclopedia2.thefreedictionary.com/molar+conductivity"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Gamma_m = \\frac{x}{c_B}\\), where \\(x\\) is the electrolytic conductivity and \\(c_B\\) is the amount-of-substance concentration."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\Gamma_m\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Molar Conductivity\" is the conductivity of an electrolyte solution divided by the molar concentration of the electrolyte, and so measures the efficiency with which a given electrolyte conducts electricity in solution." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Conductivity .

quantitykind:MolarEntropy a qudt:QuantityKind ;
    rdfs:label "Molar Entropy"@en ;
    qudt:applicableUnit unit:J-PER-MOL-K ;
    qudt:hasDimensionVector qkdv:A-1E0L2I0M1H-1T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Standard_molar_entropy"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(S_m = \\frac{S}{n}\\), where \\(S\\) is entropy and \\(n\\) is amount of substance."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Standard Molar Entropy\" is the entropy content of one mole of substance, under standard conditions (not standard temperature and pressure STP)." ;
    qudt:symbol "S_m" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MolarOpticalRotatoryPower a qudt:QuantityKind ;
    rdfs:label "Molar Optical Rotatory Power"@en ;
    qudt:applicableUnit unit:RAD-M2-PER-MOL ;
    qudt:informativeReference "http://goldbook.iupac.org/O04313.html"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\alpha_n = \\alpha \\frac{A}{n}\\), where \\(\\alpha\\) is the angle of optical rotation, and \\(n\\) is the amount of substance of the optically active component in the path of a linearly polarized light beam of cross sectional area \\(A\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\alpha_n\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Molar Optical Rotatory Power\" Angle of optical rotation divided by the optical path length through the medium and by the amount concentration giving the molar optical rotatory power." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MolecularMass a qudt:QuantityKind ;
    rdfs:label "Molecular Mass"@en ;
    qudt:applicableUnit unit:Da ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Molecular_mass"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Molecular_mass#Relative_molecular_mass"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:plainTextDescription "The molecular mass, or molecular weight of a chemical compound is the mass of one molecule of that compound, relative to the unified atomic mass unit, u. Molecular mass should not be confused with molar mass, which is the mass of one mole of a substance." ;
    qudt:symbol "M" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Mass .

quantitykind:Momentum a qudt:QuantityKind ;
    rdfs:label "Momentum"@en ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Momentum"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-1D0 ;
    qudt:plainTextDescription "The momentum of a system of particles is given by the sum of the momentums of the individual particles which make up the system or by the product of the total mass of the system and the velocity of the center of gravity of the system. The momentum of a continuous medium is given by the integral of the velocity over the mass of the medium or by the product of the total mass of the medium and the velocity of the center of gravity of the medium." ;
    qudt:symbol "p" ;
    qudt:url "http://en.wikipedia.org/wiki/Momentum"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MomentumPerAngle a qudt:QuantityKind ;
    rdfs:label "Momentum per Angle"@en ;
    qudt:applicableUnit unit:N-SEC-PER-RAD ;
    qudt:baseUnitDimensions "\\(L \\cdot M/T\\)"^^qudt:LatexString,
        "\\(kg \\cdot m/s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MutualInductance a qudt:QuantityKind ;
    rdfs:label "Mutual Inductance"@en ;
    dcterms:description "\\(\\textit{Mutual Inductance}\\) is the non-diagonal term of the inductance matrix. For two loops, the symbol \\(M\\) is used for \\(L_{12}\\)."^^qudt:LatexString ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-12-36"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(L_{mn} = \\frac{\\Psi_m}{I_n}\\), where \\(I_n\\) is an electric current in a thin conducting loop \\(n\\) and \\(\\Psi_m\\) is the linked flux caused by that electric current in another loop \\(m\\)."^^qudt:LatexString ;
    qudt:symbol "L_{mn}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Inductance .

quantitykind:NapierianAbsorbance a qudt:QuantityKind ;
    rdfs:label "Napierian Absorbance"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:latexDefinition "\\(A_e(\\lambda) = -ln(\\tau(\\lambda))\\), where \\(\\tau\\) is the transmittance at a given wavelength \\(\\lambda\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "Napierian Absorbance is the natural (Napierian) logarithm of the reciprocal of the spectral internal transmittance." ;
    qudt:symbol "A_e, B" ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:exactMatch <http://eilv.cie.co.at/term/798> .

quantitykind:NeutronDiffusionCoefficient a qudt:QuantityKind ;
    rdfs:label "Diffusion Coefficient"@en ;
    qudt:applicableUnit unit:M2-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-1D0 ;
    qudt:informativeReference "http://encyclopedia2.thefreedictionary.com/Diffusion+of+Neutrons"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(D_n = -\\frac{J_x}{\\frac{\\partial dn}{\\partial dx}}\\), where \\(J_x\\) is the \\(x-component\\) of the particle current and \\(n\\) is the particle number density."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Diffusion Coefficient\" is " ;
    qudt:symbol "D" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:NeutronNumber a qudt:QuantityKind ;
    rdfs:label "Neutron Number"@en ;
    dcterms:description "\"Neutron Number\", symbol \\(N\\), is the number of neutrons in a nuclide. Nuclides with the same value of \\(N\\) but different values of \\(Z\\) are called isotones. \\(N - Z\\) is called the neutron excess number."^^qudt:LatexString ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Neutron_number"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31895"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:symbol "N" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Dimensionless .

quantitykind:NeutronYieldPerAbsorption a qudt:QuantityKind ;
    rdfs:label "Neutron Yield per Absorption"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Fission_product_yield"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\eta\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Neutron Yield per Absorption\" is the average number of fission neutrons, both prompt and delayed, emitted per neutron absorbed in a fissionable nuclide or in a nuclear fuel, as specified." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:NeutronYieldPerFission a qudt:QuantityKind ;
    rdfs:label "Neutron Yield per Fission"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Fission_product_yield"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\nu\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Neutron Yield per Fission\" is the average number of fission neutrons, both prompt and delayed, emitted per fission event." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Non-LeakageProbability a qudt:QuantityKind ;
    rdfs:label "Non-Leakage Probability"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Six_factor_formula"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\Lambda\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Non-Leakage Probability\" is the probability that a neutron will not escape from the reactor during the slowing-down process or while it diffuses as a thermal neutron" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:NonActivePower a qudt:QuantityKind ;
    rdfs:label "Non-active Power"@en ;
    qudt:applicableUnit unit:V-A ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-11-43"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(Q^{'} = \\sqrt{{\\left | \\underline{S} \\right |}^2 - P^2}\\), where \\(\\underline{S}\\) is apparent power and \\(P\\) is active power."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Non-active Power\", for a two-terminal element or a two-terminal circuit under periodic conditions, is the quantity equal to the square root of the difference of the squares of the apparent power and the active power." ;
    qudt:symbol "Q'" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ActivePower,
        quantitykind:ApparentPower .

quantitykind:NozzleThroatDiameter a qudt:QuantityKind ;
    rdfs:label "Nozzle Throat Diameter"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:NuclearSpinQuantumNumber a qudt:QuantityKind ;
    rdfs:label "Spin Quantum Number"@en ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Quantum_number"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(I^2 = \\hbar^2 I(I + 1)\\), where \\(\\hbar\\) is the Planck constant."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Spin Quantum Number\"  describes the spin (intrinsic angular momentum) of the electron within that orbital, and gives the projection of the spin angular momentum S along the specified axis" ;
    qudt:symbol "I" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:SpinQuantumNumber .

quantitykind:NucleonNumber a qudt:QuantityKind ;
    rdfs:label "Nucleon number"@en ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "Number of nucleons in an atomic nucleus.A = Z+N. Nuclides with the same value of A are called isobars." ;
    qudt:symbol "A" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "mass-number" ;
    skos:broader quantitykind:Dimensionless .

quantitykind:NumberOfParticles a qudt:QuantityKind ;
    rdfs:label "Number of Particles"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Particle_number"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Number of Particles\", also known as the particle number, of a thermodynamic system, conventionally indicated with the letter N, is the number of constituent particles in that system." ;
    qudt:symbol "N_B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:OrderOfReflection a qudt:QuantityKind ;
    rdfs:label "Order of Reflection"@en ;
    dcterms:description "\"Order of Reflection\" is \\(n\\) in the Bragg's Law equation."^^qudt:LatexString ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.answers.com/topic/order-of-reflection"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:symbol "n" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:OsmoticCoefficient a qudt:QuantityKind ;
    rdfs:label "Osmotic Coefficient"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Osmotic_coefficient"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\varphi = -(M_A\\sum b_B)^{-1} \\ln a_A\\), where \\(M_A\\) is the molar mass of the solvent \\(A\\), \\(\\sum\\) denotes summation over all the solutes, \\(b_B\\) is the molality of solute \\(B\\), and \\(a_A\\) is the activity of solvent \\(A\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\varphi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Osmotic Coefficient\" is a quantity which characterises the deviation of a solvent from ideal behavior." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PackingFraction a qudt:QuantityKind ;
    rdfs:label "Packing Fraction"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Atomic_packing_factor"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(f = \\frac{\\Delta_r}{A}\\), where \\(\\Delta_r\\) is the relative mass excess and \\(A\\) is the nucleon number."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Packing Fraction\" is the fraction of volume in a crystal structure that is occupied by atoms." ;
    qudt:symbol "f" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ParticleCurrent a qudt:QuantityKind ;
    rdfs:label "Particle Current"@en ;
    qudt:applicableUnit unit:PER-M2-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M0H0T-1D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\int J \\cdot e_n dA = \\frac{dN}{dt}\\), where \\(e_ndA\\) is the vector surface element, \\(N\\) is the net number of particles passing over a surface, and \\(dt\\) describes the time interval."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Particle Current\" can be used to describe the net number of particles passing through a surface in an infinitesimal time interval." ;
    qudt:symbol "J, S" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ParticleFluenceRate a qudt:QuantityKind ;
    rdfs:label "Particle Fluence Rate"@en ;
    qudt:applicableUnit unit:PER-M2-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M0H0T-1D0 ;
    qudt:informativeReference "http://www.encyclo.co.uk/define/Fluence%20Rate"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\theta = \\frac{d\\Phi}{dt}\\), where \\(d\\Phi\\) is the increment of the particle fluence during an infinitesimal time interval with duration \\(dt\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\theta\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Particle Fluence Rate\" can be defined as the total number of particles (typically Gamma Ray Photons ) crossing over a sphere of unit cross section which surrounds a Point Source of Ionising Radiation." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ParticleSourceDensity a qudt:QuantityKind ;
    rdfs:label "Particle Source Density"@en ;
    qudt:applicableUnit unit:PER-M3-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T-1D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Particle Source Density\" is the rate of production of particles in a 3D domain divided by the volume of that element." ;
    qudt:symbol "S" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Period a qudt:QuantityKind ;
    rdfs:label "Period"@en ;
    qudt:applicableUnit unit:SEC ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:plainTextDescription "Duration of one cycle of a periodic phenomenon." ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PermeabilityRatio a qudt:QuantityKind ;
    rdfs:label "Permeability Ratio"@en ;
    qudt:applicableUnit unit:PERMEABILITY_REL ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Relative_permeability"^^xsd:anyURI ;
    qudt:plainTextDescription "The ratio of the effective permeability of a porous phase to the absolute permeability." ;
    qudt:qkdvDenominator qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L2I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Permeance a qudt:QuantityKind ;
    rdfs:label "Permeance"@en ;
    qudt:applicableUnit unit:NanoH ;
    qudt:hasDimensionVector qkdv:A0E-2L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Permeance"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Lambda = \\frac{1}{R_m}\\), where \\(R_m\\) is reluctance."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\Lambda\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Permeance\" is the inverse of reluctance. Permeance is a measure of the quantity of flux for a number of current-turns in magnetic circuit. A magnetic circuit almost acts as though the flux is \"conducted\", therefore permeance is larger for large cross sections of a material and smaller for longer lengths. This concept is analogous to electrical conductance in the electric circuit." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Reluctance .

quantitykind:PhaseCoefficient a qudt:QuantityKind ;
    rdfs:label "Phase coefficient"@en ;
    dcterms:description "The phase coefficient is the amount of phase shift that occurs as the wave travels one meter. Increasing the loss of the material, via the manipulation of the material's conductivity, will decrease the wavelength (increase \\(\\beta\\)) and increase the attenuation coefficient (increase \\(\\alpha\\))."^^qudt:LatexString ;
    qudt:applicableUnit unit:PER-M ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Attenuation_coefficient"^^xsd:anyURI ;
    qudt:latexDefinition "If \\(F(x) = Ae^{-\\alpha x} \\cos{[\\beta (x - x_0)]}\\), then \\(\\alpha\\) is the attenuation coefficient and \\(\\beta\\) is the phase coefficient."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\beta\\)"^^qudt:LatexString ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PhotonIntensity a qudt:QuantityKind ;
    rdfs:label "Photon Intensity"@en ;
    dcterms:description "A measure of flux of photons per solid angle"^^qudt:LatexString ;
    qudt:applicableUnit unit:PER-SEC-SR ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Photon_counting"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PhotonRadiance a qudt:QuantityKind ;
    rdfs:label "Photon Radiance"@en ;
    dcterms:description "A measure of flux of photons per surface area per solid angle"^^qudt:LatexString ;
    qudt:applicableUnit unit:PER-SEC-M2-SR ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M0H0T-1D0 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Photon_counting"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PhotosyntheticPhotonFlux a qudt:QuantityKind ;
    rdfs:label "Photosynthetic Photon Flux" ;
    qudt:applicableUnit unit:MicroMOL-PER-SEC ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "https://www.dormgrow.com/par/"^^xsd:anyURI ;
    qudt:plainTextDescription "Photosynthetic Photon Flux (PPF) is a measurement of the total number of photons emitted by a light source each second within the PAR wavelength range and is measured in μmol/s. Lighting manufacturers may specify their grow light products in terms of PPF. It can be considered as analogous to measuring the luminous flux (lumens) of visible light which would typically require the use of an integrating sphere or a goniometer system with spectroradiometer sensor." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "PPF" ;
    prov:wasDerivedFrom <https://www.gigahertz-optik.com/en-us/service-and-support/knowledge-base/measurement-of-par/#WasistPAR> .

quantitykind:PhotosyntheticPhotonFluxDensity a qudt:QuantityKind ;
    rdfs:label "Photosynthetic Photon Flux Density" ;
    qudt:applicableUnit unit:MicroMOL-PER-M2-SEC ;
    qudt:hasDimensionVector qkdv:A1E0L-2I0M0H0T-1D0 ;
    qudt:informativeReference "https://www.gigahertz-optik.com/en-us/service-and-support/knowledge-base/measurement-of-par/"^^xsd:anyURI ;
    qudt:plainTextDescription "Photosynthetically Active Radiation are the wavelengths of light within the visible range of 400 to 700 nanometers (nm) that are critical for photosynthesis. PPFD measures the amount of PAR light (photons) that arrive at the plant’s surface each second. The PPFD is measured at various distances with a Full-spectrum Quantum Sensor, also known as a PAR meter. Natural sunlight has a PAR value of 900-1500μMol/m2/s when the sun is directly overhead. For a grow light to be effective, it should have PAR values of 500-1500 μMol/m2/s." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "PPFD" ;
    prov:wasDerivedFrom <https://www.dormgrow.com/par> .

quantitykind:PoissonRatio a qudt:QuantityKind ;
    rdfs:label "Poisson Ratio"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Poisson%27s_ratio"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mu = \\frac{\\Delta \\delta}{\\Delta l}\\), where \\(\\Delta \\delta\\) is the lateral contraction and \\(\\Delta l\\) is the elongation."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\mu\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The Poisson Ratio is the negative ratio of transverse to axial strain. In fact, when a sample object is stretched (or squeezed), to an extension (or contraction) in the direction of the applied load, it corresponds a contraction (or extension) in a direction perpendicular to the applied load. The ratio between these two quantities is the Poisson's ratio." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PowerPerAreaAngle a qudt:QuantityKind ;
    rdfs:label "Power per Area Angle"@en ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PoyntingVector a qudt:QuantityKind ;
    rdfs:label "Poynting Vector"@en ;
    qudt:applicableUnit unit:W-PER-M2 ;
    qudt:expression "\\(poynting-vector\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-66"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mathbf{S} = \\mathbf{E}  \\times \\mathbf{H} \\), where \\(\\mathbf{E}\\) is electric field strength and \\mathbf{H}  is magnetic field strength."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\mathbf{S} \\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Poynting Vector} is the vector product of the electric field strength \\mathbf{E} and the magnetic field strength \\mathbf{H\" of the electromagnetic field at a given point. The flux of the Poynting vector through a closed surface is equal to the electromagnetic power passing through this surface. For a periodic electromagnetic field, the time average of the Poynting vector is a vector of which, with certain reservations, the direction may be considered as being the direction of propagation of electromagnetic energy and the magnitude considered as being the average electromagnetic power flux density." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PressurePercentage a qudt:QuantityKind ;
    rdfs:label "Pressure Percentage"@en ;
    qudt:applicableUnit unit:PERCENT ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvDenominator qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:qkdvNumerator qkdv:A0E0L-1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:Prevalence a qudt:QuantityKind ;
    rdfs:label "Prevalence" ;
    qudt:applicableUnit unit:PERCENT ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Prevalence"^^xsd:anyURI ;
    qudt:plainTextDescription "In epidemiology, prevalence is the proportion of a particular population found to be affected by a medical condition (typically a disease or a risk factor such as smoking or seatbelt use) at a specific time. (Wikipedia)" ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:PropagationCoefficient a qudt:QuantityKind ;
    rdfs:label "Propagation coefficient"@en ;
    dcterms:description "The propagation constant, symbol \\(\\gamma\\), for a given system is defined by the ratio of the amplitude at the source of the wave to the amplitude at some distance x."^^qudt:LatexString ;
    qudt:applicableUnit unit:PER-M ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Propagation_constant"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\gamma = \\alpha + j\\beta\\), where \\(\\alpha\\) is the attenuation coefficient and \\(\\beta\\) is the phase coefficient."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\gamma\\)"^^qudt:LatexString ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PropellantBurnRate a qudt:QuantityKind ;
    rdfs:label "Propellant Burn Rate"@en ;
    qudt:applicableUnit unit:IN-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:BurnRate .

quantitykind:PropellantMass a qudt:QuantityKind ;
    rdfs:label "Propellant Mass"@en ;
    qudt:symbol "M_f" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PropellantTemperature a qudt:QuantityKind ;
    rdfs:label "Propellant Temperature"@en ;
    qudt:applicableUnit unit:DEG_C-PER-HR,
        unit:DEG_C-PER-MIN,
        unit:DEG_C-PER-SEC,
        unit:DEG_C-PER-YR,
        unit:DEG_F-PER-HR,
        unit:DEG_F-PER-MIN,
        unit:DEG_F-PER-SEC,
        unit:DEG_F-PER-SEC2,
        unit:DEG_R-PER-HR,
        unit:DEG_R-PER-MIN,
        unit:DEG_R-PER-SEC,
        unit:K-PER-HR,
        unit:K-PER-MIN,
        unit:K-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:TemperaturePerTime .

quantitykind:RadianceFactor a qudt:QuantityKind ;
    rdfs:label "Radiance Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:latexDefinition "\\(\\beta = \\frac{L_n}{L_d}\\), where \\(L_n\\) is the radiance of a surface element in a given direction and \\(L_d\\) is the radiance of the perfect reflecting or transmitting diffuser identically irradiated and viewed. Reflectance factor is equivalent to radiance factor or luminance factor (when the cone angle is infinitely small, and is equivalent to reflectance when the cone angle is \\(2π sr\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\beta\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Radiance Factor is the ratio of the radiance of the surface element in the given direction to that of a perfect reflecting or transmitting diffuser identically irradiated unit." ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:exactMatch <http://www.encyclo.co.uk/define/radiance%20factor> .

quantitykind:RadiantEnergy a qudt:QuantityKind ;
    rdfs:label "Radiant Energy"@en ;
    qudt:abbreviation "M-L2-PER-T2" ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Radiant_energy"^^xsd:anyURI ;
    qudt:latexDefinition "\\(Q_e\\)"^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "In radiometry,\"Radiant Energy} is the energy of electromagnetic waves. The quantity of radiant energy may be calculated by integrating radiant flux (or power) with respect to time.  In nuclear physics, \\textit{Radiant Energy\" is energy, excluding rest energy, of the particles that are emitted, transferred, or received." ;
    qudt:symbol "Q_e",
        "R" ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy ;
    skos:closeMatch quantitykind:LuminousEnergy ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Radiant_energy> .

quantitykind:RadiantEnergyDensity a qudt:QuantityKind ;
    rdfs:label "Radiant Energy Density"@en ;
    qudt:applicableUnit unit:J-PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31892"^^xsd:anyURI ;
    qudt:latexDefinition "\\(w\\), \\(\\rho = \\frac{dQ}{dV}\\), where \\(dQ\\) is the radiant energy in an elementary three-dimensional domain, and \\(dV\\) is the volume."^^qudt:LatexString ;
    qudt:latexSymbol "\\(w, \\rho\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Radiant Energy Density\", or radiant power, is the radiant energy per unit volume." ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Radiant_energy_density> .

quantitykind:RadiantFluence a qudt:QuantityKind ;
    rdfs:label "Radiant Fluence"@en ;
    qudt:applicableUnit unit:J-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:latexDefinition "\\(H_0 = \\int_{0}^{\\Delta t}{E_0}{dt}\\), where \\(E_0\\) is the spherical radiance acting during time interval with duration \\(\\Delta t\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "Radiant fluence rate, or spherical irradiance, is equal to the total radiant flux incident on a small sphere divided by the area of the diametrical cross-section of the sphere." ;
    qudt:symbol "H_e,0" ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Radiosity a qudt:QuantityKind ;
    rdfs:label "Radiosity"@en ;
    qudt:applicableUnit unit:J-PER-CentiM2-DAY ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:plainTextDescription "Radiosity is the total emitted and reflected radiation leaving a surface." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PowerPerArea .

quantitykind:Radius a qudt:QuantityKind ;
    rdfs:label "Radius"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Radius"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Radius"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexDefinition "\\(r = \\frac{d}{2}\\), where \\(d\\) is the circle diameter."^^qudt:LatexString ;
    qudt:plainTextDescription "In classical geometry, the \"Radius\" of a circle or sphere is any line segment from its center to its perimeter the radius of a circle or sphere is the length of any such segment." ;
    qudt:symbol "r" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Length .

quantitykind:RatioOfSpecificHeatCapacities a qudt:QuantityKind ;
    rdfs:label "Ratio of Specific Heat Capacities"@en ;
    dcterms:description "The specific heat ratio of a gas is the ratio of the specific heat at constant pressure, \\(c_p\\), to the specific heat at constant volume, \\(c_V\\). It is sometimes referred to as the \"adiabatic index} or the \\textit{heat capacity ratio} or the \\textit{isentropic expansion factor} or the \\textit{adiabatic exponent} or the \\textit{isentropic exponent\"."^^qudt:LatexString ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.citizendium.org/wiki/Specific_heat_ratio"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\gamma = c_p / c_V\\), where \\(c\\) is the specific heat of a gas, \\(c_p\\) is specific heat capacity at constant pressure, \\(c_V\\) is specific heat capacity at constant volume."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\gamma\\)"^^qudt:LatexString,
        "\\(\\varkappa\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:IsentropicExponent .

quantitykind:Reactivity a qudt:QuantityKind ;
    rdfs:label "Reactivity"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Nuclear_chain_reaction"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\rho = \\frac{k_{eff} - 1}{k_{eff}}\\), where \\(k_{eff}\\) is the effective multiplication factor."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\rho\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Reactivity\" characterizes the deflection of reactor from the critical state." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:RecombinationCoefficient a qudt:QuantityKind ;
    rdfs:label "Recombination Coefficient"@en ;
    qudt:applicableUnit unit:M3-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:informativeReference "http://encyclopedia2.thefreedictionary.com/recombination+coefficient"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(-\\frac{dn^+}{dt} = -\\frac{dn^-}{dt} = an^+n^-\\), where \\(n^+\\) and \\(n^-\\) are the ion number densities of positive and negative ions, respectively, recombined during an infinitesimal time interval with duration \\(dt\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Recombination Coefficient\" is the rate of recombination of positive ions with electrons or negative ions in a gas, per unit volume, divided by the product of the number of positive ions per unit volume and the number of electrons or negative ions per unit volume." ;
    qudt:symbol "a" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Refectance a qudt:QuantityKind ;
    rdfs:label "Refectance"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:latexDefinition "\\(\\rho = \\frac{\\Phi_t}{\\Phi_m}\\), where \\(\\Phi_t\\) is the reflected radiant flux or the reflected luminous flux, and \\(\\Phi_m\\) is the radiant flux or luminous flux of the incident radiation."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\rho\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Refectance and reflectivity generally refer to the fraction of incident electromagnetic power that is reflected at an interface, while the term \"reflection coefficient\" is used for the fraction of electric field reflected. Reflectance is always a positive real number." ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Reflectivity> .

quantitykind:Reflectance a qudt:QuantityKind ;
    rdfs:label "Reflectance"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Dissipation_factor"^^xsd:anyURI ;
    qudt:latexDefinition "\\(r= \\frac{P_r}{P_i}\\), where \\(P_r\\) is the reflected sound power, and \\(P_i\\) is the incident sound power."^^qudt:LatexString ;
    qudt:plainTextDescription "Reflectance, or reflection factor for sound power, is the ratio of reflected sound power to incident sound power." ;
    qudt:symbol "r" ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ReflectanceFactor a qudt:QuantityKind ;
    rdfs:label "Reflectance Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:latexDefinition "\\(R = \\frac{\\Phi_n}{\\Phi_d}\\), where \\(\\Phi_n\\) is the radiant flux or luminous flux reflected in the directions delimited by a given cone and \\(\\Phi_d\\) is the flux reflected in the same directions by an identically radiated diffuser of reflectance equal to 1."^^qudt:LatexString ;
    qudt:plainTextDescription "Reflectance Factor is the measure of the ability of a surface to reflect light or other electromagnetic radiation, equal to the ratio of the reflected flux to the incident flux." ;
    qudt:symbol "R" ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:exactMatch <http://www.thefreedictionary.com/reflectance+factor> .

quantitykind:RefractiveIndex a qudt:QuantityKind ;
    rdfs:label "Refractive index"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Refractive_index"^^xsd:anyURI ;
    qudt:latexDefinition "\\(n = \\frac{c_0}{c}\\), where \\(c_0\\) is the speed of light in vacuum, and \\(c\\) is the speed of light in the medium."^^qudt:LatexString ;
    qudt:plainTextDescription "\"refractive index\" or index of refraction n of a substance (optical medium) is a dimensionless number that describes how light, or any other radiation, propagates through that medium." ;
    qudt:symbol "n" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:RelativeMassConcentrationOfVapour a qudt:QuantityKind ;
    rdfs:label "Relative Mass Concentration of Vapour"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\varphi = v / v_{sat}\\), where \\(v\\) is mass concentration of water vapour,  \\(v_{sat}\\) is its mass concentration of water vapour at saturation (at the same temperature). For normal cases, the relative partial pressure may be assumed to be equal to relative mass concentration of vapour."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\varphi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Relative Mass Concentration of Vapour\" is one of a number of \"Relative Concentration\" quantities  defined by ISO 8000." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:RelativePartialPressure .

quantitykind:RelativeMassDensity a qudt:QuantityKind ;
    rdfs:label "Relative Mass Density"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Relative_density"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(d = \\frac{\\rho}{\\rho_0}\\), where \\(\\rho\\) is mass density of a substance and \\(\\rho_0\\) is the mass density of a reference substance under conditions that should be specified for both substances."^^qudt:LatexString ;
    qudt:plainTextDescription "Relative density, or specific gravity, is the ratio of the density (mass of a unit volume) of a substance to the density of a given reference material." ;
    qudt:symbol "d" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:RelativeMassExcess a qudt:QuantityKind ;
    rdfs:label "Relative Mass Excess"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mass_excess"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Delta_r = \\frac{\\Delta}{m_u}\\), where \\(\\Delta\\) is the mass excess and \\(m_u\\) is the unified atomic mass constant."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\Delta_r\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Relative Mass Excess\" is the mass excess between the monoisotopic mass of an element and the mass of its A + 1 or its A + 2 isotopic cluster (extrapolated from relative mass defect)." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:RelativeMassRatioOfVapour a qudt:QuantityKind ;
    rdfs:label "Relative Mass Ratio of Vapour"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\psi = x / x_{sat}\\), where \\(x\\) is mass ratio of water vapour to dry gas,  \\(x_{sat}\\) is its mass raio of water vapour to dry gas at saturation (at the same temperature)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\psi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Relative Mass Ratio of Vapour\" is one of a number of \"Relative Concentration\" quantities  defined by ISO 8000." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:RelativePermittivity a qudt:QuantityKind ;
    rdfs:label "Relative Permittivity"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Permittivity"^^xsd:anyURI ;
    qudt:expression "\\(rel-permittivity\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\epsilon_r = \\epsilon / \\epsilon_0\\), where \\(\\epsilon\\) is permittivity and \\(\\epsilon_0\\) is the electric constant."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\epsilon_r\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Relative Permittivity\" is the ration of permittivity to the permittivity of a vacuum." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Permittivity .

quantitykind:RelativePressureCoefficient a qudt:QuantityKind ;
    rdfs:label "Relative Pressure Coefficient"@en ;
    qudt:applicableUnit unit:PER-K ;
    qudt:expression "\\(rel-pres-coef\\)"^^qudt:LatexString ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\alpha_p = \\frac{1}{p}\\left (\\frac{\\partial p}{\\partial T} \\right )_V\\), where \\(p\\) is \\(pressure\\),  \\(T\\) is thermodynamic temperature and \\(V\\) is volume."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\alpha_p\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Reluctance a qudt:QuantityKind ;
    rdfs:label "Reluctance"@en ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Magnetic_reluctance"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(R_m = \\frac{U_m}{\\Phi}\\), where \\(U_m\\) is magnetic tension, and \\(\\Phi\\) is magnetic flux."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Reluctance\" or magnetic resistance, is a concept used in the analysis of magnetic circuits. It is analogous to resistance in an electrical circuit, but rather than dissipating electric energy it stores magnetic energy. In likeness to the way an electric field causes an electric current to follow the path of least resistance, a magnetic field causes magnetic flux to follow the path of least magnetic reluctance. It is a scalar, extensive quantity, akin to electrical resistance." ;
    qudt:symbol "R_m" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:MagneticFlux,
        quantitykind:MagneticTension .

quantitykind:ResidualResistivity a qudt:QuantityKind ;
    rdfs:label "Residual Resistivity"@en ;
    qudt:applicableUnit unit:OHM-M ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Residual-resistance_ratio"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\rho_R\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Residual Resistivity\" for metals, is the resistivity extrapolated to zero thermodynamic temperature." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ResistancePercentage a qudt:QuantityKind ;
    rdfs:label "Resistance Percentage"@en ;
    qudt:applicableUnit unit:PERCENT ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvDenominator qkdv:A0E-2L2I0M1H0T-3D0 ;
    qudt:qkdvNumerator qkdv:A0E-2L2I0M1H0T-3D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:ResonanceEscapeProbability a qudt:QuantityKind ;
    rdfs:label "Resonance Escape Probability"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Four_factor_formula"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Resonance Escape Probability\" is the fraction of fission neutrons that manage to slow down from fission to thermal energies without being absorbed. In an infinite medium, the probability that a neutron slowing down will traverse all or some specified portion of the range of resonance energies without being absorbed." ;
    qudt:symbol "p" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:RespiratoryRate a qudt:QuantityKind ;
    rdfs:label "Respiratory Rate"@en ;
    qudt:applicableUnit unit:BREATH-PER-MIN ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Respiratory_rate"^^xsd:anyURI ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Respiratory_rate"^^xsd:anyURI ;
    qudt:plainTextDescription "Respiratory rate (Vf, Rf or RR) is also known by respiration rate, pulmonary ventilation rate, ventilation rate, or breathing frequency is the number of breaths taken within a set amount of time, typically 60 seconds. A normal respiratory rate is termed eupnea, an increased respiratory rate is termed tachypnea and a lower than normal respiratory rate is termed bradypnea." ;
    qudt:symbol "Vf, Rf or RR" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ReynoldsNumber a qudt:QuantityKind ;
    rdfs:label "Reynolds Number"@en ;
    qudt:applicableUnit unit:NUM ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Reynolds_number"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:latexDefinition "\\(Re = \\frac{\\rho uL}{\\mu} = \\frac{uL}{\\nu}\\), where \\(\\rho\\) is mass density, \\(u\\) is speed, \\(L\\) is length,  \\(\\mu\\) is dynamic viscosity, and \\(\\nu\\) is kinematic viscosity."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31896"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Reynolds Number\" (Re) is a dimensionless number that gives a measure of the ratio of inertial forces to viscous forces and consequently quantifies the relative importance of these two types of forces for given flow conditions." ;
    qudt:symbol "Re" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio ;
    skos:closeMatch <http://dbpedia.org/resource/Reynolds_number> ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Reynolds_number> .

quantitykind:RichardsonConstant a qudt:QuantityKind ;
    rdfs:label "Richardson Constant"@en ;
    qudt:applicableUnit unit:A-PER-M2-K2 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Thermionic_emission"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "The thermionic emission current, \\(J\\), for a metal is \\(J = AT^2\\exp{(-\\frac{\\Phi}{kT})}\\), where \\(T\\) is thermodynamic temperature, \\(k\\) is the Boltzmann constant, and \\(\\Phi\\) is a work function."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Richardson Constant\" is a constant used in developing thermionic emission current density for a metal." ;
    qudt:symbol "A" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ScalarMagneticPotential a qudt:QuantityKind ;
    rdfs:label "Scalar Magnetic Potential"@en ;
    qudt:applicableUnit unit:V-SEC-PER-M ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-58"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mathbf{H} = -grad V_m\\), where \\(\\mathbf{H}\\) is magnetic field strength."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\varphi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Scalar Magnetic Potential\" is the scalar potential of an irrotational magnetic field strength. The negative of the gradient of the scalar magnetic potential is the irrotational magnetic field strength. The magnetic scalar potential is not unique since any constant scalar field can be added to it without changing its gradient." ;
    qudt:symbol "V_m" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:MagneticFieldStrength_H .

quantitykind:SectionModulus a qudt:QuantityKind ;
    rdfs:label "Section Modulus"@en ;
    qudt:applicableUnit unit:M3 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Section_modulus"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(Z = \\frac{I_a}{(r_Q)_{max}}\\), where \\(I_a\\) is the second axial moment of area and \\((r_Q)_{max}\\) is the maximum radial distance of any point in the surface considered from the \\(Q-axis\\) with respect to which \\(I_a\\) is defined."^^qudt:LatexString ;
    qudt:plainTextDescription "The Section Modulus is a geometric property for a given cross-section used in the design of beams or flexural members." ;
    qudt:symbol "Z" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SeebeckCoefficient a qudt:QuantityKind ;
    rdfs:label "Seebeck Coefficient"@en ;
    qudt:applicableUnit unit:V-PER-K ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Thermopower"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "\\(S_{ab} = \\frac{dE_{ab}}{dT}\\), where \\(E_{ab}\\) is the thermosource voltage between substances a and b, \\(T\\) is the thermodynamic temperature of the hot junction."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Seebeck Coefficient\", or thermopower, or thermoelectric power of a material is a measure of the magnitude of an induced thermoelectric voltage in response to a temperature difference across that material." ;
    qudt:symbol "S_{ab}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SerumOrPlasmaLevel a qudt:QuantityKind ;
    rdfs:label "Serum or Plasma Level"@en ;
    qudt:applicableUnit unit:IU-PER-L ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:AmountOfSubstancePerUnitVolume .

quantitykind:ShearModulus a qudt:QuantityKind ;
    rdfs:label "Shear Modulus"@en ;
    dcterms:description "The Shear Modulus or modulus of rigidity, denoted by \\(G\\), or sometimes \\(S\\) or \\(\\mu\\), is defined as the ratio of shear stress to the shear strain."^^qudt:LatexString ;
    qudt:applicableUnit unit:PA ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Shear_modulus"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(G = \\frac{\\tau}{\\gamma}\\), where \\(\\tau\\) is the shear stress and \\(\\gamma\\) is the shear strain."^^qudt:LatexString ;
    qudt:symbol "G" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Short-RangeOrderParameter a qudt:QuantityKind ;
    rdfs:label "Short-Range Order Parameter"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexSymbol "\\(r, \\sigma\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Short-Range Order Parameter\" is the fraction of the nearest-neighbor atom pairs in an Ising ferromagnet having magnetic moments in one direction, minus the fraction having magnetic moments in the opposite direction." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SignalDetectionThreshold a qudt:QuantityKind ;
    rdfs:label "Signal Detection Threshold"@en ;
    qudt:applicableUnit unit:DeciB_C ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Slowing-DownDensity a qudt:QuantityKind ;
    rdfs:label "Slowing-Down Density"@en ;
    qudt:applicableUnit unit:PER-M3-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T-1D0 ;
    qudt:informativeReference "http://encyclopedia2.thefreedictionary.com/slowing-down+density"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(q = -\\frac{dn}{dt}\\), where \\(n\\) is the number density and \\(dt\\) is the duration."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Slowing-Down Density\" is a measure of the rate at which neutrons lose energy in a nuclear reactor through collisions; equal to the number of neutrons that fall below a given energy per unit volume per unit time." ;
    qudt:symbol "q" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SoundExposure a qudt:QuantityKind ;
    rdfs:label "Sound exposure"@en ;
    qudt:applicableUnit unit:PA2-SEC ;
    qudt:informativeReference "http://www.acoustic-glossary.co.uk/definitions-s.htm"^^xsd:anyURI ;
    qudt:latexDefinition "\\(E = \\int_{t1}^{t2}p^2dt\\), where \\(t1\\) and \\(t2\\) are the starting and ending times for the integral and \\(p\\) is the sound pressure."^^qudt:LatexString ;
    qudt:plainTextDescription "Sound Exposure is the energy of the A-weighted sound calculated over the measurement time(s). For a given period of time, an increase of 10 dB(A) in sound pressure level corresponds to a tenfold increase in E." ;
    qudt:symbol "E" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SoundExposureLevel a qudt:QuantityKind ;
    rdfs:label "Sound exposure level"@en ;
    dcterms:description "Sound Exposure Level abbreviated as \\(SEL\\) and \\(LAE\\), is the total noise energy produced from a single noise event."^^qudt:LatexString ;
    qudt:applicableUnit unit:DeciB ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-3D0 ;
    qudt:informativeReference "http://www.diracdelta.co.uk/science/source/s/o/sound%20exposure%20level/source.html"^^xsd:anyURI ;
    qudt:latexDefinition "\\(L_E = 10 \\log_{10} \\frac{E}{E_0} dB\\), where \\(E\\) is sound power and the reference value is \\(E_0 = 400 \\mu Pa^2 s\\)."^^qudt:LatexString ;
    qudt:symbol "L" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SoundIntensity a qudt:QuantityKind ;
    rdfs:label "Sound intensity"@en ;
    qudt:abbreviation "w/m2" ;
    qudt:applicableUnit unit:BTU_IT-PER-HR-FT2,
        unit:BTU_IT-PER-SEC-FT2,
        unit:ERG-PER-CentiM2-SEC,
        unit:FT-LB_F-PER-FT2-SEC,
        unit:J-PER-CentiM2-DAY,
        unit:KiloCAL-PER-CentiM2-MIN,
        unit:KiloCAL-PER-CentiM2-SEC,
        unit:MicroW-PER-M2,
        unit:MilliW-PER-M2,
        unit:PSI-L-PER-SEC,
        unit:PicoW-PER-M2,
        unit:W-PER-CentiM2,
        unit:W-PER-FT2,
        unit:W-PER-IN2,
        unit:W-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Sound_intensity"^^xsd:anyURI ;
    qudt:latexDefinition "\\(I = pv\\), where \\(p\\) is the sound pressure and \\(v\\) is sound particle velocity."^^qudt:LatexString ;
    qudt:plainTextDescription "Sound intensity or acoustic intensity (\\(I\\)) is defined as the sound power \\(P_a\\) per unit area \\(A\\). The usual context is the noise measurement of sound intensity in the air at a listener's location as a sound energy quantity." ;
    qudt:symbol "I" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PowerPerArea .

quantitykind:SoundPressureLevel a qudt:QuantityKind ;
    rdfs:label "Sound pressure level"@en ;
    dcterms:description "Sound pressure level (\\(SPL\\)) or sound level  is a logarithmic measure of the effective sound pressure of a sound relative to a reference value. It is measured in decibels (dB) above a standard reference level."^^qudt:LatexString ;
    qudt:applicableUnit unit:DeciB ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Sound_pressure#Sound_pressure_level"^^xsd:anyURI ;
    qudt:latexDefinition "\\(L_P = 10 \\log_{10} \\frac{p^2}{p_0^2} dB\\), where \\(p\\) is sound pressure and the reference value in airborne acoustics is \\(p_0 = 20 \\mu Pa\\)."^^qudt:LatexString ;
    qudt:symbol "L" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SoundReductionIndex a qudt:QuantityKind ;
    rdfs:label "Sound reduction index"@en ;
    qudt:applicableUnit unit:DeciB ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Sound_reduction_index"^^xsd:anyURI ;
    qudt:latexDefinition "\\(R = 10 \\log (\\frac{1}{\\tau}) dB\\), where \\(\\tau\\) is the transmission factor."^^qudt:LatexString ;
    qudt:plainTextDescription "The Sound Reduction Index is used to measure the level of sound insulation provided by a structure such as a wall, window, door, or ventilator." ;
    qudt:symbol "R" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SoundVolumeVelocity a qudt:QuantityKind ;
    rdfs:label "Sound volume velocity"@en ;
    dcterms:description "Sound Volume Velocity is the product of particle velocity \\(v\\) and the surface area \\(S\\) through which an acoustic wave of frequency \\(f\\) propagates. Also, the surface integral of the normal component of the sound particle velocity over the cross-section (through which the sound propagates). It is used to calculate acoustic impedance."^^qudt:LatexString ;
    qudt:applicableUnit unit:M3-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Acoustic_impedance"^^xsd:anyURI ;
    qudt:latexDefinition "\\(q= vS\\), where \\(v\\) is sound particle velocity and \\(S\\) is the surface area through which an acoustic wave of frequence \\(f\\) propagates."^^qudt:LatexString ;
    qudt:symbol "q" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SpecificOpticalRotatoryPower a qudt:QuantityKind ;
    rdfs:label "Specific Optical Rotatory Power"@en ;
    qudt:applicableUnit unit:RAD-M2-PER-KiloGM ;
    qudt:informativeReference "http://goldbook.iupac.org/O04313.html"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\alpha_m = \\alpha \\frac{A}{m}\\), where \\(\\alpha\\) is the angle of optical rotation, and \\(m\\) is the mass of the optically active component in the path of a linearly polarized light beam of cross sectional area \\(A\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\alpha_m\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Specific Optical Rotatory Power\" Angle of optical rotation divided by the optical path length through the medium and by the mass concentration of the substance giving the specific optical rotatory power." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SpectralAngularCrossSection a qudt:QuantityKind ;
    rdfs:label "Spectral Angular Cross-section"@en ;
    dcterms:description "\"Spectral Angular Cross-section\" is the cross-section for ejecting or scattering a particle into an elementary cone with energy \\(E\\) in an energy interval, divided by the solid angle \\(d\\Omega\\) of that cone and the range \\(dE\\) of that interval."^^qudt:LatexString ;
    qudt:applicableUnit unit:M2-PER-SR-J ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Cross_section_(physics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\sigma = \\int \\int \\sigma_{\\Omega,E} d\\Omega dE\\)"^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\sigma_{\\Omega, E}\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:closeMatch quantitykind:AngularCrossSection,
        quantitykind:SpectralCrossSection .

quantitykind:SpectralLuminousEfficiency a qudt:QuantityKind ;
    rdfs:label "Spectral Luminous Efficiency"@en ;
    qudt:applicableUnit unit:LM-PER-W ;
    qudt:latexDefinition "\\(V(\\lambda) = \\frac{\\Phi_\\lambda(\\lambda_m)}{\\Phi_\\lambda(\\lambda)}\\), where \\(\\Phi_\\lambda(\\lambda_m)\\) is the spectral radiant flux at wavelength \\(\\lambda_m\\) and \\(\\Phi_\\lambda(\\lambda)\\) is the spectral radiant flux at wavelength \\(\\lambda\\), such that both radiations produce equal luminous sensations under specified photometric conditions and \\(\\lambda_m\\) is chosen so that the maximum value of this ratio is equal to 1."^^qudt:LatexString ;
    qudt:plainTextDescription "The Spectral Luminous Efficiency is a measure of how well a light source produces visible light. It is the ratio of luminous flux to power. A common choice is to choose units such that the maximum possible efficacy, 683 lm/W, corresponds to an efficiency of 100%." ;
    qudt:symbol "V" ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Luminous_efficacy> .

quantitykind:SquareEnergy a qudt:QuantityKind ;
    rdfs:label "Square Energy"@en ;
    qudt:baseUnitDimensions "\\(L^4 \\cdot M^2/T^4\\)"^^qudt:LatexString,
        "\\(kg^2 \\cdot m^4/s^4\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L4I0M2H0T-4D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:StandardAbsoluteActivity a qudt:QuantityKind ;
    rdfs:label "Standard Absolute Activity"@en ;
    dcterms:description "The \"Standard Absolute Activity\" is proportional to the absoulte activity of the pure substance \\(B\\) at the same temperature and pressure multiplied by the standard pressure."^^qudt:LatexString ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Activity_coefficient"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\lambda_B^\\Theta = \\lambda_B^*(p^\\Theta)\\), where \\(\\lambda_B^\\Theta\\) the absolute activity of the pure substance \\(B\\) at the same temperature and pressure, and \\(p^\\Theta\\) is standard pressure."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\lambda_B^\\Theta\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:StatisticalWeight a qudt:QuantityKind ;
    rdfs:label "Statistical Weight"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Statistical_weight"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:plainTextDescription "A \"Statistical Weight\" is the relative probability (possibly unnormalized) of a particular feature of a state." ;
    qudt:symbol "g" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:StochasticProcess a qudt:QuantityKind ;
    rdfs:label "Stochastic Process"@en ;
    qudt:applicableUnit unit:GigaHZ,
        unit:HZ,
        unit:KiloHZ,
        unit:MegaHZ,
        unit:NUM-PER-HR,
        unit:NUM-PER-SEC,
        unit:NUM-PER-YR,
        unit:PER-DAY,
        unit:PER-HR,
        unit:PER-MIN,
        unit:PER-MO,
        unit:PER-MilliSEC,
        unit:PER-SEC,
        unit:PER-WK,
        unit:PER-YR,
        unit:PERCENT-PER-DAY,
        unit:PERCENT-PER-HR,
        unit:PERCENT-PER-WK,
        unit:PlanckFrequency,
        unit:SAMPLE-PER-SEC,
        unit:TeraHZ,
        unit:failures-in-time ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Stochastic_process"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Stochastic_process"^^xsd:anyURI ;
    qudt:plainTextDescription "In probability theory, a stochastic process, or sometimes random process  is a collection of random variables; this is often used to represent the evolution of some random value, or system, over time. This is the probabilistic counterpart to a deterministic process (or deterministic system)." ;
    qudt:symbol "X" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Frequency .

quantitykind:StoichiometricNumber a qudt:QuantityKind ;
    rdfs:label "Stoichiometric Number"@en ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Stoichiometry"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\nu_B\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Chemical reactions, as macroscopic unit operations, consist of simply a very large number of elementary reactions, where a single molecule reacts with another molecule. As the reacting molecules (or moieties) consist of a definite set of atoms in an integer ratio, the ratio between reactants in a complete reaction is also in integer ratio. A reaction may consume more than one molecule, and the \"Stoichiometric Number\" counts this number, defined as positive for products (added) and negative for reactants (removed)." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Dimensionless .

quantitykind:StructureFactor a qudt:QuantityKind ;
    rdfs:label "Structure Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Structure_factor"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition "\\(F(h, k, l) = \\sum_{n=1}^N f_n\\exp{[2\\pi i(hx_n + ky_n +lz_n)]}\\), where \\(f_n\\) is the atomic scattering factor for atom \\(n\\), and \\(x_n\\), \\(y_n\\), and \\(z_n\\) are fractional coordinates in the unit cell; for \\(h\\), \\(k\\), and \\(l\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Structure Factor\" is a mathematical description of how a material scatters incident radiation." ;
    qudt:symbol "F(h, k, l)" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SurfaceActivityDensity a qudt:QuantityKind ;
    rdfs:label "Surface Activity Density"@en ;
    qudt:applicableUnit unit:BQ-PER-M2 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(a_s = \\frac{A}{S}\\), where \\(S\\) is the total area of the surface of a sample and \\(A\\) is its activity."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Surface Activity Density\" is undefined." ;
    qudt:symbol "a_s" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SurfaceCoefficientOfHeatTransfer a qudt:QuantityKind ;
    rdfs:label "Surface Coefficient of Heat Transfer"@en ;
    qudt:applicableUnit unit:W-PER-M2-K ;
    qudt:expression "\\(surface-heat-xfer-coeff\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H-1T-3D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(q = h (T_s - T_r)\\), where \\(T_s\\) is areic heat flow rate is the thermodynamic temperature of the surface, and is a reference thermodynamic temperature characteristic of the adjacent surroundings."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\alpha\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SystolicBloodPressure a qudt:QuantityKind ;
    rdfs:label "Systolic Blood Pressure"@en ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CM_H2O,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.oxfordreference.com/view/10.1093/acref/9780199549351.001.0001/acref-9780199549351-e-1162"^^xsd:anyURI ;
    qudt:plainTextDescription "The pressure of blood in the arteries which rises to a maximum as blood is pumped out by the left ventricle (systole) and drops to a minimum in diastole. The systolic/diastolic pressure is normally ~120/80 mmHg in a young adult." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:DiastolicBloodPressure ;
    skos:broader quantitykind:Pressure .

quantitykind:TemporalSummationFunction a qudt:QuantityKind ;
    rdfs:label "Temporal Summation Function"@en ;
    qudt:applicableUnit unit:PER-SEC-SR ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Temporal Summation Function\" is the ability of the human eye to produce a composite signal from the signals coming into an eye during a short time interval." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Summation_(neurophysiology)#Temporal_summation> .

quantitykind:ThermalConductance a qudt:QuantityKind ;
    rdfs:label "Thermal Conductance"@en ;
    qudt:applicableUnit unit:W-PER-K ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H-1T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Thermal_insulation"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(G = 1/R\\), where \\(R\\) is \"Thermal Resistance\""^^qudt:LatexString ;
    qudt:plainTextDescription "This quantity is also called \"Heat Transfer Coefficient\"." ;
    qudt:symbol "G" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:CoefficientOfHeatTransfer .

quantitykind:ThermalDiffusionFactor a qudt:QuantityKind ;
    rdfs:label "Thermal Diffusion Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.thermopedia.com/content/1189/"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\alpha_T = \\frac{k_T}{(x_A x_B)}\\), where \\(k_T\\) is the thermal diffusion ratio, and \\(x_A\\) and \\(x_B\\) are the local amount-of-substance fractions of the two substances \\(A\\) and \\(B\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\alpha_T\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Thermal diffusion is a phenomenon in which a temperature gradient in a mixture of fluids gives rise to a flow of one constituent relative to the mixture as a whole. in the context of the equation that describes thermal diffusion, the \"Thermal Diffusion Factor\" is ." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ThermalDiffusionRatio a qudt:QuantityKind ;
    rdfs:label "Thermal Diffusion Ratio"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.thermopedia.com/content/1189/"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "In a steady state of a binary mixture in which thermal diffusion occurs, \\(grad x_B  = -(\\frac{k_T}{T}) grad T\\), where \\(x_B\\) is the amount-of-substance fraction of the heavier substance \\(B\\), and \\(T\\) is the local thermodynamic temperature."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Thermal Diffusion Ratio\" is proportional to the product of the component concentrations." ;
    qudt:symbol "k_T" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ThermalDiffusionRatioCoefficient a qudt:QuantityKind ;
    rdfs:label "Thermal Diffusion Coefficient"@en ;
    qudt:applicableUnit unit:M2-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-1D0 ;
    qudt:informativeReference "http://www.thermopedia.com/content/1189/"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(D_T  = kT \\cdot D\\), where \\(k_T\\) is the thermal diffusion ratio, and \\(D\\) is the diffusion coefficient."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Thermal Diffusion Coefficient\" is ." ;
    qudt:symbol "D_T" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ThermalUtilizationFactor a qudt:QuantityKind ;
    rdfs:label "Thermal Utilization Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Four_factor_formula"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Thermal Utilization Factor\" in an infinite medium, is the ratio of the number of thermal absorbed in a fissionable nuclide or in a nuclear fuel, as specified, to the total number of thermal neutrons absorbed." ;
    qudt:symbol "f" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ThermodynamicEnergy a qudt:QuantityKind ;
    rdfs:label "Thermodynamic Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "For a closed thermodynamic system, \\(\\Delta U = Q + W\\), where \\(Q\\) is amount of heat transferred to the system and \\(W\\) is work done on the system provided that no chemical reactions occur."^^qudt:LatexString ;
    qudt:symbol "U" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:InternalEnergy ;
    skos:broader quantitykind:Energy .

quantitykind:ThomsonCoefficient a qudt:QuantityKind ;
    rdfs:label "Thomson Coefficient"@en ;
    qudt:applicableUnit unit:V-PER-K ;
    qudt:informativeReference "http://www.daviddarling.info/encyclopedia/T/Thomson_effect.html"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\mu\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Thomson Coefficient\" represents Thomson heat power developed, divided by the electric current and the temperature difference." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:TimePercentage a qudt:QuantityKind ;
    rdfs:label "Time Percentage"@en ;
    qudt:applicableUnit unit:PERCENT ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M0H0T1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:TorquePerAngle a qudt:QuantityKind ;
    rdfs:label "Torque per Angle"@en ;
    qudt:applicableUnit unit:N-M-PER-RAD ;
    qudt:baseUnitDimensions "\\(L^2 \\cdot M/T^2\\)"^^qudt:LatexString,
        "\\(kg \\cdot m^2/s^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:TorquePerLength a qudt:QuantityKind ;
    rdfs:label "Torque per Length"@en ;
    qudt:applicableUnit unit:N-M-PER-M ;
    qudt:baseUnitDimensions "\\(L \\cdot M/T^2\\)"^^qudt:LatexString,
        "\\(kg \\cdot m/s^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:TotalAngularMomentumQuantumNumber a qudt:QuantityKind ;
    rdfs:label "Total Angular Momentum Quantum Number"@en ;
    dcterms:description "The \"Total Angular Quantum Number\" describes the magnitude of total angular momentum \\(J\\), where \\(j\\) refers to a specific particle and \\(J\\) is used for the whole system."^^qudt:LatexString ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Quantum_number"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:symbol "j" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:QuantumNumber ;
    skos:closeMatch quantitykind:MagneticQuantumNumber,
        quantitykind:PrincipalQuantumNumber,
        quantitykind:SpinQuantumNumber .

quantitykind:TotalAtomicStoppingPower a qudt:QuantityKind ;
    rdfs:label "Total Atomic Stopping Power"@en ;
    qudt:applicableUnit unit:J-M2 ;
    qudt:informativeReference "http://www.answers.com/topic/atomic-stopping-power"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(S_a = \\frac{S}{n}\\), where \\(S\\) is the total linear stopping power and \\(n\\) is the number density of the atoms in the substance."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Total Atomic Stopping Power\" for an ionizing particle passing through an element, is the particle's energy loss per atom within a unit area normal to the particle's path; equal to the linear energy transfer (energy loss per unit path length) divided by the number of atoms per unit volume." ;
    qudt:symbol "S_a" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:TotalCurrent a qudt:QuantityKind ;
    rdfs:label "Total Current"@en ;
    qudt:applicableUnit unit:A ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(I_{tot}= I + I_D\\), where \\(I\\) is electric current and \\(I_D\\) is displacement current."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Total Current\" is the sum of the electric current that is flowing through a surface and the displacement current." ;
    qudt:symbol "I_t",
        "I_{tot}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:DisplacementCurrent,
        quantitykind:ElectricCurrent .

quantitykind:TotalCurrentDensity a qudt:QuantityKind ;
    rdfs:label "Total Current Density"@en ;
    qudt:applicableUnit unit:A-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T0D0 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(J_{tot}= J + J_D\\), where \\(J\\) is electric current density and \\(J_D\\) is displacement current density."^^qudt:LatexString ;
    qudt:latexSymbol "\\(J_{tot}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Total Current Density\" is the sum of the electric current density and the displacement current density." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:DisplacementCurrentDensity,
        quantitykind:ElectricCurrentDensity .

quantitykind:TotalIonization a qudt:QuantityKind ;
    rdfs:label "Total Ionization"@en ;
    dcterms:description "\"Total Ionization\" by a particle, total mean charge, divided by the elementary charge, \\(e\\), of all positive ions produced by an ionizing charged particle along its entire path and along the paths of any secondary charged particles."^^qudt:LatexString ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Ionization#Classical_ionization"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(N = \\int N_i dl\\)."^^qudt:LatexString ;
    qudt:symbol "N_i" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:TotalMassStoppingPower a qudt:QuantityKind ;
    rdfs:label "Total Mass Stopping Power"@en ;
    qudt:applicableUnit unit:J-M2-PER-KiloGM ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Stopping_power_(particle_radiation)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(S_m = \\frac{S}{\\rho}\\), where \\(S\\) is the total linear stopping power and \\(\\rho\\) is the mass density of the sample."^^qudt:LatexString ;
    qudt:plainTextDescription "If a substance is compared in gaseous and solid form, then the linear stopping powers of the two states are very different just because of the different density. One therefore often divides S(E) by the density of the material to obtain the \"Mass Stopping Power\". The mass stopping power then depends only very little on the density of the material." ;
    qudt:symbol "S_m" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Transmittance a qudt:QuantityKind ;
    rdfs:label "Transmittance"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:latexDefinition "\\(\\tau = \\frac{\\Phi_t}{\\Phi_m}\\), where \\(\\Phi_t\\) is the transmitted radiant flux or the transmitted luminous flux, and \\(\\Phi_m\\) is the radiant flux or luminous flux of the incident radiation."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\tau, T\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Transmittance is the fraction of incident light (electromagnetic radiation) at a specified wavelength that passes through a sample." ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Transmittance> .

quantitykind:TransmittanceDensity a qudt:QuantityKind ;
    rdfs:label "Transmittance Density"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:latexDefinition "\\(A_{10}(\\lambda) = -lg(\\tau(\\lambda))\\), where \\(\\tau\\) is the transmittance at a given wavelength \\(\\lambda\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "Transmittance is the fraction of incident light (electromagnetic radiation) at a specified wavelength that passes through a sample." ;
    qudt:symbol "A_10, D" ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Turbidity a qudt:QuantityKind ;
    rdfs:label "Turbidity"@en ;
    qudt:applicableUnit unit:NTU ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Turbidity"^^xsd:anyURI ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Turbidity"^^xsd:anyURI ;
    qudt:plainTextDescription "Turbidity is the cloudiness or haziness of a fluid, or of air, caused by individual particles (suspended solids) that are generally invisible to the naked eye, similar to smoke in air. Turbidity in open water is often caused by phytoplankton and the measurement of turbidity is a key test of water quality. The higher the turbidity, the higher the risk of the drinkers developing gastrointestinal diseases, especially for immune-compromised people, because contaminants like virus or bacteria can become attached to the suspended solid. The suspended solids interfere with water disinfection with chlorine because the particles act as shields for the virus and bacteria. Similarly suspended solids can protect bacteria from UV sterilisation of water. Fluids can contain suspended solid matter consisting of particles of many different sizes. While some suspended material will be large enough and heavy enough to settle rapidly to the bottom container if a liquid sample is left to stand (the settleable solids), very small particles will settle only very slowly or not at all if the sample is regularly agitated or the particles are colloidal. These small solid particles cause the liquid to appear turbid." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Turns a qudt:QuantityKind ;
    rdfs:label "Turns"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:plainTextDescription "\"Turns\" is the number of turns in a winding." ;
    qudt:symbol "N" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:UpperCriticalMagneticFluxDensity a qudt:QuantityKind ;
    rdfs:label "Upper Critical Magnetic Flux Density"@en ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Upper Critical Magnetic Flux Density\" for type II superconductors, is the threshold magnetic flux density for disappearance of bulk superconductivity." ;
    qudt:symbol "B_{c2}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:closeMatch quantitykind:LowerCriticalMagneticFluxDensity .

quantitykind:VacuumThrust a qudt:QuantityKind ;
    rdfs:label "Vacuum Thrust"@en ;
    qudt:applicableUnit unit:DYN,
        unit:KIP_F,
        unit:KiloGM_F,
        unit:KiloN,
        unit:KiloP,
        unit:KiloPOND,
        unit:LB_F,
        unit:MegaLB_F,
        unit:MegaN,
        unit:MicroN,
        unit:MilliN,
        unit:N,
        unit:OZ_F,
        unit:PDL,
        unit:PlanckForce,
        unit:TON_F_US ;
    qudt:expression "\\(VT\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Thrust .

quantitykind:VideoFrameRate a qudt:QuantityKind ;
    rdfs:label "Video Frame Rate"@en ;
    qudt:applicableUnit unit:FRAME-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Frame_rate"^^xsd:anyURI ;
    qudt:plainTextDescription "Frame rate (also known as frame frequency) is the frequency (rate) at which an imaging device produces unique consecutive images called frames. The term applies equally well to computer graphics, video cameras, film cameras, and motion capture systems. Frame rate is most often expressed in frames per second (FPS) and is also expressed in progressive scan monitors as hertz (Hz)." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:InformationFlowRate .

quantitykind:VoltagePercentage a qudt:QuantityKind ;
    rdfs:label "Voltage Percentage"@en ;
    qudt:applicableUnit unit:PERCENT ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvDenominator qkdv:A0E-1L2I0M1H0T-3D0 ;
    qudt:qkdvNumerator qkdv:A0E-1L2I0M1H0T-3D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:Work a qudt:QuantityKind ;
    rdfs:label "Work"@en ;
    dcterms:description "The net work is equal to the change in kinetic energy. This relationship is called the work-energy theorem: \\(Wnet = K. E._f − K. E._o \\), where \\(K. E._f\\) is the final kinetic energy and \\(K. E._o\\) is the original kinetic energy. Potential energy, also referred to as stored energy, is the ability of a system to do work due to its position or internal structure. Change in potential energy is equal to work. The potential energy equations can also be derived from the integral form of work, \\(\\Delta P. E. = W = \\int  F \\cdot dx\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:baseUnitDimensions "\\(L^2 \\cdot M/T^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Work_(physics)"^^xsd:anyURI,
        "http://www.cliffsnotes.com/study_guide/Work-and-Energy.topicArticleId-10453,articleId-10418.html"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(A = \\int Pdt\\), where \\(P\\) is power and \\(t\\) is time."^^qudt:LatexString ;
    qudt:plainTextDescription "A force is said to do Work when it acts on a body so that there is a displacement of the point of application, however small, in the direction of the force.  The concepts of work and energy are closely tied to the concept of force because an applied force can do work on an object and cause a change in energy. Energy is defined as the ability to do work. Work is done on an object when an applied force moves it through a distance. Kinetic energy is the energy of an object in motion. The net work is equal to the change in kinetic energy." ;
    qudt:symbol "A" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

sou:ASU a qudt:SystemOfUnits ;
    rdfs:label "Astronomic System Of Units"@en ;
    qudt:description "The astronomical system of units, formally called the IAU (1976) System of Astronomical Constants, is a system of measurement developed for use in astronomy. It was adopted by the International Astronomical Union (IAU) in 1976, and has been slightly updated since then. The system was developed because of the difficulties in measuring and expressing astronomical data in International System of Units (SI units). In particular, there is a huge quantity of very precise data relating to the positions of objects within the solar system which cannot conveniently be expressed or processed in SI units. Through a number of modifications, the astronomical system of units now explicitly recognizes the consequences of general relativity, which is a necessary addition to the International System of Units in order to accurately treat astronomical data. The astronomical system of units is a tridimensional system, in that it defines units of length, mass and time. The associated astronomical constants also fix the different frames of reference that are needed to report observations. The system is a conventional system, in that neither the unit of length nor the unit of mass are true physical constants, and there are at least three different measures of time."^^rdf:HTML ;
    qudt:informativeReference "http://www.iau.org/public/themes/measuring/"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/sou> .

unit:A-M2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Ampere Square Metre"@en,
        "Ampere Square Meter"@en-us ;
    dcterms:description "The SI unit of electromagnetic moment."^^rdf:HTML ;
    qudt:expression "\\(A-M^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MagneticDipoleMoment ;
    qudt:iec61360Code "0112/2///62720#UAA106" ;
    qudt:informativeReference "http://encyclopedia2.thefreedictionary.com/ampere+meter+squared"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:ucumCode "A.m2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A5" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:A-PER-CentiM2 a qudt:Unit ;
    rdfs:label "Ampere Per Square Centimetre"@en,
        "Ampere Per Square Centimeter"@en-us ;
    qudt:conversionMultiplier 10000.0 ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCurrentDensity ;
    qudt:iec61360Code "0112/2///62720#UAB052" ;
    qudt:plainTextDescription "SI base unit ampere divided by the 0.0001-fold  of the power of the SI base unit metre by exponent 2" ;
    qudt:ucumCode "A.cm-2"^^qudt:UCUMcs,
        "A/cm2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A4" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:A-PER-DEG_C a qudt:Unit ;
    rdfs:label "Ampere per Degree Celsius"@en ;
    dcterms:description "A measure used to express how a current is subject to temperature. Originally used in Wien's Law to describe phenomena related to filaments. One use today is to express how a current generator derates with temperature."^^rdf:HTML ;
    qudt:conversionMultiplier 57.2957795 ;
    qudt:expression "\\(A/degC\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H-1T0D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCurrentPerUnitTemperature ;
    qudt:informativeReference "http://books.google.com/books?id=zkErAAAAYAAJ&pg=PA60&lpg=PA60&dq=ampere+per+degree"^^xsd:anyURI,
        "http://web.mit.edu/course/21/21.guide/use-tab.htm"^^xsd:anyURI ;
    qudt:ucumCode "A.Cel-1"^^qudt:UCUMcs,
        "A/Cel"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:A-PER-J a qudt:Unit ;
    rdfs:label "Ampere per Joule"@en ;
    dcterms:description "The inverse measure of \\(joule-per-ampere\\) or \\(weber\\). The measure for the reciprical of magnetic flux."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(A/J\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M-1H0T3D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCurrentPerUnitEnergy ;
    qudt:ucumCode "A.J-1"^^qudt:UCUMcs,
        "A/J"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:A-PER-M2-K2 a qudt:Unit ;
    rdfs:label "Ampere per Square Metre Square Kelvin"@en,
        "Ampere per Square Meter Square Kelvin"@en-us ;
    qudt:expression "\\(a/m^2-k^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H-2T0D0 ;
    qudt:hasQuantityKind quantitykind:RichardsonConstant ;
    qudt:iec61360Code "0112/2///62720#UAB353" ;
    qudt:informativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:ucumCode "A.m-2.K-1"^^qudt:UCUMcs,
        "A/(m2.K)"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A6" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:A-PER-MilliM2 a qudt:Unit ;
    rdfs:label "Ampere Per Square Millimetre"@en,
        "Ampere Per Square Millimeter"@en-us ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCurrentDensity ;
    qudt:iec61360Code "0112/2///62720#UAB051" ;
    qudt:plainTextDescription "SI base unit ampere divided by the 0.000 001-fold of the power of the SI base unit metre by exponent 2" ;
    qudt:ucumCode "A.mm-2"^^qudt:UCUMcs,
        "A/mm2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A7" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:A-PER-RAD a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Ampere per Radian"@en ;
    dcterms:description "\\(\\textit{Ampere per Radian}\\) is a derived unit for measuring the amount of current per unit measure of angle, expressed in ampere per radian."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(a-per-rad\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCurrentPerAngle ;
    qudt:ucumCode "A.rad-1"^^qudt:UCUMcs,
        "A/rad"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:AFN a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Afghani"@en ;
    dcterms:description "Afghanistan"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Afghani"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Afghani?oldid=485904590"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:AMD a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Armenian Dram"@en ;
    dcterms:description "Armenia"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Armenian_dram"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Armenian_dram?oldid=492709723"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:ARS a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Argentine Peso"@en ;
    dcterms:description "Argentina"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Argentine_peso"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Argentine_peso?oldid=491431588"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:AT a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Ampere Turn"@en ;
    dcterms:description "The \\(\\textit{ampere-turn}\\) was the MKS unit of magnetomotive force (MMF), represented by a direct current of one ampere flowing in a single-turn loop in a vacuum. \"Turns\" refers to the winding number of an electrical conductor comprising an inductor. The ampere-turn was replaced by the SI unit, \\(ampere\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MagnetomotiveForce ;
    qudt:symbol "At" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:AUD a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Australian Dollar"@en ;
    dcterms:description "Australia, Australian Antarctic Territory, Christmas Island, Cocos (Keeling) Islands, Heard and McDonald Islands, Kiribati, Nauru, Norfolk Island, Tuvalu"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Australian_dollar"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Australian_dollar?oldid=495046408"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/AustralianDollar> ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:AWG a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Aruban Guilder"@en ;
    dcterms:description "Aruba"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Aruban_florin"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Aruban_florin?oldid=492925638"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:AZN a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Azerbaijanian Manat"@en ;
    dcterms:description "Azerbaijan"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Azerbaijani_manat"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Azerbaijani_manat?oldid=495479090"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:A_Ab-CentiM2 a qudt:Unit ;
    rdfs:label "Abampere Square centimetre"@en,
        "Abampere Square centimeter"@en-us ;
    dcterms:description "\"Abampere Square centimeter\" is the unit of magnetic moment in the electromagnetic centimeter-gram-second system."^^rdf:HTML ;
    qudt:conversionMultiplier 1000000000.0 ;
    qudt:expression "\\(aAcm2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T3D0 ;
    qudt:hasQuantityKind quantitykind:ElectricConductivity ;
    qudt:informativeReference "http://wordinfo.info/unit/4266"^^xsd:anyURI ;
    qudt:ucumCode "Bi.cm2"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    vaem:todo "Determine type for magnetic moment" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:A_Ab-PER-CentiM2 a qudt:Unit ;
    rdfs:label "Abampere per Square Centimetre"@en,
        "Abampere per Square Centimeter"@en-us ;
    dcterms:description "Abampere Per Square Centimeter (aA/cm2) is a unit in the category of Electric current density. It is also known as abamperes per square centimeter, abampere/square centimeter, abampere/square centimetre, abamperes per square centimetre, abampere per square centimetre. This unit is commonly used in the cgs unit system. Abampere Per Square Centimeter (\\(aA/cm^2\\)) has a dimension of \\(L^{-2}I\\) where L is length, and I is electric current. It can be converted to the corresponding standard SI unit \\(A/m^{2}\\) by multiplying its value by a factor of 100000."^^qudt:LatexString ;
    qudt:conversionMultiplier 100000.0 ;
    qudt:derivedUnitOfSystem sou:CGS-EMU ;
    qudt:expression "\\(aba-per-cm2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCurrentDensity ;
    qudt:informativeReference "http://wordinfo.info/results/abampere"^^xsd:anyURI,
        "http://www.efunda.com/glossary/units/units--electric_current_density--abampere_per_square_centimeter.cfm"^^xsd:anyURI ;
    qudt:ucumCode "Bi.cm-2"^^qudt:UCUMcs,
        "Bi/cm2"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:A_Stat-PER-CentiM2 a qudt:Unit ;
    rdfs:label "Statampere per Square Centimetre"@en,
        "Statampere per Square Centimeter"@en-us ;
    dcterms:description "The Statampere per Square Centimeter is a unit of electric current density in the c.g.s. system of units."^^rdf:HTML ;
    qudt:conversionMultiplier 0.000003335641 ;
    qudt:derivedUnitOfSystem sou:CGS-ESU ;
    qudt:expression "\\(statA / cm^{2}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCurrentDensity ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:AttoFARAD a qudt:Unit ;
    rdfs:label "Attofarad"@en ;
    qudt:conversionMultiplier 0.000000000000000001 ;
    qudt:hasDimensionVector qkdv:A0E2L-2I0M-1H0T4D0 ;
    qudt:hasQuantityKind quantitykind:Capacitance ;
    qudt:iec61360Code "0112/2///62720#UAA319" ;
    qudt:plainTextDescription "0,000 000 000 000 000 001-fold of the SI derived unit farad" ;
    qudt:ucumCode "aF"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H48" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:AttoJ-SEC a qudt:Unit ;
    rdfs:label "Attojoule Second"@en ;
    qudt:conversionMultiplier 0.000000000000000001 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Action ;
    qudt:iec61360Code "0112/2///62720#UAB151" ;
    qudt:plainTextDescription "unit of the Planck's constant as product of the SI derived unit joule and the SI base unit second" ;
    qudt:ucumCode "aJ.s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B18" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BAN a qudt:Unit ;
    rdfs:label "Ban"@en ;
    dcterms:description "A ban is a logarithmic unit which measures information or entropy, based on base 10 logarithms and powers of 10, rather than the powers of 2 and base 2 logarithms which define the bit. One ban is approximately \\(3.32 (log_2 10) bits\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 2.30258509 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Ban"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:InformationEntropy ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Ban?oldid=472969907"^^xsd:anyURI ;
    qudt:symbol "ban" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BAR-PER-BAR a qudt:Unit ;
    rdfs:label "Bar Per Bar"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:PressureRatio ;
    qudt:iec61360Code "0112/2///62720#UAA325" ;
    qudt:plainTextDescription "pressure relation consisting of the unit bar divided by the unit bar" ;
    qudt:ucumCode "bar.bar-1"^^qudt:UCUMcs,
        "bar/bar"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J56" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BAR-PER-K a qudt:Unit ;
    rdfs:label "Bar Per Kelvin"@en ;
    qudt:conversionMultiplier 100000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:PressureCoefficient ;
    qudt:iec61360Code "0112/2///62720#UAA324" ;
    qudt:plainTextDescription "unit with the name bar divided by the SI base unit kelvin" ;
    qudt:ucumCode "bar.K-1"^^qudt:UCUMcs,
        "bar/K"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F81" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BBD a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Barbados Dollar"@en ;
    dcterms:description "Barbados"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Barbadian_dollar"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Barbadian_dollar?oldid=494388633"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BBL_US_DRY a qudt:Unit ;
    rdfs:label "Dry Barrel (US)"@en ;
    qudt:conversionMultiplier 0.1156281989625 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:DryVolume ;
    qudt:iec61360Code "0112/2///62720#UAB117" ;
    qudt:plainTextDescription "non SI-conform unit of the volume in the USA which applies to a resolution from 1912: 1 dry barrel (US) equals approximately to 115,63 litre" ;
    qudt:uneceCommonCode "BLD" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BDT a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Bangladeshi Taka"@en ;
    dcterms:description "Bangladesh"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Bangladeshi_taka"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Bangladeshi_taka?oldid=492673895"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BEAT-PER-MIN a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Heart Beats per Minute"@en ;
    dcterms:description "\"Heart Beat per Minute\" is a unit for  'Heart Rate' expressed as \\(BPM\\)."^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:HeartRate ;
    qudt:symbol "beats-per-min" ;
    qudt:ucumCode "/min{H.B.}"^^qudt:UCUMcs,
        "min-1{H.B.}"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BHD a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Bahraini Dinar"@en ;
    dcterms:description "Bahrain"^^rdf:HTML ;
    qudt:currencyExponent 3 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Bahraini_dinar"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Bahraini_dinar?oldid=493086643"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BQ a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Becquerel"@en ;
    dcterms:description "The SI derived unit of activity, usually meaning radioactivity. \"Radioactivity\" is caused when atoms disintegrate, ejecting energetic particles. One becquerel is the radiation caused by one disintegration per second; this is equivalent to about 27.0270 picocuries (pCi). The unit is named for a French physicist, Antoine-Henri Becquerel (1852-1908), the discoverer of radioactivity. Note: both the becquerel and the hertz are basically defined as one event per second, yet they measure different things. The hertz is used to measure the rates of events that happen periodically in a fixed and definite cycle. The becquerel is used to measure the rates of events that happen sporadically and unpredictably, not in a definite cycle."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Becquerel"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Activity ;
    qudt:iec61360Code "0112/2///62720#UAA111" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Becquerel?oldid=493710036"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/becquerel> ;
    qudt:symbol "Bq" ;
    qudt:ucumCode "Bq"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "BQL" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BQ-PER-L a qudt:Unit ;
    rdfs:label "Becquerels per litre"@en ;
    dcterms:description "One radioactive disintegration per second from a one part in 10**3 of the SI unit of volume (cubic metre)."@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:ActivityConcentration ;
    qudt:ucumCode "Bq.L-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BQ-PER-M2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Becquerel per Square Metre"@en,
        "Becquerel per Square Meter"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(Bq/m^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:SurfaceActivityDensity ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:ucumCode "Bq.m-2"^^qudt:UCUMcs,
        "Bq/m2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BQ-SEC-PER-M3 a qudt:Unit ;
    rdfs:label "Becquerels second per cubic metre"@en ;
    dcterms:description "TBD"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:AbsoluteActivity ;
    qudt:ucumCode "Bq.s.m-3"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BREATH-PER-MIN a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Breath per Minute"@en ;
    dcterms:description "A unit of respiratory rate."^^rdf:HTML ;
    qudt:expression "\\(breaths/min\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:RespiratoryRate ;
    qudt:ucumCode "/min{breath}"^^qudt:UCUMcs,
        "min-1{breath}"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BSD a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Bahamian Dollar"@en ;
    dcterms:description "Bahamas"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Bahamian_dollar"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Bahamian_dollar?oldid=492776024"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_IT-FT a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "BTU Foot"@en ;
    dcterms:description "\\({\\bf BTU_{IT} \\, Foot}\\) is an Imperial unit for \\(\\textit{Thermal Energy Length}\\) expressed as \\(Btu-ft\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 321.581024 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(Btu-ft\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ThermalEnergyLength ;
    qudt:ucumCode "[Btu_IT].[ft_i]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_IT-FT-PER-FT2-HR-DEG_F a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "BTU (IT) Foot per Square Foot Hour Degree Fahrenheit"@en ;
    dcterms:description "\\(BTU_{IT}\\), Foot per Square Foot Hour Degree Fahrenheit</em> is an Imperial unit for 'Thermal Conductivity' expressed as \\(Btu_{it} \\cdot ft/(hr \\cdot ft^2  \\cdot degF)\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.730734666 ;
    qudt:expression "\\(Btu(IT) ft/(hr ft^2 degF)\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H-1T-3D0 ;
    qudt:hasQuantityKind quantitykind:ThermalConductivity ;
    qudt:iec61360Code "0112/2///62720#UAA115" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Thermal_conductivity"^^xsd:anyURI,
        "http://www.translatorscafe.com/cafe/EN/units-converter/thermal-conductivity/c/"^^xsd:anyURI ;
    qudt:plainTextDescription "British thermal unit (international table) foot per hour Square foot degree Fahrenheit is the unit of the thermal conductivity according to the Imperial system of units." ;
    qudt:ucumCode "[Btu_IT].[ft_i].[ft_i]-2.h-1.[degF]-1"^^qudt:UCUMcs,
        "[Btu_IT].[ft_i]/([ft_i]2.h.[degF])"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J40" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    vaem:comment "owl:sameAs: unit:BTU_IT-FT-PER-HR-FT2-DEG_F" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_IT-IN a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "BTU Inch"@en ;
    dcterms:description "\\({\\bf BTU \\, Inch}\\) is an Imperial unit for 'Thermal Energy Length' expressed as \\(Btu-in\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 26.7984187 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(Btu-in\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ThermalEnergyLength ;
    qudt:ucumCode "[Btu_IT].[in_i]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_IT-PER-DEG_F a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "BTU (IT) per Degree Fahrenheit"@en ;
    dcterms:description "British Thermal Unit (IT) Per Fahrenheit Degree (\\(Btu (IT)/^\\circ F\\)) is a measure of heat capacity. It can be converted to the corresponding standard SI unit J/K by multiplying its value by a factor of 1899.10534."^^qudt:LatexString ;
    qudt:conversionMultiplier 1899.100535 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(Btu/degF\\)"^^qudt:LatexString,
        "\\(btu-per-degF\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:HeatCapacity ;
    qudt:ucumCode "[Btu_IT].[degF]-1"^^qudt:UCUMcs,
        "[Btu_IT]/[degF]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_IT-PER-DEG_R a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "BTU per Degree Rankine"@en ;
    dcterms:description "\\({\\bf BTU \\, per \\, Degree \\, Rankine}\\) is an Imperial unit for 'Heat Capacity' expressed as \\(Btu/degR\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1899.100535 ;
    qudt:expression "\\(btu-per-degR\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:HeatCapacity ;
    qudt:ucumCode "[Btu_IT].[degR]-1"^^qudt:UCUMcs,
        "[Btu_IT]/[degR]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_IT-PER-FT2-HR-DEG_F a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "BTU per Square Foot Hour Degree Fahrenheit"@en ;
    dcterms:description "\\({\\bf BTU \\, per \\, Square \\, Foot \\, Hour \\, Degree \\, Fahrenheit}\\) is an Imperial unit for 'Coefficient Of Heat Transfer' expressed as \\(Btu/(hr-ft^{2}-degF)\\)."^^qudt:LatexString ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(Btu/(hr-ft^{2}-degF)\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H-1T-3D0 ;
    qudt:hasQuantityKind quantitykind:CoefficientOfHeatTransfer ;
    qudt:ucumCode "[Btu_IT].[ft_i]-2.h-1.[degF]-1"^^qudt:UCUMcs,
        "[Btu_IT]/([ft_i]2.h.[degF])"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_IT-PER-FT2-SEC-DEG_F a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "BTU per Square Foot Second Degree Fahrenheit"@en ;
    dcterms:description "\\({\\bf BTU \\, per \\, Square \\, Foot \\, Second \\, Degree \\, Fahrenheit}\\) is an Imperial unit for 'Coefficient Of Heat Transfer' expressed as \\(Btu/(ft^{2}-s-degF)\\)."^^qudt:LatexString ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(Btu/(ft^{2}-s-degF)\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H-1T-3D0 ;
    qudt:hasQuantityKind quantitykind:CoefficientOfHeatTransfer ;
    qudt:ucumCode "[Btu_IT].[ft_i]-2.s-1.[degF]-1"^^qudt:UCUMcs,
        "[Btu_IT]/([ft_i]2.s.[degF])"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_IT-PER-HR-FT2-DEG_R a qudt:Unit ;
    rdfs:label "British Thermal Unit (international Table) Per Hour Square Foot degree Rankine"@en ;
    qudt:conversionMultiplier 0.555556 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H-1T-3D0 ;
    qudt:hasQuantityKind quantitykind:CoefficientOfHeatTransfer ;
    qudt:iec61360Code "0112/2///62720#UAB099" ;
    qudt:plainTextDescription "unit of the heat transfer coefficient according to the Imperial system of units" ;
    qudt:ucumCode "[Btu_IT].h-1.[ft_i]-2.[degR]-1"^^qudt:UCUMcs,
        "[Btu_IT]/(h.[ft_i]2.[degR])"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A23" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_IT-PER-LB-DEG_F a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "BTU per Pound Degree Fahrenheit"@en ;
    dcterms:description "British Thermal Unit (therm.) Per Pound Per Fahrenheit Degree (Btu (therm.)/lb- degF) is a unit in the category of Specific heat. This unit is commonly used in the UK unit system. British Thermal Unit (therm.) Per Pound Per Fahrenheit Degree (Btu (therm.)/lb-degF) has a dimension of \\(L2T^{-2}Q^{-1}\\) where \\(L\\) is length, \\(T\\) is time, and \\(Q\\) is temperature. It can be converted to the corresponding standard SI unit \\(J/kg-K\\) by multiplying its value by a factor of 4183.99895."^^qudt:LatexString ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(Btu/(lb-degF)\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:SpecificHeatCapacity ;
    qudt:ucumCode "[Btu_IT].[lb_av]-1.[degF]-1"^^qudt:UCUMcs,
        "[Btu_IT]/([lb_av].[degF])"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_IT-PER-LB-DEG_R a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "BTU per Pound Degree Rankine"@en ;
    dcterms:description "\\({\\bf BTU \\, per \\, Pound \\, Degree \\, Rankine}\\) is a unit for 'Specific Heat Capacity' expressed as \\(Btu/(lb-degR)\\)."^^qudt:LatexString ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:expression "\\(Btu/(lb-degR)\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:SpecificHeatCapacity ;
    qudt:ucumCode "[Btu_IT].[lb_av]-1.[degR]-1"^^qudt:UCUMcs,
        "[Btu_IT]/([lb_av].[degR])"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_IT-PER-LB-MOL a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "BTU per Pound Mole"@en ;
    dcterms:description "\\({\\bf BTU \\, per \\, Pound \\,Mole}\\) is an Imperial unit for 'Energy And Work Per Mass Amount Of Substance' expressed as \\(Btu/(lb-mol)\\)."^^qudt:LatexString ;
    qudt:expression "\\(Btu/(lb-mol)\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:EnergyPerMassAmountOfSubstance ;
    qudt:ucumCode "[Btu_IT].[lb_av]-1.mol-1"^^qudt:UCUMcs,
        "[Btu_IT]/([lb_av].mol)"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_IT-PER-LB_F-DEG_F a qudt:Unit ;
    rdfs:label "British Thermal Unit (international Table) Per Pound Degree Fahrenheit"@en ;
    qudt:conversionMultiplier 4186.8 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:SpecificHeatCapacity ;
    qudt:iec61360Code "0112/2///62720#UAA119" ;
    qudt:plainTextDescription "unit of the heat energy according to the Imperial system of units divided by the product of the units avoirdupois pound according to the avoirdupois system of units and degree Fahrenheit" ;
    qudt:ucumCode "[Btu_IT].[lbf_av]-1.[degF]-1"^^qudt:UCUMcs,
        "[Btu_IT]/([lbf_av].[degF])"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J43" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_IT-PER-LB_F-DEG_R a qudt:Unit ;
    rdfs:label "British Thermal Unit (international Table) Per Pound Degree Rankine"@en ;
    qudt:conversionMultiplier 426.9 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:SpecificHeatCapacity ;
    qudt:iec61360Code "0112/2///62720#UAB141" ;
    qudt:plainTextDescription "unit of the heat capacity as British thermal unit according to the international table related to degree Rankine according to the Imperial system of units divided by the unit avoirdupois pound according to the avoirdupois system of units" ;
    qudt:ucumCode "[Btu_IT].[lbf_av]-1.[degR]-1"^^qudt:UCUMcs,
        "[Btu_IT]/([lbf_av].[degR])"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A21" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_IT-PER-MIN a qudt:Unit ;
    rdfs:label "British Thermal Unit (international Table) Per Minute"@en ;
    qudt:conversionMultiplier 17.58 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:HeatFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA120" ;
    qudt:plainTextDescription "unit of the heat energy according to the Imperial system of units divided by the unit minute" ;
    qudt:ucumCode "[Btu_IT].min-1"^^qudt:UCUMcs,
        "[Btu_IT]/min"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J44" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_IT-PER-MOL-DEG_F a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "BTU per Pound Mole Degree Fahrenheit"@en ;
    dcterms:description "\\({\\bf BTU \\, per \\, Pound \\, Mole \\, Degree \\, Fahrenheit}\\) is an Imperial unit for 'Molar Heat Capacity' expressed as \\(Btu/(lb-mol-degF)\\)."^^qudt:LatexString ;
    qudt:definedUnitOfSystem sou:IMPERIAL ;
    qudt:expression "\\(Btu/(lb-mol-degF)\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A-1E0L2I0M1H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:MolarHeatCapacity ;
    qudt:ucumCode "[Btu_IT].mol-1.[degF]-1"^^qudt:UCUMcs,
        "[Btu_IT]/(mol.[degF])"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_IT-PER-SEC-FT-DEG_R a qudt:Unit ;
    rdfs:label "British Thermal Unit (international Table) Per Second Foot Degree Rankine"@en ;
    qudt:conversionMultiplier 178.66 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H-1T-3D0 ;
    qudt:hasQuantityKind quantitykind:ThermalConductivity ;
    qudt:iec61360Code "0112/2///62720#UAB107" ;
    qudt:plainTextDescription "unit of the thermal conductivity according to the Imperial system of units" ;
    qudt:ucumCode "[Btu_IT].s-1.[ft_i]-1.[degR]-1"^^qudt:UCUMcs,
        "[Btu_IT]/(s.[ft_i].[degR])"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A22" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_IT-PER-SEC-FT2-DEG_R a qudt:Unit ;
    rdfs:label "British Thermal Unit (international Table) Per Second Square Foot degree Rankine"@en ;
    qudt:conversionMultiplier 14.89 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H-1T-3D0 ;
    qudt:hasQuantityKind quantitykind:CoefficientOfHeatTransfer ;
    qudt:iec61360Code "0112/2///62720#UAB098" ;
    qudt:plainTextDescription "unit of the heat transfer coefficient according to the Imperial system of units" ;
    qudt:ucumCode "[Btu_IT].s-1.[ft_i]-2.[degR]-1"^^qudt:UCUMcs,
        "[Btu_IT]/(s.[ft_i]2.[degR])"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A20" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_TH-FT-PER-FT2-HR-DEG_F a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "BTU (TH) Foot per Square Foot Hour Degree Fahrenheit"@en ;
    dcterms:description "\\({ \\bf BTU_{TH} \\, Foot \\,  per \\, Square \\, Foot \\, Hour \\, Degree \\, Fahrenheit}\\) is an Imperial unit for 'Thermal Conductivity' expressed as \\(Btu_{th} \\cdot ft/(hr \\cdot ft^2 \\cdot degF)\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.729577206 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(Btu(IT) ft/(hr ft^2 degF)\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H-1T-3D0 ;
    qudt:hasQuantityKind quantitykind:ThermalConductivity ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Thermal_conductivity"^^xsd:anyURI,
        "http://www.translatorscafe.com/cafe/EN/units-converter/thermal-conductivity/c/"^^xsd:anyURI ;
    qudt:ucumCode "[Btu_IT].[ft_i]-2.h-1.[degF]-1"^^qudt:UCUMcs,
        "[Btu_IT]/([ft_i]2.h.[degF])"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_TH-FT-PER-HR-FT2-DEG_F a qudt:Unit ;
    rdfs:label "British Thermal Unit (thermochemical) Foot Per Hour Square Foot degree Fahrenheit"@en ;
    qudt:conversionMultiplier 1.73 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H-1T-3D0 ;
    qudt:hasQuantityKind quantitykind:ThermalConductivity ;
    qudt:iec61360Code "0112/2///62720#UAA123" ;
    qudt:plainTextDescription "unit of the thermal conductivity according to the Imperial system of units" ;
    qudt:ucumCode "[Btu_th].[ft_i].h-1.[ft_i]-2.[degF]-1"^^qudt:UCUMcs,
        "[Btu_th].[ft_i]/(h.[ft_i]2.[degF])"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J46" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_TH-IN-PER-FT2-HR-DEG_F a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "BTU (TH) Inch per Square Foot Hour Degree Fahrenheit"@en ;
    dcterms:description "\\({\\bf BTU_{th}}\\), Inch per Square Foot Hour Degree Fahrenheit, is an Imperial unit for 'Thermal Conductivity' expressed as \\(Btu-in/(hr-ft^{2}-degF)\\). A thermochemical British thermal unit inch per second per square foot per degree Fahrenheit is a unit of thermal conductivity in the US Customary Units and British Imperial Units. \\(1 Btu_{th} \\cdot in/(hr \\cdot ft^{2}  \\cdot degF)\\) shows that one thermochemical BTU of heat per one hour moves through one square foot of material, which is one foot thick due to a temperature difference of one degree Fahrenheit."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.144131434 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(Btu(th)-in-per-hr-ft2-degF\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H-1T-3D0 ;
    qudt:hasQuantityKind quantitykind:ThermalConductivity ;
    qudt:iec61360Code "0112/2///62720#UAA125" ;
    qudt:informativeReference "http://www.translatorscafe.com/cafe/EN/units-converter/thermal-conductivity/c/"^^xsd:anyURI ;
    qudt:latexSymbol "\\(Btu_{th} \\cdot in/(hr \\cdot ft^{2}  \\cdot degF)\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Unit of thermal conductivity according to the Imperial system of units" ;
    qudt:ucumCode "[Btu_th].[in_i].[ft_i]-2.h-1.[degF]-1"^^qudt:UCUMcs,
        "[Btu_th].[in_i]/([ft_i]2.h.[degF])"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J48" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_TH-IN-PER-FT2-SEC-DEG_F a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "BTU (TH) Inch per Square Foot Second Degree Fahrenheit"@en ;
    dcterms:description "\\(BTU_{TH}\\) Inch per Square Foot Second Degree Fahrenheit is an Imperial unit for 'Thermal Conductivity' expressed as \\(Btu_{th} \\cdot in/(ft^{2} \\cdot s \\cdot degF)\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 518.8732 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(Btu(it)-in-per-s-ft2-degF\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H-1T-3D0 ;
    qudt:hasQuantityKind quantitykind:ThermalConductivity ;
    qudt:iec61360Code "0112/2///62720#UAA126" ;
    qudt:informativeReference "http://www.translatorscafe.com/cafe/EN/units-converter/thermal-conductivity/c/"^^xsd:anyURI ;
    qudt:plainTextDescription "Unit of thermal conductivity according to the Imperial system of units" ;
    qudt:ucumCode "[Btu_th].[in_i].[ft_i]-2.s-1.[degF]-1"^^qudt:UCUMcs,
        "[Btu_th].[in_i]/([ft_i]2.s.[degF])"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_TH-PER-LB-DEG_F a qudt:Unit ;
    rdfs:label "British Thermal Unit (thermochemical) Per Pound Degree Fahrenheit"@en ;
    qudt:conversionMultiplier 426.654 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:SpecificHeatCapacity ;
    qudt:iec61360Code "0112/2///62720#UAA127" ;
    qudt:plainTextDescription "unit of the thermal conductivity according to the Imperial system of units divided by the units pound and degree Fahrenheit" ;
    qudt:ucumCode "[Btu_th].[lb_av]-1.[degF]-1"^^qudt:UCUMcs,
        "[Btu_th]/([lb_av].[degF])"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J50" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_TH-PER-MIN a qudt:Unit ;
    rdfs:label "British Thermal Unit (thermochemical) Per Minute"@en ;
    qudt:conversionMultiplier 17.573 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:HeatFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA128" ;
    qudt:plainTextDescription "unit of the heat energy according to the Imperial system of units divided by the unit minute" ;
    qudt:ucumCode "[Btu_th].min-1"^^qudt:UCUMcs,
        "[Btu_th]/min"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J51" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_TH-PER-SEC a qudt:Unit ;
    rdfs:label "British Thermal Unit (thermochemical) Per Second"@en ;
    qudt:conversionMultiplier 1054.35 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:HeatFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA129" ;
    qudt:plainTextDescription "unit of the heat energy according to the Imperial system of units divided by the SI base unit second" ;
    qudt:ucumCode "[Btu_th].s-1"^^qudt:UCUMcs,
        "[Btu_th]/s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J52" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BU_UK a qudt:Unit ;
    rdfs:label "bushel (UK)"@en ;
    dcterms:description "A bushel is an imperial unit of dry volume, equivalent in each of these systems to 4 pecks or 8 gallons. It is used for volumes of dry commodities (not liquids), most often in agriculture. It is abbreviated as bsh. or bu. In modern usage, the dry volume is usually only nominal, with bushels referring to standard weights instead."^^rdf:HTML ;
    qudt:conversionMultiplier 0.03636872 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Bushel"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:DryVolume ;
    qudt:iec61360Code "0112/2///62720#UAA344" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Bushel?oldid=476704875"^^xsd:anyURI ;
    qudt:symbol "bui" ;
    qudt:ucumCode "[bu_br]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "BUI" ;
    qudt:unitOfSystem sou:USCS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BU_US a qudt:Unit ;
    rdfs:label "bushel (US)"@en ;
    dcterms:description "A bushel is an imperial and U.S. customary unit of dry volume, equivalent in each of these systems to 4 pecks or 8 gallons. It is used for volumes of dry commodities (not liquids), most often in agriculture. It is abbreviated as bsh. or bu. In modern usage, the dry volume is usually only nominal, with bushels referring to standard weights instead."^^rdf:HTML ;
    qudt:conversionMultiplier 0.03523907 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Bushel"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:DryVolume ;
    qudt:iec61360Code "0112/2///62720#UAA353" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Bushel?oldid=476704875"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/bushel-US> ;
    qudt:symbol "bua" ;
    qudt:ucumCode "[bu_us]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "BUA" ;
    qudt:unitOfSystem sou:USCS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BYR a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Belarussian Ruble"@en ;
    dcterms:description "Belarus"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Belarusian_ruble"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Belarusian_ruble?oldid=494143246"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BelizeDollar a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Belize Dollar"@en ;
    dcterms:description "Belize"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Belize_dollar"^^xsd:anyURI ;
    qudt:expression "\\(BZD\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Belize_dollar?oldid=462662376"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BermudaDollar a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Bermuda Dollar"@en ;
    dcterms:description "Bermuda"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Bermudian_dollar"^^xsd:anyURI ;
    qudt:expression "\\(BMD\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Bermudian_dollar?oldid=492670344"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BolivianMvdol a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Bolivian Mvdol (Funds code)"@en ;
    dcterms:description "Bolivia"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:expression "\\(BOV\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Boliviano a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Boliviano"@en ;
    dcterms:description "Bolivia"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Bolivian_boliviano"^^xsd:anyURI ;
    qudt:expression "\\(BOB\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Bolivian_boliviano?oldid=494873944"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BrazilianReal a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Brazilian Real"@en ;
    dcterms:description "Brazil"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Brazilian_real"^^xsd:anyURI ;
    qudt:expression "\\(BRL\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Brazilian_real?oldid=495278259"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/BrazilianReal> ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BruneiDollar a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Brunei Dollar"@en ;
    dcterms:description "Brunei"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Brunei_dollar"^^xsd:anyURI ;
    qudt:expression "\\(BND\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Brunei_dollar?oldid=495134546"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BulgarianLev a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Bulgarian Lev"@en ;
    dcterms:description "Bulgaria"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Bulgarian_lev"^^xsd:anyURI ;
    qudt:expression "\\(BGN\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Bulgarian_lev?oldid=494947467"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BurundianFranc a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Burundian Franc"@en ;
    dcterms:description "Burundi"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Burundian_franc"^^xsd:anyURI ;
    qudt:expression "\\(BIF\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Burundian_franc?oldid=489383699"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:C-M a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Coulomb Metre"@en,
        "Coulomb Meter"@en-us ;
    dcterms:description "Coulomb Meter (C-m) is a unit in the category of Electric dipole moment. It is also known as atomic unit, u.a., au, ua. This unit is commonly used in the SI unit system. Coulomb Meter (C-m) has a dimension of LTI where L is length, T is time, and I is electric current. This unit is the standard SI unit in this category."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E1L1I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricDipoleMoment ;
    qudt:iec61360Code "0112/2///62720#UAA133" ;
    qudt:symbol "C m" ;
    qudt:ucumCode "C.m"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A26" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:C-M2 a qudt:Unit ;
    rdfs:label "Coulomb Square Metre"@en,
        "Coulomb Square Meter"@en-us ;
    dcterms:description "Coulomb Square Meter (C-m2) is a unit in the category of Electric quadrupole moment. This unit is commonly used in the SI unit system. Coulomb Square Meter (C-m2) has a dimension of L2TI where L is length, T is time, and I is electric current. This unit is the standard SI unit in this category."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(C m^{2}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L2I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricQuadrupoleMoment ;
    qudt:ucumCode "C.m2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:C-M2-PER-V a qudt:Unit ;
    rdfs:label "Coulomb Square Metre Per Volt"@en,
        "Coulomb Square Meter Per Volt"@en-us ;
    dcterms:description "Coulomb Square Meter (C-m2-per-volt) is a unit in the category of Electric polarizability."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(C m^{2} v^{-1}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E2L0I0M-1H0T4D0 ;
    qudt:hasQuantityKind quantitykind:Polarizability ;
    qudt:iec61360Code "0112/2///62720#UAB486" ;
    qudt:ucumCode "C.m2.V-1"^^qudt:UCUMcs,
        "C.m2/V"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A27" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:C-PER-CentiM3 a qudt:Unit ;
    rdfs:label "Coulomb Per Cubic Centimetre"@en,
        "Coulomb Per Cubic Centimeter"@en-us ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E1L-3I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricChargeVolumeDensity ;
    qudt:iec61360Code "0112/2///62720#UAB120" ;
    qudt:plainTextDescription "derived SI unit coulomb divided by the 0.000 001-fold of the power of the SI base unit metre by exponent 3" ;
    qudt:ucumCode "C.m-3"^^qudt:UCUMcs,
        "C/cm3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A28" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:C-PER-KiloGM-SEC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Coulomb Per Kilogram Second"@en ;
    dcterms:description "The SI unit of exposure rate"^^rdf:HTML ;
    qudt:expression "\\(C/kg-s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M-1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:ExposureRate ;
    qudt:iec61360Code "0112/2///62720#UAA132" ;
    qudt:informativeReference "http://en.wikibooks.org/wiki/Basic_Physics_of_Nuclear_Medicine/Units_of_Radiation_Measurement"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:ucumCode "C.kg-1.s-1"^^qudt:UCUMcs,
        "C/(kg.s)"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A31" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:C-PER-MOL a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Coulomb per Mole"@en ;
    dcterms:description " (\\(C/mol\\)) is a unit in the category of Molar electric charge. It is also known as \\(coulombs/mol\\). Coulomb Per Mol has a dimension of \\(TN{-1}I\\) where \\(T\\) is time, \\(N\\) is amount of substance, and \\(I\\) is electric current. This unit is the standard SI unit in this category."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(c-per-mol\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A-1E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricChargePerAmountOfSubstance ;
    qudt:iec61360Code "0112/2///62720#UAB142" ;
    qudt:ucumCode "C.mol-1"^^qudt:UCUMcs,
        "C/mol"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A32" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:C-PER-MilliM3 a qudt:Unit ;
    rdfs:label "Coulomb Per Cubic Millimetre"@en,
        "Coulomb Per Cubic Millimeter"@en-us ;
    qudt:conversionMultiplier 1000000000.0 ;
    qudt:hasDimensionVector qkdv:A0E1L-3I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricChargeVolumeDensity ;
    qudt:iec61360Code "0112/2///62720#UAB119" ;
    qudt:plainTextDescription "derived SI unit coulomb divided by the 0.000 000 001-fold of the power of the SI base unit metre by exponent 3" ;
    qudt:ucumCode "C.mm-3"^^qudt:UCUMcs,
        "C/mm3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A30" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:C2-M-PER-J a qudt:Unit ;
    rdfs:label "Square Coulomb Metre per Joule"@en,
        "Square Coulomb Meter per Joule"@en-us ;
    dcterms:description "\"Square Coulomb Meter per Joule\" is a unit for  'Polarizability' expressed as \\(C^{2} m^{2} J^{-1}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(C^{2} m^{2} J^{-1}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E2L0I0M-1H0T4D0 ;
    qudt:hasQuantityKind quantitykind:Polarizability ;
    qudt:ucumCode "C2.m.J-1"^^qudt:UCUMcs,
        "C2.m/J"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:C3-M-PER-J2 a qudt:Unit ;
    rdfs:label "Cubic Coulomb Metre per Square Joule"@en,
        "Cubic Coulomb Meter per Square Joule"@en-us ;
    dcterms:description "\"Cubic Coulomb Meter per Square Joule\" is a unit for  'Cubic Electric Dipole Moment Per Square Energy' expressed as \\(C^{3} m^{3} J^{-2}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(C^{3} m^{3} J^{-2}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E3L-1I0M-2H0T7D0 ;
    qudt:hasQuantityKind quantitykind:CubicElectricDipoleMomentPerSquareEnergy ;
    qudt:ucumCode "C3.m.J-2"^^qudt:UCUMcs,
        "C3.m/J2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:C4-M4-PER-J3 a qudt:Unit ;
    rdfs:label "Quartic Coulomb Metre per Cubic Energy"@en,
        "Quartic Coulomb Meter per Cubic Energy"@en-us ;
    dcterms:description "\"Quartic Coulomb Meter per Cubic Energy\" is a unit for  'Quartic Electric Dipole Moment Per Cubic Energy' expressed as \\(C^{4} m^{4} J^{-3}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(C^4m^4/J^3\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E4L-2I0M-3H0T10D0 ;
    qudt:hasQuantityKind quantitykind:QuarticElectricDipoleMomentPerCubicEnergy ;
    qudt:ucumCode "C4.m4.J-3"^^qudt:UCUMcs,
        "C4.m4/J3"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CAD a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Canadian Dollar"@en ;
    dcterms:description "Canada"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Canadian_dollar"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Canadian_dollar?oldid=494738466"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/CanadianDollar> ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CAL_IT-PER-GM-DEG_C a qudt:Unit ;
    rdfs:label "Calorie (international Table) Per Gram Degree Celsius"@en ;
    qudt:conversionMultiplier 4186.8 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:SpecificHeatCapacity ;
    qudt:iec61360Code "0112/2///62720#UAA362" ;
    qudt:plainTextDescription "unit calorieIT divided by the products of the units gram and degree Celsius" ;
    qudt:ucumCode "cal_IT.g-1.Cel-1"^^qudt:UCUMcs,
        "cal_IT/(g.Cel)"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J76" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CAL_IT-PER-GM-K a qudt:Unit ;
    rdfs:label "Calorie (international Table) Per Gram Kelvin"@en ;
    qudt:conversionMultiplier 4186.8 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:SpecificHeatCapacity ;
    qudt:iec61360Code "0112/2///62720#UAA363" ;
    qudt:plainTextDescription "unit calorieIT divided by the product of the SI base unit gram and Kelvin" ;
    qudt:ucumCode "cal_IT.g-1.K-1"^^qudt:UCUMcs,
        "cal_IT/(g.K)"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D76" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CAL_IT-PER-SEC-CentiM-K a qudt:Unit ;
    rdfs:label "Calorie (international Table) Per Second Centimetre Kelvin"@en,
        "Calorie (international Table) Per Second Centimeter Kelvin"@en-us ;
    qudt:conversionMultiplier 418.68 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H-1T-3D0 ;
    qudt:hasQuantityKind quantitykind:ThermalConductivity ;
    qudt:iec61360Code "0112/2///62720#UAB108" ;
    qudt:plainTextDescription "unit of the thermal conductivity according to the Imperial system of units" ;
    qudt:ucumCode "cal_IT.s-1.cm-1.K-1"^^qudt:UCUMcs,
        "cal_IT/(s.cm.K)"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D71" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CAL_IT-PER-SEC-CentiM2-K a qudt:Unit ;
    rdfs:label "Calorie (international Table) Per Second Square Centimetre kelvin"@en,
        "Calorie (international Table) Per Second Square Centimeter kelvin"@en-us ;
    qudt:conversionMultiplier 41868.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H-1T-3D0 ;
    qudt:hasQuantityKind quantitykind:CoefficientOfHeatTransfer ;
    qudt:iec61360Code "0112/2///62720#UAB096" ;
    qudt:plainTextDescription "unit of the heat transfer coefficient according to the Imperial system of units" ;
    qudt:ucumCode "cal_IT.s-1.cm-2.K-1"^^qudt:UCUMcs,
        "cal_IT/(s.cm2.K)"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D72" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CAL_TH-PER-CentiM-SEC-DEG_C a qudt:Unit ;
    rdfs:label "Calorie (thermochemical) Per Centimetre Second Degree Celsius"@en,
        "Calorie (thermochemical) Per Centimeter Second Degree Celsius"@en-us ;
    qudt:conversionMultiplier 418.4 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H-1T-3D0 ;
    qudt:hasQuantityKind quantitykind:ThermalConductivity ;
    qudt:iec61360Code "0112/2///62720#UAA365" ;
    qudt:plainTextDescription "unit of the thermal conductivity according to the Imperial system of units" ;
    qudt:ucumCode "cal_th.cm-1.s-1.Cel-1"^^qudt:UCUMcs,
        "cal_th/(cm.s.Cel)"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J78" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CAL_TH-PER-GM-DEG_C a qudt:Unit ;
    rdfs:label "Calorie (thermochemical) Per Gram Degree Celsius"@en ;
    qudt:conversionMultiplier 4184.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:SpecificHeatCapacity ;
    qudt:iec61360Code "0112/2///62720#UAA366" ;
    qudt:plainTextDescription "unit calorie (thermochemical) divided by the product of the unit gram and degree Celsius" ;
    qudt:ucumCode "cal_th.g-1.Cel-1"^^qudt:UCUMcs,
        "cal_th/(g.Cel)"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J79" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CAL_TH-PER-GM-K a qudt:Unit ;
    rdfs:label "Calorie (thermochemical) Per Gram Kelvin"@en ;
    qudt:conversionMultiplier 4184.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:SpecificHeatCapacity ;
    qudt:iec61360Code "0112/2///62720#UAA367" ;
    qudt:plainTextDescription "unit calorie (thermochemical) divided by the product of the SI derived unit gram and the SI base unit Kelvin" ;
    qudt:ucumCode "cal_th.g-1.K-1"^^qudt:UCUMcs,
        "cal_th/(g.K)"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D37" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CAL_TH-PER-MIN a qudt:Unit ;
    rdfs:label "Calorie (thermochemical) Per Minute"@en ;
    qudt:conversionMultiplier 0.06973 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:HeatFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA368" ;
    qudt:plainTextDescription "unit calorie divided by the unit minute" ;
    qudt:ucumCode "cal_th.min-1"^^qudt:UCUMcs,
        "cal_th/min"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J81" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CAL_TH-PER-SEC a qudt:Unit ;
    rdfs:label "Calorie (thermochemical) Per Second"@en ;
    qudt:conversionMultiplier 4.184 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:HeatFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA369" ;
    qudt:plainTextDescription "unit calorie divided by the SI base unit second" ;
    qudt:ucumCode "cal_th.s-1"^^qudt:UCUMcs,
        "cal_th/s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J82" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CAL_TH-PER-SEC-CentiM-K a qudt:Unit ;
    rdfs:label "Calorie (thermochemical) Per Second Centimetre Kelvin"@en,
        "Calorie (thermochemical) Per Second Centimeter Kelvin"@en-us ;
    qudt:conversionMultiplier 418.4 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H-1T-3D0 ;
    qudt:hasQuantityKind quantitykind:ThermalConductivity ;
    qudt:iec61360Code "0112/2///62720#UAB109" ;
    qudt:plainTextDescription "unit of the thermal conductivity according to the Imperial system of units" ;
    qudt:ucumCode "cal_th.s-1.cm-1.K-1"^^qudt:UCUMcs,
        "cal_th/(s.cm.K)"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D38" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CAL_TH-PER-SEC-CentiM2-K a qudt:Unit ;
    rdfs:label "Calorie (thermochemical) Per Second Square Centimetre kelvin"@en,
        "Calorie (thermochemical) Per Second Square Centimeter kelvin"@en-us ;
    qudt:conversionMultiplier 41840.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H-1T-3D0 ;
    qudt:hasQuantityKind quantitykind:CoefficientOfHeatTransfer ;
    qudt:iec61360Code "0112/2///62720#UAB097" ;
    qudt:plainTextDescription "unit of the heat transfer coefficient according to the Imperial system of units" ;
    qudt:ucumCode "cal_th.s-1.cm-2.K-1"^^qudt:UCUMcs,
        "cal_th/(s.cm2.K)"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D39" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CFU a qudt:Unit ;
    rdfs:label "Colony Forming Unit"@en ;
    dcterms:description "\"Colony Forming Unit\" is a unit for  'Microbial Formation' expressed as \\(CFU\\)."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Colony-forming_unit"^^xsd:anyURI ;
    qudt:hasQuantityKind quantitykind:MicrobialFormation ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Colony-forming_unit?oldid=473146689"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/colonyFormingUnit> ;
    qudt:symbol "CFU" ;
    qudt:ucumCode "[CFU]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CLO a qudt:Unit ;
    rdfs:label "Clo"@en ;
    dcterms:description "A C.G.S System unit for \\(\\textit{Thermal Insulance}\\) expressed as \"clo\"."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.155 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-1H1T3D0 ;
    qudt:hasQuantityKind quantitykind:ThermalInsulance ;
    qudt:iec61360Code "0112/2///62720#UAA374" ;
    qudt:symbol "clo" ;
    qudt:uneceCommonCode "J83" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CORD a qudt:Unit ;
    rdfs:label "Cord"@en ;
    dcterms:description "The cord is a unit of measure of dry volume used in Canada and the United States to measure firewood and pulpwood. A cord is the amount of wood that, when 'ranked and well stowed' (arranged so pieces are aligned, parallel, touching and compact), occupies a volume of 128 cubic feet (3.62 cubic metres). This corresponds to a well stacked woodpile 4 feet (122 cm) wide, 4 feet (122 cm) high, and 8 feet (244 cm) long; or any other arrangement of linear measurements that yields the same volume. The name cord probably comes from the use of a cord or string to measure it. "^^rdf:HTML ;
    qudt:conversionMultiplier 3.62 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Cord"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:DryVolume ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Cord?oldid=490232340"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/cord> ;
    qudt:symbol "C" ;
    qudt:ucumCode "[crd_us]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:USCS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CUP a qudt:Unit ;
    rdfs:label "US Liquid Cup"@en ;
    dcterms:description "\"US Liquid Cup\" is a unit for  'Liquid Volume' expressed as \\(cup\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00023658825 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:LiquidVolume ;
    qudt:symbol "cup" ;
    qudt:ucumCode "[cup_us]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CUP_US a qudt:Unit ;
    rdfs:label "Cup (US)"@en ;
    qudt:conversionMultiplier 0.0002365882 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:LiquidVolume ;
    qudt:iec61360Code "0112/2///62720#UAA404" ;
    qudt:plainTextDescription "unit of the volume according to the Anglo-American system of units" ;
    qudt:ucumCode "[cup_us]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G21" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:C_Stat-PER-MOL a qudt:Unit ;
    rdfs:label "Statcoulomb per Mole"@en ;
    dcterms:description "\"Statcoulomb per Mole\" is a unit of measure for the electical charge associated with one mole of a substance. The mole is a unit of measurement used in chemistry to express amounts of a chemical substance, defined as an amount of a substance that contains as many elementary entities (e.g., atoms, molecules, ions, electrons) as there are atoms in 12 grams of pure carbon-12 (12C), the isotope of carbon with atomic weight 12."^^rdf:HTML ;
    qudt:conversionMultiplier 0.000000000333564 ;
    qudt:expression "\\(statC/mol\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A-1E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricChargePerAmountOfSubstance ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CapeVerdeEscudo a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Cape Verde Escudo"@en ;
    dcterms:description "Cape Verde"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Cape_Verdean_escudo"^^xsd:anyURI ;
    qudt:expression "\\(CVE\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Cape_Verdean_escudo?oldid=491416749"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CaymanIslandsDollar a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Cayman Islands Dollar"@en ;
    dcterms:description "Cayman Islands"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Cayman_Islands_dollar"^^xsd:anyURI ;
    qudt:expression "\\(KYD\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Cayman_Islands_dollar?oldid=494206112"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Cedi a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Cedi"@en ;
    dcterms:description "Ghana"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Ghanaian_cedi"^^xsd:anyURI ;
    qudt:expression "\\(GHS\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Ghanaian_cedi?oldid=415914569"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CentiL a qudt:Unit ;
    rdfs:label "Centilitre"@en,
        "Centilitre"@en-us ;
    qudt:conversionMultiplier 0.00001 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:LiquidVolume ;
    qudt:iec61360Code "0112/2///62720#UAA373" ;
    qudt:plainTextDescription "0,01-fold of the unit litre" ;
    qudt:ucumCode "cL"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "CLT" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CentiM-PER-K a qudt:Unit ;
    rdfs:label "Centimetre Per Kelvin"@en,
        "Centimeter Per Kelvin"@en-us ;
    qudt:conversionMultiplier 0.01 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H-1T0D0 ;
    qudt:hasQuantityKind quantitykind:LinearThermalExpansion ;
    qudt:iec61360Code "0112/2///62720#UAA376" ;
    qudt:plainTextDescription "0,01-fold of the SI base unit metre divided by the SI base unit kelvin" ;
    qudt:ucumCode "cm.K-1"^^qudt:UCUMcs,
        "cm/K"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F51" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CentiM-SEC-DEG_C a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Centimetre Second Degree Celsius"@en,
        "Centimeter Second Degree Celsius"@en-us ;
    dcterms:description "\\(\\textbf{Centimeter Second Degree Celsius}\\) is a C.G.S System unit for 'Length Temperature Time' expressed as \\(cm-s-degC\\)."^^qudt:LatexString ;
    qudt:expression "\\(cm-s-degC\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H1T1D0 ;
    qudt:hasQuantityKind quantitykind:LengthTemperatureTime ;
    qudt:ucumCode "cm.s.Cel-1"^^qudt:UCUMcs,
        "cm.s/Cel"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CentiM2-MIN a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Square Centimetre Minute"@en,
        "Square Centimeter Minute"@en-us ;
    dcterms:description "\"Square centimeter minute\" is a unit for  'Area Time' expressed as \\(cm^{2} . m\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.006 ;
    qudt:expression "\\(cm^{2}m\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:AreaTime ;
    qudt:ucumCode "cm2.min"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CentiM2-SEC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Square Centimetre Second"@en,
        "Square Centimeter Second"@en-us ;
    dcterms:description "\"Square Centimeter Second\" is a C.G.S System unit for  'Area Time' expressed as \\(cm^2 . s\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0001 ;
    qudt:derivedUnitOfSystem sou:CGS,
        sou:CGS-GAUSS ;
    qudt:expression "\\(cm^2 . s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:AreaTime ;
    qudt:ucumCode "cm2.s"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CentiM3-PER-K a qudt:Unit ;
    rdfs:label "Cubic Centimetre Per Kelvin"@en,
        "Cubic Centimeter Per Kelvin"@en-us ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H-1T0D0 ;
    qudt:hasQuantityKind quantitykind:VolumeThermalExpansion ;
    qudt:iec61360Code "0112/2///62720#UAA386" ;
    qudt:plainTextDescription "0,000 001-fold of the power of the SI base unit metre with the exponent 3 divided by the SI base unit kelvin" ;
    qudt:ucumCode "cm3.K-1"^^qudt:UCUMcs,
        "cm3/K"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G27" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CentiM3-PER-M3 a qudt:Unit ;
    rdfs:label "Cubic Centimetre Per Cubic Metre"@en,
        "Cubic Centimeter Per Cubic Meter"@en-us ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:VolumeFraction ;
    qudt:iec61360Code "0112/2///62720#UAA394" ;
    qudt:plainTextDescription "volume ratio consisting of the 0.000 001-fold of the power of the SI base unit metre with the exponent 3 divided by the power of the SI base unit metre with the exponent 3" ;
    qudt:ucumCode "cm3.m-3"^^qudt:UCUMcs,
        "cm3/m3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J87" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CentiM3-PER-MOL a qudt:Unit ;
    rdfs:label "Cubic Centimetre Per Mole"@en,
        "Cubic Centimeter Per Mole"@en-us ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A-1E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MolarVolume ;
    qudt:iec61360Code "0112/2///62720#UAA398" ;
    qudt:plainTextDescription "0.000 001-fold of the power of the SI base unit metre with the exponent 3 divided by the SI base unit mol" ;
    qudt:ucumCode "cm3.mol-1"^^qudt:UCUMcs,
        "cm3/mol"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A36" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CentiPOISE a qudt:Unit ;
    rdfs:label "Centipoise"@en ;
    dcterms:description "\\(\\textbf{Centipoise}\\) is a C.G.S System unit for  'Dynamic Viscosity' expressed as \\(cP\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.01 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:DynamicViscosity ;
    qudt:iec61360Code "0112/2///62720#UAA356" ;
    qudt:plainTextDescription "0,01-fold of the CGS unit of the dynamic viscosity poise" ;
    qudt:symbol "cP" ;
    qudt:ucumCode "cP"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C7" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CentiST a qudt:Unit ;
    rdfs:label "Centistokes"@en ;
    dcterms:description "\\(\\textbf{Centistokes}\\) is a C.G.S System unit for  'Kinematic Viscosity' expressed as \\(cSt\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.01 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:KinematicViscosity ;
    qudt:iec61360Code "0112/2///62720#UAA359" ;
    qudt:symbol "cSt" ;
    qudt:ucumCode "cSt"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "4C" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:ChileanPeso a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Chilean Peso"@en ;
    dcterms:description "Chile"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Chilean_peso"^^xsd:anyURI ;
    qudt:expression "\\(CLP\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Chilean_peso?oldid=495455481"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:ColombianPeso a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Colombian Peso"@en ;
    dcterms:description "Colombia"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Colombian_peso"^^xsd:anyURI ;
    qudt:expression "\\(COP\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Colombian_peso?oldid=490834575"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:ComoroFranc a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Comoro Franc"@en ;
    dcterms:description "Comoros"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Comorian_franc"^^xsd:anyURI ;
    qudt:expression "\\(KMF\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Comorian_franc?oldid=489502162"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:ConvertibleMark a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Convertible Marks"@en ;
    dcterms:description "Bosnia and Herzegovina"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:expression "\\(BAM\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CordobaOro a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Cordoba Oro"@en ;
    dcterms:description "Nicaragua"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Nicaraguan_c%C3%B3rdoba"^^xsd:anyURI ;
    qudt:expression "\\(NIO\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Nicaraguan_córdoba?oldid=486140595"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CostaRicanColon a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Costa Rican Colon"@en ;
    dcterms:description "Costa Rica"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Costa_Rican_col%C3%B3n"^^xsd:anyURI ;
    qudt:expression "\\(CRC\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Costa_Rican_colón?oldid=491007608"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CroatianKuna a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Croatian Kuna"@en ;
    dcterms:description "Croatia"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Croatian_kuna"^^xsd:anyURI ;
    qudt:expression "\\(HRK\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Croatian_kuna?oldid=490959527"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CubanPeso a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Cuban Peso"@en ;
    dcterms:description "Cuba"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Cuban_peso"^^xsd:anyURI ;
    qudt:expression "\\(CUP\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Cuban_peso?oldid=486492974"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CyprusPound a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Cyprus Pound"@en ;
    dcterms:description "Cyprus"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Cypriot_pound"^^xsd:anyURI ;
    qudt:expression "\\(CYP\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Cypriot_pound?oldid=492644935"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CzechKoruna a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Czech Koruna"@en ;
    dcterms:description "Czech Republic"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Czech_koruna"^^xsd:anyURI ;
    qudt:expression "\\(CZK\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Czech_koruna?oldid=493991393"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEATHS-PER-1000000I-YR a qudt:Unit ;
    rdfs:label "Deaths per Million individuals per year"@en ;
    dcterms:description "The expression of mortality rate, expressed as deaths per 1,000,000 individuals, per year."^^rdf:HTML ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MortalityRate ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Mortality_rate"^^xsd:anyURI ;
    qudt:plainTextDescription "The expression of mortality rate, expressed as deaths per Million individuals, per year." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEATHS-PER-1000I-YR a qudt:Unit ;
    rdfs:label "Deaths per 1000 individuals per year"@en ;
    dcterms:description "The typical expression of mortality rate, expressed as deaths per 1000 individuals, per year."^^rdf:HTML ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MortalityRate ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Mortality_rate"^^xsd:anyURI ;
    qudt:plainTextDescription "The typical expression of mortality rate, expressed as deaths per 1000 individuals, per year." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DECADE a qudt:DimensionlessUnit,
        qudt:LogarithmicUnit,
        qudt:Unit ;
    rdfs:label "Dec"@en ;
    dcterms:description "One decade is a factor of 10 difference between two numbers (an order of magnitude difference) measured on a logarithmic scale. It is especially useful when referring to frequencies and when describing frequency response of electronic systems, such as audio amplifiers and filters. The factor-of-ten in a decade can be in either direction: so one decade up from 100 Hz is 1000 Hz, and one decade down is 10 Hz. The factor-of-ten is what is important, not the unit used, so \\(3.14 rad/s\\) is one decade down from \\(31.4 rad/s\\)."^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Dimensionless ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Decade_(log_scale)"^^xsd:anyURI ;
    qudt:symbol "oct" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG-PER-SEC2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Degree per Square Second"@en ;
    dcterms:description "\\(\\textit{Degree per Square Second}\\) is an Imperial unit for \\(\\textit{Angular Acceleration}\\) expressed as \\(deg/s^2\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0174532925 ;
    qudt:expression "\\(deg/s^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:AngularAcceleration ;
    qudt:iec61360Code "0112/2///62720#UAB407" ;
    qudt:ucumCode "deg.s-2"^^qudt:UCUMcs,
        "deg/s2"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG2 a qudt:Unit ;
    rdfs:label "Square degree"@en ;
    dcterms:description "A square degree is a non-SI unit measure of solid angle. It is denoted in various ways, including deg, sq. deg. and \\(\\circ^2\\). Just as degrees are used to measure parts of a circle, square degrees are used to measure parts of a sphere. Analogous to one degree being equal to \\(\\pi /180 radians\\), a square degree is equal to (\\(\\pi /180)\\) or about 1/3283 steradian. The number of square degrees in a whole sphere is or approximately 41 253 deg. This is the total area of the 88 constellations in the list of constellations by area. For example, observed from the surface of the Earth, the Moon has a diameter of approximately \\(0.5^\\circ\\), so it covers a solid angle of approximately 0.196 deg, which is \\(4.8 \\times 10\\) of the total sky sphere."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00030461742 ;
    qudt:expression "\\(deg^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:SolidAngle ;
    qudt:ucumCode "deg2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEGREE_API a qudt:Unit ;
    rdfs:label "Degree API"@en ;
    qudt:conversionMultiplier 0.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Gravity_API ;
    qudt:iec61360Code "0112/2///62720#UAA027" ;
    qudt:plainTextDescription "unit for the determination of the density of petroleum at 60 degrees F (15.56 degrees C)" ;
    qudt:uneceCommonCode "J13" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEGREE_BALLING a qudt:Unit ;
    rdfs:label "Degree Balling"@en ;
    qudt:conversionMultiplier 0.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:iec61360Code "0112/2///62720#UAA031" ;
    qudt:plainTextDescription "unit for the mixing ratio of a soluble dry substance in water at 17.5 degrees C similar to the percent designation for solutions, in which a solution of 1 g saccharose in 100 g saccharose/ water solution corresponds to 1 degree Balling and respectively a one percent solution" ;
    qudt:uneceCommonCode "J17" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEGREE_BAUME a qudt:Unit ;
    rdfs:label "Degree Baume (origin Scale)"@en ;
    qudt:conversionMultiplier 0.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:iec61360Code "0112/2///62720#UAA028" ;
    qudt:plainTextDescription """graduation of the areometer scale for determination of densitiy of fluids.

The Baumé scale is a pair of hydrometer scales developed by French pharmacist Antoine Baumé in 1768 to measure density of various liquids. The unit of the Baumé scale has been notated variously as degrees Baumé, B°, Bé° and simply Baumé (the accent is not always present). One scale measures the density of liquids heavier than water and the other, liquids lighter than water. The Baumé of distilled water is 0. The API gravity scale is based on errors in early implementations of the Baumé scale.""" ;
    qudt:uneceCommonCode "J14" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEGREE_BAUME_US_HEAVY a qudt:Unit ;
    rdfs:label "Degree Baume (US Heavy)"@en ;
    qudt:conversionMultiplier 0.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:iec61360Code "0112/2///62720#UAA029" ;
    qudt:plainTextDescription "graduation of the areometer scale for determination of density of fluids according to the Anglo-American system of units, which are heavier than water" ;
    qudt:uneceCommonCode "J15" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEGREE_BAUME_US_LIGHT a qudt:Unit ;
    rdfs:label "Degree Baume (US Light)"@en ;
    qudt:conversionMultiplier 0.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:iec61360Code "0112/2///62720#UAA030" ;
    qudt:plainTextDescription "graduation of the areometer scale for determination of density of fluids according to the Anglo-American system of units, which are lighter than water" ;
    qudt:uneceCommonCode "J16" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEGREE_BRIX a qudt:Unit ;
    rdfs:label "Degree Brix"@en ;
    qudt:conversionMultiplier 0.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:iec61360Code "0112/2///62720#UAA032" ;
    qudt:plainTextDescription "unit named according to Adolf Brix for the mixing ratio of a soluble dry substance in water with 15.5 °C similar to the percent designation for solutions, in which a solution of 1 g saccharose in 100 g saccharose/water solution corresponds to 1 °Brix and respectively an one percent solution" ;
    qudt:uneceCommonCode "J18" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEGREE_OECHSLE a qudt:Unit ;
    rdfs:label "Degree Oechsle"@en ;
    qudt:conversionMultiplier 0.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:iec61360Code "0112/2///62720#UAA048" ;
    qudt:plainTextDescription "unit of the density of the must, as measure for the proportion of the soluble material in the grape must" ;
    qudt:uneceCommonCode "J27" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEGREE_PLATO a qudt:Unit ;
    rdfs:label "Degree Plato"@en ;
    qudt:conversionMultiplier 0.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:iec61360Code "0112/2///62720#UAA049" ;
    qudt:plainTextDescription "unit for the mixing ratio of the original gravity in the beer brew at 17,5 °C before the fermentation" ;
    qudt:uneceCommonCode "PLA" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEGREE_TWADDELL a qudt:Unit ;
    rdfs:label "Degree Twaddell"@en ;
    qudt:conversionMultiplier 0.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:iec61360Code "0112/2///62720#UAA054" ;
    qudt:plainTextDescription "unit of the density of fluids, which are heavier than water" ;
    qudt:uneceCommonCode "J31" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG_C-CentiM a qudt:Unit ;
    rdfs:label "Degree Celsius Centimetre"@en,
        "Degree Celsius Centimeter"@en-us ;
    dcterms:description "\\(\\textbf{Degree Celsius Centimeter} is a C.G.S System unit for 'Length Temperature' expressed as \\(cm-degC\\)."^^qudt:LatexString ;
    qudt:expression "\\(cm-degC\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H1T0D0 ;
    qudt:hasQuantityKind quantitykind:LengthTemperature ;
    qudt:ucumCode "Cel.cm"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG_C-PER-K a qudt:Unit ;
    rdfs:label "Degree Celsius Per Kelvin"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:TemperatureRatio ;
    qudt:iec61360Code "0112/2///62720#UAA034" ;
    qudt:plainTextDescription "unit with the name Degree Celsius divided by the SI base unit kelvin" ;
    qudt:ucumCode "Cel.K-1"^^qudt:UCUMcs,
        "Cel/K"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "E98" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG_C-WK a qudt:Unit ;
    rdfs:label "Degree Celsius week"@en ;
    dcterms:description "temperature multiplied by unit of time."@en ;
    qudt:conversionMultiplier 604800.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T1D0 ;
    qudt:hasQuantityKind quantitykind:TimeTemperature ;
    qudt:ucumCode "Cel.wk"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG_F-HR a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Degree Fahrenheit Hour"@en ;
    dcterms:description ""^^qudt:LatexString ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(degF-hr\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M-1H1T3D0 ;
    qudt:hasQuantityKind quantitykind:ThermalResistivity ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG_F-HR-FT2-PER-BTU_IT a qudt:Unit ;
    rdfs:label "Degree Fahrenheit Hour Square Foot per British Thermal Unit (international Table)"@en ;
    qudt:conversionMultiplier 1.89563 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-1H1T3D0 ;
    qudt:hasQuantityKind quantitykind:ThermalInsulance ;
    qudt:iec61360Code "0112/2///62720#UAA043" ;
    qudt:plainTextDescription "unit of the thermal resistor according to the Imperial system of units" ;
    qudt:ucumCode "[degF].h-1.[ft_i]-2.[Btu_IT]-1"^^qudt:UCUMcs,
        "[degF]/(h.[ft_i]2.[Btu_IT])"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J22" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG_F-HR-FT2-PER-BTU_TH a qudt:Unit ;
    rdfs:label "Degree Fahrenheit Hour Square Foot per British Thermal Unit (thermochemical)"@en ;
    qudt:conversionMultiplier 1.8969 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-1H1T3D0 ;
    qudt:hasQuantityKind quantitykind:ThermalInsulance ;
    qudt:iec61360Code "0112/2///62720#UAA040" ;
    qudt:plainTextDescription "unit of the thermal resistor according to the according to the Imperial system of units" ;
    qudt:ucumCode "[degF].h-1.[ft_i]-2.[Btu_th]-1"^^qudt:UCUMcs,
        "[degF]/(h.[ft_i]2.[Btu_th])"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J19" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG_F-HR-PER-BTU_IT a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Degree Fahrenheit Hour per BTU"@en ;
    dcterms:description "\\(\\textbf{Degree Fahrenheit Hour per BTU} is an Imperial unit for 'Thermal Resistance' expressed as \\(degF-hr/Btu\\)."^^qudt:LatexString ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(degF-hr/Btu\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M-1H1T3D0 ;
    qudt:hasQuantityKind quantitykind:ThermalResistance ;
    qudt:ucumCode "[degF].h.[Btu_IT]-1"^^qudt:UCUMcs,
        "[degF].h/[Btu_IT]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG_F-PER-K a qudt:Unit ;
    rdfs:label "Degree Fahrenheit Per Kelvin"@en ;
    qudt:conversionMultiplier 0.5555556 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:TemperatureRatio ;
    qudt:iec61360Code "0112/2///62720#UAA041" ;
    qudt:plainTextDescription "traditional unit degree Fahrenheit for temperature according to the Anglo-American system of units divided by the SI base unit Kelvin" ;
    qudt:ucumCode "[degF].K-1"^^qudt:UCUMcs,
        "[degF]/K"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J20" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DIOPTER a qudt:Unit ;
    rdfs:label "Diopter"@en ;
    dcterms:description "A dioptre, or diopter, is a unit of measurement for the optical power of a lens or curved mirror, which is equal to the reciprocal of the focal length measured in metres (that is, \\(1/metre\\)). For example, a \\(3 \\; dioptre\\) lens brings parallel rays of light to focus at \\(1/3\\,metre\\). The same unit is also sometimes used for other reciprocals of distance, particularly radii of curvature and the vergence of optical beams. Though the diopter is based on the SI-metric system it has not been included in the standard so that there is no international name or abbreviation for this unit of measurement within the international system of units this unit for optical power would need to be specified explicitly as the inverse metre."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Dioptre"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Curvature ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Dioptre?oldid=492506920"^^xsd:anyURI ;
    qudt:symbol "D" ;
    qudt:ucumCode "[diop]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DYN-PER-CentiM a qudt:Unit ;
    rdfs:label "Dyne Per Centimetre"@en,
        "Dyne Per Centimeter"@en-us ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerLength ;
    qudt:iec61360Code "0112/2///62720#UAB106" ;
    qudt:plainTextDescription "CGS unit of the surface tension" ;
    qudt:ucumCode "dyn.cm-1"^^qudt:UCUMcs,
        "dyn/cm"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "DX" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DYN-SEC-PER-CentiM a qudt:Unit ;
    rdfs:label "Dyne Second Per Centimetre"@en,
        "Dyne Second Per Centimeter"@en-us ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAB144" ;
    qudt:plainTextDescription "CGS unit of the mechanical impedance" ;
    qudt:ucumCode "dyn.s.cm-1"^^qudt:UCUMcs,
        "dyn.s/cm"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A51" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DYN-SEC-PER-CentiM3 a qudt:Unit ;
    rdfs:label "Dyne Second Per Cubic Centimetre"@en,
        "Dyne Second Per Cubic Centimeter"@en-us ;
    qudt:conversionMultiplier 10.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassPerAreaTime ;
    qudt:iec61360Code "0112/2///62720#UAB102" ;
    qudt:plainTextDescription "CGS unit of the acoustic image impedance of the medium" ;
    qudt:ucumCode "dyn.s.cm-3"^^qudt:UCUMcs,
        "dyn.s/cm3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A50" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DZD a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Algerian Dinar"@en ;
    dcterms:description "Algeria"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Algerian_dinar"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Algerian_dinar?oldid=492845503"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Dalasi a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Dalasi"@en ;
    dcterms:description "Gambia"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Gambian_dalasi"^^xsd:anyURI ;
    qudt:expression "\\(GMD\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Gambian_dalasi?oldid=489522429"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DanishKrone a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Danish Krone"@en ;
    dcterms:description "Denmark, Faroe Islands, Greenland"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Danish_krone"^^xsd:anyURI ;
    qudt:expression "\\(DKK\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Danish_krone?oldid=491168880"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Debye a qudt:Unit ;
    rdfs:label "Debye"@en ;
    dcterms:description "\"Debye\" is a C.G.S System unit for  'Electric Dipole Moment' expressed as \\(D\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00000000000000000000000000000333564 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Debye"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E1L1I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricDipoleMoment ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Debye?oldid=492149112"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/debye> ;
    qudt:symbol "D" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DeciBAR-PER-YR a qudt:Unit ;
    rdfs:label "Decibars per year"@en ;
    dcterms:description "A rate of change of pressure expressed in decibars over a period of an average calendar year (365.25 days)."@en ;
    qudt:conversionMultiplier 0.18 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerAreaTime ;
    qudt:ucumCode "dbar.a-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DeciB_C a qudt:Unit ;
    rdfs:label "Decibel Carrier Unit"@en ;
    dcterms:description "\"Decibel Carrier Unit\" is a unit for  'Signal Detection Threshold' expressed as \\(dBc\\)."^^qudt:LatexString ;
    qudt:hasQuantityKind quantitykind:SignalDetectionThreshold ;
    qudt:symbol "dBc" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DeciL-PER-GM a qudt:Unit ;
    rdfs:label "Decilitre Per Gram"@en,
        "Decilitre Per Gram"@en-us ;
    qudt:conversionMultiplier 0.1 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M-1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:SpecificVolume ;
    qudt:iec61360Code "0112/2///62720#UAB094" ;
    qudt:plainTextDescription "0.1-fold of the unit of the volume litre divided by the 0.001-fold of the SI base unit kilogram" ;
    qudt:ucumCode "dL.g-1"^^qudt:UCUMcs,
        "dL/g"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "22" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DeciM3-PER-M3 a qudt:Unit ;
    rdfs:label "Cubic Decimetre Per Cubic Metre"@en,
        "Cubic Decimeter Per Cubic Meter"@en-us ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:VolumeFraction ;
    qudt:iec61360Code "0112/2///62720#UAA417" ;
    qudt:plainTextDescription "volume ratio consisting of the 0.001-fold of the power of the SI base unit metre with the exponent 3 divided by the power of the SI base unit metre with the exponent 3" ;
    qudt:ucumCode "dm3.m-3"^^qudt:UCUMcs,
        "dm3/m3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J91" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DeciM3-PER-MOL a qudt:Unit ;
    rdfs:label "Cubic Decimetre Per Mole"@en,
        "Cubic Decimeter Per Mole"@en-us ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A-1E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MolarVolume ;
    qudt:iec61360Code "0112/2///62720#UAA419" ;
    qudt:plainTextDescription "0,001-fold of the power of the SI base unit metre with the exponent 3 divided by the SI base unit mol" ;
    qudt:ucumCode "dm3.mol-1"^^qudt:UCUMcs,
        "dm3/mol"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A37" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Denar a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Denar"@en ;
    dcterms:description "Former Yugoslav Republic of Macedonia"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Macedonian_denar"^^xsd:anyURI ;
    qudt:expression "\\(MKD\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Macedonian_denar?oldid=489550202"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Denier a qudt:Unit ;
    rdfs:label "Denier"@en ;
    dcterms:description "Denier or den is a unit of measure for the linear mass density of fibers. It is defined as the mass in grams per 9,000 meters. In the International System of Units the tex is used instead (see below). The denier is based on a natural standard: a single strand of silk is approximately one denier. A 9,000-meter strand of silk weighs about one gram. The term denier is from the French denier, a coin of small value (worth 1/12 of a sou). Applied to yarn, a denier was held to be equal in weight to 1/24 of an ounce. The term microdenier is used to describe filaments that weigh less than one gram per 9,000 meter length."^^rdf:HTML ;
    qudt:conversionMultiplier 0.00000011 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Denier"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassPerLength ;
    qudt:iec61360Code "0112/2///62720#UAB244" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Denier?oldid=463382291"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Units_of_textile_measurement#Denier"^^xsd:anyURI ;
    qudt:ucumCode "[den]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A49" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DjiboutiFranc a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Djibouti Franc"@en ;
    dcterms:description "Djibouti"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Djiboutian_franc"^^xsd:anyURI ;
    qudt:expression "\\(DJF\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Djiboutian_franc?oldid=486807423"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Dobra a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Dobra"@en ;
    dcterms:description "The currency of São Tomé and Príncipe"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Dobra"^^xsd:anyURI ;
    qudt:expression "\\(STD\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Dobra?oldid=475725328"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DominicanPeso a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Dominican Peso"@en ;
    dcterms:description "Dominican Republic"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Dominican_peso"^^xsd:anyURI ;
    qudt:expression "\\(DOP\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Dominican_peso?oldid=493950199"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:ERG-PER-CentiM a qudt:Unit ;
    rdfs:label "Erg Per Centimetre"@en,
        "Erg Per Centimeter"@en-us ;
    qudt:conversionMultiplier 0.00001 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:TotalLinearStoppingPower ;
    qudt:iec61360Code "0112/2///62720#UAB145" ;
    qudt:plainTextDescription "CGS unit of the length-related energy" ;
    qudt:ucumCode "erg.cm-1"^^qudt:UCUMcs,
        "erg/cm"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A58" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:ERG-PER-GM-SEC a qudt:Unit ;
    rdfs:label "Erg Per Gram Second"@en ;
    qudt:conversionMultiplier 0.0001 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:AbsorbedDoseRate ;
    qudt:iec61360Code "0112/2///62720#UAB147" ;
    qudt:plainTextDescription "CGS unit of the mass-related power" ;
    qudt:ucumCode "erg.g-1.s-1"^^qudt:UCUMcs,
        "erg/(g.s)"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A62" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:ERLANG a qudt:Unit ;
    rdfs:label "Erlang"@en ;
    dcterms:description "The \"Erlang\" is a dimensionless unit that is used in telephony as a measure of offered load or carried load on service-providing elements such as telephone circuits or telephone switching equipment."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Erlang_(unit)"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:InformationEntropy ;
    qudt:iec61360Code "0112/2///62720#UAB340" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Erlang_(unit)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31898"^^xsd:anyURI ;
    qudt:symbol "E" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:EV-PER-ANGSTROM a qudt:Unit ;
    rdfs:label "Electronvolt Per Angstrom"@en ;
    qudt:conversionMultiplier 0.000000001602176 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:TotalLinearStoppingPower ;
    qudt:latexSymbol "\\(ev/\\AA\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "unit electronvolt divided by the unit angstrom" ;
    qudt:ucumCode "eV.Ao-1"^^qudt:UCUMcs,
        "eV/Ao"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:EV-PER-K a qudt:Unit ;
    rdfs:label "Electron Volt per Kelvin"@en ;
    dcterms:description "\\(\\textbf{Electron Volt per Kelvin} is a unit for 'Heat Capacity' expressed as \\(ev/K\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00000000000000000016021765314 ;
    qudt:expression "\\(ev/K\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:HeatCapacity ;
    qudt:ucumCode "eV.K-1"^^qudt:UCUMcs,
        "eV/K"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:EV-PER-M a qudt:Unit ;
    rdfs:label "Electronvolt Per Metre"@en,
        "Electronvolt Per Meter"@en-us ;
    qudt:conversionMultiplier 0.0000000000000000001602176 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:TotalLinearStoppingPower ;
    qudt:iec61360Code "0112/2///62720#UAA426" ;
    qudt:plainTextDescription "unit electronvolt divided by the SI base unit metre" ;
    qudt:ucumCode "eV.m-1"^^qudt:UCUMcs,
        "eV/m"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A54" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:EV-PER-T a qudt:Unit ;
    rdfs:label "Electron Volt per Tesla"@en ;
    dcterms:description "\"Electron Volt per Tesla\" is a unit for  'Magnetic Dipole Moment' expressed as \\(eV T^{-1}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00000000000000000016021765314 ;
    qudt:expression "\\(eV T^{-1}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MagneticDipoleMoment ;
    qudt:ucumCode "eV.T-1"^^qudt:UCUMcs,
        "eV/T"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:EastCaribbeanDollar a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "East Caribbean Dollar"@en ;
    dcterms:description "Anguilla, Antigua and Barbuda, Dominica, Grenada, Montserrat, Saint Kitts and Nevis, Saint Lucia, Saint Vincent and the Grenadines"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/East_Caribbean_dollar"^^xsd:anyURI ;
    qudt:expression "\\(XCD\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/East_Caribbean_dollar?oldid=493020176"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:EgyptianPound a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Egyptian Pound"@en ;
    dcterms:description "Egypt"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Egyptian_pound"^^xsd:anyURI ;
    qudt:expression "\\(EGP\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Egyptian_pound?oldid=494670285"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:EthiopianBirr a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Ethiopian Birr"@en ;
    dcterms:description "Ethiopia"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Ethiopian_birr"^^xsd:anyURI ;
    qudt:expression "\\(ETB\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Ethiopian_birr?oldid=493373507"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Euro a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Euro"@en ;
    dcterms:description "European Union Euro"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Euro"^^xsd:anyURI ;
    qudt:expression "\\(EUR\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Euro?oldid=495293446"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/euro> ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:EuropeanCompositeUnit a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "European Composite Unit (EURCO) (Bonds market unit)"@en ;
    dcterms:description "Bonds market unit"^^rdf:HTML ;
    qudt:expression "\\(XBA\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:EuropeanMonetaryUnit a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "European Monetary Unit (E.M.U.-6) (Bonds market unit)"@en ;
    dcterms:description "Bonds market unit"^^rdf:HTML ;
    qudt:expression "\\(XBB\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:EuropeanUnitOfAccount17 a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "European Unit of Account 17 (E.U.A.-17) (Bonds market unit)"@en ;
    dcterms:description "Bonds market unit"^^rdf:HTML ;
    qudt:expression "\\(XBD\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:EuropeanUnitOfAccount9 a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "European Unit of Account 9 (E.U.A.-9) (Bonds market unit)"@en ;
    dcterms:description "Bonds market unit"^^rdf:HTML ;
    qudt:expression "\\(XBC\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:ExaBYTE a qudt:CountingUnit,
        qudt:Unit ;
    rdfs:label "ExaByte"@en ;
    dcterms:description "The exabyte is a multiple of the unit byte for digital information. The prefix exa means 10^18 in the International System of Units (SI), so ExaByte is 10^18 Bytes."^^rdf:HTML ;
    qudt:conversionMultiplier 5545177444479562475.3378569716654 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Exabyte"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Dimensionless ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Byte#Multiple-byte_units"^^xsd:anyURI ;
    qudt:isScalingOf unit:BYTE ;
    qudt:prefix prefix:Exa ;
    qudt:symbol "EB" ;
    qudt:ucumCode "EBy"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:ExbiBYTE a qudt:CountingUnit,
        qudt:Unit ;
    rdfs:label "ExbiByte"@en ;
    dcterms:description "The exbibyte is a multiple of the unit byte for digital information. The prefix exbi means 1024^6"^^rdf:HTML ;
    qudt:conversionMultiplier 6393154322601327829.8943153498712 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Exbibyte"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Dimensionless ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Byte#Multiple-byte_units"^^xsd:anyURI ;
    qudt:isScalingOf unit:BYTE ;
    qudt:prefix prefix:Exbi ;
    qudt:symbol "EiB" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FA a qudt:Unit ;
    rdfs:label "Fractional area"@en ;
    dcterms:description "\"Fractional area\" is a unit for  'Solid Angle' expressed as \\(fa\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 12.5663706 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:SolidAngle ;
    qudt:symbol "fa" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FARAD a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Farad"@en ;
    dcterms:description "The SI unit of electric capacitance. Very early in the study of electricity scientists discovered that a pair of conductors separated by an insulator can store a much larger charge than an isolated conductor can store. The better the insulator, the larger the charge that the conductors can hold. This property of a circuit is called capacitance, and it is measured in farads. One farad is defined as the ability to store one coulomb of charge per volt of potential difference between the two conductors. This is a natural definition, but the unit it defines is very large. In practical circuits, capacitance is often measured in microfarads, nanofarads, or sometimes even in picofarads (10-12 farad, or trillionths of a farad). The unit is named for the British physicist Michael Faraday (1791-1867), who was known for his work in electricity and electrochemistry."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Farad"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E2L-2I0M-1H0T4D0 ;
    qudt:hasQuantityKind quantitykind:Capacitance ;
    qudt:iec61360Code "0112/2///62720#UAA144" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Farad?oldid=493070876"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/farad> ;
    qudt:siUnitsExpression "C/V" ;
    qudt:symbol "F" ;
    qudt:ucumCode "F"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "FAR" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FARAD-PER-KiloM a qudt:Unit ;
    rdfs:label "Farad Per Kilometre"@en,
        "Farad Per Kilometer"@en-us ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T4D0 ;
    qudt:hasQuantityKind quantitykind:Permittivity ;
    qudt:iec61360Code "0112/2///62720#UAA145" ;
    qudt:plainTextDescription "SI derived unit farad divided by the 1 000-fold of the SI base unit metre" ;
    qudt:ucumCode "F.km-1"^^qudt:UCUMcs,
        "F/km"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H33" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FARAD-PER-M a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Farad per Metre"@en,
        "Farad per Meter"@en-us ;
    dcterms:description "Farad Per Meter (\\(F/m\\)) is a unit in the category of Electric permittivity. It is also known as farad/meter. This unit is commonly used in the SI unit system. Farad Per Meter has a dimension of M-1L-3T4I2 where M is mass, L is length, T is time, and I is electric current. This unit is the standard SI unit in this category."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(F/m\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T4D0 ;
    qudt:hasQuantityKind quantitykind:Permittivity ;
    qudt:iec61360Code "0112/2///62720#UAA146" ;
    qudt:ucumCode "F.m-1"^^qudt:UCUMcs,
        "F/m"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A69" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FARAD_Ab a qudt:Unit ;
    rdfs:label "Abfarad"@en ;
    dcterms:description "An abfarad is an obsolete electromagnetic (CGS) unit of capacitance equal to \\(10^{9}\\) farads (1,000,000,000 F or 1 GF). The absolute farad of the e.m.u. system, for a steady current identically \\(abC/abV\\), and identically reciprocal abdaraf. 1 abF = 1 GF."^^qudt:LatexString ;
    qudt:conversionMultiplier 1000000000.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Abfarad"^^xsd:anyURI ;
    qudt:derivedUnitOfSystem sou:CGS-EMU ;
    qudt:hasDimensionVector qkdv:A0E2L-2I0M-1H0T4D0 ;
    qudt:hasQuantityKind quantitykind:Capacitance ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Abfarad?oldid=407124018"^^xsd:anyURI,
        "http://www.oxfordreference.com/view/10.1093/acref/9780198605225.001.0001/acref-9780198605225-e-13"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/abfarad> ;
    qudt:symbol "abF" ;
    qudt:ucumCode "GF"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FARAD_Ab-PER-CentiM a qudt:Unit ;
    rdfs:label "Abfarad per Centimetre"@en,
        "Abfarad per Centimeter"@en-us ;
    dcterms:description "The absolute dielectric constant of free space is defined as the ratio of displacement to the electric field intensity. The unit of measure is the abfarad per centimeter, a derived CGS unit."^^rdf:HTML ;
    qudt:conversionMultiplier 100000000000.0 ;
    qudt:derivedUnitOfSystem sou:CGS-EMU ;
    qudt:expression "\\(abf-per-cm\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T4D0 ;
    qudt:hasQuantityKind quantitykind:Permittivity ;
    qudt:ucumCode "GF.cm-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FARAD_Stat a qudt:Unit ;
    rdfs:label "Statfarad"@en ;
    dcterms:description "Statfarad (statF) is a unit in the category of Electric capacitance. It is also known as statfarads. This unit is commonly used in the cgs unit system. Statfarad (statF) has a dimension of \\(M^{-1}L^{-2}T^4I^2\\) where M is mass, L is length, T is time, and I is electric current. It can be converted to the corresponding standard SI unit F by multiplying its value by a factor of 1.11265E-012."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.000000000001112650056053618432174089964848 ;
    qudt:derivedUnitOfSystem sou:CGS-ESU ;
    qudt:hasDimensionVector qkdv:A0E2L-2I0M-1H0T4D0 ;
    qudt:hasQuantityKind quantitykind:Capacitance ;
    qudt:informativeReference "http://www.efunda.com/glossary/units/units--electric_capacitance--statfarad.cfm"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/statfarad> ;
    qudt:symbol "statF" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FRAME-PER-SEC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Frame per Second"@en ;
    dcterms:description "\"Frame per Second\" is a unit for  'Video Frame Rate' expressed as \\(fps\\)."^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VideoFrameRate ;
    qudt:symbol "fps" ;
    qudt:ucumCode "/s{frame}"^^qudt:UCUMcs,
        "s-1{frame}"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT-PER-DEG_F a qudt:Unit ;
    rdfs:label "Foot Per Degree Fahrenheit"@en ;
    qudt:conversionMultiplier 0.54864 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H-1T0D0 ;
    qudt:hasQuantityKind quantitykind:LinearThermalExpansion ;
    qudt:iec61360Code "0112/2///62720#UAA441" ;
    qudt:plainTextDescription "unit foot as a linear measure according to the Anglo-American and the Imperial system of units divided by the unit for temperature degree Fahrenheit" ;
    qudt:ucumCode "[ft_i].[lbf_av].[degF]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K13" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT2-DEG_F a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Square Foot Degree Fahrenheit"@en ;
    dcterms:description "\\(\\textbf{Square Foot Degree Fahrenheit} is an Imperial unit for 'Area Temperature' expressed as \\(ft^{2}-degF\\)."^^qudt:LatexString ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(ft^{2}-degF\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H1T0D0 ;
    qudt:hasQuantityKind quantitykind:AreaTemperature ;
    qudt:ucumCode "[sft_i].[degF]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT2-HR-DEG_F a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Square Foot Hour Degree Fahrenheit"@en ;
    dcterms:description "\\(\\textbf{Square Foot Hour Degree Fahrenheit} is an Imperial unit for 'Area Time Temperature' expressed as \\(ft^{2}-hr-degF\\)."^^qudt:LatexString ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(ft^{2}-hr-degF\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H1T1D0 ;
    qudt:hasQuantityKind quantitykind:AreaTimeTemperature ;
    qudt:ucumCode "[sft_i].h.[degF]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT2-HR-DEG_F-PER-BTU_IT a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Square Foot Hour Degree Fahrenheit per BTU"@en ;
    dcterms:description "\\(\\textbf{Square Foot Hour Degree Fahrenheit per BTU} is an Imperial unit for 'Thermal Insulance' expressed as \\((degF-hr-ft^{2})/Btu\\)."^^qudt:LatexString ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(sqft-hr-degF/btu\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-1H1T3D0 ;
    qudt:hasQuantityKind quantitykind:ThermalInsulance ;
    qudt:ucumCode "[sft_i].h.[degF].[Btu_IT]-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT2-PER-BTU_IT-IN a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Square Foot per BTU Inch"@en ;
    qudt:conversionMultiplier 0.00346673589 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(ft2-per-btu-in\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M-1H1T3D0 ;
    qudt:hasQuantityKind quantitykind:ThermalResistivity ;
    qudt:ucumCode "[sft_i].[Btu_IT]-1.[in_i]-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT2-SEC-DEG_F a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Square Foot Second Degree Fahrenheit"@en ;
    dcterms:description "\\(\\textbf{Square Foot Second Degree Fahrenheit} is an Imperial unit for 'Area Time Temperature' expressed as \\(ft^{2}\\cdot s\\cdot degF\\)."^^qudt:LatexString ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(ft^{2}-s-degF\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H1T1D0 ;
    qudt:hasQuantityKind quantitykind:AreaTimeTemperature ;
    qudt:ucumCode "[sft_i].s.[degF]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT3-PER-DEG_F a qudt:Unit ;
    rdfs:label "Cubic Foot Per Degree Fahrenheit"@en ;
    qudt:conversionMultiplier 0.05097033 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H-1T0D0 ;
    qudt:hasQuantityKind quantitykind:VolumeThermalExpansion ;
    qudt:iec61360Code "0112/2///62720#UAA457" ;
    qudt:plainTextDescription "power of the unit foot as a linear measure according to the Anglo-American and the Imperial system of units with the exponent 3 divided by the unit for temperature degree Fahrenheit" ;
    qudt:ucumCode "[cft_i].[degF]-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K21" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FalklandIslandsPound a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Falkland Islands Pound"@en ;
    dcterms:description "Falkland Islands"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Falkland_Islands_pound"^^xsd:anyURI ;
    qudt:expression "\\(FKP\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Falkland_Islands_pound?oldid=489513616"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FemtoGM-PER-L a qudt:Unit ;
    rdfs:label "Femtograms per litre"@en ;
    dcterms:description "One 10**18 part of the SI standard unit of mass of the measurand per litre volume of matrix.."@en ;
    qudt:conversionMultiplier 0.15 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:ucumCode "fg.L-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FemtoMOL-PER-KiloGM a qudt:Unit ;
    rdfs:label "Femtomoles per kilogram"@en ;
    dcterms:description "A 10**18 part quantity of substance of the measurand per kilogram mass of matrix."@en ;
    qudt:conversionMultiplier 0.15 ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M-1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:AmountOfSubstancePerUnitMass ;
    qudt:ucumCode "fmol.kg-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FemtoMOL-PER-L a qudt:Unit ;
    rdfs:label "Femtomoles per litre"@en ;
    dcterms:description "A 10**18 part quantity of substance of the measurand per litre volume of matrix."@en ;
    qudt:conversionMultiplier 0.000000000001 ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:AmountOfSubstancePerUnitVolume ;
    qudt:ucumCode "fmol.L-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FijiDollar a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Fiji Dollar"@en ;
    dcterms:description "Fiji"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Fijian_dollar"^^xsd:anyURI ;
    qudt:expression "\\(FJD\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Fijian_dollar?oldid=494373740"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Flight a qudt:Unit ;
    rdfs:label "Flight"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:symbol "flight" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Forint a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Forint"@en ;
    dcterms:description "Hungary"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Hungarian_forint"^^xsd:anyURI ;
    qudt:expression "\\(HUF\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Hungarian_forint?oldid=492818607"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FrancCongolais a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Franc Congolais"@en ;
    dcterms:description "Democratic Republic of Congo"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Congolese_franc"^^xsd:anyURI ;
    qudt:expression "\\(CDF\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Congolese_franc?oldid=490314640"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GAL_IMP a qudt:Unit ;
    rdfs:label "Imperial Gallon"@en ;
    dcterms:description "\"Imperial Gallon\" is an Imperial unit for  'Liquid Volume' expressed as \\(galIMP\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00454609 ;
    qudt:definedUnitOfSystem sou:IMPERIAL ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:LiquidVolume ;
    qudt:symbol "gal" ;
    qudt:ucumCode "[gal_br]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GAL_UK a qudt:Unit ;
    rdfs:label "Gallon (UK)"@en ;
    qudt:conversionMultiplier 0.00454609 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:LiquidVolume ;
    qudt:iec61360Code "0112/2///62720#UAA500" ;
    qudt:plainTextDescription "unit of the volume for fluids according to the Imperial system of units" ;
    qudt:ucumCode "[gal_br]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "GLI" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GAL_US a qudt:Unit ;
    rdfs:label "US Gallon"@en ;
    dcterms:description "\"US Gallon\" is a unit for  'Liquid Volume' expressed as \\(galUS\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.003785412 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:LiquidVolume ;
    qudt:symbol "gal" ;
    qudt:ucumCode "[gal_us]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    skos:altLabel "Queen Anne's wine gallon" .

unit:GAL_US_DRY a qudt:Unit ;
    rdfs:label "Dry Gallon US"@en ;
    dcterms:description "\"Dry Gallon US\" is a unit for  'Dry Volume' expressed as \\(dry_gal\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00440488377 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:DryVolume ;
    qudt:symbol "dry_gal" ;
    qudt:ucumCode "[gal_wi]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    skos:altLabel "Winchester gallon",
        "corn gallon" .

unit:GI a qudt:Unit ;
    rdfs:label "Gilbert"@en ;
    dcterms:description "The fundamental unit of magnetomotive force (\\(mmf\\)) in electromagnetic units is called a Gilbert. It is the \\(mmf\\) which will produce a magnetic field strength of one Gauss (Maxwell per Square Centimeter) in a path one centimeter long."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.795774715 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Gilbert"^^xsd:anyURI ;
    qudt:derivedUnitOfSystem sou:CGS-EMU ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MagnetomotiveForce ;
    qudt:iec61360Code "0112/2///62720#UAB211" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Gilbert?oldid=492755037"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/gilbert> ;
    qudt:symbol "Gb" ;
    qudt:ucumCode "Gb"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GM-MilliM a qudt:Unit ;
    rdfs:label "Gram Millimetre"@en,
        "Gram Millimeter"@en-us ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:LengthMass ;
    qudt:iec61360Code "0112/2///62720#UAB381" ;
    qudt:plainTextDescription "unit of the imbalance as product of the 0.001-fold of the SI base unit kilogram and the 0.001-fold of the SI base unit metre" ;
    qudt:ucumCode "g.mm"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H84" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GM-PER-CentiM2 a qudt:Unit ;
    rdfs:label "Gram Per Square Centimetre"@en,
        "Gram Per Square Centimeter"@en-us ;
    qudt:conversionMultiplier 10.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassPerArea ;
    qudt:iec61360Code "0112/2///62720#UAB103" ;
    qudt:plainTextDescription "0,001-fold of the SI base unit kilogram divided by the 0.0001-fold of the power of the SI base unit metre and exponent 2" ;
    qudt:ucumCode "g.cm-2"^^qudt:UCUMcs,
        "g/cm2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "25" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GM-PER-CentiM3 a qudt:Unit ;
    rdfs:label "Gram Per Cubic Centimetre"@en,
        "Gram Per Cubic Centimeter"@en-us ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:iec61360Code "0112/2///62720#UAA469" ;
    qudt:plainTextDescription "0,001-fold of the SI base unit kilogram divided by the 0.000 001-fold of the power of the SI base unit metre with the exponent 3" ;
    qudt:ucumCode "g.cm-3"^^qudt:UCUMcs,
        "g/cm3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "23" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GM-PER-DAY a qudt:Unit ;
    rdfs:label "Gram Per Day"@en ;
    qudt:conversionMultiplier 0.00000001157407 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA472" ;
    qudt:plainTextDescription "0,001-fold of the SI base unit kilogram divided by the unit day" ;
    qudt:ucumCode "g.d-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F26" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GM-PER-DEG_C a qudt:Unit ;
    rdfs:label "Gram Degree Celsius"@en ;
    dcterms:description "\\(\\textbf{Gram Degree Celsius} is a C.G.S System unit for 'Mass Temperature' expressed as \\(g \\cdot degC\\)."^^qudt:LatexString ;
    qudt:expression "\\(g-degC\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H1T0D0 ;
    qudt:hasQuantityKind quantitykind:MassTemperature ;
    qudt:ucumCode "d.Cel-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GM-PER-DeciM3 a qudt:Unit ;
    rdfs:label "Gram Per Cubic Decimetre"@en,
        "Gram Per Cubic Decimeter"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:iec61360Code "0112/2///62720#UAA475" ;
    qudt:plainTextDescription "0,001-fold of the SI base unit kilogram divided by the 0.001-fold of the power of the SI base unit metre with the exponent 3" ;
    qudt:ucumCode "g.dm-3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F23" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GM-PER-HR a qudt:Unit ;
    rdfs:label "Gram Per Hour"@en ;
    qudt:conversionMultiplier 0.0000002777778 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA478" ;
    qudt:plainTextDescription "0,001-fold of the SI base unit kilogram divided by the unit hour" ;
    qudt:ucumCode "g.h-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F27" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GM-PER-KiloM a qudt:Unit ;
    rdfs:label "Gram Per Kilometre"@en,
        "Gram Per Kilometer"@en-us ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassPerLength ;
    qudt:plainTextDescription "0,001-fold of the SI base unit kilogram divided by the 1000-fold of the SI base unit metre" ;
    qudt:ucumCode "g.km-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GM-PER-L a qudt:Unit ;
    rdfs:label "Gram Per Litre"@en,
        "Gram Per Liter"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:iec61360Code "0112/2///62720#UAA482" ;
    qudt:plainTextDescription "0,001-fold of the SI base unit kilogram divided by the unit litre" ;
    qudt:ucumCode "g.L-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "GL" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GM-PER-M a qudt:Unit ;
    rdfs:label "Gram Per Metre"@en,
        "Gram Per Meter"@en-us ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassPerLength ;
    qudt:iec61360Code "0112/2///62720#UAA485" ;
    qudt:plainTextDescription "0,001-fold of the SI base unit kilogram divided by the SI base unit metre" ;
    qudt:ucumCode "g.m-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "GF" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GM-PER-M2 a qudt:Unit ;
    rdfs:label "Gram Per Square Metre"@en,
        "Gram Per Square Meter"@en-us ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassPerArea ;
    qudt:iec61360Code "0112/2///62720#UAA486" ;
    qudt:plainTextDescription "0,001-fold of the SI base unit kilogram divided by the power of the SI base unit metre with the exponent 2" ;
    qudt:ucumCode "g.m-2"^^qudt:UCUMcs,
        "g/m2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "GM" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GM-PER-M2-DAY a qudt:Unit ;
    rdfs:label "grams per square metre per day"@en,
        "grams per square meter per day"@en-us ;
    qudt:conversionMultiplier 0.000000011574073 ;
    qudt:expression "\\(g-m^{-2}-day^{-1}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassPerAreaTime ;
    qudt:plainTextDescription "A metric unit of volume over time indicating the amount generated across one square meter over a day." ;
    qudt:ucumCode "g.m-2.d-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GM-PER-M3 a qudt:Unit ;
    rdfs:label "Gram Per Cubic Metre"@en,
        "Gram Per Cubic Meter"@en-us ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:iec61360Code "0112/2///62720#UAA487" ;
    qudt:plainTextDescription "0,001-fold of the SI base unit kilogram divided by the power of the SI base unit metre with the exponent 3" ;
    qudt:ucumCode "g.m-3"^^qudt:UCUMcs,
        "g/m3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A93" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GM-PER-MIN a qudt:Unit ;
    rdfs:label "Gram Per Minute"@en ;
    qudt:conversionMultiplier 0.00001666667 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA490" ;
    qudt:plainTextDescription "0,001-fold of the SI base unit kilogram divided by the unit minute" ;
    qudt:ucumCode "g.min-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F28" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GM-PER-MOL a qudt:Unit ;
    rdfs:label "Gram Per Mole"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A-1E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MolarMass ;
    qudt:iec61360Code "0112/2///62720#UAA496" ;
    qudt:plainTextDescription "0,01-fold of the SI base unit kilogram divided by the SI base unit mol" ;
    qudt:ucumCode "g.mol-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A94" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GM-PER-MilliL a qudt:Unit ;
    rdfs:label "Gram Per Millilitre"@en,
        "Gram Per Millilitre"@en-us ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:iec61360Code "0112/2///62720#UAA493" ;
    qudt:plainTextDescription "0,001-fold of the SI base unit kilogram divided by the 0.001-fold of the unit litre" ;
    qudt:ucumCode "g.mL-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "GJ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GM-PER-MilliM a qudt:Unit ;
    rdfs:label "Gram Per Millimetre"@en,
        "Gram Per Millimeter"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassPerLength ;
    qudt:iec61360Code "0112/2///62720#UAB376" ;
    qudt:plainTextDescription "0,001-fold of the SI base unit kilogram divided by the 0.001-fold the SI base unit meter" ;
    qudt:ucumCode "g.mm-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H76" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GM-PER-SEC a qudt:Unit ;
    rdfs:label "Gram Per Second"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA497" ;
    qudt:plainTextDescription "0,001fold of the SI base unit kilogram divided by the SI base unit second" ;
    qudt:ucumCode "g.s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F29" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GM_Carbon-PER-M2-DAY a qudt:Unit ;
    rdfs:label "grams Carbon per square metre per day"@en,
        "grams Carbon per square meter per day"@en-us ;
    qudt:conversionMultiplier 0.000000011574073 ;
    qudt:expression "\\(g C-m^{-2}-day^{-1}\\)."^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassPerAreaTime ;
    qudt:plainTextDescription "A metric unit of volume over time indicating the amount generated across one square meter over a day. Used to express productivity of an ecosystem." ;
    qudt:ucumCode "g.m-2.d-1{C}"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GM_Nitrogen-PER-M2-DAY a qudt:Unit ;
    rdfs:label "grams Nitrogen per square metre per day"@en,
        "grams Nitrogen per square meter per day"@en-us ;
    qudt:conversionMultiplier 0.000000011574073 ;
    qudt:expression "\\(g N-m^{-2}-day^{-1}\\)."^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassPerAreaTime ;
    qudt:plainTextDescription "A metric unit of volume over time indicating the amount of Nitrogen generated across one square meter over a day. Used to express productivity of an ecosystem." ;
    qudt:ucumCode "g.m-2.d-1{N}"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GRAIN-PER-GAL_US a qudt:Unit ;
    rdfs:label "Grain Per Gallon (US)"@en ;
    qudt:conversionMultiplier 0.01711806 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:iec61360Code "0112/2///62720#UAA524" ;
    qudt:plainTextDescription "unit of the density according to the Anglo-American system of units" ;
    qudt:ucumCode "[gr].[gal_us]-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K41" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GibiBYTE a qudt:CountingUnit,
        qudt:Unit ;
    rdfs:label "GibiByte"@en ;
    dcterms:description "The gibibyte is a multiple of the unit byte for digital information storage. The prefix gibi means 1024^3"^^qudt:LatexString ;
    qudt:conversionMultiplier 5954088943.6391441429912255610071 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Gibibyte"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Dimensionless ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Byte#Multiple-byte_units"^^xsd:anyURI ;
    qudt:isScalingOf unit:BYTE ;
    qudt:prefix prefix:Gibi ;
    qudt:symbol "GiB" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GibraltarPound a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Gibraltar pound"@en ;
    dcterms:description "Gibraltar"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Gibraltar_pound"^^xsd:anyURI ;
    qudt:expression "\\(GIP\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Gibraltar_pound?oldid=494842600"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GigaBQ a qudt:Unit ;
    rdfs:label "Gigabecquerel"@en ;
    qudt:conversionMultiplier 1000000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Activity ;
    qudt:iec61360Code "0112/2///62720#UAB047" ;
    qudt:plainTextDescription "1 000 000 000-fold of the derived SI unit becquerel" ;
    qudt:ucumCode "GBq"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "GBQ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GigaBYTE a qudt:CountingUnit,
        qudt:Unit ;
    rdfs:label "GigaByte"@en ;
    dcterms:description "The gigabyte is a multiple of the unit byte for digital information storage. The prefix giga means 10 in the International System of Units (SI), therefore 1 gigabyte is \\(1,000,000,000 \\; bytes\\). The unit symbol for the gigabyte is \\(GB\\) or \\(Gbyte\\), but not \\(Gb\\) (lower case b) which is typically used for the gigabit. Historically, the term has also been used in some fields of computer science and information technology to denote the \\(gibibyte\\), or \\(1073741824 \\; bytes\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 5954088943.6391441429912255610071 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Gigabyte"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Dimensionless ;
    qudt:iec61360Code "0112/2///62720#UAB185" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Gigabyte?oldid=493019145"^^xsd:anyURI ;
    qudt:isScalingOf unit:BYTE ;
    qudt:prefix prefix:Giga ;
    qudt:symbol "GB" ;
    qudt:ucumCode "GBy"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "E34" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    skos:altLabel "gbyte" .

unit:GigaOHM a qudt:Unit ;
    rdfs:label "Gigaohm"@en ;
    qudt:conversionMultiplier 1000000000.0 ;
    qudt:hasDimensionVector qkdv:A0E-2L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Resistance ;
    qudt:iec61360Code "0112/2///62720#UAA147" ;
    qudt:plainTextDescription "1 000 000 000-fold of the SI derived unit ohm" ;
    qudt:ucumCode "GOhm"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A87" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Gold-OunceTroy a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Gold (one Troy ounce)"@en ;
    qudt:expression "\\(XAU\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:ucumCode "[oz_tr]{Au}"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GoldFranc a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Gold franc (special settlement currency)"@en ;
    dcterms:description "Bank for International Settlements"^^rdf:HTML ;
    qudt:expression "\\(XFO\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Guarani a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Guarani"@en ;
    dcterms:description "Paraguay"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Guaran%C3%AD"^^xsd:anyURI ;
    qudt:expression "\\(PYG\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Guaraní?oldid=412592698"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GuineaFranc a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Guinea Franc"@en ;
    dcterms:description "Guinea"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Guinean_franc"^^xsd:anyURI ;
    qudt:expression "\\(GNF\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Guinean_franc?oldid=489527042"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GuyanaDollar a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Guyana Dollar"@en ;
    dcterms:description "Guyana"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Guyanese_dollar"^^xsd:anyURI ;
    qudt:expression "\\(GYD\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Guyanese_dollar?oldid=495070062"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:H a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Henry"@en ;
    dcterms:description "The SI unit of electric inductance. A changing magnetic field induces an electric current in a loop of wire (or in a coil of many loops) located in the field. Although the induced voltage depends only on the rate at which the magnetic flux changes, measured in webers per second, the amount of the current depends also on the physical properties of the coil. A coil with an inductance of one henry requires a flux of one weber for each ampere of induced current. If, on the other hand, it is the current which changes, then the induced field will generate a potential difference within the coil: if the inductance is one henry a current change of one ampere per second generates a potential difference of one volt. The henry is a large unit; inductances in practical circuits are measured in millihenrys (mH) or microhenrys (u03bc H). The unit is named for the American physicist Joseph Henry (1797-1878), one of several scientists who discovered independently how magnetic fields can be used to generate alternating currents. \\(\\text{H} \\; \\equiv \\; \\text{henry}\\; \\equiv\\; \\frac{\\text{Wb}}{\\text{A}}\\; \\equiv\\; \\frac{\\text{weber}}{\\text{amp}}\\; \\equiv\\ \\frac{\\text{V}\\cdot\\text{s}}{\\text{A}}\\; \\equiv\\; \\frac{\\text{volt} \\cdot \\text{second}}{\\text{amp}}\\; \\equiv\\ \\Omega\\cdot\\text{s}\\; \\equiv\\; \\text{ohm.second}\\)"^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Henry"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E-2L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Inductance ;
    qudt:iec61360Code "0112/2///62720#UAA165" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Henry?oldid=491435978"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/henry> ;
    qudt:siUnitsExpression "Wb/A" ;
    qudt:symbol "H" ;
    qudt:ucumCode "H"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "81" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HART a qudt:Unit ;
    rdfs:label "Hartley"@en ;
    dcterms:description "The \"Hartley\" is a unit of information."^^rdf:HTML ;
    qudt:conversionMultiplier 2.3025850929940456840179914546844 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:InformationEntropy ;
    qudt:iec61360Code "0112/2///62720#UAB344" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Ban_(information)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31898"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/hartley> ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HART-PER-SEC a qudt:Unit ;
    rdfs:label "Hartley per Second"@en ;
    dcterms:description "The \"Hartley per Second\" is a unit of information rate."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(Hart/s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:InformationFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAB347" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Ban_(information)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31898"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HR-FT2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Hour Square Foot"@en ;
    dcterms:description "\"Hour Square Foot\" is an Imperial unit for  'Area Time' expressed as \\(hr-ft^{2}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 334.450944 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(hr-ft^{2}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:AreaTime ;
    qudt:ucumCode "h.[ft_i]2"^^qudt:UCUMcs,
        "h.[sft_i]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HZ-PER-K a qudt:Unit ;
    rdfs:label "Hertz per Kelvin"@en ;
    dcterms:description "\\(\\textbf{Hertz per Kelvin} is a unit for 'Inverse Time Temperature' expressed as \\(Hz K^{-1}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(Hz K^{-1}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H-1T-1D0 ;
    qudt:hasQuantityKind quantitykind:InverseTimeTemperature ;
    qudt:ucumCode "Hz.K-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HZ-PER-V a qudt:Unit ;
    rdfs:label "Hertz per Volt"@en ;
    dcterms:description "In the Hertz per Volt standard the frequency of the note is directly related to the voltage. A pitch of a note goes up one octave when its frequency doubles, meaning that the voltage will have to double for every octave rise. Depending on the footage (octave) selected, nominally one volt gives 1000Hz, two volts 2000Hz and so on. In terms of notes, bottom C would be 0.25 volts, the next C up would be 0.5 volts, then 1V, 2V, 4V, 8V for the following octaves. This system was used mainly by Yamaha and Korg."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(Hz V^{-1}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M-1H0T2D0 ;
    qudt:hasQuantityKind quantitykind:InverseMagneticFlux ;
    qudt:ucumCode "Hz.V-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:H_Ab a qudt:Unit ;
    rdfs:label "Abhenry"@en ;
    dcterms:description "Abhenry is the centimeter-gram-second electromagnetic unit of inductance, equal to one billionth of a henry."^^rdf:HTML ;
    qudt:conversionMultiplier 0.000000001 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Abhenry"^^xsd:anyURI ;
    qudt:derivedUnitOfSystem sou:CGS-EMU ;
    qudt:hasDimensionVector qkdv:A0E-2L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Inductance ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Abhenry?oldid=477198643"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/abhenry> ;
    qudt:symbol "abH" ;
    qudt:ucumCode "nH"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:H_Stat a qudt:Unit ;
    rdfs:label "Stathenry"@en ;
    dcterms:description "\"Stathenry\" (statH) is a unit in the category of Electric inductance. It is also known as stathenries. This unit is commonly used in the cgs unit system. Stathenry (statH) has a dimension of \\(ML^2T^{-2}I^{-2}\\) where M is mass, L is length, T is time, and I is electric current. It can be converted to the corresponding standard SI unit H by multiplying its value by a factor of \\(8.987552 \\times 10^{11}\\) ."^^qudt:LatexString ;
    qudt:conversionMultiplier 898760000000.0 ;
    qudt:derivedUnitOfSystem sou:CGS-ESU ;
    qudt:hasDimensionVector qkdv:A0E-2L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Inductance ;
    qudt:informativeReference "http://www.efunda.com/glossary/units/units--electric_inductance--stathenry.cfm"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/stathenry> ;
    qudt:symbol "statH" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HaitiGourde a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Haiti Gourde"@en ;
    dcterms:description "Haiti"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Haitian_gourde"^^xsd:anyURI ;
    qudt:expression "\\(HTG\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Haitian_gourde?oldid=486090975"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HeartBeat a qudt:Unit ;
    rdfs:label "Heart Beat"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HectoPA-L-PER-SEC a qudt:Unit ;
    rdfs:label "Hectopascal Litre Per Second"@en,
        "Hectopascal Liter Per Second"@en-us ;
    qudt:conversionMultiplier 0.1 ;
    qudt:hasDimensionVector qkdv:A0E0L4I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:PowerArea ;
    qudt:iec61360Code "0112/2///62720#UAA530" ;
    qudt:plainTextDescription "product out of the 100-fold of the SI derived unit pascal and the unit litre divided by the SI base unit second" ;
    qudt:ucumCode "hPa.L.s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F93" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HectoPA-M3-PER-SEC a qudt:Unit ;
    rdfs:label "Hectopascal Cubic Metre Per Second"@en,
        "Hectopascal Cubic Meter Per Second"@en-us ;
    qudt:conversionMultiplier 100.0 ;
    qudt:hasDimensionVector qkdv:A0E0L4I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:PowerArea ;
    qudt:iec61360Code "0112/2///62720#UAA531" ;
    qudt:plainTextDescription "product out of the 100-fold of the SI unit pascal and the power of the SI base unit metre with the exponent 3 divided by the SI base unit second" ;
    qudt:ucumCode "hPa.m3.s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F94" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HectoPA-PER-BAR a qudt:Unit ;
    rdfs:label "Hectopascal Per Bar"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:PressureRatio ;
    qudt:iec61360Code "0112/2///62720#UAA529" ;
    qudt:plainTextDescription "100-fold of the SI derived unit pascal divided by the unit bar" ;
    qudt:ucumCode "hPa.bar-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "E99" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HectoPA-PER-HR a qudt:Unit ;
    rdfs:label "Hectopascals per hour"@en ;
    dcterms:description "A change in pressure of one hundred Newtons per square metre (100 Pascals) per hour. Equivalent to a change of one millibar per hour."@en ;
    qudt:conversionMultiplier 0.0277777777777778 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerAreaTime ;
    qudt:ucumCode "hPa.h-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HectoPA-PER-K a qudt:Unit ;
    rdfs:label "Hectopascal Per Kelvin"@en ;
    qudt:conversionMultiplier 100.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:PressureCoefficient ;
    qudt:iec61360Code "0112/2///62720#UAA528" ;
    qudt:plainTextDescription "100-fold of the SI derived unit pascal divided by the SI base unit kelvin" ;
    qudt:ucumCode "hPa.K-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F82" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HongKongDollar a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Hong Kong Dollar"@en ;
    dcterms:description "Hong Kong Special Administrative Region"^^rdf:HTML ;
    qudt:currencyExponent 1 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Hong_Kong_dollar"^^xsd:anyURI ;
    qudt:expression "\\(HKD\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Hong_Kong_dollar?oldid=495133277"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/HongKongDollar> ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Hryvnia a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Hryvnia"@en ;
    dcterms:description "Ukraine"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Ukrainian_hryvnia"^^xsd:anyURI ;
    qudt:expression "\\(UAH\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Ukrainian_hryvnia?oldid=493064633"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:IN-PER-DEG_F a qudt:Unit ;
    rdfs:label "Inch Per Degree Fahrenheit"@en ;
    qudt:conversionMultiplier 0.04572 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H-1T0D0 ;
    qudt:hasQuantityKind quantitykind:LinearThermalExpansion ;
    qudt:iec61360Code "0112/2///62720#UAA540" ;
    qudt:plainTextDescription "unit inch according to the Anglo-American and the Imperial system of units divided by the unit for temperature degree Fahrenheit" ;
    qudt:ucumCode "[in_i].[degF]-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K45" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:IN4 a qudt:Unit ;
    rdfs:label "Quartic Inch"@en ;
    qudt:conversionMultiplier 0.0000004162314 ;
    qudt:hasDimensionVector qkdv:A0E0L4I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:SecondAxialMomentOfArea ;
    qudt:iec61360Code "0112/2///62720#UAA545" ;
    qudt:plainTextDescription "power of the unit inch according to the Anglo-American and the Imperial system of units with the exponent 4" ;
    qudt:ucumCode "[in_i]4"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D69" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:IU a qudt:Unit ;
    rdfs:label "International Unit"@en ;
    dcterms:description "<p><strong>International Unit</strong> is a unit for \\textit{'Amount Of Substance'} expressed as \\(IU\\)</p>."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/International_unit"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:AmountOfSubstance ;
    qudt:iec61360Code "0112/2///62720#UAB603" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/International_unit?oldid=488801913"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/InternationalUnit> ;
    qudt:symbol "IU" ;
    qudt:ucumCode "[IU]"^^qudt:UCUMcs,
        "[iU]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:IU-PER-L a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "International Unit per Litre"@en,
        "International Unit per Liter"@en-us ;
    dcterms:description "\"International Unit per Liter\" is a unit for  'Serum Or Plasma Level' expressed as \\(IU/L\\)."^^qudt:LatexString ;
    qudt:expression "\\(IU/L\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:SerumOrPlasmaLevel ;
    qudt:ucumCode "[IU].L-1"^^qudt:UCUMcs,
        "[IU]/L"^^qudt:UCUMcs,
        "[iU].L-1"^^qudt:UCUMcs,
        "[iU]/L"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:IcelandKrona a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Iceland Krona"@en ;
    dcterms:description "Iceland"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Icelandic_kr%C3%B3na"^^xsd:anyURI ;
    qudt:expression "\\(ISK\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Icelandic_króna?oldid=495457496"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:IndianRupee a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Indian Rupee"@en ;
    dcterms:description "Bhutan, India"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Indian_rupee"^^xsd:anyURI ;
    qudt:expression "\\(INR\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Indian_rupee?oldid=495120167"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/IndianRupee> ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:IranianRial a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Iranian Rial"@en ;
    dcterms:description "Iran"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Iranian_rial"^^xsd:anyURI ;
    qudt:expression "\\(IRR\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Iranian_rial?oldid=495299431"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:IraqiDinar a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Iraqi Dinar"@en ;
    dcterms:description "Iraq"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Iraqi_dinar"^^xsd:anyURI ;
    qudt:expression "\\(IQD\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Iraqi_dinar?oldid=494793908"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:J-M-PER-MOL a qudt:Unit ;
    rdfs:label "Joule Metre per Mole"@en,
        "Joule Meter per Mole"@en-us ;
    dcterms:description "\\(\\textbf{Joule Meter per Mole} is a unit for 'Length Molar Energy' expressed as \\(J \\cdot m \\cdot mol^{-1}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(J m mol^{-1}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A-1E0L3I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:LengthMolarEnergy ;
    qudt:ucumCode "J.m.mol-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:J-M2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Joule Square Metre"@en,
        "Joule Square Meter"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L4I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:TotalAtomicStoppingPower ;
    qudt:iec61360Code "0112/2///62720#UAA181" ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:symbol "j-m^2" ;
    qudt:ucumCode "J.m-2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D73" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:J-M2-PER-KiloGM a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Joule Square Metre per Kilogram"@en,
        "Joule Square Meter per Kilogram"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(j-m2/kg\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L4I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:TotalMassStoppingPower ;
    qudt:iec61360Code "0112/2///62720#UAB487" ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:ucumCode "J.m2.kg-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B20" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:J-PER-M3-K a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Joule per Cubic Metre Kelvin"@en,
        "Joule per Cubic Meter Kelvin"@en-us ;
    dcterms:description "\\(\\textbf{Joule per Cubic Meter Kelvin} is a unit for 'Volumetric Heat Capacity' expressed as \\(J/(m^{3} K)\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(J/(m^{3} K)\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:VolumetricHeatCapacity ;
    qudt:ucumCode "J.m-3.K-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:J-PER-M4 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Joule per Quartic Metre"@en,
        "Joule per Quartic Meter"@en-us ;
    dcterms:description "\\(\\textbf{Joule Per Quartic Meter} (\\(J/m^4\\)) is a unit for the spectral concentration of radiant energy density (in terms of wavelength), or the spectral radiant energy density (in terms of wave length). This unit is commonly used in the SI unit system."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(J/m^4\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:SpectralRadiantEnergyDensity ;
    qudt:iec61360Code "0112/2///62720#UAA177" ;
    qudt:ucumCode "J.m-4"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B14" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:J-PER-T a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Joule per Tesla"@en ;
    dcterms:description "The magnetic moment of a magnet is a quantity that determines the force that the magnet can exert on electric currents and the torque that a magnetic field will exert on it. A loop of electric current, a bar magnet, an electron, a molecule, and a planet all have magnetic moments. The unit for magnetic moment is not a base unit in the International System of Units (SI) and it can be represented in more than one way. For example, in the current loop definition, the area is measured in square meters and I is measured in amperes, so the magnetic moment is measured in ampere-square meters (A m2). In the equation for torque on a moment, the torque is measured in joules and the magnetic field in tesla, so the moment is measured in Joules per Tesla (J u00b7T-1). These two representations are equivalent: 1 A u00b7m2 = 1 J u00b7T-1. "^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(j-per-t\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MagneticDipoleMoment ;
    qudt:iec61360Code "0112/2///62720#UAB336" ;
    qudt:ucumCode "J.T-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:J-PER-T2 a qudt:Unit ;
    rdfs:label "Joule per Square Tesla"@en ;
    dcterms:description "A measure of the diamagnetic energy, for a Bohr-radius spread around a magnetic axis, per square Tesla."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(J T^{-2}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E2L2I0M-1H0T2D0 ;
    qudt:hasQuantityKind quantitykind:EnergyPerSquareMagneticFluxDensity ;
    qudt:informativeReference "http://www.eng.fsu.edu/~dommelen/quantum/style_a/elecmagfld.html"^^xsd:anyURI ;
    qudt:ucumCode "J.T-2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:J-SEC-PER-MOL a qudt:Unit ;
    rdfs:label "Joule Second per Mole"@en ;
    dcterms:description "\\(\\textbf{Joule Second per Mole} is a unit for 'Molar Angular Momentum' expressed as \\(J s mol^{-1}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(J s mol^{-1}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A-1E0L2I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MolarAngularMomentum ;
    qudt:ucumCode "J.s.mol-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:JamaicanDollar a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Jamaican Dollar"@en ;
    dcterms:description "Jamaica"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Jamaican_dollar"^^xsd:anyURI ;
    qudt:expression "\\(JMD\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Jamaican_dollar?oldid=494039981"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:JapaneseYen a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Japanese yen"@en ;
    dcterms:description "Japan"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Japanese_yen"^^xsd:anyURI ;
    qudt:expression "\\(JPY\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Japanese_yen?oldid=493771966"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/JapaneseYen> ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:JordanianDinar a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Jordanian Dinar"@en ;
    dcterms:description "Jordan"^^rdf:HTML ;
    qudt:currencyExponent 3 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Jordanian_dinar"^^xsd:anyURI ;
    qudt:expression "\\(JOD\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Jordanian_dinar?oldid=495270728"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:K-M a qudt:Unit ;
    rdfs:label "Kelvin metres"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H1T0D0 ;
    qudt:hasQuantityKind quantitykind:LengthTemperature ;
    qudt:ucumCode "K.m"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:K-M-PER-W a qudt:Unit ;
    rdfs:label "Kelvin Metre Per Watt"@en,
        "Kelvin Meter Per Watt"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M-1H1T3D0 ;
    qudt:hasQuantityKind quantitykind:ThermalResistivity ;
    qudt:iec61360Code "0112/2///62720#UAB488" ;
    qudt:plainTextDescription "product of the SI base unit kelvin and the SI base unit metre divided by the derived SI unit watt" ;
    qudt:ucumCode "K.m.W-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H35" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:K-PER-K a qudt:Unit ;
    rdfs:label "Kelvin Per Kelvin"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:TemperatureRatio ;
    qudt:iec61360Code "0112/2///62720#UAA186" ;
    qudt:plainTextDescription "SI base unit kelvin divided by the SI base unit kelvin" ;
    qudt:ucumCode "K.K-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F02" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:K-PER-T a qudt:Unit ;
    rdfs:label "Kelvin per Tesla"@en ;
    dcterms:description "\\(\\textbf{Kelvin per Tesla} is a unit for 'Temperature Per Magnetic Flux Density' expressed as \\(K T^{-1}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(K T^{-1}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M-1H1T2D0 ;
    qudt:hasQuantityKind quantitykind:TemperaturePerMagneticFluxDensity ;
    qudt:ucumCode "K.T-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:K-PER-W a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Kelvin per Watt"@en ;
    dcterms:description "Thermal resistance is a heat property and a measure of a temperature difference by which an object or material resists a heat flow (heat per time unit or thermal resistance). Thermal resistance is the reciprocal thermal conductance. Absolute thermal resistance is the temperature difference across a structure when a unit of heat energy flows through it in unit time. It is the reciprocal of thermal conductance. The SI units of thermal resistance are kelvins per watt or the equivalent degrees Celsius per watt (the two are the same since as intervals).</p>"^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(K/W\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M-1H1T3D0 ;
    qudt:hasQuantityKind quantitykind:ThermalResistance ;
    qudt:iec61360Code "0112/2///62720#UAA187" ;
    qudt:ucumCode "K.W-1"^^qudt:UCUMcs,
        "K/W"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B21" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:K-SEC a qudt:Unit ;
    rdfs:label "Kelvin second"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T1D0 ;
    qudt:hasQuantityKind quantitykind:TimeTemperature ;
    qudt:ucumCode "K.s"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KAT a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Katal"@en ;
    dcterms:description "A unit of catalytic activity used especially in the chemistry of enzymes. A catalyst is a substance that starts or speeds a chemical reaction. Enzymes are proteins that act as catalysts within the bodies of living plants and animals. A catalyst has an activity of one katal if it enables a reaction to proceed at the rate of one mole per second. "^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Katal"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:CatalyticActivity ;
    qudt:iec61360Code "0112/2///62720#UAB196" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Katal?oldid=486431865"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/katal> ;
    qudt:symbol "kat" ;
    qudt:ucumCode "kat"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "KAT" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KenyanShilling a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Kenyan Shilling"@en ;
    dcterms:description "Kenya"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Kenyan_shilling"^^xsd:anyURI ;
    qudt:expression "\\(KES\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Kenyan_shilling?oldid=489547027"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KibiBYTE a qudt:CountingUnit,
        qudt:Unit ;
    rdfs:label "KibiByte"@en ;
    dcterms:description "The kibibyte is a multiple of the unit byte for digital information equivalent to 1024 bytes."^^rdf:HTML ;
    qudt:conversionMultiplier 5678.2617031470719747459655389854 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Dimensionless ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Byte#Multiple-byte_units"^^xsd:anyURI ;
    qudt:isScalingOf unit:BYTE ;
    qudt:prefix prefix:Kibi ;
    qudt:symbol "KiB" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloA-PER-M2 a qudt:Unit ;
    rdfs:label "Kiloampere Per Square Metre"@en,
        "Kiloampere Per Square Meter"@en-us ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCurrentDensity ;
    qudt:iec61360Code "0112/2///62720#UAA559" ;
    qudt:plainTextDescription "1 000-fold of the SI base unit ampere divided by the power of the SI base unit metre with the exponent 2" ;
    qudt:ucumCode "kA.m-2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B23" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloBQ a qudt:Unit ;
    rdfs:label "Kilobecquerel"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Activity ;
    qudt:iec61360Code "0112/2///62720#UAA561" ;
    qudt:plainTextDescription "1 000-fold of the SI derived unit becquerel" ;
    qudt:ucumCode "kBq"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "2Q" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloBYTE a qudt:CountingUnit,
        qudt:Unit ;
    rdfs:label "Kilo Byte"@en ;
    dcterms:description "The kilobyte is a multiple of the unit byte for digital information equivalent to 1024 bytes. Although the prefix kilo- means 1000, the term kilobyte and symbol kB have historically been used to refer to either 1024 (210) bytes or 1000 (103) bytes, dependent upon context, in the fields of computer science and information technology."^^rdf:HTML ;
    qudt:conversionMultiplier 5678.2617031470719747459655389854 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Byte"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Dimensionless ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Byte?oldid=493588918"^^xsd:anyURI ;
    qudt:isScalingOf unit:BYTE ;
    qudt:prefix prefix:Kibi ;
    qudt:symbol "kB" ;
    qudt:ucumCode "kBy"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloBYTE-PER-SEC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Kilobyte per Second"@en ;
    dcterms:description "A kilobyte per second (kByte/s) is a unit of data transfer rate equal to 1024 bytes per second or 8096 bits per second."^^rdf:HTML ;
    qudt:conversionMultiplier 5678.2617031470719747459655389854 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Dimensionless ;
    qudt:iec61360Code "0112/2///62720#UAB306" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Data_rate_units#Kilobyte_per_second"^^xsd:anyURI ;
    qudt:isScalingOf unit:BIT-PER-SEC ;
    qudt:symbol "kbps" ;
    qudt:ucumCode "kBy.s-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloC-PER-M3 a qudt:Unit ;
    rdfs:label "Kilocoulomb Per Cubic Metre"@en,
        "Kilocoulomb Per Cubic Meter"@en-us ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E1L-3I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricChargeVolumeDensity ;
    qudt:iec61360Code "0112/2///62720#UAA565" ;
    qudt:plainTextDescription "1 000-fold of the SI derived unit coulomb divided by the power of the SI base unit metre with the exponent 3" ;
    qudt:ucumCode "kC.m-3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B27" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloCAL-PER-CentiM-SEC-DEG_C a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Kilocalorie per Centimetre Second Degree Celsius"@en,
        "Kilocalorie per Centimeter Second Degree Celsius"@en-us ;
    qudt:expression "\\(kilocal-per-cm-sec-degc\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H-1T-3D0 ;
    qudt:hasQuantityKind quantitykind:ThermalConductivity ;
    qudt:ucumCode "kcol.cm-1.s-1.Cel-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloCAL-PER-GM-DEG_C a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Calorie per Gram Degree Celsius"@en ;
    dcterms:description "\\(\\textbf{Calorie per Gram Degree Celsius} is a unit for 'Specific Heat Capacity' expressed as \\(kcal/(gm-degC)\\)."^^qudt:LatexString ;
    qudt:expression "\\(kcal/(gm-degC)\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:SpecificHeatCapacity ;
    qudt:ucumCode "cal.g-1.Cel-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloCAL-PER-MOL-DEG_C a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Kilocalorie per Mole Degree Celsius"@en ;
    dcterms:description "\\(\\textbf{Kilocalorie per Mole Degree Celsius} is a unit for 'Molar Heat Capacity' expressed as \\(kcal/(mol-degC)\\)."^^qudt:LatexString ;
    qudt:expression "\\(kcal/(mol-degC)\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A-1E0L2I0M1H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:MolarHeatCapacity ;
    qudt:ucumCode "kcal.mol-1.Cel-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloCAL_IT-PER-HR-M-DEG_C a qudt:Unit ;
    rdfs:label "Kilocalorie (international Table) Per Hour Metre Degree Celsius"@en,
        "Kilocalorie (international Table) Per Hour Meter Degree Celsius"@en-us ;
    qudt:conversionMultiplier 1.163 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H-1T-3D0 ;
    qudt:hasQuantityKind quantitykind:ThermalConductivity ;
    qudt:iec61360Code "0112/2///62720#UAA588" ;
    qudt:plainTextDescription "1 000-fold of the no longer approved unit international calorie for energy divided by the product of the SI base unit metre, the unit hour for time and the unit degree Celsius for temperature" ;
    qudt:ucumCode "kcal_IT.h-1.m-1.Cel-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K52" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloCAL_TH-PER-HR a qudt:Unit ;
    rdfs:label "Kilocalorie (thermochemical) Per Hour"@en ;
    qudt:conversionMultiplier 1.162230555555556 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:HeatFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAB184" ;
    qudt:plainTextDescription "1 000-fold of the non-legal unit thermochemical calorie divided by the unit hour" ;
    qudt:ucumCode "kcal_th.h-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "E15" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloCAL_TH-PER-MIN a qudt:Unit ;
    rdfs:label "Kilocalorie (thermochemical) Per Minute"@en ;
    qudt:conversionMultiplier 69.73383333333334 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:HeatFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA591" ;
    qudt:plainTextDescription "1000-fold of the unit calorie divided by the unit minute" ;
    qudt:ucumCode "kcal_th.min-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K54" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloCAL_TH-PER-SEC a qudt:Unit ;
    rdfs:label "Kilocalorie (thermochemical) Per Second"@en ;
    qudt:conversionMultiplier 4184.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:HeatFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA592" ;
    qudt:plainTextDescription "1000-fold of the unit calorie divided by the SI base unit second" ;
    qudt:ucumCode "kcal_th.s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K55" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloEV-PER-MicroM a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Kilo Electron Volt per Micrometre"@en,
        "Kilo Electron Volt per Micrometer"@en-us ;
    dcterms:description "\"Kilo Electron Volt per Micrometer\" is a unit for  'Linear Energy Transfer' expressed as \\(keV/microM\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.000000000160217653 ;
    qudt:expression "\\(keV/microM\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:LinearEnergyTransfer ;
    qudt:ucumCode "keV.um-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGAUSS a qudt:Unit ;
    rdfs:label "Kilogauss"@en ;
    qudt:conversionMultiplier 0.1 ;
    qudt:hasDimensionVector qkdv:A0E-1L0I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:MagneticFluxDensity ;
    qudt:iec61360Code "0112/2///62720#UAB136" ;
    qudt:plainTextDescription "1 000-fold of the CGS unit of the magnetic flux density B" ;
    qudt:ucumCode "kG"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "78" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-K a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Kilogram Kelvin"@en ;
    dcterms:description "\\(\\textbf{Kilogram Kelvin} is a unit for 'Mass Temperature' expressed as \\(kg-K\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:expression "\\(kg-K\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H1T0D0 ;
    qudt:hasQuantityKind quantitykind:MassTemperature ;
    qudt:ucumCode "kg.K"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-M-PER-SEC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Kilogram Metre Per Second"@en,
        "Kilogram Meter Per Second"@en-us ;
    dcterms:description "\"Kilogram Meter Per Second\" is a unit for  'Linear Momentum' expressed as \\(kg-m/s\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(kg-m/s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:LinearMomentum ;
    qudt:iec61360Code "0112/2///62720#UAA615" ;
    qudt:ucumCode "kg.m.s-1"^^qudt:UCUMcs,
        "kg.m/s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B31" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-PER-CentiM2 a qudt:Unit ;
    rdfs:label "Kilogram Per Square Centimetre"@en,
        "Kilogram Per Square Centimeter"@en-us ;
    qudt:conversionMultiplier 10000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassPerArea ;
    qudt:iec61360Code "0112/2///62720#UAB174" ;
    qudt:plainTextDescription "SI base unit kilogram divided by the 0.0001-fold of the power of the SI base unit metre by exponent 2" ;
    qudt:ucumCode "kg.cm-2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D5" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-PER-CentiM3 a qudt:Unit ;
    rdfs:label "Kilogram Per Cubic Centimetre"@en,
        "Kilogram Per Cubic Centimeter"@en-us ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:iec61360Code "0112/2///62720#UAA597" ;
    qudt:plainTextDescription "SI base unit kilogram divided by the 0.000 001-fold of the power of the SI base unit metre with the exponent 3" ;
    qudt:ucumCode "kg.cm-3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G31" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-PER-DAY a qudt:Unit ;
    rdfs:label "Kilogram Per Day"@en ;
    qudt:conversionMultiplier 0.00001157407 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA601" ;
    qudt:plainTextDescription "SI base unit kilogram divided by the unit day" ;
    qudt:ucumCode "kg.d-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F30" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-PER-DeciM3 a qudt:Unit ;
    rdfs:label "Kilogram Per Cubic Decimetre"@en,
        "Kilogram Per Cubic Decimeter"@en-us ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:iec61360Code "0112/2///62720#UAA604" ;
    qudt:plainTextDescription "SI base unit kilogram divided by the 0.001-fold of the power of the SI base unit metre with the exponent 3" ;
    qudt:ucumCode "kg.dm-3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B34" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-PER-HA a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Kilogram per Hectare"@en ;
    dcterms:description "Kilogram Per Hectare is a unit of mass per area. Kilogram Per Hectare (kg/ha) has a dimension of ML-2 where M is mass, and L is length. It can be converted to the corresponding standard SI unit kg/m2 by multiplying its value by a factor of 0.0001."^^rdf:HTML ;
    qudt:allowedUnitOfSystem sou:SI ;
    qudt:conversionMultiplier 0.0001 ;
    qudt:expression "\\(kg/hare\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassPerArea ;
    qudt:ucumCode "kg.har-1"^^qudt:UCUMcs,
        "kg/har"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-PER-KiloMOL a qudt:Unit ;
    rdfs:label "Kilogram Per Kilomol"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A-1E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MolarMass ;
    qudt:iec61360Code "0112/2///62720#UAA611" ;
    qudt:plainTextDescription "SI base unit kilogram divided by the 1 000-fold of the SI base unit mol" ;
    qudt:ucumCode "kg.mol-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F24" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-PER-L a qudt:Unit ;
    rdfs:label "Kilogram Per Litre"@en,
        "Kilogram Per Liter"@en-us ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:iec61360Code "0112/2///62720#UAA612" ;
    qudt:plainTextDescription "SI base unit kilogram divided by the unit litre" ;
    qudt:ucumCode "kg.L-1"^^qudt:UCUMcs,
        "kg/L"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B35" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-PER-M-HR a qudt:Unit ;
    rdfs:label "Kilograms per metre per hour"@en ;
    dcterms:description "One SI standard unit of mass over one SI standard unit of length over 3600 times one SI standard unit of time."@en ;
    qudt:conversionMultiplier 0.000277777777777778 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:DynamicViscosity ;
    qudt:ucumCode "kg.m-1.h-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-PER-M-SEC a qudt:Unit ;
    rdfs:label "Kilograms per metre per second"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:DynamicViscosity ;
    qudt:ucumCode "kg.m-1.s-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-PER-MIN a qudt:Unit ;
    rdfs:label "Kilogram Per Minute"@en ;
    qudt:conversionMultiplier 0.01666667 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA624" ;
    qudt:plainTextDescription "SI base unit kilogram divided by the unit minute" ;
    qudt:ucumCode "kg.min-1"^^qudt:UCUMcs,
        "kg/min"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F31" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-PER-MOL a qudt:Unit ;
    rdfs:label "Kilogram per Mol"@en ;
    dcterms:description "<p>In chemistry, the molar mass M is defined as the mass of a given substance (chemical element or chemical compound) divided by its amount of substance. It is a physical property of a given substance. The base SI unit for molar mass is \\(kg/mol\\). However, for historical reasons, molar masses are almost always expressed in \\(g/mol\\). As an example, the molar mass of water is approximately: \\(18.01528(33) \\; g/mol\\)</p>."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(kg mol^{-1}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A-1E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MolarMass ;
    qudt:ucumCode "kg.mol-1"^^qudt:UCUMcs,
        "kg/mol"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D74" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-PER-SEC-M2 a qudt:Unit ;
    rdfs:label "Kilogram Per Second Square Metre"@en,
        "Kilogram Per Second Square Meter"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassPerAreaTime ;
    qudt:iec61360Code "0112/2///62720#UAA618" ;
    qudt:plainTextDescription "SI base unit kilogram divided by the product of the power of the SI base unit metre with the exponent 2 and the SI base unit second" ;
    qudt:ucumCode "kg.(s.m2)-1"^^qudt:UCUMcs,
        "kg.s-1.m-2)"^^qudt:UCUMcs,
        "kg/(s.m2)"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H56" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-SEC2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Kilogram Square Second"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:expression "\\(kilog-sec2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:ucumCode "kg.s2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM_F-M-PER-CentiM2 a qudt:Unit ;
    rdfs:label "Kilogram?force Metre Per Square Centimetre"@en,
        "Kilogram?force Meter Per Square Centimeter"@en-us ;
    qudt:conversionMultiplier 98066.5 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerLength ;
    qudt:iec61360Code "0112/2///62720#UAB189" ;
    qudt:plainTextDescription "product of the unit kilogram-force and the SI base unit metre divided by the 0.0001-fold of the power of the SI base unit metre by exponent 2" ;
    qudt:ucumCode "kgf.m.cm-2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "E44" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloJ-PER-KiloGM-K a qudt:Unit ;
    rdfs:label "Kilojoule Per Kilogram Kelvin"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:SpecificEntropy ;
    qudt:iec61360Code "0112/2///62720#UAA571" ;
    qudt:plainTextDescription "1 000-fold of the SI derived unit joule divided by the product of the SI base unit kilogram and the SI base unit kelvin" ;
    qudt:ucumCode "kJ.(kg.K)-1"^^qudt:UCUMcs,
        "kJ.kg-1.K-1"^^qudt:UCUMcs,
        "kJ/(kg.K)"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B43" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloLB_F-FT-PER-A a qudt:Unit ;
    rdfs:label "Pound Force Foot Per Ampere"@en ;
    qudt:conversionMultiplier 2728.302797866667 ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:MagneticFlux ;
    qudt:iec61360Code "0112/2///62720#UAB483" ;
    qudt:plainTextDescription "product of the Anglo-American unit pound-force and foot divided by the SI base unit ampere" ;
    qudt:ucumCode "[lbf_av].[ft_i].A-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F22" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloLB_F-PER-FT a qudt:Unit ;
    rdfs:label "Pound Force Per Foot"@en ;
    qudt:conversionMultiplier 14593.904199475066 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerLength ;
    qudt:iec61360Code "0112/2///62720#UAB192" ;
    qudt:plainTextDescription "unit of the length-related force" ;
    qudt:ucumCode "[lbf_av].[ft_i]-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F17" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloM3-PER-SEC2 a qudt:Unit ;
    rdfs:label "Cubic Kilometre per Square Second"@en,
        "Cubic Kilometer per Square Second"@en-us ;
    dcterms:description "\\(\\textit{Cubic Kilometer per Square Second}\\) is a unit for \\(\\textit{Standard Gravitational Parameter}\\) expressed as \\(km^3/s^2\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1000000000.0 ;
    qudt:expression "\\(km^3/s^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:StandardGravitationalParameter ;
    qudt:ucumCode "km3.s-2"^^qudt:UCUMcs,
        "km3/s2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloMOL a qudt:Unit ;
    rdfs:label "Kilomole"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:AmountOfSubstance ;
    qudt:iec61360Code "0112/2///62720#UAA640" ;
    qudt:plainTextDescription "1 000-fold of the SI base unit mol" ;
    qudt:ucumCode "kmol"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B45" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloMOL-PER-HR a qudt:Unit ;
    rdfs:label "Kilomole Per Hour"@en ;
    qudt:conversionMultiplier 0.277777777777778 ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:CatalyticActivity ;
    qudt:iec61360Code "0112/2///62720#UAA641" ;
    qudt:plainTextDescription "1 000-fold of the SI base unit mole divided by the unit for time hour" ;
    qudt:ucumCode "kmol.h-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K58" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloMOL-PER-M3 a qudt:Unit ;
    rdfs:label "Kilomole Per Cubic Metre"@en,
        "Kilomole Per Cubic Meter"@en-us ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:AmountOfSubstancePerUnitVolume ;
    qudt:iec61360Code "0112/2///62720#UAA642" ;
    qudt:plainTextDescription "1 000-fold of the SI base unit mol divided by the power of the SI base unit metre with the exponent 3" ;
    qudt:ucumCode "kmol.m-3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B46" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloMOL-PER-MIN a qudt:Unit ;
    rdfs:label "Kilomole Per Minute"@en ;
    qudt:conversionMultiplier 16.94444 ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MolarFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA645" ;
    qudt:plainTextDescription "1 000-fold of the SI base unit mole divided by the unit for time minute" ;
    qudt:ucumCode "kmol.min-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K61" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloMOL-PER-SEC a qudt:Unit ;
    rdfs:label "Kilomole Per Second"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MolarFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA646" ;
    qudt:plainTextDescription "1 000-fold of the SI base unit mol divided by the SI base unit second" ;
    qudt:ucumCode "kmol.s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "E94" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloOHM a qudt:Unit ;
    rdfs:label "Kiloohm"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E-2L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Resistance ;
    qudt:iec61360Code "0112/2///62720#UAA555" ;
    qudt:plainTextDescription "1 000-fold of the SI derived unit ohm" ;
    qudt:ucumCode "kOhm"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B49" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloPA-PER-BAR a qudt:Unit ;
    rdfs:label "Kilopascal Per Bar"@en ;
    qudt:conversionMultiplier 100000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:PressureRatio ;
    qudt:iec61360Code "0112/2///62720#UAA577" ;
    qudt:plainTextDescription "1 000-fold of the SI derived unit pascal divided by the unit bar" ;
    qudt:ucumCode "kPa.bar-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F03" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloPA-PER-K a qudt:Unit ;
    rdfs:label "Kilopascal Per Kelvin"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:PressureCoefficient ;
    qudt:iec61360Code "0112/2///62720#UAA576" ;
    qudt:plainTextDescription "1 000-fold of the SI derived unit pascal divided by the SI base unit kelvin" ;
    qudt:ucumCode "kPa.K-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F83" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloPA-PER-MilliM a qudt:Unit ;
    rdfs:label "Kilopascal Per Millimetre"@en,
        "Kilopascal Per Millimeter"@en-us ;
    qudt:conversionMultiplier 100000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:SpectralRadiantEnergyDensity ;
    qudt:iec61360Code "0112/2///62720#UAB060" ;
    qudt:plainTextDescription "1 000-fold of the derived SI unit pascal divided by the 0.001-fold of the SI base unit metre" ;
    qudt:ucumCode "kPa.mm-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "34" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloS a qudt:Unit ;
    rdfs:label "Kilosiemens"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E2L-2I0M-1H0T3D0 ;
    qudt:hasQuantityKind quantitykind:Conductance ;
    qudt:iec61360Code "0112/2///62720#UAA578" ;
    qudt:plainTextDescription "1 000-fold of the SI derived unit siemens" ;
    qudt:ucumCode "kS"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B53" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloV-PER-M a qudt:Unit ;
    rdfs:label "Kilovolt Per Metre"@en,
        "Kilovolt Per Meter"@en-us ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:ElectricFieldStrength ;
    qudt:iec61360Code "0112/2///62720#UAA582" ;
    qudt:plainTextDescription "1 000-fold of the SI derived unit volt divided by the SI base unit metre" ;
    qudt:ucumCode "kV.m-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B55" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloWB-PER-M a qudt:Unit ;
    rdfs:label "Kiloweber Per Metre"@en,
        "Kiloweber Per Meter"@en-us ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:MagneticVectorPotential ;
    qudt:iec61360Code "0112/2///62720#UAA585" ;
    qudt:plainTextDescription "1 000-fold of the SI derived unit weber divided by the SI base unit metre" ;
    qudt:ucumCode "kWb.m-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B56" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Kina a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Kina"@en ;
    dcterms:description "Papua New Guinea"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Kina"^^xsd:anyURI ;
    qudt:expression "\\(PGK\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Kina?oldid=477155361"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Kroon a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Kroon"@en ;
    dcterms:description "Estonia"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Estonian_kroon"^^xsd:anyURI ;
    qudt:expression "\\(EEK\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Estonian_kroon?oldid=492626188"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KuwaitiDinar a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Kuwaiti Dinar"@en ;
    dcterms:description "Kuwait"^^rdf:HTML ;
    qudt:currencyExponent 3 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Kuwaiti_dinar"^^xsd:anyURI ;
    qudt:expression "\\(KWD\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Kuwaiti_dinar?oldid=489547428"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Kwanza a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Kwanza"@en ;
    dcterms:description "Angola"^^rdf:HTML ;
    qudt:currencyExponent 1 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Angolan_kwanza"^^xsd:anyURI ;
    qudt:expression "\\(AOA\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Angolan_kwanza?oldid=491748749"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Kyat a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Kyat"@en ;
    dcterms:description "Myanmar"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Myanma_kyat"^^xsd:anyURI ;
    qudt:expression "\\(MMK\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Myanma_kyat?oldid=441109905"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:L-PER-K a qudt:Unit ;
    rdfs:label "Litre Per Kelvin"@en,
        "Liter Per Kelvin"@en-us ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H-1T0D0 ;
    qudt:hasQuantityKind quantitykind:VolumeThermalExpansion ;
    qudt:iec61360Code "0112/2///62720#UAA650" ;
    qudt:plainTextDescription "unit litre divided by the SI base unit kelvin" ;
    qudt:ucumCode "L.K-1"^^qudt:UCUMcs,
        "L/K"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G28" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:L-PER-KiloGM a qudt:Unit ;
    rdfs:label "Litre Per Kilogram"@en,
        "Liter Per Kilogram"@en-us ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M-1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:SpecificVolume ;
    qudt:iec61360Code "0112/2///62720#UAB380" ;
    qudt:plainTextDescription "unit of the volume litre divided by the SI base unit kilogram" ;
    qudt:ucumCode "L.kg-1"^^qudt:UCUMcs,
        "L/kg"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H83" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:L-PER-L a qudt:Unit ;
    rdfs:label "Litre Per Litre"@en,
        "Liter Per Liter"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:VolumeFraction ;
    qudt:iec61360Code "0112/2///62720#UAA658" ;
    qudt:plainTextDescription "volume ratio consisting of the unit litre divided by the unit litre" ;
    qudt:ucumCode "L.L-1"^^qudt:UCUMcs,
        "L/L"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K62" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:L-PER-MOL a qudt:Unit ;
    rdfs:label "Litre Per Mole"@en,
        "Liter Per Mole"@en-us ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A-1E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MolarVolume ;
    qudt:iec61360Code "0112/2///62720#UAA662" ;
    qudt:plainTextDescription "unit litre divided by the SI base unit mol" ;
    qudt:ucumCode "L.mol-1"^^qudt:UCUMcs,
        "L/mol"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B58" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:L-PER-MicroMOL a qudt:Unit ;
    rdfs:label "Litres per micromole"@en ;
    dcterms:description "The inverse of a molar concentration - the untits of per molarity."@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A-1E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MolarVolume ;
    qudt:ucumCode "L.umol-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB-DEG_F a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Pound Degree Fahrenheit"@en ;
    dcterms:description "\\(\\textbf{Pound Degree Fahrenheit} is an Imperial unit for 'Mass Temperature' expressed as \\(lb-degF\\)."^^qudt:LatexString ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(lb-degF\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H1T0D0 ;
    qudt:hasQuantityKind quantitykind:MassTemperature ;
    qudt:ucumCode "[lb_av].[degF]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB-DEG_R a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Pound Degree Rankine"@en ;
    dcterms:description "\\(\\textbf{Pound Degree Rankine} is an Imperial unit for 'Mass Temperature' expressed as \\(lb-degR\\)."^^qudt:LatexString ;
    qudt:definedUnitOfSystem sou:IMPERIAL ;
    qudt:expression "\\(lb-degR\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H1T0D0 ;
    qudt:hasQuantityKind quantitykind:MassTemperature ;
    qudt:ucumCode "[lb_av].[degR]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB-IN a qudt:Unit ;
    rdfs:label "Pound Mass (avoirdupois) Inch"@en ;
    qudt:conversionMultiplier 0.011521246198 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:LengthMass ;
    qudt:iec61360Code "0112/2///62720#UAB194" ;
    qudt:plainTextDescription "unit of the unbalance (product of avoirdupois pound according to the avoirdupois system of units and inch according to the Anglo-American and Imperial system of units)" ;
    qudt:ucumCode "[lb_av].[in_i]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "IA" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB-MOL a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Pound Mole"@en ;
    dcterms:description "<p><strong>Pound Mole</strong> is a unit for \\textit{'Mass Amount Of Substance'} expressed as \\(lb-mol\\).</p>."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.45359237 ;
    qudt:expression "\\(lb-mol\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassAmountOfSubstance ;
    qudt:iec61360Code "0112/2///62720#UAB402" ;
    qudt:ucumCode "[lb_av].mol"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "P44" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB-MOL-DEG_F a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Pound Mole Degree Fahrenheit"@en ;
    dcterms:description "\\(\\textbf{Pound Mole Degree Fahrenheit} is a unit for 'Mass Amount Of Substance Temperature' expressed as \\(lb-mol-degF\\)."^^qudt:LatexString ;
    qudt:expression "\\(lb-mol-degF\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H1T0D0 ;
    qudt:hasQuantityKind quantitykind:MassAmountOfSubstanceTemperature ;
    qudt:ucumCode "[lb_av].mol.[degF]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB-PER-DAY a qudt:Unit ;
    rdfs:label "Pound (avoirdupois) Per Day"@en ;
    qudt:conversionMultiplier 0.000005249912 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA673" ;
    qudt:plainTextDescription "unit of the mass avoirdupois pound according to the avoirdupois system of units divided by the unit for time day" ;
    qudt:ucumCode "[lb_av].d-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K66" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB-PER-FT a qudt:Unit ;
    rdfs:label "Pound per Foot"@en ;
    dcterms:description "\"Pound per Foot\" is an Imperial unit for  'Mass Per Length' expressed as \\(lb/ft\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.4881639435695537 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(lb/ft\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassPerLength ;
    qudt:ucumCode "[lb_av].[ft_i]-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB-PER-FT-HR a qudt:Unit ;
    rdfs:label "Pound per Foot Hour"@en ;
    dcterms:description "\"Pound per Foot Hour\" is an Imperial unit for  'Dynamic Viscosity' expressed as \\(lb/(ft-hr)\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0004133788732137649 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(lb/(ft-hr)\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:DynamicViscosity ;
    qudt:ucumCode "[lb_av].[ft_i]-1.h-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB-PER-FT-SEC a qudt:Unit ;
    rdfs:label "Pound per Foot Second"@en ;
    dcterms:description "\"Pound per Foot Second\" is an Imperial unit for  'Dynamic Viscosity' expressed as \\(lb/(ft-s)\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.4881639435695537 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(lb/(ft-s)\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:DynamicViscosity ;
    qudt:ucumCode "[lb_av].[ft_i]-1.s-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB-PER-FT2 a qudt:Unit ;
    rdfs:label "Pound Mass (avoirdupois) Per Square Foot"@en ;
    qudt:conversionMultiplier 4.882428 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassPerArea ;
    qudt:iec61360Code "0112/2///62720#UAB262" ;
    qudt:plainTextDescription "unit for areal-related mass as a unit pound according to the avoirdupois system of units divided by the power of the unit foot according to the Anglo-American and Imperial system of units by exponent 2" ;
    qudt:ucumCode "[lb_av].[ft_i]-2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "FP" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB-PER-IN a qudt:Unit ;
    rdfs:label "Pound per Inch"@en ;
    dcterms:description "\"Pound per Inch\" is an Imperial unit for  'Mass Per Length' expressed as \\(lb/in\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 17.857967322834646 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(lb/in\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassPerLength ;
    qudt:ucumCode "[lb_av].[in_i]-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB-PER-SEC a qudt:Unit ;
    rdfs:label "Pound (avoirdupois) Per Second"@en ;
    qudt:conversionMultiplier 0.4535924 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA692" ;
    qudt:plainTextDescription "unit of the mass avoirdupois pound according to the avoirdupois system of units divided by the SI base unit for time second" ;
    qudt:ucumCode "[lb_av].s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K81" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB_F-PER-FT a qudt:Unit ;
    rdfs:label "Pound Force per Foot"@en ;
    dcterms:description "\"Pound Force per Foot\" is an Imperial unit for  'Force Per Length' expressed as \\(lbf/ft\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 14.5939042 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(lbf/ft\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerLength ;
    qudt:ucumCode "[lbf_av].[ft_i]-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB_F-PER-IN a qudt:Unit ;
    rdfs:label "Pound Force per Inch"@en ;
    dcterms:description "\"Pound Force per Inch\" is an Imperial unit for  'Force Per Length' expressed as \\(lbf/in\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 175.12685 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(lbf/in\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerLength ;
    qudt:ucumCode "[lbf_av].[in_i]-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB_F-PER-IN2-DEG_F a qudt:Unit ;
    rdfs:label "Pound Force Per Square Inch Degree Fahrenheit"@en ;
    qudt:conversionMultiplier 12410.56 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:VolumetricHeatCapacity ;
    qudt:iec61360Code "0112/2///62720#UAA702" ;
    qudt:plainTextDescription "composed unit for pressure (pound-force per square inch) divided by the unit degree Fahrenheit for temperature" ;
    qudt:ucumCode "[lbf_av].[sin_i]-1.[degF]-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K86" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB_F-PER-IN2-SEC a qudt:Unit ;
    rdfs:label "Pound Force per Square Inch Second"@en ;
    dcterms:description "\"Pound Force per Square Inch Second\" is a unit for  'Force Per Area Time' expressed as \\(lbf / in^{2}-s\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 6894.75789 ;
    qudt:expression "\\(lbf / in^{2}-s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerAreaTime ;
    qudt:ucumCode "[lbf_av].[sin_i]-1.s-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB_F-PER-LB a qudt:Unit ;
    rdfs:label "Pound Force per Pound"@en ;
    dcterms:description "\"Pound Force per Pound\" is an Imperial unit for  'Thrust To Mass Ratio' expressed as \\(lbf/lb\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 9.80665085 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(lbf/lb\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ThrustToMassRatio ;
    qudt:ucumCode "[lbf_av].[lb_av]-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB_F-SEC-PER-FT2 a qudt:Unit ;
    rdfs:label "Pound Force Second per Square Foot"@en ;
    dcterms:description "\"Pound Force Second per Square Foot\" is an Imperial unit for  'Dynamic Viscosity' expressed as \\(lbf-s/ft^{2}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 47.8802631 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(lbf-s/ft^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:DynamicViscosity ;
    qudt:ucumCode "[lbf_av].s.[sft_i]-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB_F-SEC-PER-IN2 a qudt:Unit ;
    rdfs:label "Pound Force Second per Square Inch"@en ;
    dcterms:description "\"Pound Force Second per Square Inch\" is an Imperial unit for  'Dynamic Viscosity' expressed as \\(lbf-s/in^{2}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 6894.75789 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(lbf-s/in^{2}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:DynamicViscosity ;
    qudt:ucumCode "[lbf_av].s.[sin_i]-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LM-SEC a qudt:Unit ;
    rdfs:label "lumen second"@en ;
    dcterms:description "In photometry, the lumen second is the SI derived unit of luminous energy. It is based on the lumen, the SI unit of luminous flux, and the second, the SI base unit of time.  The lumen second is sometimes called the talbot (symbol T).  An older name for the lumen second was the lumberg."^^rdf:HTML ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(lm s\\)"^^qudt:LatexString ;
    qudt:hasQuantityKind quantitykind:LuminousEnergy ;
    qudt:iec61360Code "0112/2///62720#UAA722" ;
    qudt:ucumCode "lm.s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B62" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    skos:altLabel "lumberg",
        "talbot" .

unit:LUX-HR a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Lux Hour"@en ;
    dcterms:description "The SI unit for measuring the illumination (illuminance) of a surface. One lux is defined as an illumination of one lumen per square meter or 0.0001 phot. In considering the various light units, it's useful to think about light originating at a point and shining upon a surface. The intensity of the light source is measured in candelas; the total light flux in transit is measured in lumens (1 lumen = 1 candelau00b7steradian); and the amount of light received per unit of surface area is measured in lux (1 lux = 1 lumen/square meter). One lux is equal to approximately 0.09290 foot candle."^^rdf:HTML ;
    qudt:conversionMultiplier 3600.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Lux"^^xsd:anyURI ;
    qudt:expression "\\(lx hr\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:LuminousExposure ;
    qudt:iec61360Code "0112/2///62720#UAA724" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Lux?oldid=494700274"^^xsd:anyURI ;
    qudt:siUnitsExpression "lm-hr/m^2" ;
    qudt:ucumCode "lx.h"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B63" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LaoKip a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Lao kip"@en ;
    dcterms:description "Laos"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:symbol " ₭" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Lari a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Lari"@en ;
    dcterms:description "Georgia"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Lari"^^xsd:anyURI ;
    qudt:expression "\\(GEL\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Lari?oldid=486808394"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LatvianLats a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Latvian Lats"@en ;
    dcterms:description "Latvia"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Latvian_lats"^^xsd:anyURI ;
    qudt:expression "\\(LVL\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Latvian_lats?oldid=492800402"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LebanesePound a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Lebanese Pound"@en ;
    dcterms:description "Lebanon"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Lebanese_pound"^^xsd:anyURI ;
    qudt:expression "\\(LBP\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Lebanese_pound?oldid=495528740"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Lek a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Lek"@en ;
    dcterms:description "Albania"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Lek"^^xsd:anyURI ;
    qudt:expression "\\(ALL\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Lek?oldid=495195665"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Lempira a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Lempira"@en ;
    dcterms:description "Honduras"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Lempira"^^xsd:anyURI ;
    qudt:expression "\\(HNL\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Lempira?oldid=389955747"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Leone a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Leone"@en ;
    dcterms:description "Sierra Leone"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Sierra_Leonean_leone"^^xsd:anyURI ;
    qudt:expression "\\(SLL\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Sierra_Leonean_leone?oldid=493517965"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LiberianDollar a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Liberian Dollar"@en ;
    dcterms:description "Liberia"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Liberian_dollar"^^xsd:anyURI ;
    qudt:expression "\\(LRD\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Liberian_dollar?oldid=489549110"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LibyanDinar a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Libyan Dinar"@en ;
    dcterms:description "Libya"^^rdf:HTML ;
    qudt:currencyExponent 3 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Libyan_dinar"^^xsd:anyURI ;
    qudt:expression "\\(LYD\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Libyan_dinar?oldid=491421981"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Lilangeni a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Lilangeni"@en ;
    dcterms:description "Swaziland"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Swazi_lilangeni"^^xsd:anyURI ;
    qudt:expression "\\(SZL\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Swazi_lilangeni?oldid=490323340"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LithuanianLitas a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Lithuanian Litas"@en ;
    dcterms:description "Lithuania"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Lithuanian_litas"^^xsd:anyURI ;
    qudt:expression "\\(LTL\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Lithuanian_litas?oldid=493046592"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Loti a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Loti"@en ;
    dcterms:description "Lesotho"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Loti"^^xsd:anyURI ;
    qudt:expression "\\(LSL\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Loti?oldid=384534708"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M-K a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Metre Kelvin"@en,
        "Meter Kelvin"@en-us ;
    dcterms:description "\\(\\textbf{Meter Kelvin} is a unit for 'Length Temperature' expressed as \\(m K\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H1T0D0 ;
    qudt:hasQuantityKind quantitykind:LengthTemperature ;
    qudt:iec61360Code "0112/2///62720#UAB170" ;
    qudt:symbol "m K" ;
    qudt:ucumCode "m.K"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D18" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M-K-PER-W a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Metre Kelvin per Watt"@en,
        "Meter Kelvin per Watt"@en-us ;
    dcterms:description "\\(\\textbf{Meter Kelvin per Watt} is a unit for 'Thermal Resistivity' expressed as \\(K-m/W\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(K-m/W\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M-1H1T3D0 ;
    qudt:hasQuantityKind quantitykind:ThermalResistivity ;
    qudt:ucumCode "m.K.W-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M-KiloGM a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Metre Kilogram"@en,
        "Meter Kilogram"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(m-kg\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:LengthMass ;
    qudt:ucumCode "m.kg"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M-PER-FARAD a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Metre per Farad"@en,
        "Meter per Farad"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(m-per-f\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-2L3I0M1H0T-4D0 ;
    qudt:hasQuantityKind quantitykind:InversePermittivity ;
    qudt:ucumCode "m.F-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M-PER-K a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Metre per Kelvin"@en,
        "Meter per Kelvin"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(m-per-k\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H-1T0D0 ;
    qudt:hasQuantityKind quantitykind:LinearThermalExpansion ;
    qudt:iec61360Code "0112/2///62720#UAA728" ;
    qudt:ucumCode "m/K"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F52" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M2-HR-DEG_C-PER-KiloCAL_IT a qudt:Unit ;
    rdfs:label "Square Metre Hour Degree Celsius Per Kilocalorie (international Table)"@en,
        "Square Meter Hour Degree Celsius Per Kilocalorie (international Table)"@en-us ;
    qudt:conversionMultiplier 0.859845 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-1H1T3D0 ;
    qudt:hasQuantityKind quantitykind:ThermalInsulance ;
    qudt:iec61360Code "0112/2///62720#UAA749" ;
    qudt:plainTextDescription "product of the power of the SI base unit metre with the exponent 2, of the unit hour for time and the unit degree Celsius for temperature divided by the 1000-fold of the out of use unit for energy international calorie" ;
    qudt:ucumCode "m2.h.Cel/kcal_IT"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L14" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M2-K a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Square Metre Kelvin"@en,
        "Square Meter Kelvin"@en-us ;
    dcterms:description "\\(\\textbf{Square Meter Kelvin} is a unit for 'Area Temperature' expressed as \\(m^{2}-K\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(m^{2}-K\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H1T0D0 ;
    qudt:hasQuantityKind quantitykind:AreaTemperature ;
    qudt:ucumCode "m2.K"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M2-K-PER-W a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Square Metre Kelvin per Watt"@en,
        "Square Meter Kelvin per Watt"@en-us ;
    dcterms:description "\\(\\textbf{Square Meter Kelvin per Watt} is a unit for 'Thermal Insulance' expressed as \\((K^{2})m/W\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\((K^{2})m/W\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-1H1T3D0 ;
    qudt:hasQuantityKind quantitykind:ThermalInsulance ;
    qudt:iec61360Code "0112/2///62720#UAA746" ;
    qudt:informativeReference "http://physics.nist.gov/Pubs/SP811/appenB9.html"^^xsd:anyURI ;
    qudt:ucumCode "m2.K.W-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D19" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M2-PER-GM a qudt:Unit ;
    rdfs:label "Square metres per gram"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M-1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassAttenuationCoefficient ;
    qudt:ucumCode "m2.g-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M2-PER-GM_DRY a qudt:Unit ;
    rdfs:label "Square metres per gram of dry sediment"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M-1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassAttenuationCoefficient ;
    qudt:ucumCode "m2.g-1{dry}"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M2-PER-HA a qudt:Unit ;
    rdfs:label "square metres per hectare"@en,
        "square meters per hectare"@en-us ;
    qudt:conversionMultiplier 0.0001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:AreaRatio ;
    qudt:plainTextDescription "Square metres per hectare." ;
    qudt:symbol "m^2/ha" ;
    qudt:ucumCode "m2.har-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M2-PER-J a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Square Metre per Joule"@en,
        "Square Meter per Joule"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Steradian"^^xsd:anyURI ;
    qudt:expression "\\(m^2/j\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-1H0T2D0 ;
    qudt:hasQuantityKind quantitykind:SpectralCrossSection ;
    qudt:iec61360Code "0112/2///62720#UAA745" ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:ucumCode "m2.J-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D20" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M2-PER-K a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Square Metre per Kelvin"@en,
        "Square Meter per Kelvin"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(m2-per-k\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T0D0 ;
    qudt:hasQuantityKind quantitykind:AreaThermalExpansion ;
    qudt:ucumCode "m2.K-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M2-PER-MOL a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Square Metre per Mole"@en,
        "Square Meter per Mole"@en-us ;
    dcterms:description "Square Meter Per Mole (m2/mol) is a unit in the category of Specific Area. It is also known as square meters per mole, square metre per per, square metres per per, square meter/per, square metre/per. This unit is commonly used in the SI unit system. Square Meter Per Mole (m2/mol) has a dimension of M-1L2 where M is mass, and L is length. This unit is the standard SI unit in this category."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(m^2/mol\\)"^^qudt:LatexString,
        "\\(m^{2}/mol\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A-1E0L2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MolarAttenuationCoefficient ;
    qudt:iec61360Code "0112/2///62720#UAA751" ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:ucumCode "m2.mol-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D22" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M2-PER-N a qudt:Unit ;
    rdfs:label "Square Metre Per Newton"@en,
        "Square Meter Per Newton"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M-1H0T2D0 ;
    qudt:hasQuantityKind quantitykind:Compressibility ;
    qudt:iec61360Code "0112/2///62720#UAB492" ;
    qudt:plainTextDescription "power of the SI base unit metre with the exponent 2 divided by the derived SI unit newton" ;
    qudt:ucumCode "m2.N-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H59" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M2-PER-SR a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Square Metre per Steradian"@en,
        "Square Meter per Steradian"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Steradian"^^xsd:anyURI ;
    qudt:expression "\\(m^2/sr\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:AngularCrossSection ;
    qudt:iec61360Code "0112/2///62720#UAA986" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Steradian?oldid=494317847"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:ucumCode "m2.sr-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D27" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M2-PER-SR-J a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Square Metre per Steradian Joule"@en,
        "Square Meter per Steradian Joule"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Steradian"^^xsd:anyURI ;
    qudt:expression "\\(m^2/sr-j\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-1H0T2D0 ;
    qudt:hasQuantityKind quantitykind:SpectralAngularCrossSection ;
    qudt:iec61360Code "0112/2///62720#UAA756" ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:ucumCode "m2.sr-1.J-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D25" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M2-PER-V-SEC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Square Metre per Volt Second"@en,
        "Square Meter per Volt Second"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(m^2/v-s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M-1H0T4D0 ;
    qudt:hasQuantityKind quantitykind:Mobility ;
    qudt:iec61360Code "0112/2///62720#UAA748" ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:ucumCode "m2.V-1.s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D26" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M2-SR a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Square Metre Steradian"@en,
        "Square Meter Steradian"@en-us ;
    dcterms:description "\"Square Meter Steradian\" is a unit for  'Area Angle' expressed as \\(m^{2}-sr\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(m^{2}-sr\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:AreaAngle ;
    qudt:ucumCode "m2.sr"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M3-PER-C a qudt:Unit ;
    rdfs:label "Cubic Metre per Coulomb"@en,
        "Cubic Meter per Coulomb"@en-us ;
    qudt:expression "\\(m^3/c\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-1L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:HallCoefficient ;
    qudt:iec61360Code "0112/2///62720#UAB143" ;
    qudt:informativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:ucumCode "m3.C-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A38" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M3-PER-K a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Cubic Metre per Kelvin"@en,
        "Cubic Meter per Kelvin"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(m3-per-k\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H-1T0D0 ;
    qudt:hasQuantityKind quantitykind:VolumeThermalExpansion ;
    qudt:iec61360Code "0112/2///62720#UAA758" ;
    qudt:ucumCode "m3.K-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G29" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M3-PER-KiloGM a qudt:Unit ;
    rdfs:label "Cubic Metre per Kilogram"@en,
        "Cubic Meter per Kilogram"@en-us ;
    dcterms:description "Cubic Meter Per Kilogram (m3/kg) is a unit in the category of Specific volume. It is also known as cubic meters per kilogram, cubic metre per kilogram, cubic metres per kilogram, cubic meter/kilogram, cubic metre/kilogram. This unit is commonly used in the SI unit system. Cubic Meter Per Kilogram (m3/kg) has a dimension of M-1L3 where M is mass, and L is length. This unit is the standard SI unit in this category."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(m^{3}/kg\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M-1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:SpecificVolume ;
    qudt:iec61360Code "0112/2///62720#UAA766" ;
    qudt:ucumCode "m3.kg-1"^^qudt:UCUMcs,
        "m3/kg"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A39" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M3-PER-KiloGM-SEC2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Cubic Metre per Kilogram Square Second"@en,
        "Cubic Meter per Kilogram Square Second"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(m^{3} kg^{-1} s^{-2}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M-1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:GravitationalAttraction ;
    qudt:ucumCode "m3.(kg.s2)-1"^^qudt:UCUMcs,
        "m3.kg-1.s-2"^^qudt:UCUMcs,
        "m3/(kg.s2)"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M3-PER-M3 a qudt:Unit ;
    rdfs:label "Cubic Metre Per Cubic Metre"@en,
        "Cubic Meter Per Cubic Meter"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:VolumeFraction ;
    qudt:iec61360Code "0112/2///62720#UAA767" ;
    qudt:plainTextDescription "power of the SI base unit metre with the exponent 3 divided by the power of the SI base unit metre with the exponent 3" ;
    qudt:ucumCode "m3.m-3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H60" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M3-PER-MOL a qudt:Unit ;
    rdfs:label "Cubic Metre per Mole"@en,
        "Cubic Meter per Mole"@en-us ;
    dcterms:description "<p>The molar volume, symbol \\(Vm\\), is the volume occupied by one mole of a substance (chemical element or chemical compound) at a given temperature and pressure. It is equal to the molar mass (M) divided by the mass density. It has the SI unit cubic metres per mole \\(m3/mol\\), although it is more practical to use the units cubic decimetres per mole \\(dm3/mol\\) for gases and cubic centimetres per mole \\(cm3/mol\\) for liquids and solids</p>."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(m^{3} mol^{-1}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A-1E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MolarVolume ;
    qudt:iec61360Code "0112/2///62720#UAA771" ;
    qudt:ucumCode "m3.mol-1"^^qudt:UCUMcs,
        "m3/mol"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A40" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M3-PER-SEC2 a qudt:Unit ;
    rdfs:label "Cubic Metre per Square Second"@en,
        "Cubic Meter per Square Second"@en-us ;
    dcterms:description "\\(\\textit{Cubic Meter per Square Second}\\) is a C.G.S System unit for  \\(\\textit{Standard Gravitational Parameter}\\) expressed as \\(m^3/s^2\\)"^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(m^3/s^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:StandardGravitationalParameter ;
    qudt:ucumCode "m3.s-2"^^qudt:UCUMcs,
        "m3/s2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MACH a qudt:DimensionlessUnit,
        qudt:Unit ;
    rdfs:label "Mach"@en ;
    dcterms:description "\"Mach\" is a unit for  'Dimensionless Ratio' expressed as \\(mach\\)."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Mach"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:MachNumber ;
    qudt:iec61360Code "0112/2///62720#UAB595" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mach?oldid=492058934"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MDOLLAR-PER-FLIGHT a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Million US Dollars per Flight"@en ;
    qudt:expression "\\(\\(M\\$/Flight\\)\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MOHM a qudt:Unit ;
    rdfs:label "Mohm"@en ;
    dcterms:description "A unit of mechanical mobility for sound waves, being the reciprocal of the mechanical ohm unit of impedance, i.e., for an acoustic medium, the ratio of the flux or volumic speed (area times particle speed) of the resulting waves through it to the effective sound pressure (i.e. force) causing them, the unit being qualified, according to the units used, as m.k.s. or c.g.s. The mechanical ohm is equivalent to \\(1\\,dyn\\cdot\\,s\\cdot cm^{-1}\\) or \\(10^{-3} N\\cdot s\\cdot m^{-1}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:expression "\\(mohm\\)"^^qudt:LatexString ;
    qudt:hasQuantityKind quantitykind:MechanicalMobility ;
    qudt:informativeReference "http://www.oxfordreference.com/view/10.1093/acref/9780198605225.001.0001/acref-9780198605225-e-914"^^xsd:anyURI ;
    qudt:latexDefinition "\\(1\\:{mohm_{cgs}} = 1\\:\\frac {cm} {dyn.s}\\: (=\\:1\\:\\frac s g \\:in\\:base\\:c.g.s.\\:terms)\\)"^^qudt:LatexString,
        "\\(1\\:{mohm_{mks}} = 10^{3}\\:\\frac m {N.s}\\:(=\\:10^{3}\\:   \\frac s {kg}\\:in\\:base\\:m.k.s.\\:terms)\\)"^^qudt:LatexString ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MOL-DEG_C a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Mole Degree Celsius"@en ;
    dcterms:description "\\(\\textbf{Mole Degree Celsius} is a C.G.S System unit for 'Temperature Amount Of Substance' expressed as \\(mol-degC\\)."^^qudt:LatexString ;
    qudt:expression "\\(mol-deg-c\\)"^^qudt:LatexString,
        "\\(mol-degC\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H1T0D0 ;
    qudt:hasQuantityKind quantitykind:TemperatureAmountOfSubstance ;
    qudt:ucumCode "mol.Cel"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MOL-K a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Mole Kelvin"@en ;
    dcterms:description "<p><strong>Mole Kelvin</strong> is a unit for \\textit{'Temperature Amount Of Substance'} expressed as \\(mol-K\\)</p>."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H1T0D0 ;
    qudt:hasQuantityKind quantitykind:TemperatureAmountOfSubstance ;
    qudt:symbol "mol-K" ;
    qudt:ucumCode "mol.K"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MOL-PER-DeciM3 a qudt:Unit ;
    rdfs:label "Mole Per Cubic Decimetre"@en,
        "Mole Per Cubic Decimeter"@en-us ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:AmountOfSubstancePerUnitVolume ;
    qudt:iec61360Code "0112/2///62720#UAA883" ;
    qudt:plainTextDescription "SI base unit mol divided by the 0.001-fold of the power of the SI base unit metre with the exponent 3" ;
    qudt:ucumCode "mol.dm-3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C35" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MOL-PER-HR a qudt:Unit ;
    rdfs:label "Mole Per Hour"@en ;
    qudt:conversionMultiplier 0.000277778 ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MolarFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA884" ;
    qudt:plainTextDescription "SI base unit mole divided by the unit for time hour" ;
    qudt:ucumCode "mol.h-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L23" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MOL-PER-KiloGM-PA a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Mole per Kilogram Pascal"@en ;
    dcterms:description "Mole Per Kilogram Pascal (\\(mol/kg-pa\\)) is a unit of Molar Mass variation due to Pressure."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(mol/(kg.pa)\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A1E0L1I0M-2H0T2D0 ;
    qudt:hasQuantityKind quantitykind:AmountOfSubstancePerUnitMassPressure ;
    qudt:iec61360Code "0112/2///62720#UAB317" ;
    qudt:ucumCode "mol.kg-1.Pa-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "P51" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MOL-PER-L a qudt:Unit ;
    rdfs:label "Mole Per Litre"@en,
        "Mole Per Liter"@en-us ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:AmountOfSubstancePerUnitVolume ;
    qudt:iec61360Code "0112/2///62720#UAA888" ;
    qudt:plainTextDescription "SI base unit mol divided by the unit litre" ;
    qudt:ucumCode "mol.L-1"^^qudt:UCUMcs,
        "mol/L"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C38" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MOL-PER-MIN a qudt:Unit ;
    rdfs:label "Mole Per Minute"@en ;
    qudt:conversionMultiplier 0.016666667 ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MolarFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA894" ;
    qudt:plainTextDescription "SI base unit mole divided by the unit for time minute" ;
    qudt:ucumCode "mol.min-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L30" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MOL-PER-SEC a qudt:Unit ;
    rdfs:label "Mole Per Second"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MolarFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA895" ;
    qudt:plainTextDescription "SI base unit mol divided by the SI base unit second" ;
    qudt:ucumCode "mol.s-1"^^qudt:UCUMcs,
        "mol/s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "E95" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MX a qudt:Unit ;
    rdfs:label "Maxwell"@en ;
    dcterms:description "\"Maxwell\" is a C.G.S System unit for  'Magnetic Flux' expressed as \\(Mx\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00000001 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Maxwell"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:MagneticFlux ;
    qudt:iec61360Code "0112/2///62720#UAB155" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Maxwell?oldid=478391976"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/maxwell> ;
    qudt:symbol "Mx" ;
    qudt:ucumCode "Mx"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B65" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MalagasyAriary a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Malagasy Ariary"@en ;
    dcterms:description "Madagascar"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Malagasy_ariary"^^xsd:anyURI ;
    qudt:expression "\\(MGA\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Malagasy_ariary?oldid=489551279"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MalawiKwacha a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Malawi Kwacha"@en ;
    dcterms:description "Malawi"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:expression "\\(MWK\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MalaysianRinggit a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Malaysian Ringgit"@en ;
    dcterms:description "Malaysia"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Malaysian_ringgit"^^xsd:anyURI ;
    qudt:expression "\\(MYR\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Malaysian_ringgit?oldid=494417091"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MalteseLira a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Maltese Lira"@en ;
    dcterms:description "Malta"^^rdf:HTML ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Maltese_lira"^^xsd:anyURI ;
    qudt:expression "\\(MTL\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Maltese_lira?oldid=493810797"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Manat a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Manat"@en ;
    dcterms:description "Turkmenistan"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Manat"^^xsd:anyURI ;
    qudt:expression "\\(TMM\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Manat?oldid=486967490"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MauritiusRupee a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Mauritius Rupee"@en ;
    dcterms:description "Mauritius"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Mauritian_rupee"^^xsd:anyURI ;
    qudt:expression "\\(MUR\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mauritian_rupee?oldid=487629200"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MebiBYTE a qudt:Unit ;
    rdfs:label "Mebibyte"@en ;
    dcterms:description "The mebibyte is a multiple of the unit byte for digital information equivalent to \\(1024^{2} bytes\\) or \\(2^{20} bytes\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 5814539.984022601702139868711921 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Dimensionless ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Byte#Multiple-byte_units"^^xsd:anyURI ;
    qudt:isScalingOf unit:BYTE ;
    qudt:prefix prefix:Mebi ;
    qudt:symbol "MiB" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaA-PER-M2 a qudt:Unit ;
    rdfs:label "Megaampere Per Square Metre"@en,
        "Megaampere Per Square Meter"@en-us ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCurrentDensity ;
    qudt:iec61360Code "0112/2///62720#UAA203" ;
    qudt:plainTextDescription "1 000 000-fold of the SI base unit ampere divided by the power of the SI base unit metre with the exponent 2" ;
    qudt:ucumCode "MA.m-2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B66" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaBIT-PER-SEC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Megabit per Second"@en ;
    dcterms:description "A megabit per second (Mbit/s or Mb/s; not to be confused with mbit/s which means millibit per second, or with Mbitps which means megabit picosecond) is a unit of data transfer rate equal to 1,000,000 bits per second or 1,000 kilobits per second or 125,000 bytes per second or 125 kilobytes per second."^^rdf:HTML ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:DataRate ;
    qudt:iec61360Code "0112/2///62720#UAA226" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Data_rate_units"^^xsd:anyURI ;
    qudt:isScalingOf unit:KiloBIT-PER-SEC ;
    qudt:symbol "mbps" ;
    qudt:ucumCode "MBd"^^qudt:UCUMcs,
        "Mbit/s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "E20" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaBQ a qudt:Unit ;
    rdfs:label "Megabecquerel"@en ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Activity ;
    qudt:iec61360Code "0112/2///62720#UAA205" ;
    qudt:plainTextDescription "1 000 000-fold of the derived unit becquerel" ;
    qudt:ucumCode "MBq"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "4N" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaBYTE a qudt:Unit ;
    rdfs:label "Mega byte"@en ;
    dcterms:description "The megabyte is a multiple of the unit byte for digital information equivalent to \\(2^{6} bytes\\). Although the prefix mega means \\(10^{6}\\), the term megabyte and symbol \\(mB\\) have historically been used to refer to \\(1024^{2} bytes\\) or \\(2^{20} bytes\\). The megabyte is a multiple of the unit byte for digital information storage or transmission with three different values depending on context: 1048576 bytes generally for computer memory; and one million bytes (10, see prefix mega-) generally for computer storage. In rare cases, it is used to mean \\(1000 \\times 1024 (1024,000) bytes\\). The IEEE Standards Board has confirmed that mega means \\(1000,000\\), with exceptions allowed for the base-two meaning."^^qudt:LatexString ;
    qudt:conversionMultiplier 5814539.984022601702139868711921 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Megabyte"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Dimensionless ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Megabyte?oldid=487094486"^^xsd:anyURI ;
    qudt:isScalingOf unit:BYTE ;
    qudt:prefix prefix:Mega ;
    qudt:symbol "MB" ;
    qudt:ucumCode "MBy"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaC-PER-M3 a qudt:Unit ;
    rdfs:label "Megacoulomb Per Cubic Metre"@en,
        "Megacoulomb Per Cubic Meter"@en-us ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E1L-3I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricChargeDensity ;
    qudt:iec61360Code "0112/2///62720#UAA208" ;
    qudt:plainTextDescription "1 000 000-fold of the SI derived unit coulomb divided by the power of the SI base unit metre with the exponent 3" ;
    qudt:ucumCode "MC.m-3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B69" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaEV-FemtoM a qudt:Unit ;
    rdfs:label "Mega Electron Volt Femtometre"@en,
        "Mega Electron Volt Femtometer"@en-us ;
    dcterms:description "\\(\\textbf{Mega Electron Volt Femtometer} is a unit for  'Length Energy' expressed as \\(MeV fm\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.000000000000000000000000000160217653 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:LengthEnergy ;
    qudt:prefix prefix:Mega ;
    qudt:symbol "MeV fm" ;
    qudt:ucumCode "MeV.fm"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaEV-PER-CentiM a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Mega Electron Volt per Centimetre"@en,
        "Mega Electron Volt per Centimeter"@en-us ;
    dcterms:description "\"Mega Electron Volt per Centimeter\" is a unit for  'Linear Energy Transfer' expressed as \\(MeV/cm\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.000000000016021765314 ;
    qudt:expression "\\(MeV/cm\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:LinearEnergyTransfer ;
    qudt:ucumCode "MeV.cm-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaEV-PER-SpeedOfLight a qudt:Unit ;
    rdfs:label "Mega Electron Volt per Speed of Light"@en ;
    dcterms:description "\"Mega Electron Volt per Speed of Light\" is a unit for  'Linear Momentum' expressed as \\(MeV/c\\)."^^qudt:LatexString ;
    qudt:expression "\\(MeV/c\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:LinearMomentum ;
    qudt:ucumCode "MeV.[c]-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaGM-PER-M3 a qudt:Unit ;
    rdfs:label "Megagram Per Cubic Metre"@en,
        "Megagram Per Cubic Meter"@en-us ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:iec61360Code "0112/2///62720#UAA229" ;
    qudt:plainTextDescription "1 000-fold of the SI base unit kilogram divided by the power of the SI base unit metre with the exponent 3" ;
    qudt:ucumCode "Mg.m-3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B72" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaHZ-PER-K a qudt:Unit ;
    rdfs:label "Mega Hertz per Kelvin"@en ;
    dcterms:description "\\(\\textbf{Mega Hertz per Kelvin} is a unit for 'Inverse Time Temperature' expressed as \\(MHz K^{-1}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:expression "\\(MHz K^{-1}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H-1T-1D0 ;
    qudt:hasQuantityKind quantitykind:InverseTimeTemperature ;
    qudt:ucumCode "MHz.K-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaJ-PER-K a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "MegaJoule per Kelvin"@en ;
    dcterms:description "MegaJoule Per Kelvin (MegaJ/K) is a unit in the category of Entropy."^^qudt:LatexString ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:expression "\\(MegaJ/K\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:HeatCapacity ;
    qudt:ucumCode "MJ.K-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaOHM a qudt:Unit ;
    rdfs:label "Megaohm"@en ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E-2L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Resistance ;
    qudt:iec61360Code "0112/2///62720#UAA198" ;
    qudt:plainTextDescription "1,000,000-fold of the derived unit ohm" ;
    qudt:ucumCode "MOhm"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B75" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaPA-PER-BAR a qudt:Unit ;
    rdfs:label "Megapascal Per Bar"@en ;
    qudt:conversionMultiplier 10.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:PressureRatio ;
    qudt:iec61360Code "0112/2///62720#UAA217" ;
    qudt:plainTextDescription "1,000,000-fold of the SI derived unit pascal divided by the unit bar" ;
    qudt:ucumCode "MPa.bar-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F05" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaPA-PER-K a qudt:Unit ;
    rdfs:label "Megapascal Per Kelvin"@en ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:PressureCoefficient ;
    qudt:iec61360Code "0112/2///62720#UAA216" ;
    qudt:plainTextDescription "1,000,000-fold of the SI derived unit pascal divided by the SI base unit kelvin" ;
    qudt:ucumCode "MPa.K-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F85" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaV-PER-M a qudt:Unit ;
    rdfs:label "Megavolt Per Metre"@en,
        "Megavolt Per Meter"@en-us ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:ElectricFieldStrength ;
    qudt:iec61360Code "0112/2///62720#UAA223" ;
    qudt:plainTextDescription "1,000,000-fold of the SI derived unit volt divided by the SI base unit metre" ;
    qudt:ucumCode "MV.m-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B79" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Metical a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Metical"@en ;
    dcterms:description "Mozambique"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Mozambican_metical"^^xsd:anyURI ;
    qudt:expression "\\(MZN\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mozambican_metical?oldid=488225670"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MexicanPeso a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Mexican Peso"@en ;
    dcterms:description "Mexico"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Mexican_peso"^^xsd:anyURI ;
    qudt:expression "\\(MXN\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mexican_peso?oldid=494829813"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/MexicanPeso> ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MexicanUnidadDeInversion a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Mexican Unidad de Inversion (UDI) (Funds code)"@en ;
    dcterms:description "Mexico"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:expression "\\(MXV\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroBQ a qudt:Unit ;
    rdfs:label "Microbecquerel"@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Activity ;
    qudt:iec61360Code "0112/2///62720#UAA058" ;
    qudt:plainTextDescription "0.000001-fold of the SI derived unit becquerel" ;
    qudt:ucumCode "uBq"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H08" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroBQ-PER-KiloGM a qudt:Unit ;
    rdfs:label "Microbecquerels per kilogram"@en ;
    dcterms:description "One radioactive disintegration per hundred thousand seconds from an SI standard unit of mass of sample."@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:SpecificActivity ;
    qudt:ucumCode "uBq.kg-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroBQ-PER-L a qudt:Unit ;
    rdfs:label "Microbecquerels per litre"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:ActivityConcentration ;
    qudt:ucumCode "uBq.L-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroC-PER-M3 a qudt:Unit ;
    rdfs:label "Microcoulomb Per Cubic Metre"@en,
        "Microcoulomb Per Cubic Meter"@en-us ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E1L-3I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricChargeDensity ;
    qudt:iec61360Code "0112/2///62720#UAA061" ;
    qudt:plainTextDescription "0.000001-fold of the SI derived unit coulomb divided by the power of the SI base unit metre with the exponent 3" ;
    qudt:ucumCode "uC.m-3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B87" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroCi a qudt:Unit ;
    rdfs:label "MicroCurie"@en ;
    dcterms:description "Another commonly used measure of radioactivity, the microcurie: \\(1 \\micro Ci = 3.7 \\times 10 disintegrations per second = 2.22 \\times 10 disintegrations per minute\\). A radiotherapy machine may have roughly 1000 Ci of a radioisotope such as caesium-137 or cobalt-60. This quantity of radioactivity can produce serious health effects with only a few minutes of close-range, un-shielded exposure. The typical human body contains roughly \\(0.1\\micro Ci\\) of naturally occurring potassium-40. "^^qudt:LatexString ;
    qudt:conversionMultiplier 37000.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Curie"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Activity ;
    qudt:iec61360Code "0112/2///62720#UAA062" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Curie?oldid=495080313"^^xsd:anyURI ;
    qudt:isScalingOf unit:Ci ;
    qudt:symbol "Ci" ;
    qudt:ucumCode "uCi"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "M5" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroFARAD a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "microfarad"@en ;
    dcterms:description "The \"microfarad\" (symbolized \\(\\mu F\\)) is a unit of capacitance, equivalent to 0.000001 (10 to the -6th power) farad. The microfarad is a moderate unit of capacitance. In utility alternating-current (AC) and audio-frequency (AF) circuits, capacitors with values on the order of \\(1 \\mu F\\) or more are common. At radio frequencies (RF), a smaller unit, the picofarad (pF), is often used."^^qudt:LatexString ;
    qudt:allowedUnitOfSystem sou:SI ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E2L-2I0M-1H0T4D0 ;
    qudt:hasQuantityKind quantitykind:Capacitance ;
    qudt:iec61360Code "0112/2///62720#UAA063" ;
    qudt:symbol "μF" ;
    qudt:ucumCode "uF"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "4O" ;
    qudt:unitOfSystem sou:SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroFARAD-PER-KiloM a qudt:Unit ;
    rdfs:label "Microfarad Per Kilometre"@en,
        "Microfarad Per Kilometer"@en-us ;
    qudt:conversionMultiplier 0.000000001 ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T4D0 ;
    qudt:hasQuantityKind quantitykind:Permittivity ;
    qudt:iec61360Code "0112/2///62720#UAA064" ;
    qudt:plainTextDescription "0.000001-fold of the SI derived unit farad divided by the 1,000-fold of the SI base unit metre" ;
    qudt:ucumCode "uF.km-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H28" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroFARAD-PER-M a qudt:Unit ;
    rdfs:label "Microfarad Per Metre"@en,
        "Microfarad Per Meter"@en-us ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T4D0 ;
    qudt:hasQuantityKind quantitykind:Permittivity ;
    qudt:iec61360Code "0112/2///62720#UAA065" ;
    qudt:plainTextDescription "0.000001-fold of the SI derived unit farad divided by the SI base unit metre" ;
    qudt:ucumCode "uF.m-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B89" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroGM-PER-L a qudt:Unit ;
    rdfs:label "Microgram Per Litre"@en,
        "Microgram Per Liter"@en-us ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:iec61360Code "0112/2///62720#UAA084" ;
    qudt:plainTextDescription "0.000000001-fold of the SI base unit kilogram divided by the unit litre" ;
    qudt:ucumCode "ug.L-1"^^qudt:UCUMcs,
        "ug/L"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H29" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroGRAY a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "MicroGray"@en ;
    dcterms:description "0.000001 fold of the SI unit of radiation dose. Radiation carries energy, and when it is absorbed by matter the matter receives this energy. The dose is the amount of energy deposited per unit of mass. One gray is defined to be the dose of one joule of energy absorbed per kilogram of matter, or 100 rad. The unit is named for the British physician L. Harold Gray (1905-1965), an authority on the use of radiation in the treatment of cancer."^^rdf:HTML ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Grey"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:AbsorbedDose ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Grey?oldid=494774160"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/gray> ;
    qudt:siUnitsExpression "J/kg" ;
    qudt:symbol "µGy" ;
    qudt:ucumCode "uGy"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroH a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Microhenry"@en ;
    dcterms:description "The SI derived unit for inductance is the henry. 1 henry is equal to 1000000 microhenry. "^^rdf:HTML ;
    qudt:allowedUnitOfSystem sou:SI ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E-2L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Inductance ;
    qudt:iec61360Code "0112/2///62720#UAA066" ;
    qudt:symbol "μH" ;
    qudt:ucumCode "uH"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B90" ;
    qudt:unitOfSystem sou:SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroH-PER-M a qudt:Unit ;
    rdfs:label "Microhenry Per Metre"@en,
        "Microhenry Per Meter"@en-us ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E-2L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Permeability ;
    qudt:iec61360Code "0112/2///62720#UAA069" ;
    qudt:plainTextDescription "0.000001-fold of the SI derived unit henry divided by the SI base unit metre" ;
    qudt:ucumCode "uH.m-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B91" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroL-PER-L a qudt:Unit ;
    rdfs:label "Microlitre Per Litre"@en,
        "Microlitre Per Liter"@en-us ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:VolumeFraction ;
    qudt:iec61360Code "0112/2///62720#UAA089" ;
    qudt:plainTextDescription "volume ratio as 0.000001-fold of the unit litre divided by the unit litre" ;
    qudt:ucumCode "uL.L-1"^^qudt:UCUMcs,
        "uL/L"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J36" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroM-PER-K a qudt:Unit ;
    rdfs:label "Micrometre Per Kelvin"@en,
        "Micrometer Per Kelvin"@en-us ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H-1T0D0 ;
    qudt:hasQuantityKind quantitykind:LinearThermalExpansion ;
    qudt:iec61360Code "0112/2///62720#UAA091" ;
    qudt:plainTextDescription "0.000001-fold of the SI base unit metre divided by the SI base unit kelvin" ;
    qudt:ucumCode "um.K-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F50" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroM-PER-N a qudt:Unit ;
    rdfs:label "Mikrometer pro Newton"@de,
        "Micro metre per Newton"@en,
        "Micro meter per Newton"@en-us ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:conversionOffset 0.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-1H0T2D0 ;
    qudt:hasQuantityKind quantitykind:LinearCompressibility ;
    qudt:plainTextDescription "Micro metres measured per Newton" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroM3-PER-M3 a qudt:Unit ;
    rdfs:label "Cubic microns per cubic metre"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.18 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:VolumeFraction ;
    qudt:qkdvDenominator qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:ucumCode "um3.m-3"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroM3-PER-MilliL a qudt:Unit ;
    rdfs:label "Cubic microns per millilitre"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.000000000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:VolumeFraction ;
    qudt:qkdvDenominator qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:ucumCode "um3.mL-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroMHO a qudt:Unit ;
    rdfs:label "Micromho"@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T3D0 ;
    qudt:hasQuantityKind quantitykind:ElectricConductivity ;
    qudt:iec61360Code "0112/2///62720#UAB201" ;
    qudt:plainTextDescription "0.000001-fold of the obsolete unit mho of the electric conductance" ;
    qudt:ucumCode "umho"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "NR" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroMOL a qudt:Unit ;
    rdfs:label "Micromole"@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:AmountOfSubstance ;
    qudt:iec61360Code "0112/2///62720#UAA093" ;
    qudt:plainTextDescription "0.000001-fold of the SI base unit mol" ;
    qudt:ucumCode "umol"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "FH" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroMOL-PER-KiloGM a qudt:Unit ;
    rdfs:label "Micromoles per kilogram"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M-1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:AmountOfSubstancePerUnitMass ;
    qudt:ucumCode "umol.kg-1"^^qudt:UCUMcs,
        "umol/kg"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroMOL-PER-L a qudt:Unit ;
    rdfs:label "Micromoles per litre"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:AmountOfSubstancePerUnitVolume ;
    qudt:ucumCode "umol.L-1"^^qudt:UCUMcs,
        "umol/L"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroMOL-PER-M2-SEC a qudt:Unit ;
    rdfs:label "Micromoles per square metre per second"@en ;
    dcterms:description "One part per 10**6 (million) of the SI unit of quantity of matter (the mole) per SI unit area per SI unit of time.  This term is based on the number of photons in a certain waveband incident per unit time (s) on a unit area (m2) divided by the Avogadro constant (6.022 x 1023 mol-1). It is used commonly to describe PAR in the 400-700 nm waveband. Definition Source: Thimijan, Richard W., and Royal D. Heins. 1982. Photometric, Radiometric, and Quantum Light Units of Measure: A Review of Procedures for Interconversion. HortScience 18:818-822."@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A1E0L-2I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:PhotosyntheticPhotonFluxDensity ;
    qudt:ucumCode "umol.m-2.s-1"^^qudt:UCUMcs,
        "umol/m2/s"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroMOL-PER-SEC a qudt:Unit ;
    rdfs:label "Micromoles per second"@en ;
    dcterms:description " This unit is used commonly to describe Photosynthetic Photon Flux (PPF) - the total number of photons emitted by a light source each second within the PAR wavelength range. "@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:PhotosyntheticPhotonFlux ;
    qudt:ucumCode "umol.s-1"^^qudt:UCUMcs,
        "umol/s"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroOHM a qudt:Unit ;
    rdfs:label "Microohm"@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E-2L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Resistance ;
    qudt:iec61360Code "0112/2///62720#UAA055" ;
    qudt:plainTextDescription "0.000001-fold of the SI derived unit ohm" ;
    qudt:ucumCode "uOhm"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B94" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroPOISE a qudt:Unit ;
    rdfs:label "Micropoise"@en ;
    qudt:conversionMultiplier 0.0000001 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:DynamicViscosity ;
    qudt:iec61360Code "0112/2///62720#UAA072" ;
    qudt:plainTextDescription "0.000001-fold of the CGS unit of the dynamic viscosity poise" ;
    qudt:ucumCode "uP"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J32" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroS a qudt:Unit ;
    rdfs:label "Microsiemens"@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T3D0 ;
    qudt:hasQuantityKind quantitykind:ElectricConductivity ;
    qudt:iec61360Code "0112/2///62720#UAA074" ;
    qudt:plainTextDescription "0.000001-fold of the SI derived unit siemens" ;
    qudt:ucumCode "uS"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B99" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroSV a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "MicroSievert"@en ;
    dcterms:description "Although the sievert has the same dimensions as the gray (i.e. joules per kilogram), it measures a different quantity. To avoid any risk of confusion between the absorbed dose and the equivalent dose, the corresponding special units, namely the gray instead of the joule per kilogram for absorbed dose and the sievert instead of the joule per kilogram for the dose equivalent, should be used. 0.000001-fold of the SI derived unit sievert."^^rdf:HTML ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Sievert"^^xsd:anyURI ;
    qudt:derivedUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:DoseEquivalent ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Sievert?oldid=495474333"^^xsd:anyURI,
        "http://www.oxfordreference.com/view/10.1093/acref/9780198605225.001.0001/acref-9780198605225-e-1284"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/sievert> ;
    qudt:siUnitsExpression "J/kg" ;
    qudt:symbol "µSv" ;
    qudt:ucumCode "uSv"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroSV-PER-HR a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "MicroSievert per hour"@en ;
    dcterms:description "0.000001-fold of the derived SI unit sievert divided by the unit hour"^^rdf:HTML ;
    qudt:conversionMultiplier 0.000000000277778 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Sievert"^^xsd:anyURI ;
    qudt:derivedUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:DoseEquivalent ;
    qudt:iec61360Code "0112/2///62720#UAB466" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Sievert?oldid=495474333"^^xsd:anyURI,
        "http://www.oxfordreference.com/view/10.1093/acref/9780198605225.001.0001/acref-9780198605225-e-1284"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/sievert> ;
    qudt:siUnitsExpression "J/kg" ;
    qudt:symbol "µSv/hr" ;
    qudt:ucumCode "uSv.h-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroT a qudt:Unit ;
    rdfs:label "Microtesla"@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E-1L0I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:MagneticFluxDensity ;
    qudt:iec61360Code "0112/2///62720#UAA077" ;
    qudt:plainTextDescription "0.000001-fold of the SI derived unit tesla" ;
    qudt:ucumCode "uT"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D81" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroV-PER-M a qudt:Unit ;
    rdfs:label "Microvolt Per Metre"@en,
        "Microvolt Per Meter"@en-us ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:ElectricFieldStrength ;
    qudt:iec61360Code "0112/2///62720#UAA079" ;
    qudt:plainTextDescription "0.000001-fold of the SI derived unit volt divided by the SI base unit metre" ;
    qudt:ucumCode "uV.m-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C3" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliBAR-PER-BAR a qudt:Unit ;
    rdfs:label "Millibar Per Bar"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:PressureRatio ;
    qudt:iec61360Code "0112/2///62720#UAA812" ;
    qudt:plainTextDescription "0.01-fold of the unit bar divided by the unit bar" ;
    qudt:ucumCode "mbar.bar-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F04" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliBAR-PER-K a qudt:Unit ;
    rdfs:label "Millibar Per Kelvin"@en ;
    qudt:conversionMultiplier 100.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:VolumetricHeatCapacity ;
    qudt:iec61360Code "0112/2///62720#UAA811" ;
    qudt:plainTextDescription "0.001-fold of the unit bar divided by the unit temperature kelvin" ;
    qudt:ucumCode "mbar.K-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F84" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliBQ-PER-GM a qudt:Unit ;
    rdfs:label "Millibecquerels per gram"@en ;
    dcterms:description "One radioactive disintegration per thousand seconds per 1000th SI unit of sample mass."@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:SpecificActivity ;
    qudt:ucumCode "mBq.g-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliBQ-PER-KiloGM a qudt:Unit ;
    rdfs:label "Millibecquerels per kilogram"@en ;
    dcterms:description "One radioactive disintegration per thousand seconds from an SI standard unit of mass of sample."@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:SpecificActivity ;
    qudt:ucumCode "mBq.kg-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliBQ-PER-L a qudt:Unit ;
    rdfs:label "Millibecquerels per litre"@en ;
    dcterms:description "One radioactive disintegration per second from the SI unit of volume (cubic metre). Equivalent to Becquerels per cubic metre."@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:ActivityConcentration ;
    qudt:ucumCode "mBq.L-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliC-PER-M3 a qudt:Unit ;
    rdfs:label "Millicoulomb Per Cubic Metre"@en,
        "Millicoulomb Per Cubic Meter"@en-us ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E1L-3I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricChargeVolumeDensity ;
    qudt:iec61360Code "0112/2///62720#UAA785" ;
    qudt:plainTextDescription "0.001-fold of the SI derived unit coulomb divided by the power of the SI base unit metre with the exponent 3" ;
    qudt:ucumCode "mC.m-3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D88" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliCi a qudt:Unit ;
    rdfs:label "Millicurie"@en ;
    qudt:conversionMultiplier 37000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Activity ;
    qudt:iec61360Code "0112/2///62720#UAA786" ;
    qudt:plainTextDescription "0.001-fold of the SI derived unit curie" ;
    qudt:ucumCode "mCi"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "MCU" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliFARAD a qudt:Unit ;
    rdfs:label "Millifarad"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E2L-2I0M-1H0T4D0 ;
    qudt:hasQuantityKind quantitykind:Capacitance ;
    qudt:iec61360Code "0112/2///62720#UAA787" ;
    qudt:plainTextDescription "0.001-fold of the SI derived unit farad" ;
    qudt:ucumCode "mF"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C10" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliGM-PER-CentiM2 a qudt:Unit ;
    rdfs:label "Milligram Per Square Centimetre"@en,
        "Milligram Per Square Centimeter"@en-us ;
    qudt:conversionMultiplier 0.01 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassPerArea ;
    qudt:iec61360Code "0112/2///62720#UAA818" ;
    qudt:plainTextDescription "0.000001-fold of the SI base unit kilogram divided by the 0.0001-fold of the power of the SI base unit metre with the exponent 2" ;
    qudt:ucumCode "mg.cm-2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H63" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliGM-PER-DAY a qudt:Unit ;
    rdfs:label "Milligram Per Day"@en ;
    qudt:conversionMultiplier 0.00000000001157407 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA819" ;
    qudt:plainTextDescription "0.000001-fold of the SI base unit kilogram divided by the unit day" ;
    qudt:ucumCode "mg.d-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F32" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliGM-PER-HR a qudt:Unit ;
    rdfs:label "Milligram Per Hour"@en ;
    qudt:conversionMultiplier 0.0000000002777778 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA823" ;
    qudt:plainTextDescription "0.000001-fold of the SI base unit kilogram divided by the unit hour" ;
    qudt:ucumCode "mg.h-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "4M" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliGM-PER-L a qudt:Unit ;
    rdfs:label "Milligram Per Litre"@en,
        "Milligram Per Liter"@en-us ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:iec61360Code "0112/2///62720#UAA827" ;
    qudt:plainTextDescription "0.000001-fold of the SI base unit kilogram divided by the unit litre" ;
    qudt:ucumCode "mg.L-1"^^qudt:UCUMcs,
        "mg/L"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "M1" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliGM-PER-M a qudt:Unit ;
    rdfs:label "Milligram Per Metre"@en,
        "Milligram Per Meter"@en-us ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassPerLength ;
    qudt:iec61360Code "0112/2///62720#UAA828" ;
    qudt:plainTextDescription "0.000001-fold of the SI base unit kilogram divided by the SI base unit metre" ;
    qudt:ucumCode "mg.m-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C12" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliGM-PER-M2 a qudt:Unit ;
    rdfs:label "Milligram Per Square Metre"@en,
        "Milligram Per Square Meter"@en-us ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassPerArea ;
    qudt:iec61360Code "0112/2///62720#UAA829" ;
    qudt:plainTextDescription "0.000001-fold of the SI base unit kilogram divided by the power of the SI base unit metre with the exponent 2" ;
    qudt:ucumCode "mg.m-2"^^qudt:UCUMcs,
        "mg/m2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "GO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliGM-PER-M2-DAY a qudt:Unit ;
    rdfs:label "Milligrams per square metre per day"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.0000000000115740740740741 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassPerAreaTime ;
    qudt:ucumCode "mg.m-2.d-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliGM-PER-M2-HR a qudt:Unit ;
    rdfs:label "Milligrams per square metre per hour"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.000000000277777777777778 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassPerAreaTime ;
    qudt:ucumCode "mg.m-2.h-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliGM-PER-M2-SEC a qudt:Unit ;
    rdfs:label "Milligrams per square metre per second"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassPerAreaTime ;
    qudt:ucumCode "mg.m-2.s-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliGM-PER-M3 a qudt:Unit ;
    rdfs:label "Milligram Per Cubic Metre"@en,
        "Milligram Per Cubic Meter"@en-us ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:iec61360Code "0112/2///62720#UAA830" ;
    qudt:plainTextDescription "0.000001-fold of the SI base unit kilogram divided by the power of the SI base unit metre with the exponent 3" ;
    qudt:ucumCode "mg.m-3"^^qudt:UCUMcs,
        "mg/m3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "GP" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliGM-PER-MIN a qudt:Unit ;
    rdfs:label "Milligram Per Minute"@en ;
    qudt:conversionMultiplier 0.00000001666667 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA833" ;
    qudt:plainTextDescription "0.000001-fold of the SI base unit kilogram divided by the unit minute" ;
    qudt:ucumCode "mg/min"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F33" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliGM-PER-SEC a qudt:Unit ;
    rdfs:label "Milligram Per Second"@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA836" ;
    qudt:plainTextDescription "0.000001-fold of the SI base unit kilogram divided by the SI base unit second" ;
    qudt:ucumCode "mg/s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F34" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliGRAY a qudt:Unit ;
    rdfs:label "Milligray"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:AbsorbedDose ;
    qudt:iec61360Code "0112/2///62720#UAA788" ;
    qudt:plainTextDescription "0.001-fold of the SI derived unit gray" ;
    qudt:ucumCode "mGy"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C13" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliH a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Millihenry"@en ;
    dcterms:description "A unit of inductance equal to one thousandth of a henry. "^^rdf:HTML ;
    qudt:allowedUnitOfSystem sou:SI ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E-2L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Inductance ;
    qudt:iec61360Code "0112/2///62720#UAA789" ;
    qudt:symbol "mH" ;
    qudt:ucumCode "mH"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C14" ;
    qudt:unitOfSystem sou:SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliL-PER-CentiM2-MIN a qudt:Unit ;
    rdfs:label "Millilitre Per Square Centimetre Minute"@en,
        "Millilitre Per Square Centimeter Minute"@en-us ;
    qudt:conversionMultiplier 0.00016666667 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumetricFlux ;
    qudt:iec61360Code "0112/2///62720#UAA858" ;
    qudt:plainTextDescription "quotient of the 0.001-fold of the unit litre and the unit minute divided by the 0.0001-fold of the power of the SI base unit metre with the exponent 2" ;
    qudt:ucumCode "mL.cm-2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "35" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliL-PER-CentiM2-SEC a qudt:Unit ;
    rdfs:label "Millilitre Per Square Centimetre Second"@en,
        "Millilitre Per Square Centimeter Second"@en-us ;
    qudt:conversionMultiplier 0.01 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumetricFlux ;
    qudt:iec61360Code "0112/2///62720#UAB085" ;
    qudt:plainTextDescription "unit of the volume flow rate millilitre divided by second related to the transfer area as 0.0001-fold of the power of the SI base unit metre by exponent 2" ;
    qudt:ucumCode "mL.cm-2.s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "35" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliL-PER-K a qudt:Unit ;
    rdfs:label "Millilitre Per Kelvin"@en,
        "Millilitre Per Kelvin"@en-us ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H-1T0D0 ;
    qudt:hasQuantityKind quantitykind:VolumeThermalExpansion ;
    qudt:iec61360Code "0112/2///62720#UAA845" ;
    qudt:plainTextDescription "0.001-fold of the unit litre divided by the SI base unit kelvin" ;
    qudt:ucumCode "mL.K-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G30" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliL-PER-KiloGM a qudt:Unit ;
    rdfs:label "Millilitre Per Kilogram"@en,
        "Millilitre Per Kilogram"@en-us ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M-1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:SpecificVolume ;
    qudt:iec61360Code "0112/2///62720#UAB095" ;
    qudt:plainTextDescription "0.001-fold of the unit of the volume litre divided by the SI base unit kilogram" ;
    qudt:ucumCode "mL.kg-1"^^qudt:UCUMcs,
        "mL/kg"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "KX" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliL-PER-L a qudt:Unit ;
    rdfs:label "Millilitre Per Litre"@en,
        "Millilitre Per Liter"@en-us ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:VolumeFraction ;
    qudt:iec61360Code "0112/2///62720#UAA853" ;
    qudt:plainTextDescription "volume ratio consisting of the 0.001-fold of the unit litre divided by the unit litre" ;
    qudt:ucumCode "mL.L-1"^^qudt:UCUMcs,
        "mL/L"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L19" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliL-PER-M3 a qudt:Unit ;
    rdfs:label "Millilitre Per Cubic Metre"@en,
        "Millilitre Per Cubic Meter"@en-us ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:VolumeFraction ;
    qudt:iec61360Code "0112/2///62720#UAA854" ;
    qudt:plainTextDescription "0.001-fold of the unit litre divided by the power of the SI base unit metre with the exponent 3" ;
    qudt:ucumCode "mL.m-3"^^qudt:UCUMcs,
        "mL/m3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H65" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliM-PER-K a qudt:Unit ;
    rdfs:label "Millimetre Per Kelvin"@en,
        "Millimeter Per Kelvin"@en-us ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H-1T0D0 ;
    qudt:hasQuantityKind quantitykind:LinearThermalExpansion ;
    qudt:iec61360Code "0112/2///62720#UAA864" ;
    qudt:plainTextDescription "0.001-fold of the SI base unit metre divided by the SI base unit kelvin" ;
    qudt:ucumCode "mm.K-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F53" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliM3-PER-M3 a qudt:Unit ;
    rdfs:label "Cubic Millimetre Per Cubic Metre"@en,
        "Cubic Millimeter Per Cubic Meter"@en-us ;
    qudt:conversionMultiplier 1000000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:VolumeFraction ;
    qudt:iec61360Code "0112/2///62720#UAA874" ;
    qudt:plainTextDescription "volume ratio consisting of the 0.000000001-fold of the power of the SI base unit metre with the exponent 3 divided by the power of the SI base unit metre with the exponent 3" ;
    qudt:ucumCode "mm3.m-3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L21" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliMOL a qudt:Unit ;
    rdfs:label "Millimole"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:AmountOfSubstance ;
    qudt:iec61360Code "0112/2///62720#UAA877" ;
    qudt:plainTextDescription "0.001-fold of the SI base unit mol" ;
    qudt:ucumCode "mmol"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C18" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliMOL-PER-M3 a qudt:Unit ;
    rdfs:label "Millimoles per cubic metre"@en ;
    dcterms:description "Unavailable."@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:AmountOfSubstancePerUnitVolume ;
    qudt:ucumCode "mmol.m-3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C86" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliN-PER-M a qudt:Unit ;
    rdfs:label "Millinewton Per Metre"@en,
        "Millinewton Per Meter"@en-us ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerLength ;
    qudt:iec61360Code "0112/2///62720#UAA795" ;
    qudt:plainTextDescription "0.001-fold of the SI derived unit newton divided by the SI base unit metre" ;
    qudt:ucumCode "mN.m-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C22" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliOHM a qudt:Unit ;
    rdfs:label "Milliohm"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E-2L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Resistance ;
    qudt:iec61360Code "0112/2///62720#UAA741" ;
    qudt:plainTextDescription "0.001-fold of the SI derived unit ohm" ;
    qudt:ucumCode "mOhm"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "E45" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliPA-SEC a qudt:Unit ;
    rdfs:label "Millipascal Second"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:DynamicViscosity ;
    qudt:iec61360Code "0112/2///62720#UAA797" ;
    qudt:plainTextDescription "0.001-fold of the product of the SI derived unit pascal and the SI base unit second" ;
    qudt:ucumCode "mPa.s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C24" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliR_man a qudt:Unit ;
    rdfs:label "Milliroentgen Equivalent Man"@en ;
    qudt:conversionMultiplier 0.000000258 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:DoseEquivalent ;
    qudt:iec61360Code "0112/2///62720#UAA898",
        "0112/2///62720#UAB056" ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Roentgen_equivalent_man"^^xsd:anyURI ;
    qudt:plainTextDescription "The roentgen equivalent man (or rem) is a CGS unit of equivalent dose, effective dose, and committed dose, which are measures of the health effect of low levels of ionizing radiation on the human body." ;
    qudt:ucumCode "mREM"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L31" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliS a qudt:Unit ;
    rdfs:label "Millisiemens"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E2L-2I0M-1H0T3D0 ;
    qudt:hasQuantityKind quantitykind:Conductance ;
    qudt:iec61360Code "0112/2///62720#UAA800" ;
    qudt:plainTextDescription "0.001-fold of the SI derived unit siemens" ;
    qudt:ucumCode "mS"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C27" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliSV a qudt:Unit ;
    rdfs:label "Millisievert"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:DoseEquivalent ;
    qudt:iec61360Code "0112/2///62720#UAA802" ;
    qudt:plainTextDescription "0.001-fold of the SI derived unit sievert" ;
    qudt:ucumCode "mSv"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C28" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliT a qudt:Unit ;
    rdfs:label "Millitesla"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E-1L0I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:MagneticFluxDensity ;
    qudt:iec61360Code "0112/2///62720#UAA803" ;
    qudt:plainTextDescription "0.001-fold of the SI derived unit tesla" ;
    qudt:ucumCode "mT"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C29" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliV-PER-M a qudt:Unit ;
    rdfs:label "Millivolt Per Metre"@en,
        "Millivolt Per Meter"@en-us ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:ElectricFieldStrength ;
    qudt:iec61360Code "0112/2///62720#UAA805" ;
    qudt:plainTextDescription "0.000001-fold of the SI derived unit volt divided by the SI base unit metre" ;
    qudt:ucumCode "mV.m-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C30" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliV-PER-MIN a qudt:Unit ;
    rdfs:label "Millivolt Per Minute"@en ;
    qudt:conversionMultiplier 0.00001666667 ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-4D0 ;
    qudt:hasQuantityKind quantitykind:PowerPerElectricCharge ;
    qudt:iec61360Code "0112/2///62720#UAA806" ;
    qudt:plainTextDescription "0.001-fold of the SI derived unit volt divided by the unit minute" ;
    qudt:ucumCode "mV.min-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H62" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliWB a qudt:Unit ;
    rdfs:label "Milliweber"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:MagneticFlux ;
    qudt:iec61360Code "0112/2///62720#UAA809" ;
    qudt:plainTextDescription "0.001-fold of the SI derived unit weber" ;
    qudt:ucumCode "mWb"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C33" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MillionUSD a qudt:CurrencyUnit,
        qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Million US Dollars"@en ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MillionUSD-PER-YR a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Million US Dollars per Year"@en ;
    qudt:expression "\\(\\(M\\$/yr\\)\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MoldovanLeu a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Moldovan Leu"@en ;
    dcterms:description "Moldova"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Moldovan_leu"^^xsd:anyURI ;
    qudt:expression "\\(MDL\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Moldovan_leu?oldid=490027766"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MoroccanDirham a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Moroccan Dirham"@en ;
    dcterms:description "Morocco, Western Sahara"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Moroccan_dirham"^^xsd:anyURI ;
    qudt:expression "\\(MAD\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Moroccan_dirham?oldid=490560557"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:N-M-PER-A a qudt:Unit ;
    rdfs:label "Newton Metre Per Ampere"@en,
        "Newton Meter Per Ampere"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:MagneticFlux ;
    qudt:iec61360Code "0112/2///62720#UAA241" ;
    qudt:plainTextDescription "product of the SI derived unit newton and the SI base unit metre divided by the SI base unit ampere" ;
    qudt:ucumCode "N.m.A-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F90" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:N-M-PER-M a qudt:Unit ;
    rdfs:label "Newtonmeter pro Meter"@de,
        "Newton metre per metre"@en,
        "Newton meter per meter"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:conversionOffset 0.0 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:TorquePerLength ;
    qudt:plainTextDescription "This is the SI unit for the rolling resistance, which is equivalent to drag force in newton" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:N-M-PER-RAD a qudt:Unit ;
    rdfs:label "Newtonmeter pro Radian"@de,
        "Newton metre per radian"@en,
        "Newton meter per radian"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:conversionOffset 0.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:TorquePerAngle ;
    qudt:plainTextDescription "Newton Meter per Radian is the SI unit for Torsion Constant" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:N-M-SEC-PER-M a qudt:Unit ;
    rdfs:label "Newtonmetersekunden pro Meter"@de,
        "Newton metre seconds per metre"@en,
        "Newton meter seconds per meter"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:conversionOffset 0.0 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:LinearMomentum ;
    qudt:plainTextDescription "Newton metre seconds measured per metre" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:N-M-SEC-PER-RAD a qudt:Unit ;
    rdfs:label "Newtonmetersekunden pro Radian"@de,
        "Newton metre seconds per radian"@en,
        "Newton meter seconds per radian"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:conversionOffset 0.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:AngularMomentumPerAngle ;
    qudt:plainTextDescription "Newton metre seconds measured per radian" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:N-M2-PER-KiloGM2 a qudt:Unit ;
    rdfs:label "Newton Square Metre Per Square Kilogram"@en,
        "Newton Square Meter Per Square Kilogram"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M-1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:GravitationalAttraction ;
    qudt:iec61360Code "0112/2///62720#UAB491" ;
    qudt:plainTextDescription "unit of gravitational constant as product of the derived SI unit newton, the power of the SI base unit metre with the exponent 2 divided by the power of the SI base unit kilogram with the exponent 2" ;
    qudt:ucumCode "N.m.kg-2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C54" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:N-PER-A a qudt:Unit ;
    rdfs:label "Newton Per Ampere"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:MagneticFluxPerUnitLength ;
    qudt:iec61360Code "0112/2///62720#UAA236" ;
    qudt:plainTextDescription "SI derived unit newton divided by the SI base unit ampere" ;
    qudt:ucumCode "N.A-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H40" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:N-PER-C a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Newton per Coulomb"@en ;
    dcterms:description "Newton Per Coulomb ( N/C) is a unit in the category of Electric field strength. It is also known as newtons/coulomb. Newton Per Coulomb ( N/C) has a dimension of MLT-3I-1 where M is mass, L is length, T is time, and I is electric current. It essentially the same as the corresponding standard SI unit V/m."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(N/C\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerElectricCharge ;
    qudt:ucumCode "N.C-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:N-PER-CentiM a qudt:Unit ;
    rdfs:label "Newton Per Centimetre"@en,
        "Newton Per Centimeter"@en-us ;
    qudt:conversionMultiplier 100.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerLength ;
    qudt:iec61360Code "0112/2///62720#UAA238" ;
    qudt:plainTextDescription "SI derived unit newton divided by the 0.01-fold of the SI base unit metre" ;
    qudt:ucumCode "N.cm-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "M23" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:N-PER-KiloGM a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Newton per Kilogram"@en ;
    dcterms:description "Gravitational field strength at a point is the gravitational force per unit mass at that point. It is a vector and its S.I. unit is N kg-1."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(N/kg\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ThrustToMassRatio ;
    qudt:ucumCode "N.kg-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:N-PER-M a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Newton per Metre"@en,
        "Newton per Meter"@en-us ;
    dcterms:description "Newton Per Meter (N/m) is a unit in the category of Surface tension. It is also known as newtons per meter, newton per metre, newtons per metre, newton/meter, newton/metre. This unit is commonly used in the SI unit system. Newton Per Meter (N/m) has a dimension of MT-2 where M is mass, and T is time. This unit is the standard SI unit in this category."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(N/m\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerLength ;
    qudt:iec61360Code "0112/2///62720#UAA246" ;
    qudt:ucumCode "N.m-1"^^qudt:UCUMcs,
        "N/m"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "4P" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:N-PER-MilliM a qudt:Unit ;
    rdfs:label "Newton Per Millimetre"@en,
        "Newton Per Millimeter"@en-us ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerLength ;
    qudt:iec61360Code "0112/2///62720#UAA249" ;
    qudt:plainTextDescription "SI derived unit newton divided by the 0.001-fold of the SI base unit metre" ;
    qudt:ucumCode "N.mm-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F47" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:N-PER-RAD a qudt:Unit ;
    rdfs:label "Newton pro Radian"@de,
        "Newton per radian"@en,
        "Newton per radian"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:conversionOffset 0.0 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerAngle ;
    qudt:plainTextDescription "A one-newton force applied for one angle/torsional torque" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:N-SEC a qudt:Unit ;
    rdfs:label "Newton Second"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:LinearMomentum ;
    qudt:iec61360Code "0112/2///62720#UAA251" ;
    qudt:plainTextDescription "product of the SI derived unit newton and the SI base unit second" ;
    qudt:ucumCode "N.s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C57" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:N-SEC-PER-M a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Newtonsekunden pro Meter"@de,
        "Newton Second per Metre"@en,
        "Newton Second per Meter"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:conversionOffset 0.0 ;
    qudt:expression "\\(N-s/m\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassPerTime ;
    qudt:iec61360Code "0112/2///62720#UAA252" ;
    qudt:plainTextDescription "Newton second measured per metre" ;
    qudt:ucumCode "N.s.m-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C58" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:N-SEC-PER-M3 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Newton second per Cubic Metre"@en,
        "Newton second per Cubic Meter"@en-us ;
    dcterms:description "The SI unit of specific acoustic impedance. When sound waves pass through any physical substance the pressure of the waves causes the particles of the substance to move. The sound specific impedance is the ratio between the sound pressure and the particle velocity it produces. The specific impedance is \\(1 N \\cdot s \\cdot m^{-3} \\) if unit pressure produces unit velocity."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:expression "\\(N \\cdot s \\cdot m^{-3}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:SpecificAcousticImpedance ;
    qudt:latexSymbol "\\(N \\cdot s \\cdot m^{-3}\\)"^^qudt:LatexString ;
    qudt:ucumCode "N.s.m-3"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:N-SEC-PER-RAD a qudt:Unit ;
    rdfs:label "Newtonsekunden pro Radian"@de,
        "Newton seconds per radian"@en,
        "Newton seconds per radian"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:conversionOffset 0.0 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MomentumPerAngle ;
    qudt:plainTextDescription "Newton seconds measured per radian" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NAT a qudt:Unit ;
    rdfs:label "Nat"@en ;
    dcterms:description "A nat is a logarithmic unit of information or entropy, based on natural logarithms and powers of e, rather than the powers of 2 and base 2 logarithms which define the bit. The nat is the natural unit for information entropy. Physical systems of natural units which normalize Boltzmann's constant to 1 are effectively measuring thermodynamic entropy in nats."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Nat"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:InformationEntropy ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Nat?oldid=474010287"^^xsd:anyURI ;
    qudt:symbol "nat" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NAT-PER-SEC a qudt:Unit ;
    rdfs:label "Nat per Second"@en ;
    dcterms:description "\"Nat per Second\" is information rate in natural units."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(nat-per-sec\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:InformationEntropy ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Nat?oldid=474010287"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31898"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NP a qudt:DimensionlessUnit,
        qudt:LogarithmicUnit,
        qudt:Unit ;
    rdfs:label "Neper"@en ;
    dcterms:description "The neper is a logarithmic unit for ratios of measurements of physical field and power quantities, such as gain and loss of electronic signals. It has the unit symbol Np. The unit's name is derived from the name of John Napier, the inventor of logarithms. As is the case for the decibel and bel, the neper is not a unit in the International System of Units (SI), but it is accepted for use alongside the SI. Like the decibel, the neper is a unit in a logarithmic scale. While the bel uses the decadic (base-10) logarithm to compute ratios, the neper uses the natural logarithm, based on Euler's number"^^rdf:HTML ;
    qudt:allowedUnitOfSystem sou:SI ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Neper"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Dimensionless ;
    qudt:iec61360Code "0112/2///62720#UAA253" ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Neper"^^xsd:anyURI ;
    qudt:symbol "Np" ;
    qudt:ucumCode "Np"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C50" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NTU a qudt:Unit ;
    rdfs:label "Nephelometry Turbidity Unit"@en ;
    dcterms:description "\"Nephelometry Turbidity Unit\" is a C.G.S System unit for  'Turbidity' expressed as \\(NTU\\)."^^qudt:LatexString ;
    qudt:hasQuantityKind quantitykind:Turbidity ;
    qudt:symbol "NTU" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NUM-PER-HA a qudt:Unit ;
    rdfs:label "Number per hectare"@en ;
    dcterms:description "Count of an entity or phenomenon's occurrence in 10,000 times the SI unit area (square metre)."@en ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:ParticleFluence ;
    qudt:ucumCode "{#}.har-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NUM-PER-KiloM2 a qudt:Unit ;
    rdfs:label "Number per square kilometre"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:ParticleFluence ;
    qudt:ucumCode "{#}.km-2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NUM-PER-M2 a qudt:Unit ;
    rdfs:label "Number per square metre"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:ParticleFluence ;
    qudt:ucumCode "{#}.m-2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NUM-PER-M2-DAY a qudt:Unit ;
    rdfs:label "Number per square metre per day"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.0000115740740740741 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Flux ;
    qudt:ucumCode "{#}.m-2.d-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Naira a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Naira"@en ;
    dcterms:description "Nigeria"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Nigerian_naira"^^xsd:anyURI ;
    qudt:expression "\\(NGN\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Nigerian_naira?oldid=493462003"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Nakfa a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Nakfa"@en ;
    dcterms:description "Eritrea"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Nakfa"^^xsd:anyURI ;
    qudt:expression "\\(ERN\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Nakfa?oldid=415286274"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NamibianDollar a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Namibian Dollar"@en ;
    dcterms:description "Namibia"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Namibian_dollar"^^xsd:anyURI ;
    qudt:expression "\\(NAD\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Namibian_dollar?oldid=495250023"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NanoBQ-PER-L a qudt:Unit ;
    rdfs:label "Nanobecquerels per litre"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:ActivityConcentration ;
    qudt:ucumCode "nBq.L-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NanoFARAD a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Nanofarad"@en ;
    dcterms:description "A common metric unit of electric capacitance equal to \\(10^{-9} farad\\). This unit was previously called the \\(millimicrofarad\\)."^^qudt:LatexString ;
    qudt:allowedUnitOfSystem sou:SI ;
    qudt:conversionMultiplier 0.000000001 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Farad"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E2L-2I0M-1H0T4D0 ;
    qudt:hasQuantityKind quantitykind:Capacitance ;
    qudt:iec61360Code "0112/2///62720#UAA903" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Farad?oldid=493070876"^^xsd:anyURI ;
    qudt:symbol "nF" ;
    qudt:ucumCode "nF"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C41" ;
    qudt:unitOfSystem sou:SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NanoFARAD-PER-M a qudt:Unit ;
    rdfs:label "Nanofarad Per Metre"@en,
        "Nanofarad Per Meter"@en-us ;
    qudt:conversionMultiplier 0.000000001 ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T4D0 ;
    qudt:hasQuantityKind quantitykind:Permittivity ;
    qudt:iec61360Code "0112/2///62720#UAA904" ;
    qudt:plainTextDescription "0.000000001-fold of the SI derived unit farad divided by the SI base unit metre" ;
    qudt:ucumCode "nF.m-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C42" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NanoGM-PER-DAY a qudt:Unit ;
    rdfs:label "Nanograms per day"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.0000000000000000115740740740741 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassPerTime ;
    qudt:ucumCode "ng.d-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NanoGM-PER-L a qudt:Unit ;
    rdfs:label "Nanograms per litre"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.000000001 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:ucumCode "ng.L-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NanoGM-PER-M3 a qudt:Unit ;
    rdfs:label "Nanogram Per Cubic Metre"@en,
        "Nanogram Per Cubic Meter"@en-us ;
    qudt:conversionMultiplier 0.000000000001 ;
    qudt:description "\"0.000000000001‬-fold of the SI base unit kilogram divided by the power of the SI base unit metre with the exponent 3\""^^rdf:HTML ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:plainTextDescription "0.000000000001‬-fold of the SI base unit kilogram divided by the power of the SI base unit metre with the exponent 3" ;
    qudt:ucumCode "ng.m-3"^^qudt:UCUMcs ;
    rdfs:comment "\"Derived from GM-PER-M3 which exists in QUDT\"" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NanoGM-PER-MicroL a qudt:Unit ;
    rdfs:label "Nanograms per microlitre"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:ucumCode "ng.uL-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NanoH-PER-M a qudt:Unit ;
    rdfs:label "Nanohenry Per Metre"@en,
        "Nanohenry Per Meter"@en-us ;
    qudt:conversionMultiplier 0.000000001 ;
    qudt:hasDimensionVector qkdv:A0E-2L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Permeability ;
    qudt:iec61360Code "0112/2///62720#UAA906" ;
    qudt:plainTextDescription "0.000000001-fold of the SI derived unit henry divided by the SI base unit metre" ;
    qudt:ucumCode "nH.m-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C44" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NanoMOL-PER-KiloGM a qudt:Unit ;
    rdfs:label "Nanomoles per kilogram"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.000000001 ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M-1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:AmountOfSubstancePerUnitMass ;
    qudt:ucumCode "nmol.kg-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NanoT a qudt:Unit ;
    rdfs:label "Nanotesla"@en ;
    qudt:conversionMultiplier 0.000000001 ;
    qudt:hasDimensionVector qkdv:A0E-1L0I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:MagneticFluxDensity ;
    qudt:iec61360Code "0112/2///62720#UAA909" ;
    qudt:plainTextDescription "0.000000001-fold of the SI derived unit tesla" ;
    qudt:ucumCode "nT"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C48" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NepaleseRupee a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Nepalese Rupee"@en ;
    dcterms:description "Nepal"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Nepalese_rupee"^^xsd:anyURI ;
    qudt:expression "\\(NPR\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Nepalese_rupee?oldid=476894226"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NetherlandsAntillianGuilder a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Netherlands Antillian Guilder"@en ;
    dcterms:description "Netherlands Antilles"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Netherlands_Antillean_guilder"^^xsd:anyURI ;
    qudt:expression "\\(ANG\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Netherlands_Antillean_guilder?oldid=490030382"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NewIsraeliShekel a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "New Israeli Shekel"@en ;
    dcterms:description "Israel"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Israeli_new_sheqel"^^xsd:anyURI ;
    qudt:expression "\\(ILS\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Israeli_new_sheqel?oldid=316213924"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NewTaiwanDollar a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "New Taiwan Dollar"@en ;
    dcterms:description "Taiwan and other islands that are under the effective control of the Republic of China (ROC)"^^rdf:HTML ;
    qudt:currencyExponent 1 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/New_Taiwan_dollar"^^xsd:anyURI ;
    qudt:expression "\\(TWD\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/New_Taiwan_dollar?oldid=493996933"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NewTurkishLira a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "New Turkish Lira"@en ;
    dcterms:description "Turkey"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Turkish_lira"^^xsd:anyURI ;
    qudt:expression "\\(TRY\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Turkish_lira?oldid=494097764"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NewZealandDollar a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "New Zealand Dollar"@en ;
    dcterms:description "Cook Islands, New Zealand, Niue, Pitcairn, Tokelau"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/New_Zealand_dollar"^^xsd:anyURI ;
    qudt:expression "\\(NZD\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/New_Zealand_dollar?oldid=495487722"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/NewZealandDollar> ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Ngultrum a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Ngultrum"@en ;
    dcterms:description "Bhutan"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Bhutanese_ngultrum"^^xsd:anyURI ;
    qudt:expression "\\(BTN\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Bhutanese_ngultrum?oldid=491579260"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NorthKoreanWon a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "North Korean Won"@en ;
    dcterms:description "North Korea"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/North_Korean_won"^^xsd:anyURI ;
    qudt:expression "\\(KPW\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/North_Korean_won?oldid=495081686"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NorwegianKrone a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Norwegian Krone"@en ;
    dcterms:description "Norway"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Norwegian_krone"^^xsd:anyURI ;
    qudt:expression "\\(NOK\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Norwegian_krone?oldid=495283934"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/NorwegianKrone> ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NuevoSol a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Nuevo Sol"@en ;
    dcterms:description "Peru"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Peruvian_nuevo_sol"^^xsd:anyURI ;
    qudt:expression "\\(PEN\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Peruvian_nuevo_sol?oldid=494237249"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OCT a qudt:DimensionlessUnit,
        qudt:LogarithmicUnit,
        qudt:Unit ;
    rdfs:label "Oct"@en ;
    dcterms:description "An octave is a doubling or halving of a frequency.  One oct is the logarithmic frequency interval between \\(f1\\) and \\(f2\\) when \\(f2/f1 = 2\\)."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Octave"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Dimensionless ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Octave_(electronics)"^^xsd:anyURI ;
    qudt:symbol "oct" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OERSTED-CentiM a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Oersted Centimetre"@en,
        "Oersted Centimeter"@en-us ;
    dcterms:description "\"Oersted Centimeter\" is a C.G.S System unit for  'Magnetomotive Force' expressed as \\(Oe-cm\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.795774715 ;
    qudt:expression "\\(Oe-cm\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MagnetomotiveForce ;
    qudt:ucumCode "Oe.cm"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OHM-M2-PER-M a qudt:Unit ;
    rdfs:label "Ohm Square Metre per Metre"@en,
        "Ohm Square Meter per Meter"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E-2L3I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Resistivity ;
    qudt:symbol "Ohm-m2/m" ;
    qudt:ucumCode "Ohm2.m.m-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OHM_Ab a qudt:Unit ;
    rdfs:label "Abohm"@en ;
    dcterms:description "\\(\\textit{abohm}\\) is the basic unit of electrical resistance in the emu-cgs system of units. One abohm is equal to \\(10^{-9} ohms\\) in the SI system of units; one abohm is a nano ohm."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.000000001 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Abohm"^^xsd:anyURI ;
    qudt:derivedUnitOfSystem sou:CGS-EMU ;
    qudt:hasDimensionVector qkdv:A0E-2L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Resistance ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Abohm?oldid=480725336"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/abohm> ;
    qudt:symbol "abΩ" ;
    qudt:ucumCode "nOhm"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OHM_Stat a qudt:Unit ;
    rdfs:label "Statohm"@en ;
    dcterms:description "\"StatOHM\" is the unit of resistance, reactance, and impedance in the electrostatic C.G.S system of units, equal to the resistance between two points of a conductor when a constant potential difference of 1 statvolt between these points produces a current of 1 statampere; it is equal to approximately \\(8.9876 \\times 10^{11} ohms\\). The statohm is an extremely large unit of resistance. In fact, an object with a resistance of 1 stat W would make an excellent insulator or dielectric . In practical applications, the ohm, the kilohm (k W ) and the megohm (M W or M) are most often used to quantify resistance."^^qudt:LatexString ;
    qudt:conversionMultiplier 898760000000.0 ;
    qudt:derivedUnitOfSystem sou:CGS-ESU ;
    qudt:hasDimensionVector qkdv:A0E-2L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Resistance ;
    qudt:informativeReference "http://whatis.techtarget.com/definition/statohm-stat-W"^^xsd:anyURI ;
    qudt:latexSymbol "\\(stat\\Omega\\)"^^qudt:LatexString ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/statohm> ;
    qudt:symbol "stat Ω " ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OZ-FT a qudt:Unit ;
    rdfs:label "Ounce (avoirdupois) Foot"@en ;
    qudt:conversionMultiplier 0.0086409 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:LengthMass ;
    qudt:iec61360Code "0112/2///62720#UAB133" ;
    qudt:plainTextDescription "unit of the unbalance as a product of avoirdupois ounce according to  the avoirdupois system of units and foot according to the Anglo-American and Imperial system of units" ;
    qudt:ucumCode "[oz_av].[ft_i]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "4R" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OZ-IN a qudt:Unit ;
    rdfs:label "Ounce (avoirdupois) Inch"@en ;
    qudt:conversionMultiplier 0.000694563 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:LengthMass ;
    qudt:iec61360Code "0112/2///62720#UAB132" ;
    qudt:plainTextDescription "unit of the unbalance as a product of avoirdupois ounce according to  the avoirdupois system of units and inch according to the Anglo-American and Imperial system of units" ;
    qudt:ucumCode "[oz_av].[in_i]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "4Q" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OZ-PER-DAY a qudt:Unit ;
    rdfs:label "Ounce (avoirdupois) Per Day"@en ;
    qudt:conversionMultiplier 0.00000032812 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA919" ;
    qudt:plainTextDescription "traditional unit of the mass avoirdupois ounce according to the avoirdupois system of units divided by the unit for time day" ;
    qudt:ucumCode "[oz_av].d-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L33" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OZ-PER-GAL_US a qudt:Unit ;
    rdfs:label "Ounce (avoirdupois) Per Gallon (US)"@en ;
    qudt:conversionMultiplier 7.8125 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:iec61360Code "0112/2///62720#UAA924" ;
    qudt:informativeReference "https://cdd.iec.ch/cdd/iec61360/iec61360.nsf/Units/0112-2---62720%23UAA924"^^xsd:anyURI ;
    qudt:plainTextDescription "unit of the density according to the Anglo-American system of units" ;
    qudt:ucumCode "[oz_av].[gal_us]-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L38" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OZ-PER-HR a qudt:Unit ;
    rdfs:label "Ounce (avoirdupois) Per Hour"@en ;
    qudt:conversionMultiplier 0.00000787487 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA920" ;
    qudt:plainTextDescription "traditional unit of the mass avoirdupois ounce according to the avoirdupois system of units divided by the unit for time hour" ;
    qudt:ucumCode "[oz_av].h-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L34" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OZ-PER-MIN a qudt:Unit ;
    rdfs:label "Ounce (avoirdupois) Per Minute"@en ;
    qudt:conversionMultiplier 0.000472492 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA921" ;
    qudt:plainTextDescription "traditional unit of the mass avoirdupois ounce according to the avoirdupois system of units divided by the unit for time minute" ;
    qudt:ucumCode "[oz_av].min-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L35" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OZ-PER-SEC a qudt:Unit ;
    rdfs:label "Ounce (avoirdupois) Per Second"@en ;
    qudt:conversionMultiplier 0.02834952 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA922" ;
    qudt:plainTextDescription "traditional unit of the mass avoirdupois ounce according to the avoirdupois system of units divided by the SI base unit second" ;
    qudt:ucumCode "[oz_av].s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L36" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OZ-PER-YD3 a qudt:Unit ;
    rdfs:label "Ounce (avoirdupois) Per Cubic Yard"@en ;
    qudt:conversionMultiplier 0.0370798 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:iec61360Code "0112/2///62720#UAA918" ;
    qudt:plainTextDescription "unit ounce  according to the avoirdupois system of units divided by the power of the unit yard according to the Anglo-American and the Imperial system of units with the exponent 3" ;
    qudt:ucumCode "[oz_av].[cyd_i]-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G32" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OZ_PER-FT2 a qudt:Unit ;
    rdfs:label "Imperial Mass Ounce per Square Foot"@en ;
    dcterms:description "\"Ounce per Square Foot\" is an Imperial unit for  'Mass Per Area' expressed as \\(oz/ft^{2}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.305151727 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "oz/ft^{2}" ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassPerArea ;
    qudt:ucumCode "[oz_av].[sft_i]-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OZ_PER-GAL_UK a qudt:Unit ;
    rdfs:label "Ounce (avoirdupois) Per Gallon (UK)"@en ;
    qudt:conversionMultiplier 6.2360 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:iec61360Code "0112/2///62720#UAA923" ;
    qudt:plainTextDescription "unit of the density according to the Imperial system of units" ;
    qudt:ucumCode "[oz_av].[gal_br]-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L37" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OZ_PER-YD2 a qudt:Unit ;
    rdfs:label "Imperial Mass Ounce per Square Yard"@en ;
    dcterms:description "\"Ounce per Square Yard\" is an Imperial unit for  'Mass Per Area' expressed as \\(oz/yd^{2}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0339057474748823 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "oz/yd^{2}" ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassPerArea ;
    qudt:ucumCode "[oz_av].[syd_i]-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OZ_VOL_US a qudt:Unit ;
    rdfs:label "US Liquid Ounce"@en ;
    dcterms:description "\"US Liquid Ounce\" is a unit for  'Liquid Volume' expressed as \\(oz\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0000295735296 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:LiquidVolume ;
    qudt:symbol "oz" ;
    qudt:ucumCode "[foz_us]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OmaniRial a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Rial Omani"@en ;
    dcterms:description "Oman"^^rdf:HTML ;
    qudt:currencyExponent 3 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Omani_rial"^^xsd:anyURI ;
    qudt:expression "\\(OMR\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Omani_rial?oldid=491748879"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Ouguiya a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Ouguiya"@en ;
    dcterms:description "Mauritania"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Mauritanian_ouguiya"^^xsd:anyURI ;
    qudt:expression "\\(MRO\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mauritanian_ouguiya?oldid=490027072"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PA-PER-BAR a qudt:Unit ;
    rdfs:label "Pascal Per Bar"@en ;
    qudt:conversionMultiplier 0.00001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:PressureRatio ;
    qudt:iec61360Code "0112/2///62720#UAA260" ;
    qudt:plainTextDescription "SI derived unit pascal divided by the unit bar" ;
    qudt:ucumCode "Pa.bar-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F07" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PA-PER-HR a qudt:Unit ;
    rdfs:label "Pascal per Hour"@en ;
    dcterms:description "A rate of change of pressure measured as the number of Pascals in a period of one hour."^^rdf:HTML ;
    qudt:conversionMultiplier 0.000277777778 ;
    qudt:expression "\\(P / hr\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerAreaTime ;
    qudt:isScalingOf unit:PA-PER-MIN ;
    qudt:ucumCode "Pa.h-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PA-PER-K a qudt:Unit ;
    rdfs:label "Pascal per Kelvin"@en ;
    qudt:expression "\\(pascal-per-kelvin\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:PressureCoefficient ;
    qudt:iec61360Code "0112/2///62720#UAA259" ;
    qudt:ucumCode "Pa.K-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C64" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PA-PER-M a qudt:Unit ;
    rdfs:label "Pascal Per Metre"@en,
        "Pascal Per Meter"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:SpectralRadiantEnergyDensity ;
    qudt:iec61360Code "0112/2///62720#UAA262" ;
    qudt:plainTextDescription "SI derived unit pascal divided by the SI base unit metre" ;
    qudt:ucumCode "Pa.m-1"^^qudt:UCUMcs,
        "Pa/m"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H42" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PA-SEC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Pascal Second"@en ;
    dcterms:description "The SI unit of dynamic viscosity, equal to 10 poises or 1000 centipoises. "^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(Pa-s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:DynamicViscosity ;
    qudt:iec61360Code "0112/2///62720#UAA265" ;
    qudt:siUnitsExpression "Pa.s" ;
    qudt:ucumCode "Pa.s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C65" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PA-SEC-PER-M a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Pascal Second Per Metre"@en,
        "Pascal Second Per Meter"@en-us ;
    dcterms:description "Pascal Second Per Meter (\\(Pa-s/m\\)) is a unit in the category of Specific acoustic impedance. It is also known as pascal-second/meter. Pascal Second Per Meter has a dimension of \\(ML^2T^{-1}\\) where M is mass, L is length, and T is time. It essentially the same as the corresponding standard SI unit \\(kg/m2\\cdot s\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(Pa-s/m\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:DynamicViscosity ;
    qudt:iec61360Code "0112/2///62720#UAA268" ;
    qudt:informativeReference "http://www.efunda.com/glossary/units/units--specific_acoustic_impedance--pascal_second_per_meter.cfm"^^xsd:anyURI ;
    qudt:siUnitsExpression "Pa.s/m" ;
    qudt:ucumCode "P.s.m-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C67" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PA-SEC-PER-M3 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Pascal Second Per Cubic Metre"@en,
        "Pascal Second Per Cubic Meter"@en-us ;
    dcterms:description "\\(\\textit{Pascal Second Per Cubic Meter}\\) (\\(Pa-s/m^3\\)) is a unit in the category of Acoustic impedance. It is also known as \\(\\textit{pascal-second/cubic meter}\\). It has a dimension of \\(ML^{-4}T^{-1}\\) where \\(M\\) is mass, \\(L\\) is length, and \\(T\\) is time. This unit is the standard SI unit in this category."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(Pa-s/m3\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-4I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:AcousticImpedance ;
    qudt:iec61360Code "0112/2///62720#UAA263" ;
    qudt:informativeReference "http://www.efunda.com/glossary/units/units--acoustic_impedance--pascal_second_per_cubic_meter.cfm"^^xsd:anyURI ;
    qudt:siUnitsExpression "Pa.s/m3" ;
    qudt:ucumCode "Pa.s.m-3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C66" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PA2-SEC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Square Pascal Second"@en ;
    dcterms:description "Square Pascal Second (\\(Pa^2\\cdot s\\)) is a unit in the category of sound exposure."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(Pa2-s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M2H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:SoundExposure ;
    qudt:iec61360Code "0112/2///62720#UAB339" ;
    qudt:informativeReference "http://www.efunda.com/glossary/units/units--specific_acoustic_impedance--pascal_second_per_meter.cfm"^^xsd:anyURI ;
    qudt:siUnitsExpression "Pa2.s" ;
    qudt:ucumCode "Pa2.s"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PAB a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Balboa"@en ;
    dcterms:description "Panama"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Balboa"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Balboa?oldid=482550791"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-CentiM3 a qudt:Unit ;
    rdfs:label "Reciprocal Cubic Centimetre"@en,
        "Reciprocal Cubic Centimeter"@en-us ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:InverseVolume ;
    qudt:iec61360Code "0112/2///62720#UAA383" ;
    qudt:plainTextDescription "reciprocal of the 0.000001-fold of the power of the SI base unit metre with the exponent 3" ;
    qudt:ucumCode "cm-3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H50" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-FT3 a qudt:Unit ;
    rdfs:label "Reciprocal Cubic Foot"@en ;
    qudt:conversionMultiplier 35.31466 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:InverseVolume ;
    qudt:iec61360Code "0112/2///62720#UAA453" ;
    qudt:plainTextDescription "reciprocal value of the power of the unit foot according to the Anglo-American and the Imperial system of units with the exponent 3" ;
    qudt:ucumCode "[cft_i]-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K20" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-GigaEV2 a qudt:Unit ;
    rdfs:label "Reciprocal Square Giga Electron Volt Unit"@en ;
    dcterms:description "Per Square Giga Electron Volt Unit is a a denominator unit with dimensions \\(/GeV^2\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 38956440500000000000.0 ;
    qudt:expression "\\(/GeV^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-4I0M-2H0T4D0 ;
    qudt:hasQuantityKind quantitykind:InverseSquareEnergy ;
    qudt:ucumCode "GeV-2"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-H a qudt:Unit ;
    rdfs:label "Reciprocal Henry"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:ucumCode "H-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-IN3 a qudt:Unit ;
    rdfs:label "Reciprocal Cubic Inch"@en ;
    qudt:conversionMultiplier 61023.76 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:InverseVolume ;
    qudt:iec61360Code "0112/2///62720#UAA546" ;
    qudt:plainTextDescription "reciprocal value of the power of the unit inch according to the Anglo-American and the Imperial system of units with the exponent 3" ;
    qudt:ucumCode "[cin_i]-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K49" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-J-M3 a qudt:Unit ;
    rdfs:label "Reciprocal Joule Cubic Metre"@en,
        "Reciprocal Joule Cubic Meter"@en-us ;
    qudt:expression "\\(j^{-1}-m^3\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M-1H0T2D0 ;
    qudt:hasQuantityKind quantitykind:EnergyDensityOfStates ;
    qudt:informativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:ucumCode "J-1.m-3"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-KiloV-A-HR a qudt:Unit ;
    rdfs:label "Reciprocal Kilovolt Ampere Hour"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M-1H0T2D0 ;
    qudt:hasQuantityKind quantitykind:InverseEnergy ;
    qudt:iec61360Code "0112/2///62720#UAA098" ;
    qudt:plainTextDescription "reciprocal of the 1,000-fold of the product of the SI derived unit volt and the SI base unit ampere and the unit hour" ;
    qudt:ucumCode "K-1.A-1.h-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "M21" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-L a qudt:Unit ;
    rdfs:label "Reciprocal Litre"@en,
        "Reciprocal Liter"@en-us ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:InverseVolume ;
    qudt:iec61360Code "0112/2///62720#UAA667" ;
    qudt:plainTextDescription "reciprocal value of the unit litre" ;
    qudt:ucumCode "L-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K63" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-M-K a qudt:Unit ;
    rdfs:label "Reciprocal Metre Kelvin"@en,
        "Reciprocal Meter Kelvin"@en-us ;
    dcterms:description "Per Meter Kelvin Unit is a denominator unit with dimensions \\(/m.k\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(/m.k\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H-1T0D0 ;
    qudt:hasQuantityKind quantitykind:InverseLengthTemperature ;
    qudt:ucumCode "m-1.K-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-M2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Reciprocal Square Metre"@en,
        "Reciprocal Square Meter"@en-us ;
    dcterms:description "\"Per Square Meter\" is a denominator unit with dimensions \\(/m^2\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Steradian"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:ParticleFluence ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:symbol "m^{-2}" ;
    qudt:ucumCode "/m2"^^qudt:UCUMcs,
        "m-2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-MOL a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Reciprocal Mole"@en ;
    dcterms:description "<p><strong>Per Mole Unit</strong> is a a denominator unit with dimensions \\(mol^{-1}\\)</p>."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(/mol\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A-1E0L0I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:InverseAmountOfSubstance ;
    qudt:ucumCode "mol-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-MilliM3 a qudt:Unit ;
    rdfs:label "Reciprocal Cubic Millimetre"@en,
        "Reciprocal Cubic Millimeter"@en-us ;
    qudt:conversionMultiplier 1000000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:InverseVolume ;
    qudt:iec61360Code "0112/2///62720#UAA870" ;
    qudt:plainTextDescription "reciprocal value of the 0.000000001-fold of the power of the SI base unit metre with the exponent 3" ;
    qudt:ucumCode "mm-3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L20" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-PSI a qudt:Unit ;
    rdfs:label "Reciprocal Psi"@en ;
    qudt:conversionMultiplier 0.0001450377 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M-1H0T2D0 ;
    qudt:hasQuantityKind quantitykind:InversePressure ;
    qudt:iec61360Code "0112/2///62720#UAA709" ;
    qudt:plainTextDescription "reciprocal value of the composed unit for pressure (pound-force per square inch)" ;
    qudt:ucumCode "[psi]-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K93" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-PlanckMass2 a qudt:Unit ;
    rdfs:label "Inverse Square Planck Mass"@en ;
    dcterms:description "In physics, the Planck mass, denoted by \\(m_P\\), is the unit of mass in the system of natural units known as Planck units. It is defined so that \\(\\approx  1.2209 \\times 10 GeV/c_0 = 2.17651(13) \\times 10 kg\\), (or \\(21.7651 \\mu g\\)), where \\(c_0\\) is the speed of light in a vacuum, \\(G\\) is the gravitational constant, and \\(\\hbar\\) is the reduced Planck constant. Particle physicists and cosmologists often use the reduced Planck mass, which is \\(\\approx  4.341 \\times 10 kg = 2.435  \\times 10 GeV/c\\). The added factor of \\(1/{\\sqrt{8\\pi}}\\) simplifies a number of equations in general relativity. Quantum effects are typified by the magnitude of Planck's constant."^^qudt:LatexString ;
    qudt:conversionMultiplier 2111089000000000.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Planck_mass"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-2H0T0D0 ;
    qudt:hasQuantityKind quantitykind:InverseSquareMass ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Planck_mass?oldid=493648632"^^xsd:anyURI,
        "https://en.wikipedia.org/wiki/Planck_units"^^xsd:anyURI ;
    qudt:latexDefinition "\\(m_P = \\sqrt{\\frac{ \\hbar c^3}{G}} \\approx 1.2209 \\times 10^{19} GeV/c^2 = 2.17651(13) \\times 10^{-8}\\), where \\(c\\) is the speed of light in a vacuum, \\(\\hbar\\) is the reduced Planck's constant, and \\(G\\) is the gravitational constant. The two digits enclosed by parentheses are the estimated standard error associated with the reported numerical value."^^qudt:LatexString ;
    qudt:unitOfSystem sou:PLANCK ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-SEC-M2 a qudt:Unit ;
    rdfs:label "Reciprocal Second Square Metre"@en,
        "Reciprocal Second Square Meter"@en-us ;
    dcterms:description "\\(\\textit{Per Second Square Meter}\\) is a measure of flux with dimensions \\(/sec-m^2\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(per-sec-m^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Flux ;
    qudt:ucumCode "/(s1.m2)"^^qudt:UCUMcs,
        "s-1.m-2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-SEC-M2-SR a qudt:Unit ;
    rdfs:label "Reciprocal Second Square Metre Steradian"@en,
        "Reciprocal Second Square Meter Steradian"@en-us ;
    dcterms:description "Per Second Square Meter Steradian is a denominator unit with dimensions \\(/sec-m^2-sr\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(/sec-m^2-sr\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:PhotonRadiance ;
    qudt:ucumCode "/(s.m2.sr)"^^qudt:UCUMcs,
        "s-1.m-2.sr-1"^^qudt:UCUMcs ;
    rdfs:comment "It is not clear this unit is ever used. [Editor]" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-T-M a qudt:Unit ;
    rdfs:label "Reciprocal Tesla Metre"@en,
        "Reciprocal Tesla Meter"@en-us ;
    dcterms:description "Per Tesla Meter Unit is a a denominator unit with dimensions \\(/m .\\cdot T\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M-1H0T2D0 ;
    qudt:hasQuantityKind quantitykind:MagneticReluctivity ;
    qudt:latexSymbol "\\(m^{-1} \\cdot T^{-1}\\)"^^qudt:LatexString ;
    qudt:ucumCode "T-1.m-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-WB a qudt:Unit ;
    rdfs:label "Reciprocal Weber"@en ;
    qudt:expression "\\(Wb^{-1}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M-1H0T2D0 ;
    qudt:hasQuantityKind quantitykind:InverseMagneticFlux ;
    qudt:informativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:ucumCode "Wb-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-YD3 a qudt:Unit ;
    rdfs:label "Reciprocal Cubic Yard"@en ;
    qudt:conversionMultiplier 1.307951 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:InverseVolume ;
    qudt:iec61360Code "0112/2///62720#UAB033" ;
    qudt:plainTextDescription "reciprocal value of the unit yard according to the Anglo-American and the Imperial system of units with the exponent 3" ;
    qudt:ucumCode "[cyd_i]-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "M10" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PERCENT_RH a qudt:Unit ;
    rdfs:label "Percent Relative Humidity"@en ;
    qudt:conversionMultiplier 0.01 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:PressureRatio ;
    qudt:plainTextDescription "Percent relative humidity is the ratio of the partial pressure of water vapor to the equilibrium vapor pressure of water at a given temperature, expressed as a percentage." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PERMEABILITY_EM_REL a qudt:Unit ;
    rdfs:label "Relative Electromagnetic Permeability"@en ;
    dcterms:description "Relative permeability, denoted by the symbol \\(\\mu _T\\), is the ratio of the permeability of a specific medium to the permeability of free space \\(\\mu _0\\)"^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Relative_permeability"^^xsd:anyURI ;
    qudt:derivedUnitOfSystem sou:CGS-EMU ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:ElectromagneticPermeabilityRatio ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Relative_permeability"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\mu\\,T\\)"^^qudt:LatexString ;
    qudt:ucumCode "[mu_0]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PERMEABILITY_REL a qudt:Unit ;
    rdfs:label "Relative Permeability"@en ;
    dcterms:description "In multiphase flow in porous media, the relative permeability of a phase is a dimensionless measure of the effective permeability of that phase. It is the ratio of the effective permeability of that phase to the absolute permeability. It can be viewed as an adaptation of Darcy's law to multiphase flow. For two-phase flow in porous media given steady-state conditions, we can write where is the flux, is the pressure drop, is the viscosity."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00000125663706 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Relative_permeability"^^xsd:anyURI ;
    qudt:derivedUnitOfSystem sou:CGS-EMU ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:PermeabilityRatio ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Relative_permeability"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PERMITTIVITY_REL a qudt:Unit ;
    rdfs:label "Relative Permittivity"@en ;
    dcterms:description """The \\(\\textit{relative permittivity}\\) of a material under given conditions reflects the extent to which it concentrates electrostatic lines of flux. In technical terms, it is the ratio of the amount of electrical energy stored in a material by an applied voltage, relative to that stored in a vacuum. Likewise, it is also the ratio of the capacitance of a capacitor using that material as a dielectric, compared to a similar capacitor that has a vacuum as its dielectric. Relative permittivity is a dimensionless number that is in general complex. The imaginary portion of the permittivity corresponds to a phase shift of the polarization P relative to E and leads to the attenuation of electromagnetic waves passing through the medium.</p>
<p>\\(\\epsilon_r(w) = \\frac{\\epsilon(w)}{\\epsilon_O}\\)\\ where \\(\\epsilon_r(w)\\) is the complex frequency-dependent absolute permittivity of the material, and \\(\\epsilon_O\\) is the vacuum permittivity."""^^qudt:LatexString ;
    qudt:conversionMultiplier 0.000000000008854187817 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Relative_static_permittivity"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T4D0 ;
    qudt:hasQuantityKind quantitykind:Permittivity ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Relative_permittivity?oldid=489664437"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Relative_static_permittivity?oldid=334224492"^^xsd:anyURI,
        "http://www.ncert.nic.in/html/learning_basket/electricity/electricity/charges%20&%20fields/absolute_permittivity.htm"^^xsd:anyURI ;
    qudt:symbol "εᵣ" ;
    qudt:ucumCode "[eps_0]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PINT_US a qudt:Unit ;
    rdfs:label "US Liquid Pint"@en ;
    dcterms:description "\"US Liquid Pint\" is a unit for  'Liquid Volume' expressed as \\(pt\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0004731765 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:LiquidVolume ;
    qudt:symbol "pt" ;
    qudt:ucumCode "[pt_us]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PINT_US_DRY a qudt:Unit ;
    rdfs:label "US Dry Pint"@en ;
    dcterms:description "\"US Dry Pint\" is a C.G.S System unit for  'Dry Volume' expressed as \\(dry_pt\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.000550610471 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:DryVolume ;
    qudt:symbol "dry_pt" ;
    qudt:ucumCode "[dpt_us]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PK_US_DRY a qudt:Unit ;
    rdfs:label "US Peck"@en ;
    dcterms:description "A peck is an imperial and U.S. customary unit of dry volume, equivalent to 2 gallons or 8 dry quarts or 16 dry pints. Two pecks make a kenning (obsolete), and four pecks make a bushel. In Scotland, the peck was used as a dry measure until the introduction of imperial units as a result of the Weights and Measures Act of 1824. The peck was equal to about 9 litres (in the case of certain crops, such as wheat, peas, beans and meal) and about 13 litres (in the case of barley, oats and malt). A firlot was equal to 4 pecks and the peck was equal to 4 lippies or forpets. "^^rdf:HTML ;
    qudt:conversionMultiplier 0.00880976754 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:DryVolume ;
    qudt:symbol "pk" ;
    qudt:ucumCode "[pk_us]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:USCS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:POISE a qudt:Unit ;
    rdfs:label "Poise"@en ;
    dcterms:description "The poise is the unit of dynamic viscosity in the centimetre gram second system of units. It is named after Jean Louis Marie Poiseuille."^^rdf:HTML ;
    qudt:conversionMultiplier 0.1 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Poise"^^xsd:anyURI ;
    qudt:derivedCoherentUnitOfSystem sou:CGS ;
    qudt:derivedUnitOfSystem sou:CGS,
        sou:CGS-GAUSS ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:DynamicViscosity ;
    qudt:iec61360Code "0112/2///62720#UAA255" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Poise?oldid=487835641"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/poise> ;
    qudt:symbol "P" ;
    qudt:ucumCode "P"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "89" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PSI-PER-PSI a qudt:Unit ;
    rdfs:label "Psi Per Psi"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:PressureRatio ;
    qudt:iec61360Code "0112/2///62720#UAA951" ;
    qudt:plainTextDescription "composed unit for pressure (pound-force per square inch) divided by the composed unit for pressure (pound-force per square inch)" ;
    qudt:ucumCode "[psi].[psi]-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L52" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Paanga a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Pa'anga"@en ;
    dcterms:description "Tonga"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Tongan_pa%CA%BBanga"^^xsd:anyURI ;
    qudt:expression "\\(TOP\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Tongan_paʻanga?oldid=482738012"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PakistanRupee a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Pakistan Rupee"@en ;
    dcterms:description "Pakistan"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Pakistani_rupee"^^xsd:anyURI ;
    qudt:expression "\\(PKR\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Pakistani_rupee?oldid=494937873"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Palladium-OunceTroy a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Palladium (one Troy ounce)"@en ;
    qudt:expression "\\(XPD\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:ucumCode "[oz_tr]{Pd}"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Pataca a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Pataca"@en ;
    dcterms:description "Macau Special Administrative Region"^^rdf:HTML ;
    qudt:currencyExponent 1 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Pataca"^^xsd:anyURI ;
    qudt:expression "\\(MOP\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Pataca?oldid=482490442"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PebiBYTE a qudt:CountingUnit,
        qudt:Unit ;
    rdfs:label "PebiByte"@en ;
    dcterms:description "The pebibyte is a standards-based binary multiple (prefix pebi, symbol Pi) of the byte, a unit of digital information storage. The pebibyte unit symbol is PiB. 1 pebibyte =  1125899906842624bytes = 1024 tebibytes The pebibyte is closely related to the petabyte, which is defined as \\(10^{15} bytes = 1,000,000,000,000,000 bytes\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 6243314768165359.2088811673338586 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Pebibyte"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Dimensionless ;
    qudt:iec61360Code "0112/2///62720#UAA274" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Pebibyte?oldid=492685015"^^xsd:anyURI ;
    qudt:isScalingOf unit:BYTE ;
    qudt:prefix prefix:Pebi ;
    qudt:symbol "PiB" ;
    qudt:uneceCommonCode "E60" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PetaBYTE a qudt:CountingUnit,
        qudt:Unit ;
    rdfs:label "PetaByte"@en ;
    dcterms:description "A petabyte is a unit of information equal to one quadrillion bytes, or 1024 terabytes. The unit symbol for the petabyte is PB. The prefix peta (P) indicates the fifth power to 1000: 1 PB = 1000000000000000B, 1 million gigabytes = 1 thousand terabytes The pebibyte (PiB), using a binary prefix, is the corresponding power of 1024, which is more than \\(12\\% \\)greater (\\(2^{50} bytes = 1,125,899,906,842,624 bytes\\))."^^qudt:LatexString ;
    qudt:conversionMultiplier 5545177444479562.4753378569716654 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Petabyte"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Dimensionless ;
    qudt:iec61360Code "0112/2///62720#UAB187" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Petabyte?oldid=494735969"^^xsd:anyURI ;
    qudt:isScalingOf unit:BYTE ;
    qudt:prefix prefix:Peta ;
    qudt:symbol "PB" ;
    qudt:ucumCode "PBy"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "E36" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PhilippinePeso a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Philippine Peso"@en ;
    dcterms:description "Philippines"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Philippine_peso"^^xsd:anyURI ;
    qudt:expression "\\(PHP\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Philippine_peso?oldid=495411811"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Phot a unit:Unit ;
    rdfs:label "Phot"@en ;
    qudt:symbol "ph",
        "ph"^^xsd:string .

unit:PicoFARAD a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Picofarad"@en ;
    dcterms:description "\"PicoF\" is a common unit of electric capacitance equal to \\(10^{-12} farad\\). This unit was formerly called the micromicrofarad."^^qudt:LatexString ;
    qudt:allowedUnitOfSystem sou:SI ;
    qudt:conversionMultiplier 0.000000000001 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Farad"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E2L-2I0M-1H0T4D0 ;
    qudt:hasQuantityKind quantitykind:Capacitance ;
    qudt:iec61360Code "0112/2///62720#UAA930" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Farad?oldid=493070876"^^xsd:anyURI ;
    qudt:symbol "pF" ;
    qudt:ucumCode "pF"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "4T" ;
    qudt:unitOfSystem sou:SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PicoFARAD-PER-M a qudt:Unit ;
    rdfs:label "Picofarad Per Metre"@en,
        "Picofarad Per Meter"@en-us ;
    qudt:conversionMultiplier 0.000000000001 ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T4D0 ;
    qudt:hasQuantityKind quantitykind:Permittivity ;
    qudt:iec61360Code "0112/2///62720#UAA931" ;
    qudt:plainTextDescription "0.000000000001-fold of the SI derived unit farad divided by the SI base unit metre" ;
    qudt:ucumCode "pF.m-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C72" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PicoGM-PER-L a qudt:Unit ;
    rdfs:label "Picofarad Per Metre"@en,
        "Picograms per litre"@en,
        "Picofarad Per Meter"@en-us ;
    dcterms:description "One 10**15 part of the SI standard unit of mass of the measurand per litre volume of matrix.."@en ;
    qudt:conversionMultiplier 0.000000000001 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:ucumCode "pg.L-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PicoH a qudt:Unit ;
    rdfs:label "Picohenry"@en ;
    qudt:conversionMultiplier 0.000000000001 ;
    qudt:hasDimensionVector qkdv:A0E-2L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Inductance ;
    qudt:iec61360Code "0112/2///62720#UAA932" ;
    qudt:plainTextDescription "0.000000000001-fold of the SI derived unit henry" ;
    qudt:ucumCode "pH"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C73" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PicoMOL-PER-KiloGM a qudt:Unit ;
    rdfs:label "Picomoles per kilogram"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.000000000001 ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M-1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:AmountOfSubstancePerUnitMass ;
    qudt:ucumCode "pmol.kg-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PicoMOL-PER-L a qudt:Unit ;
    rdfs:label "Picomoles per litre"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.000000001 ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:AmountOfSubstancePerUnitVolume ;
    qudt:ucumCode "pmol.L-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PicoMOL-PER-M3 a qudt:Unit ;
    rdfs:label "Picomoles per cubic metre"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.000000000001 ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:AmountOfSubstancePerUnitVolume ;
    qudt:ucumCode "pmol.m-3"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PlanckCurrentDensity a qudt:Unit ;
    rdfs:label "Planck Current Density"@en ;
    qudt:conversionMultiplier 133177400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 ;
    qudt:derivedUnitOfSystem sou:PLANCK ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCurrentDensity ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PlanckImpedance a qudt:Unit ;
    rdfs:label "Planck Impedance"@en ;
    dcterms:description "The Planck impedance is the unit of electrical resistance, denoted by ZP, in the system of natural units known as Planck units. The Planck impedance is directly coupled to the impedance of free space, Z0, and differs in value from Z0 only by a factor of \\(4\\pi\\). If the Planck charge were instead defined to normalize the permittivity of free space, \\(\\epsilon_0\\), rather than the Coulomb constant, \\(1/(4\\pi\\epsilon_0)\\), then the Planck impedance would be identical to the characteristic impedance of free space."^^qudt:LatexString ;
    qudt:conversionMultiplier 29.9792458 ;
    qudt:derivedUnitOfSystem sou:PLANCK ;
    qudt:hasDimensionVector qkdv:A0E-2L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Resistance ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Planck_impedance"^^xsd:anyURI ;
    qudt:latexDefinition "\\(Z_P = \\frac{V_P}{I_P}= \\frac{1}{4\\pi\\epsilon_0c}=\\frac{\\mu_oc}{4\\pi}=\\frac{Z_0}{4\\pi}=29.9792458\\Omega\\)\\where \\(V_P\\) is the Planck voltage, \\(I_P\\) is the Planck current, \\(c\\) is the speed of light in a vacuum, \\(\\epsilon_0\\) is the permittivity of free space, \\(\\mu_0\\) is the permeability of free space, and \\(Z_0\\) is the impedance of free space."^^qudt:LatexString ;
    qudt:symbol "ZP" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PlanckMomentum a qudt:Unit ;
    rdfs:label "Planck Momentum"@en ;
    dcterms:description "Planck momentum is the unit of momentum in the system of natural units known as Planck units. It has no commonly used symbol of its own, but can be denoted by, where is the Planck mass and is the speed of light in a vacuum. Then where is the reduced Planck's constant, is the Planck length, is the gravitational constant. In SI units Planck momentum is \\(\\approx 6.5 kg m/s\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 6.52485 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Planck_momentum"^^xsd:anyURI ;
    qudt:derivedUnitOfSystem sou:PLANCK ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:LinearMomentum ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Planck_momentum?oldid=493644981"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Platinum-OunceTroy a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Platinum (one Troy ounce)"@en ;
    qudt:expression "\\(XPT\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:ucumCode "[oz_tr]{Pt}"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PoundSterling a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Pound Sterling"@en ;
    dcterms:description "United Kingdom"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Pound_sterling"^^xsd:anyURI ;
    qudt:expression "\\(GBP\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Pound_sterling?oldid=495524329"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/poundSterling> ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Pula a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Pula"@en ;
    dcterms:description "Botswana"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Pula"^^xsd:anyURI ;
    qudt:expression "\\(BWP\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Pula?oldid=495207177"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:QT_US_DRY a qudt:Unit ;
    rdfs:label "US Dry Quart"@en ;
    dcterms:description "\"US Dry Quart\" is a unit for  'Dry Volume' expressed as \\(dry_qt\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.001101220942715 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:DryVolume ;
    qudt:symbol "dry_qt" ;
    qudt:ucumCode "[dqt_us]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:QatariRial a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Qatari Rial"@en ;
    dcterms:description "Qatar"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Qatari_riyal"^^xsd:anyURI ;
    qudt:expression "\\(QAR\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Qatari_riyal?oldid=491747452"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Quetzal a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Quetzal"@en ;
    dcterms:description "Guatemala"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Quetzal"^^xsd:anyURI ;
    qudt:expression "\\(GTQ\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Quetzal?oldid=489813522"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:RAD-M2-PER-KiloGM a qudt:Unit ;
    rdfs:label "Radian Square Metre per Kilogram"@en,
        "Radian Square Meter per Kilogram"@en-us ;
    qudt:expression "\\(rad m^2 / kg\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M-1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:SpecificOpticalRotatoryPower ;
    qudt:iec61360Code "0112/2///62720#UAB162" ;
    qudt:ucumCode "rad.m2.kg-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C83" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:RAD-M2-PER-MOL a qudt:Unit ;
    rdfs:label "Radian Square Metre per Mole"@en,
        "Radian Square Meter per Mole"@en-us ;
    qudt:expression "\\(rad m^2 / mol\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A-1E0L2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MolarOpticalRotatoryPower ;
    qudt:iec61360Code "0112/2///62720#UAB161" ;
    qudt:ucumCode "rad.m-2.mol-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C82" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:RAD-PER-SEC2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Radian per Square Second"@en ;
    dcterms:description "Angular acceleration is the rate of change of angular velocity. In SI units, it is measured in radians per Square second (\\(rad/s^2\\)), and is usually denoted by the Greek letter \\(\\alpha\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(rad/s2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:AngularAcceleration ;
    qudt:iec61360Code "0112/2///62720#UAA969" ;
    qudt:ucumCode "rad.s-2"^^qudt:UCUMcs,
        "rad/s2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "2B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:RAD_R a qudt:Unit ;
    rdfs:label "Rad"@en ;
    dcterms:description "The \\(rad\\) is a deprecated unit of absorbed radiation dose, defined as \\(1 rad = 0.01\\,Gy = 0.01 J/kg\\). It was originally defined in CGS units in 1953 as the dose causing 100 ergs of energy to be absorbed by one gram of matter. It has been replaced by the gray in most of the world. A related unit, the \\(roentgen\\), was formerly used to quantify the number of rad deposited into a target when it was exposed to radiation. The F-factor can used to convert between rad and roentgens. The material absorbing the radiation can be human tissue or silicon microchips or any other medium (for example, air, water, lead shielding, etc.)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.01 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/RAD"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:AbsorbedDose ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/RAD?oldid=493716376"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/rad> ;
    qudt:symbol "rad" ;
    qudt:ucumCode "RAD"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:RAYL a qudt:Unit ;
    rdfs:label "Rayl"@en ;
    dcterms:description "dcterms:description \"\\(\\textbf{Rayl}\\) is one of two units of specific acoustic impedance. When sound waves pass through any physical substance the pressure of the waves causes the particles of the substance to move. The sound specific impedance is the ratio between the sound pressure and the particle velocity it produces. The specific impedance is one rayl if unit pressure produces unit velocity. It is defined as follows: \\(1\\; rayl = 1 dyn\\cdot s\\cdot cm^{-3}\\) Or in SI as: \\(1 \\; rayl = 10^{-1}Pa\\cdot s\\cdot m^{-1}\\), which equals \\(10\\,N \\cdot s\\cdot m^{-3}\\).\"\"\"^^qudt:LatexString ;" ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Rayl"^^xsd:anyURI ;
    qudt:hasQuantityKind quantitykind:SpecificAcousticImpedance ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Rayl?oldid=433570842"^^xsd:anyURI ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:REM a qudt:Unit ;
    rdfs:label "Rem"@en ;
    dcterms:description "A Rem is a deprecated unit used to measure the biological effects of ionizing radiation. The rem is defined as equal to 0.01 sievert, which is the more commonly used unit outside of the United States. Equivalent dose, effective dose, and committed dose can all be measured in units of rem. These quantities are products of the absorbed dose in rads and weighting factors. These factors must be selected for each exposure situation; there is no universally applicable conversion constant from rad to rem. A rem is a large dose of radiation, so the millirem (mrem), which is one thousandth of a rem, is often used for the dosages commonly encountered, such as the amount of radiation received from medical x-rays and background sources."^^rdf:HTML ;
    qudt:conversionMultiplier 0.01 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:DoseEquivalent ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Roentgen_equivalent_man"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/rem> ;
    qudt:symbol "rem" ;
    qudt:ucumCode "REM"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:REV-PER-SEC2 a qudt:Unit ;
    rdfs:label "Revolution per Square Second"@en ;
    dcterms:description "\"Revolution per Square Second\" is a C.G.S System unit for  'Angular Acceleration' expressed as \\(rev-per-s^2\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 6.28318531 ;
    qudt:expression "\\(rev/s2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:AngularAcceleration ;
    qudt:ucumCode "{#}.s-2"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Riel a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Riel"@en ;
    dcterms:description "Cambodia"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Riel"^^xsd:anyURI ;
    qudt:expression "\\(KHR\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Riel?oldid=473309240"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:RomanianNeLeu a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Romanian New Leu"@en ;
    dcterms:description "Romania"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:expression "\\(RON\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Rufiyaa a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Rufiyaa"@en ;
    dcterms:description "Maldives"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Maldivian_rufiyaa"^^xsd:anyURI ;
    qudt:expression "\\(MVR\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Maldivian_rufiyaa?oldid=491578728"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Rupiah a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Rupiah"@en ;
    dcterms:description "Indonesia"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Indonesian_rupiah"^^xsd:anyURI ;
    qudt:expression "\\(IDR\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Indonesian_rupiah?oldid=489729458"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:RussianRuble a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Russian Ruble"@en ;
    dcterms:description "Russia, Abkhazia, South Ossetia"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Russian_ruble"^^xsd:anyURI ;
    qudt:expression "\\(RUB\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Russian_ruble?oldid=494336467"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:RwandaFranc a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Rwanda Franc"@en ;
    dcterms:description "Rwanda"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Rwandan_franc"^^xsd:anyURI ;
    qudt:expression "\\(RWF\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Rwandan_franc?oldid=489727903"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:S-M2-PER-MOL a qudt:Unit ;
    rdfs:label "Siemens Square metre per mole"@en,
        "Siemens Square meter per mole"@en-us ;
    qudt:expression "\\(s-m2-per-mol\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T3D0 ;
    qudt:hasQuantityKind quantitykind:MolarConductivity ;
    qudt:iec61360Code "0112/2///62720#UAA280" ;
    qudt:ucumCode "S.m2.mol-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D12" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SEC-FT2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Second Square Foot"@en ;
    dcterms:description "\"Second Square Foot\" is an Imperial unit for  'Area Time' expressed as \\(s-ft^{2}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.09290304 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:expression "\\(s-ft^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:AreaTime ;
    qudt:ucumCode "s.[ft_i]2"^^qudt:UCUMcs,
        "s.[sft_i]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SEC-PER-RAD-M3 a qudt:Unit ;
    rdfs:label "Second per Radian Cubic Metre"@en,
        "Second per Radian Cubic Meter"@en-us ;
    qudt:expression "\\(sec/rad-m^3\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:DensityOfStates ;
    qudt:iec61360Code "0112/2///62720#UAB352" ;
    qudt:informativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:ucumCode "s."^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SEC2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Square Second"@en ;
    dcterms:description "\"Square Second\" is a unit for  'Square Time' expressed as \\(s^{2}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI,
        sou:USCS ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(s^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T2D0 ;
    qudt:hasQuantityKind quantitykind:TimeSquared ;
    qudt:ucumCode "s2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SHANNON a qudt:Unit ;
    rdfs:label "Shannon"@en ;
    dcterms:description "The \"Shannon\" is a unit of information."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(Sh\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:InformationEntropy ;
    qudt:iec61360Code "0112/2///62720#UAB343" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Ban_(information)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31898"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/shannon> ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SHANNON-PER-SEC a qudt:Unit ;
    rdfs:label "Shannon per Second"@en ;
    dcterms:description "The \"Shannon per Second\" is a unit of information rate."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(Sh/s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:InformationFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAB346" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Ban_(information)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31898"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SLUG-PER-DAY a qudt:Unit ;
    rdfs:label "Slug Per Day"@en ;
    qudt:conversionMultiplier 0.00016891087963 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA979" ;
    qudt:plainTextDescription "unit slug for mass according to an English engineering system divided by the unit day" ;
    qudt:uneceCommonCode "L63" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SLUG-PER-FT a qudt:Unit ;
    rdfs:label "Slug per Foot"@en ;
    dcterms:description "\"Slug per Foot\" is an Imperial unit for  'Mass Per Length' expressed as \\(slug/ft\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 47.8802591863517 ;
    qudt:definedUnitOfSystem sou:IMPERIAL ;
    qudt:expression "\\(slug/ft\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassPerLength ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SLUG-PER-FT-SEC a qudt:Unit ;
    rdfs:label "Slug per Foot Second"@en ;
    dcterms:description "\\(\\textbf{Slug per Foot Second} is a unit for  'Dynamic Viscosity' expressed as \\(slug/(ft-s)\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 47.8802591863517 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:expression "\\(slug/(ft-s)\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:DynamicViscosity ;
    qudt:iec61360Code "0112/2///62720#UAA980" ;
    qudt:uneceCommonCode "L64" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SLUG-PER-FT2 a qudt:Unit ;
    rdfs:label "Slug per Square Foot"@en ;
    dcterms:description "\"Slug per Square Foot\" is an Imperial unit for  'Mass Per Area' expressed as \\(slug/ft^{2}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 157.08746452215124 ;
    qudt:definedUnitOfSystem sou:IMPERIAL ;
    qudt:expression "\\(slug/ft^{2}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassPerArea ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SLUG-PER-HR a qudt:Unit ;
    rdfs:label "Slug Per Hour"@en ;
    qudt:conversionMultiplier 0.004053861111111 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA982" ;
    qudt:plainTextDescription "unit slug for mass slug according to the English engineering system divided by the unit hour" ;
    qudt:uneceCommonCode "L66" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SLUG-PER-MIN a qudt:Unit ;
    rdfs:label "Slug Per Minute"@en ;
    qudt:conversionMultiplier 0.243231666666667 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA983" ;
    qudt:plainTextDescription "unit slug for the mass according to the English engineering system divided by the unit minute" ;
    qudt:uneceCommonCode "L67" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SR a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Steradian"@en ;
    dcterms:description "The steradian (symbol: sr) is the SI unit of solid angle. It is used to describe two-dimensional angular spans in three-dimensional space, analogous to the way in which the radian describes angles in a plane. The radian and steradian are special names for the number one that may be used to convey information about the quantity concerned. In practice the symbols rad and sr are used where appropriate, but the symbol for the derived unit one is generally omitted in specifying the values of dimensionless quantities."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Steradian"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:SolidAngle ;
    qudt:iec61360Code "0112/2///62720#UAA986" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Steradian?oldid=494317847"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/steradian> ;
    qudt:symbol "sr" ;
    qudt:ucumCode "sr"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D27" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:ST a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Stokes"@en ;
    dcterms:description "\\(\\textbf{Stokes (St)}\\) is a unit in the category of Kinematic viscosity. This unit is commonly used in the cgs unit system. Stokes (St) has a dimension of \\(L^2T^{-1}\\) where \\(L\\) is length, and \\(T\\) is time. It can be converted to the corresponding standard SI unit \\(m^2/s\\) by multiplying its value by a factor of 0.0001."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0001 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Stokes"^^xsd:anyURI ;
    qudt:derivedUnitOfSystem sou:CGS ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:KinematicViscosity ;
    qudt:iec61360Code "0112/2///62720#UAA281" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Stokes?oldid=426159512"^^xsd:anyURI,
        "http://www.efunda.com/glossary/units/units--kinematic_viscosity--stokes.cfm"^^xsd:anyURI ;
    qudt:latexDefinition "\\((cm^2/s\\))"^^qudt:LatexString ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/stokes> ;
    qudt:symbol "St",
        "v" ;
    qudt:ucumCode "St"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "91" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SUSCEPTIBILITY_ELEC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Electric Susceptibility Unit" ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Dimensionless ;
    qudt:latexDefinition "\\chi_{\\text{e}} = \\frac{{\\mathbf P}}{\\varepsilon_0{\\mathbf E}}"^^qudt:LatexString ;
    qudt:plainTextDescription "Electric susceptibility is a dimensionless proportionality constant that indicates the degree of polarization of a dielectric material in response to an applied electric field. Here P = epsilon_0 * chi_e * E. Where epsilon_0 is the electric permittivity of free space (electric constant), P is the polarization density of the material chi_e is the electric susceptibility and E is the electric field." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SUSCEPTIBILITY_MAG a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Magnetic Susceptibility Unit" ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Dimensionless ;
    qudt:latexDefinition "\\chi_\\text{v} = \\frac{\\mathbf{M}}{\\mathbf{H}}"^^qudt:LatexString ;
    qudt:plainTextDescription "Magnetic susceptibility is a dimensionless proportionality constant that indicates the degree of magnetization of a material in response to an applied magnetic field. Here M = chi * H. Where M is the magnetization of the material (the magnetic dipole moment per unit volume), measured in amperes per meter, and H is the magnetic field strength, also measured in amperes per meter. Chi is therefore a dimensionless quantity." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:S_Ab a qudt:Unit ;
    rdfs:label "Absiemen"@en ;
    dcterms:description "The CGS electromagnetic unit of conductance; one absiemen is the conductance at which a potential of one abvolt forces a current of one abampere; equal to \\(10^{9}\\) siemens. One siemen is the conductance at which a potential of one volt forces a current of one ampere and named for Karl Wilhem Siemens."^^qudt:LatexString ;
    qudt:conversionMultiplier 1000000000.0 ;
    qudt:derivedUnitOfSystem sou:CGS-EMU ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T3D0 ;
    qudt:hasQuantityKind quantitykind:ElectricConductivity ;
    qudt:informativeReference "http://wordinfo.info/unit/4266"^^xsd:anyURI ;
    qudt:symbol "aS" ;
    qudt:ucumCode "GS"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SaintHelenaPound a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Saint Helena Pound"@en ;
    dcterms:description "Saint Helena"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Saint_Helena_pound"^^xsd:anyURI ;
    qudt:expression "\\(SHP\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Saint_Helena_pound?oldid=490152057"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SamoanTala a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Samoan Tala"@en ;
    dcterms:description "Samoa"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Samoan_tala"^^xsd:anyURI ;
    qudt:expression "\\(WST\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Samoan_tala?oldid=423898531"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SaudiRiyal a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Saudi Riyal"@en ;
    dcterms:description "Saudi Arabia"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Saudi_riyal"^^xsd:anyURI ;
    qudt:expression "\\(SAR\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Saudi_riyal?oldid=491092981"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SerbianDinar a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Serbian Dinar"@en ;
    dcterms:description "Serbia"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Serbian_dinar"^^xsd:anyURI ;
    qudt:expression "\\(RSD\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Serbian_dinar?oldid=495146650"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SeychellesRupee a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Seychelles Rupee"@en ;
    dcterms:description "Seychelles"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Seychellois_rupee"^^xsd:anyURI ;
    qudt:expression "\\(SCR\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Seychellois_rupee?oldid=492242185"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Silver-OunceTroy a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Silver (one Troy ounce)"@en ;
    qudt:expression "\\(XAG\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:ucumCode "[oz_tr](Ag}"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SingaporeDollar a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Singapore Dollar"@en ;
    dcterms:description "Singapore"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Singapore_dollar"^^xsd:anyURI ;
    qudt:expression "\\(SGD\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Singapore_dollar?oldid=492228311"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/SingaporeDollar> ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SlovakKoruna a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Slovak Koruna"@en ;
    dcterms:description "Slovakia"^^rdf:HTML ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Slovak_koruna"^^xsd:anyURI ;
    qudt:expression "\\(SKK\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Slovak_koruna?oldid=492625951"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SolomonIslandsDollar a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Solomon Islands Dollar"@en ;
    dcterms:description "Solomon Islands"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Solomon_Islands_dollar"^^xsd:anyURI ;
    qudt:expression "\\(SBD\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Solomon_Islands_dollar?oldid=490313285"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Som a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Som"@en ;
    dcterms:description "Kyrgyzstan"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Som"^^xsd:anyURI ;
    qudt:expression "\\(KGS\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Som?oldid=495411674"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SomaliShilling a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Somali Shilling"@en ;
    dcterms:description "Somalia"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Somali_shilling"^^xsd:anyURI ;
    qudt:expression "\\(SOS\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Somali_shilling?oldid=494434126"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Somoni a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Somoni"@en ;
    dcterms:description "Tajikistan"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Tajikistani_somoni"^^xsd:anyURI ;
    qudt:expression "\\(TJS\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Tajikistani_somoni?oldid=492500781"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SouthAfricanRand a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "South African Rand"@en ;
    dcterms:description "South Africa"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/South_African_rand"^^xsd:anyURI ;
    qudt:expression "\\(ZAR\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/South_African_rand?oldid=493780395"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/SouthAfricanRand> ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SouthKoreanWon a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "South Korean Won"@en ;
    dcterms:description "South Korea"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/South_Korean_won"^^xsd:anyURI ;
    qudt:expression "\\(KRW\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/South_Korean_won?oldid=494404062"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/SouthKoreanWon> ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SpecialDrawingRights a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Special Drawing Rights"@en ;
    dcterms:description "International Monetary Fund"^^rdf:HTML ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Special_Drawing_Rights"^^xsd:anyURI ;
    qudt:expression "\\(XDR\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Special_Drawing_Rights?oldid=467224374"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SriLankaRupee a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Sri Lanka Rupee"@en ;
    dcterms:description "Sri Lanka"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Sri_Lankan_rupee"^^xsd:anyURI ;
    qudt:expression "\\(LKR\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Sri_Lankan_rupee?oldid=495359963"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SudanesePound a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Sudanese Pound"@en ;
    dcterms:description "Sudan"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Sudanese_pound"^^xsd:anyURI ;
    qudt:expression "\\(SDG\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Sudanese_pound?oldid=495263707"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SurinamDollar a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Surinam Dollar"@en ;
    dcterms:description "Suriname"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Surinamese_dollar"^^xsd:anyURI ;
    qudt:expression "\\(SRD\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Surinamese_dollar?oldid=490316270"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SwedishKrona a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Swedish Krona"@en ;
    dcterms:description "Sweden"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Swedish_krona"^^xsd:anyURI ;
    qudt:expression "\\(SEK\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Swedish_krona?oldid=492703602"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/SwedishKrona> ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SwissFranc a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Swiss Franc"@en ;
    dcterms:description "Switzerland, Liechtenstein"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Swiss_franc"^^xsd:anyURI ;
    qudt:expression "\\(CHF\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Swiss_franc?oldid=492548706"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/SwissFranc> ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SyrianPound a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Syrian Pound"@en ;
    dcterms:description "Syria"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Syrian_pound"^^xsd:anyURI ;
    qudt:expression "\\(SYP\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Syrian_pound?oldid=484294722"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:T a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Tesla"@en ;
    dcterms:description "The SI unit of flux density (or field intensity) for magnetic fields (also called the magnetic induction). The intensity of a magnetic field can be measured by placing a current-carrying conductor in the field. The magnetic field exerts a force on the conductor, a force which depends on the amount of the current and on the length of the conductor. One tesla is defined as the field intensity generating one newton of force per ampere of current per meter of conductor. Equivalently, one tesla represents a magnetic flux density of one weber per square meter of area. A field of one tesla is quite strong: the strongest fields available in laboratories are about 20 teslas, and the Earth's magnetic flux density, at its surface, is about 50 microteslas. The tesla, defined in 1958, honors the Serbian-American electrical engineer Nikola Tesla (1856-1943), whose work in electromagnetic induction led to the first practical generators and motors using alternating current. \\(T =  V\\cdot s \\cdot m^{-2} = N\\cdot A^{-1}\\cdot m^{-1} = Wb\\cdot m^{-1} = kg \\cdot  C^{-1}\\cdot s^{-1}\\cdot A^{-1} = kg \\cdot s^{-2}\\cdot A^{-1} = N \\cdot s \\cdot C^{-1}\\cdot m^{-1}\\) where, \\(\\\\\\) \\(A\\) = ampere, \\(C\\)=coulomb, \\(m\\) = meter,  \\(N\\) = newton, \\(s\\) = second, \\(T\\) = tesla, \\(Wb\\) = weber"^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Tesla"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E-1L0I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:MagneticFluxDensity ;
    qudt:iec61360Code "0112/2///62720#UAA285" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Tesla?oldid=481198244"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Tesla_(unit)"^^xsd:anyURI,
        "http://www.oxfordreference.com/view/10.1093/acref/9780198605225.001.0001/acref-9780198605225-e-1406?rskey=AzXBLd"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/tesla> ;
    qudt:siUnitsExpression "Wb/m^2" ;
    qudt:symbol "T" ;
    qudt:ucumCode "T"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D33" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:T-M a qudt:Unit ;
    rdfs:label "T-M"@en ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:MagneticFluxPerUnitLength ;
    qudt:ucumCode "T.m"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:T-SEC a qudt:Unit ;
    rdfs:label "T-SEC"@en ;
    qudt:hasDimensionVector qkdv:A0E-1L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassPerElectricCharge ;
    qudt:ucumCode "T.s"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:TEX a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Tex"@en ;
    dcterms:description "<p>\\textit{Tex</em> is a unit of measure for the linear mass density of fibers and is defined as the mass in grams per 1000 meters. Tex is more likely to be used in Canada and Continental Europe, while denier remains more common in the United States and United Kingdom. The unit code is 'tex'. The most commonly used unit is actually the decitex, abbreviated dtex, which is the mass in grams per 10,000 meters. When measuring objects that consist of multiple fibers the term 'filament tex' is sometimes used, referring to the mass in grams per 1000 meters of a single filament. Tex is used for measuring fiber size in many products, including cigarette filters, optical cable, yarn, and fabric.}"^^rdf:HTML ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Tex"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassPerLength ;
    qudt:iec61360Code "0112/2///62720#UAB246" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Tex?oldid=457265525"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Units_of_textile_measurement"^^xsd:anyURI ;
    qudt:symbol "tex" ;
    qudt:ucumCode "tex"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D34" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:THB a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Baht"@en ;
    dcterms:description "Thailand"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Thai_baht"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Thai_baht?oldid=493286022"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:TON_UK-PER-DAY a qudt:Unit ;
    rdfs:label "Long Ton (uk) Per Day"@en ;
    qudt:conversionMultiplier 0.011759259259259 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAB010" ;
    qudt:plainTextDescription "unit British ton according to the Imperial system of units divided by the unit day" ;
    qudt:ucumCode "[lton_av].d-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L85" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:TON_US-PER-DAY a qudt:Unit ;
    rdfs:label "Short Ton (us) Per Day"@en ;
    qudt:conversionMultiplier 0.010497685185185 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAB014" ;
    qudt:plainTextDescription "unit American ton according to the Anglo-American system of units divided by the unit day" ;
    qudt:ucumCode "[ston_av].d-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L88" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:TanzanianShilling a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Tanzanian Shilling"@en ;
    dcterms:description "Tanzania"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Tanzanian_shilling"^^xsd:anyURI ;
    qudt:expression "\\(TZS\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Tanzanian_shilling?oldid=492257527"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:TebiBYTE a qudt:CountingUnit,
        qudt:Unit ;
    rdfs:label "TebiByte"@en ;
    dcterms:description "The tebibyte is a multiple of the unit byte for digital information. The prefix tebi means 1024^4"^^rdf:HTML ;
    qudt:conversionMultiplier 6096987078286.4836024230149744713 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Tebibyte"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Dimensionless ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Byte#Multiple-byte_units"^^xsd:anyURI ;
    qudt:isScalingOf unit:BYTE ;
    qudt:prefix prefix:Tebi ;
    qudt:symbol "TiB" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Tenge a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Tenge"@en ;
    dcterms:description "Kazakhstan"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Kazakhstani_tenge"^^xsd:anyURI ;
    qudt:expression "\\(KZT\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Kazakhstani_tenge?oldid=490523058"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:TeraBYTE a qudt:CountingUnit,
        qudt:Unit ;
    rdfs:label "TeraByte"@en ;
    dcterms:description "The terabyte is a multiple of the unit byte for digital information. The prefix tera means 10^12 in the International System of Units (SI), and therefore 1 terabyte is 1000000000000bytes, or 1 trillion bytes, or 1000 gigabytes. 1 terabyte in binary prefixes is 0.9095 tebibytes, or 931.32 gibibytes. The unit symbol for the terabyte is TB or TByte, but not Tb (lower case b) which refers to terabit."^^rdf:HTML ;
    qudt:conversionMultiplier 5545177444479.5624753378569716654 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Terabyte"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Dimensionless ;
    qudt:iec61360Code "0112/2///62720#UAB186" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Terabyte?oldid=494671550"^^xsd:anyURI ;
    qudt:isScalingOf unit:BYTE ;
    qudt:prefix prefix:Tera ;
    qudt:symbol "TB" ;
    qudt:ucumCode "TBy"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "E35" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:TeraOHM a qudt:Unit ;
    rdfs:label "Teraohm"@en ;
    qudt:conversionMultiplier 1000000000000.0 ;
    qudt:hasDimensionVector qkdv:A0E-2L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Resistance ;
    qudt:iec61360Code "0112/2///62720#UAA286" ;
    qudt:plainTextDescription "1,000,000,000,000-fold of the SI derived unit ohm" ;
    qudt:ucumCode "TOhm"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H44" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:TrinidadAndTobagoDollar a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Trinidad and Tobago Dollar"@en ;
    dcterms:description "Trinidad and Tobago"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Trinidad_and_Tobago_dollar"^^xsd:anyURI ;
    qudt:expression "\\(TTD\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Trinidad_and_Tobago_dollar?oldid=490325306"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Tugrik a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Tugrik"@en ;
    dcterms:description "Mongolia"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Mongolian_t%C3%B6gr%C3%B6g"^^xsd:anyURI ;
    qudt:expression "\\(MNT\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mongolian_tögrög?oldid=495408271"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:TunisianDinar a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Tunisian Dinar"@en ;
    dcterms:description "Tunisia"^^rdf:HTML ;
    qudt:currencyExponent 3 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Tunisian_dinar"^^xsd:anyURI ;
    qudt:expression "\\(TND\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Tunisian_dinar?oldid=491218035"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:UAEDirham a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "United Arab Emirates dirham"@en ;
    dcterms:description "United Arab Emirates"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/United_Arab_Emirates_dirham"^^xsd:anyURI ;
    qudt:expression "\\(AED\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/United_Arab_Emirates_dirham?oldid=491806142"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:UICFranc a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "UIC franc (special settlement currency)"@en ;
    dcterms:description "International Union of Railways"^^rdf:HTML ;
    qudt:expression "\\(XFU\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:USDollar a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "US Dollar"@en ;
    dcterms:description "American Samoa, British Indian Ocean Territory, Ecuador, El Salvador, Guam, Haiti, Marshall Islands, Micronesia, Northern Mariana Islands, Palau, Panama, Puerto Rico, East Timor, Turks and Caicos Islands, United States, Virgin Islands"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:symbol "US$" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:USDollar-NextDay a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "United States Dollar (next day) (funds code)"@en ;
    dcterms:description "United States"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:expression "\\(USN\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:USDollar-SameDay a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "United States Dollar (same day) (funds code)"@en ;
    dcterms:description "United States"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:UgandaShilling a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Uganda Shilling"@en ;
    dcterms:description "Uganda"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Ugandan_shilling"^^xsd:anyURI ;
    qudt:expression "\\(UGX\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Ugandan_shilling?oldid=495383966"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:UnidadDeValorReal a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Unidad de Valor Real"@en ;
    dcterms:description "Colombia"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:expression "\\(COU\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:UnidadesDeFormento a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Unidades de formento (Funds code)"@en ;
    dcterms:description "Chile"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:expression "\\(CLF\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:UnitPole a qudt:Unit ;
    rdfs:label "Unit Pole"@en ;
    dcterms:description "A magnetic pole is a unit pole if it exerts a force of one dyne on another pole of equal strength at a distance of 1 cm. The strength of any given pole in cgs units is therefore numerically equal to the force in dynes which it exerts on a unit pole 1 cm away."^^rdf:HTML ;
    qudt:conversionMultiplier 0.0000001256637 ;
    qudt:expression "\\(U/nWb\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:MagneticFlux ;
    qudt:iec61360Code "0112/2///62720#UAB214" ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/unitPole> ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:UruguayPeso a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Peso Uruguayo"@en ;
    dcterms:description "Uruguay"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Uruguayan_peso"^^xsd:anyURI ;
    qudt:expression "\\(UYU\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Uruguayan_peso?oldid=487528781"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:UzbekistanSom a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Uzbekistan Som"@en ;
    dcterms:description "Uzbekistan"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Uzbekistani_som"^^xsd:anyURI ;
    qudt:expression "\\(UZS\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Uzbekistani_som?oldid=490522228"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:V-M a qudt:Unit ;
    rdfs:label "V-M"@en ;
    qudt:hasDimensionVector qkdv:A0E-1L3I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:ElectricFlux ;
    qudt:ucumCode "V.m"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:V-PER-CentiM a qudt:Unit ;
    rdfs:label "Volt Per Centimetre"@en,
        "Volt Per Centimeter"@en-us ;
    qudt:conversionMultiplier 100.0 ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:ElectricFieldStrength ;
    qudt:iec61360Code "0112/2///62720#UAB054" ;
    qudt:plainTextDescription "derived SI unit volt divided by the 0.01-fold of the SI base unit metre" ;
    qudt:ucumCode "V.cm-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D47" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:V-PER-IN a qudt:Unit ;
    rdfs:label "Volt Per Inch"@en ;
    qudt:conversionMultiplier 39.37007874015748 ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:ElectricFieldStrength ;
    qudt:iec61360Code "0112/2///62720#UAA300" ;
    qudt:plainTextDescription "SI derived unit volt divided by the unit inch according to the Anglo-American and the Imperial system of units" ;
    qudt:ucumCode "V.[in_i]-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H23" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:V-PER-M2 a qudt:Unit ;
    rdfs:label "Volt per Square Metre"@en,
        "Volt per Square Meter"@en-us ;
    dcterms:description "The divergence at a particular point in a vector field is (roughly) how much the vector field 'spreads out' from that point. Operationally, we take the partial derivative of each of the field with respect to each of its space variables and add all the derivatives together to get the divergence. Electric field (V/m) differentiated with respect to distance (m) yields \\(V/(m^2)\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(V m^{-2}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-1L0I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:EnergyPerAreaElectricCharge ;
    qudt:informativeReference "http://www.funtrivia.com/en/subtopics/Physical-Quantities-310909.html"^^xsd:anyURI ;
    qudt:ucumCode "V.m-2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:V-PER-MicroSEC a qudt:Unit ;
    rdfs:label "Volt Per Microsecond"@en ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-4D0 ;
    qudt:hasQuantityKind quantitykind:PowerPerElectricCharge ;
    qudt:iec61360Code "0112/2///62720#UAA297" ;
    qudt:plainTextDescription "SI derived unit volt divided by the 0.000001-fold of the SI base unit second" ;
    qudt:ucumCode "V.us-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H24" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:V-PER-MilliM a qudt:Unit ;
    rdfs:label "Volt Per Millimetre"@en,
        "Volt Per Millimeter"@en-us ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:ElectricFieldStrength ;
    qudt:iec61360Code "0112/2///62720#UAA302" ;
    qudt:plainTextDescription "SI derived unit volt divided by the 0.001-fold of the SI base unit metre" ;
    qudt:ucumCode "V.mm-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D51" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:V-PER-SEC a qudt:Unit ;
    rdfs:label "Volt per second"@en ;
    dcterms:description "'Volt per Second' is a unit of magnetic flux equaling one weber. This is the flux passing through a conducting loop and reduced to zero at a uniform rate in one second inducing an electric potential of one volt in the loop. "^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(V / sec\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-4D0 ;
    qudt:hasQuantityKind quantitykind:PowerPerElectricCharge ;
    qudt:iec61360Code "0112/2///62720#UAA304" ;
    qudt:informativeReference "http://www.oxfordreference.com/view/10.1093/acref/9780198605225.001.0001/acref-9780198605225-e-1512"^^xsd:anyURI,
        "http://www.thefreedictionary.com/Webers"^^xsd:anyURI ;
    qudt:ucumCode "V.s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H46" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:V2-PER-K2 a qudt:Unit ;
    rdfs:label "Square Volt per Square Kelvin"@en ;
    qudt:expression "\\(v^2/k^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-2L4I0M2H-2T-6D0 ;
    qudt:hasQuantityKind quantitykind:LorenzCoefficient ;
    qudt:iec61360Code "0112/2///62720#UAB172" ;
    qudt:informativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:ucumCode "V2.K-2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D45" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:V_Ab-SEC a qudt:Unit ;
    rdfs:label "Abvolt Second"@en ;
    dcterms:description "The magnetic flux whose expenditure in 1 second produces 1 abvolt per turn of a linked circuit. Technically defined in a three-dimensional system, it corresponds in the four-dimensional electromagnetic sector of the SI system to 10 nWb, and is an impractically small unit. In use for some years, the name was agreed by the International Electrotechnical Committee in 1930, along with a corresponding practical unit, the pramaxwell (or pro-maxwell) = \\(10^{8}\\) maxwell."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00000001 ;
    qudt:derivedUnitOfSystem sou:CGS-EMU ;
    qudt:expression "\\(abv-sec\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:MagneticFlux ;
    qudt:informativeReference "http://www.oxfordreference.com/view/10.1093/acref/9780198605225.001.0001/acref-9780198605225-e-820"^^xsd:anyURI ;
    qudt:ucumCode "10.nV.s"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:V_Stat-CentiM a qudt:Unit ;
    rdfs:label "V_Stat-CentiM"@en ;
    qudt:expression "\\(statvolt-centimeter\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-1L3I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:ElectricFlux ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Vatu a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Vatu"@en ;
    dcterms:description "Vanuatu"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Vanuatu_vatu"^^xsd:anyURI ;
    qudt:expression "\\(VUV\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Vanuatu_vatu?oldid=494667103"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:VenezuelanBolvar a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Venezuelan bolvar"@en ;
    dcterms:description "Venezuela"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:expression "\\(VEB\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:VietnameseDong a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Vietnamese ??ng"@en ;
    dcterms:description "Vietnam"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:expression "\\(VND\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:W-M2 a qudt:Unit ;
    rdfs:label "W-M2"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L4I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:PowerArea ;
    qudt:ucumCode "W.m2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:W-M2-PER-SR a qudt:Unit ;
    rdfs:label "W-M2-PER-SR"@en ;
    qudt:hasDimensionVector qkdv:A0E0L4I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:PowerAreaPerSolidAngle ;
    qudt:ucumCode "W.m2.sr-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:W-PER-K a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Watt per Kelvin"@en ;
    dcterms:description "Watt Per Kelvin (\\(W/K\\)) is a unit in the category of Thermal conductivity."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(w-per-K\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H-1T-3D0 ;
    qudt:hasQuantityKind quantitykind:ThermalConductance ;
    qudt:iec61360Code "0112/2///62720#UAA307" ;
    qudt:ucumCode "W.K-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D52" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:W-PER-KiloGM a qudt:Unit ;
    rdfs:label "Watt Per Kilogram"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:AbsorbedDoseRate ;
    qudt:iec61360Code "0112/2///62720#UAA316" ;
    qudt:plainTextDescription "SI derived unit watt divided by the SI base unit kilogram" ;
    qudt:ucumCode "W.kg-1"^^qudt:UCUMcs,
        "W/kg"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "WA" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:W-PER-M-K a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Watt per Metre Kelvin"@en,
        "Watt per Meter Kelvin"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(W-per-MK\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H-1T-3D0 ;
    qudt:hasQuantityKind quantitykind:ThermalConductivity ;
    qudt:iec61360Code "0112/2///62720#UAA309" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Thermal_conductivity"^^xsd:anyURI ;
    qudt:latexSymbol "\\(W \\cdot m^{-1} \\cdot K^{-1}\\)"^^qudt:LatexString ;
    qudt:ucumCode "W.m-1.K-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D53" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:W-PER-M2-K4 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Watt per Square Metre Quartic Kelvin"@en,
        "Watt per Square Meter Quartic Kelvin"@en-us ;
    dcterms:description "Watt Per Square Meter Per Quartic Kelvin (\\(W/m2\\cdotK4)\\) is a unit in the category of light."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(W/(m^2.K^4)\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H-4T-3D0 ;
    qudt:hasQuantityKind quantitykind:PowerPerAreaQuarticTemperature ;
    qudt:ucumCode "W.m-2.K-4"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:W-PER-M2-PA a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Watt per Square Metre Pascal"@en,
        "Watt per Square Meter Pascal"@en-us ;
    dcterms:description "Watt Per Square Meter Per Pascal (\\(W/m^2-pa\\)) is a unit of Evaporative Heat Transfer."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(W/(m^2.pa)\\)"^^qudt:LatexString ;
    qudt:hasQuantityKind quantitykind:EvaporativeHeatTransferCoefficient ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:ucumCode "W.m-2.Pa-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:W-PER-M3 a qudt:Unit ;
    rdfs:label "Watt Per Cubic Metre"@en,
        "Watt Per Cubic Meter"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerAreaTime ;
    qudt:iec61360Code "0112/2///62720#UAA312" ;
    qudt:plainTextDescription "SI derived unit watt divided by the power of the SI base unit metre with the exponent 3" ;
    qudt:ucumCode "W.m-3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H47" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:W-PER-SR a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Watt per Steradian"@en ;
    dcterms:description "\\(\\textbf{Watt Per Steradian (W/sr)}\\) is the unit in the category of Radiant intensity. It is also known as watts per steradian. This unit is commonly used in the SI unit system. Watt Per Steradian (W/sr) has a dimension of \\(M\\cdot L^{-2}\\cdot T^{-3}\\) where \\(M\\) is mass, \\(L\\) is length, and \\(T\\) is time. This unit is the standard SI unit in this category."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(W sr^{-1}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:RadiantIntensity ;
    qudt:iec61360Code "0112/2///62720#UAA314" ;
    qudt:ucumCode "W.sr-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D57" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:WB a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Weber"@en ;
    dcterms:description "The SI unit of magnetic flux. \"Flux\" is the rate (per unit of time) at which something crosses a surface perpendicular to the flow. The weber is a large unit, equal to \\(10^{8}\\) maxwells, and practical fluxes are usually fractions of one weber. The weber is the magnetic flux which, linking a circuit of one turn, would produce in it an electromotive force of 1 volt if it were reduced to zero at a uniform rate in 1 second. In SI base units, the dimensions of the weber are \\((kg \\cdot m^2)/(s^2 \\cdot A)\\). The weber is commonly expressed in terms of other derived units as the Tesla-square meter (\\(T \\cdot m^2\\)), volt-seconds (\\(V \\cdot s\\)), or joules per ampere (\\(J/A\\))."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Weber"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:MagneticFlux ;
    qudt:iec61360Code "0112/2///62720#UAA317" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Weber?oldid=491210387"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/weber> ;
    qudt:siUnitsExpression "V.s" ;
    qudt:symbol "Wb" ;
    qudt:ucumCode "Wb"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "WEB" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:WB-PER-M a qudt:Unit ;
    rdfs:label "Weber Per Metre"@en,
        "Weber Per Meter"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:MagneticVectorPotential ;
    qudt:iec61360Code "0112/2///62720#UAA318" ;
    qudt:plainTextDescription "SI derived unit weber divided by the SI base unit metre" ;
    qudt:ucumCode "Wb.m-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D59" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:WB-PER-MilliM a qudt:Unit ;
    rdfs:label "Weber Per Millimetre"@en,
        "Weber Per Millimeter"@en-us ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:MagneticVectorPotential ;
    qudt:iec61360Code "0112/2///62720#UAB074" ;
    qudt:plainTextDescription "derived SI unit weber divided by the 0.001-fold of the SI base unit metre" ;
    qudt:ucumCode "Wb.mm-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D60" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:WIREuro a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "WIR Euro (complementary currency)"@en ;
    dcterms:description "Switzerland"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:expression "\\(CHE\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:WIRFranc a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "WIR Franc (complementary currency)"@en ;
    dcterms:description "Switzerland"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:expression "\\(CHW\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:XAF a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "CFA Franc BEAC"@en ;
    dcterms:description "Cameroon, Central African Republic, Congo, Chad, Equatorial Guinea, Gabon"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:XOF a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "CFA Franc BCEAO"@en ;
    dcterms:description "Currency of Benin, Burkina Faso, CÔte d'Ivoire, Guinea-Bissau, Mali, Niger, Senegal, Togo"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:XPF a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "CFP franc"@en ;
    dcterms:description "French Polynesia, New Caledonia, Wallis and Futuna"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:YD-PER-DEG_F a qudt:Unit ;
    rdfs:label "Yard Per Degree Fahrenheit"@en ;
    qudt:conversionMultiplier 1.6459200164592 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H-1T0D0 ;
    qudt:hasQuantityKind quantitykind:LinearThermalExpansion ;
    qudt:iec61360Code "0112/2///62720#UAB031" ;
    qudt:plainTextDescription "unit yard according to the Anglo-American and the Imperial system of units divided by the unit for temperature degree Fahrenheit" ;
    qudt:ucumCode "[yd_i].[degF]-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L98" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:YD3-PER-DEG_F a qudt:Unit ;
    rdfs:label "Cubic Yard Per Degree Fahrenheit"@en ;
    qudt:conversionMultiplier 1.376198881991088 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H-1T0D0 ;
    qudt:hasQuantityKind quantitykind:VolumeThermalExpansion ;
    qudt:iec61360Code "0112/2///62720#UAB036" ;
    qudt:plainTextDescription "power of the unit yard according to the Anglo-American and the Imperial system of units with the exponent 3 divided by the unit for temperature degree Fahrenheit" ;
    qudt:ucumCode "[cyd_i].[degF]-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "M11" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:YemeniRial a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Yemeni Rial"@en ;
    dcterms:description "Yemen"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Yemeni_rial"^^xsd:anyURI ;
    qudt:expression "\\(YER\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Yemeni_rial?oldid=494507603"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:YuanRenminbi a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Yuan Renminbi"@en ;
    dcterms:description "Mainland China"^^rdf:HTML ;
    qudt:currencyExponent 1 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Renminbi"^^xsd:anyURI ;
    qudt:expression "\\(CNY\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Renminbi?oldid=494799454"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Z a qudt:Unit ;
    rdfs:label "atomic-number"@en ;
    dcterms:description "In chemistry and physics, the atomic number (also known as the proton number) is the number of protons found in the nucleus of an atom and therefore identical to the charge number of the nucleus. It is conventionally represented by the symbol Z. The atomic number uniquely identifies a chemical element. In an atom of neutral charge, the atomic number is also equal to the number of electrons."^^rdf:HTML ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Atomic_number"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:AtomicNumber ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Atomic_number?oldid=490723437"^^xsd:anyURI ;
    qudt:symbol "Z" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:ZambianKwacha a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Zambian Kwacha"@en ;
    dcterms:description "Zambia"^^rdf:HTML ;
    qudt:currencyExponent 0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Zambian_kwacha"^^xsd:anyURI ;
    qudt:expression "\\(ZMK\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Zambian_kwacha?oldid=490328608"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:ZimbabweDollar a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Zimbabwe Dollar"@en ;
    dcterms:description "Zimbabwe"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Zimbabwean_dollar"^^xsd:anyURI ;
    qudt:expression "\\(ZWD\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Zimbabwean_dollar?oldid=491532675"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Zloty a qudt:CurrencyUnit,
        qudt:Unit ;
    rdfs:label "Zloty"@en ;
    dcterms:description "Poland"^^rdf:HTML ;
    qudt:currencyExponent 2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Polish_z%C5%82oty"^^xsd:anyURI ;
    qudt:expression "\\(PLN\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Currency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Polish_złoty?oldid=492697733"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

arg:instance a rdf:Property ;
    rdfs:subPropertyOf sp:arg .

arg:max a rdf:Property ;
    rdfs:subPropertyOf sp:arg .

arg:maxCount a rdf:Property ;
    rdfs:subPropertyOf sp:arg .

arg:maxLength a rdf:Property ;
    rdfs:subPropertyOf sp:arg .

arg:min a rdf:Property ;
    rdfs:subPropertyOf sp:arg .

arg:minCount a rdf:Property ;
    rdfs:subPropertyOf sp:arg .

arg:minLength a rdf:Property ;
    rdfs:subPropertyOf sp:arg .

arg:otherProperty a rdf:Property ;
    rdfs:subPropertyOf sp:arg .

arg:pattern a rdf:Property ;
    rdfs:subPropertyOf sp:arg .

arg:type a rdf:Property ;
    rdfs:subPropertyOf sp:arg .

<http://spinrdf.org/sp> a owl:Ontology ;
    rdfs:label "SPIN SPARQL Syntax" ;
    rdfs:comment "An RDF schema to syntactically represent SPARQL queries and update commands as RDF triples." ;
    owl:versionInfo "1.5.1" .

sp:arg4 a rdf:Property ;
    rdfs:label "arg4" ;
    rdfs:comment "The forth argument of a function call." ;
    rdfs:subPropertyOf sp:arg .

sp:coalesce a spin:Function ;
    rdfs:label "COALESCE" ;
    spin:symbol "COALESCE" ;
    rdfs:comment "Takes any number of arguments, and returns the first bound argument, starting at the left." ;
    rdfs:subClassOf spl:MiscFunctions .

sp:datatype a spin:Function ;
    rdfs:label "datatype" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "the literal to get the datatype of" ] ;
    spin:returnType rdfs:Class ;
    spin:symbol "datatype" ;
    rdfs:comment "Returns the datatype IRI of argument ?arg1; returns xsd:string if the parameter is a simple literal." ;
    rdfs:subClassOf spl:OntologyFunctions .

sp:encode_for_uri a spin:Function ;
    rdfs:label "encode_for_uri" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType xsd:string ;
            rdfs:comment "The string to convert." ] ;
    spin:returnType xsd:string ;
    spin:symbol "ENCODE_FOR_URI" ;
    rdfs:subClassOf spl:StringFunctions .

sp:ge a spin:Function ;
    rdfs:label "ge" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "the first operand" ],
        [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "the second operand" ] ;
    spin:returnType xsd:boolean ;
    spin:symbol ">=" ;
    rdfs:comment "Returns true if ?arg1 >= ?arg2." ;
    rdfs:subClassOf spl:BooleanFunctions .

sp:isBlank a spin:Function ;
    rdfs:label "isBlank" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            rdfs:comment "the node being checked" ] ;
    spin:returnType xsd:boolean ;
    spin:symbol "isBlank" ;
    rdfs:comment "Checks whether a given node is a blank node." ;
    rdfs:subClassOf spl:BooleanFunctions .

sp:regex a spin:Function ;
    rdfs:label "regex" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType xsd:string ;
            rdfs:comment "the match pattern" ],
        [ a spl:Argument ;
            spl:optional true ;
            spl:predicate sp:arg3 ;
            spl:valueType xsd:string ;
            rdfs:comment "the flags" ],
        [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType xsd:string ;
            rdfs:comment "the input string" ] ;
    spin:returnType xsd:boolean ;
    spin:symbol "regex" ;
    rdfs:comment "Returns true if a string (?arg1) matches the regular expression supplied as a pattern (?arg2) as influenced by the value of flags (?arg3), otherwise returns false." ;
    rdfs:seeAlso <http://www.w3.org/TR/sparql11-query/#func-regex> ;
    rdfs:subClassOf spl:StringFunctions .

sp:sameTerm a spin:Function ;
    rdfs:label "same term" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            rdfs:comment "the first argument" ],
        [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            rdfs:comment "the second argument" ] ;
    spin:returnType xsd:boolean ;
    spin:symbol "sameTerm" ;
    rdfs:comment "Returns TRUE if ?arg1 and ?arg2 are the same RDF term as defined in Resource Description Framework (RDF): Concepts and Abstract Syntax; returns FALSE otherwise." ;
    rdfs:seeAlso <http://www.w3.org/TR/sparql11-query/#func-sameTerm> ;
    rdfs:subClassOf spl:BooleanFunctions .

sp:strlen a spin:Function ;
    rdfs:label "strlen" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType xsd:string ;
            rdfs:comment "The input string." ] ;
    spin:returnType xsd:integer ;
    spin:symbol "STRLEN" ;
    rdfs:comment "Computes the length of a given input string." ;
    rdfs:seeAlso <http://www.w3.org/TR/sparql11-query/#func-strlen> ;
    rdfs:subClassOf spl:StringFunctions .

<http://spinrdf.org/spin> a owl:Ontology ;
    rdfs:label "SPIN Modeling Vocabulary" ;
    rdfs:comment "An RDF Schema that can be used to attach constraints and rules to RDFS classes, and to encapsulate reusable SPARQL queries into functions and templates." ;
    owl:imports <http://spinrdf.org/sp> ;
    owl:versionInfo "1.4" .

spin:constructor a rdf:Property ;
    rdfs:label "constructor" ;
    rdfs:comment "Can be used to attach a \"constructor\" to a class. A constructor is a SPARQL CONSTRUCT query or INSERT/DELETE Update operation that can add initial values to the current instance. At execution time, the variable ?this is bound to the current instance. Tools can call constructors of a class and its superclasses when an instance of a class has been created. Constructors will also be used to initialize resources that have received a new rdf:type triple as a result of spin:rules firing." ;
    rdfs:domain rdfs:Class ;
    rdfs:range spin:Rule ;
    rdfs:subPropertyOf spin:command .

spin:eval a spin:Function ;
    rdfs:label "eval" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            rdfs:comment "The expression to evaluate. Should be a sp:Select, sp:Ask, a sp:Variable or an instance of a SPARQL function class, but may also be a simple RDF value." ] ;
    rdfs:comment "Evaluates a given SPIN expression or SELECT or ASK query, and returns its result. The first argument must be the expression in SPIN RDF syntax. All other arguments must come in pairs: first a property name, and then a value. These name/value pairs will be pre-bound variables for the execution of the expression." ;
    rdfs:subClassOf spin:Functions .

spin:query a rdf:Property ;
    rdfs:label "query" ;
    rdfs:comment "Can be used to point from any resource to a Query." ;
    rdfs:range sp:Query ;
    rdfs:subPropertyOf spin:command .

spin:rule a spin:RuleProperty ;
    rdfs:label "rule" ;
    rdfs:comment "An inferencing rule attached to a class. Rules are expressed as CONSTRUCT queries or INSERT/DELETE operations where the variable ?this will be bound to the current instance of the class. These inferences can be used to derive new values from existing values at the instance." ;
    rdfs:domain rdfs:Class ;
    rdfs:range spin:Rule ;
    rdfs:subPropertyOf spin:command .

spl:ConstraintTemplates a spl:ConstraintTemplate ;
    rdfs:label "Constraint templates" ;
    spin:abstract true ;
    rdfs:comment "Abstract superclass of templates that can be used as spin:constraints. The subclasses are expected to construct spin:ConstraintViolations and use ?this to talk about the instances of the associated class." ;
    rdfs:subClassOf spin:ConstructTemplates .

spl:ConstructDefaultValues a spin:ConstructTemplate ;
    rdfs:label "Construct default values" ;
    spin:body [ a sp:Construct ;
            sp:templates ( [ sp:object [ sp:varName "defaultValue" ] ;
                        sp:predicate [ sp:varName "predicate" ] ;
                        sp:subject spin:_this ] ) ;
            sp:where ( [ sp:object [ sp:varName "directType" ] ;
                        sp:predicate rdf:type ;
                        sp:subject spin:_this ] [ a sp:TriplePath ;
                        sp:object [ sp:varName "type" ] ;
                        sp:path [ a sp:ModPath ;
                                sp:modMax -2 ;
                                sp:modMin 0 ;
                                sp:subPath rdfs:subClassOf ] ;
                        sp:subject [ sp:varName "directType" ] ] [ sp:object [ sp:varName "attribute" ] ;
                        sp:predicate spin:constraint ;
                        sp:subject [ sp:varName "type" ] ] [ sp:object [ sp:varName "defaultValue" ] ;
                        sp:predicate spl:defaultValue ;
                        sp:subject [ sp:varName "attribute" ] ] [ sp:object [ sp:varName "predicate" ] ;
                        sp:predicate spl:predicate ;
                        sp:subject [ sp:varName "attribute" ] ] ) ] ;
    spin:labelTemplate "Construct default values" ;
    rdfs:comment "This template can be attached as spin:constructor to a root class such as rdfs:Resource to ensure that SPIN processors assign default values to certain properties. Looks for any templates attached as spin:constraints to the types of ?this and then assigns their declared spl:defaultValues." ;
    rdfs:subClassOf spin:ConstructTemplates .

spl:CountPropertyConstraintTemplates a spl:ConstraintTemplate ;
    rdfs:label "Count property constraint templates" ;
    spin:abstract true ;
    spin:constraint [ a spl:Argument ;
            spl:optional true ;
            spl:predicate arg:maxCount ;
            spl:valueType xsd:integer ;
            rdfs:comment "The maximum number of values that the property must have." ],
        [ a spl:Argument ;
            spl:optional true ;
            spl:predicate arg:minCount ;
            spl:valueType xsd:integer ;
            rdfs:comment "The minimum number of values that the property must have." ] ;
    rdfs:comment "Abstract superclass of property constraints that compare the number of values with either min or max count." ;
    rdfs:subClassOf spl:PropertyConstraintTemplates .

spl:URIFunctions a spin:Function ;
    rdfs:label "URI functions" ;
    spin:abstract true ;
    rdfs:comment "A collection of functions that create URI resources." ;
    rdfs:subClassOf spin:Functions .

spl:maxCount a rdf:Property ;
    rdfs:subPropertyOf spl:count .

spl:minCount a rdf:Property ;
    rdfs:subPropertyOf spl:count .

spl:optional a rdf:Property ;
    rdfs:label "optional" ;
    rdfs:range xsd:boolean ;
    rdfs:subPropertyOf sp:arg .

voag:QUDT-QUANTITY-KINDS-VocabCatalogEntry_v1.2 a vaem:CatalogEntry ;
    rdfs:label "QUDT Quantity Kinds Vocabulary Catalog Entry v1.2" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

dtype:ValueReference a owl:Class ;
    rdfs:label "Value Reference"^^xsd:string ;
    vaem:comment "A value reference is a pointer to an Enumerated Value. The original position of the value can be overridden by the position attribute."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/1.1/schema/dtype>,
        <http://www.linkedmodel.org/schema/dtype> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:cardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty dtype:refersTo ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty dtype:position ],
        [ a owl:Restriction ;
            owl:allValuesFrom dtype:EnumeratedValue ;
            owl:onProperty dtype:refersTo ],
        owl:Thing .

dtype:code a owl:DatatypeProperty ;
    rdfs:label "code"^^xsd:string ;
    vaem:comment "A property for expressing an encoded value. The range has been set to \"xsd:anySimpleType\" to allow for a variety of scalar datatypes."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/1.1/schema/dtype>,
        <http://www.linkedmodel.org/schema/dtype> ;
    rdfs:range xsd:anySimpleType .

dtype:compositeOf a owl:ObjectProperty ;
    rdfs:label "composite of"^^xsd:string ;
    vaem:comment "Aproperty for constructing composite data structures"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/1.1/schema/dtype>,
        <http://www.linkedmodel.org/schema/dtype> .

dtype:literal a owl:DatatypeProperty ;
    rdfs:label "literal"^^xsd:string ;
    vaem:comment "A general purpose property for holding string literals."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/1.1/schema/dtype>,
        <http://www.linkedmodel.org/schema/dtype> ;
    rdfs:range xsd:string .

dtype:order a owl:DatatypeProperty ;
    rdfs:label "order"^^xsd:string ;
    vaem:comment "The property \"dtype:order\" provides a means to specify a precedence. One use of order is in specifying ordered enumerations such as \"voag:ConfidentialityLevel\".  A similar property, but with an important type difference, is \"vaem:orderIndex\". This is for use on property occurrences in class axioms where it can be placed on a restriction to specify how that property may be transformed into other representations where ordering has some importance, for example, in XML Schema sequences.  Whereas \"vaem:order\" is a datatype property, \"vaem:orderIndex\" is an annotation property."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/1.1/schema/dtype>,
        <http://www.linkedmodel.org/schema/dtype> ;
    rdfs:range xsd:nonNegativeInteger ;
    rdfs:seeAlso dtype:orderIndex .

dtype:orderIndex a owl:AnnotationProperty ;
    rdfs:label "order index"^^xsd:string ;
    vaem:comment "The property \"dtype:orderIndex\" is an annotation property to specify a position that some value or structure will have. One use is to specify the place that a resource has in a sequence. One use is on property occurrences in class axioms. Here \"vaem:orderIndex\" is placed on a restriction to specify how that property may be transformed into a representation where ordering has some importance, for example, in XML Schema sequences."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/1.1/schema/dtype>,
        <http://www.linkedmodel.org/schema/dtype> ;
    rdfs:range xsd:nonNegativeInteger .

vaem:Aspect a owl:Class ;
    rdfs:label "Aspect Dimension"^^xsd:string ;
    dcterms:description "Aspect is used to distinguish among sets of features of a domain or subject area. The term is borrowed from \"aspect-oriented\" programming, where it is used to separate concerns. An ontology may be characterized by this dimension so as to parition features that are orthogonal. For example,  in a systems ontology there may be aspects for \"structure\", \"function\", \"behavior\" and \"interface\" or \"interoperability\". A viewpoint can be distinguished by \"aspects\". For example the \"information viewpoint\" of an application can be partitioned into separate graphs for the \"security\", \"operational\" and\"data retention\" aspects."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:subClassOf vaem:Dimension .

vaem:Discipline a owl:Class ;
    rdfs:label "Discipline Dimension"^^xsd:string ;
    dcterms:description "A discipline is a specific area of work or study. Examples of disciplines in the engineering domain are electrical engineering, mechanical engineering and, in the financial domain, risk assessment, investment analysis.  In VAEM, discipline is used as a dimension for characterizing an ontology graph"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:subClassOf vaem:Dimension .

vaem:Domain a owl:Class ;
    rdfs:label "Domain Dimension"^^xsd:string ;
    dcterms:description "A domain is a subject area of interest. Examples of domains are \"enterprise\", \"process\", \"organization\" and \"system\". In VAEM, \"Domain\" is used as a dimension for characterizing an ontology graph"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:subClassOf vaem:Dimension .

vaem:GMD_QUDT-DIMENSION-VECTORS a vaem:GraphMetaData ;
    rdfs:label "QUDT Dimension Vector Vocabulary Version 2.1.15" ;
    dcterms:contributor "Jack Hodges",
        "Steve Ray" ;
    dcterms:created "2019-08-01T16:25:54.850000+00:00"^^xsd:dateTime ;
    dcterms:creator "Steve Ray" ;
    dcterms:description "Provides the set of all dimension vectors"^^rdf:HTML ;
    dcterms:modified "2021-12-13T09:18:23.643000-08:00"^^xsd:dateTime ;
    dcterms:rights "The QUDT Ontologies are issued under a Creative Commons Attribution 4.0 International License (CC BY 4.0), available at https://creativecommons.org/licenses/by/4.0/. Attribution should be made to QUDT.org" ;
    dcterms:subject "QUANTITY-KIND-DIMENSION-VECTORS" ;
    vaem:applicableDiscipline "All disciplines" ;
    vaem:applicableDomain "Science, Medicine and Engineering" ;
    vaem:dateCreated "2019-08-01T21:26:38"^^xsd:dateTime ;
    vaem:description "QUDT Dimension Vectors is a vocabulary that extends QUDT Quantity Kinds with properties that support dimensional analysis. There is one dimension vector for each of the system's base quantity kinds. The vector's magnitude determines the exponent of the base dimension for the referenced quantity kind"^^rdf:HTML ;
    vaem:graphTitle "QUDT Dimension Vectors Version 2.1.15" ;
    vaem:hasGraphRole vaem:VocabularyGraph ;
    vaem:intent "TBD" ;
    vaem:isMetadataFor <http://qudt.org/2.1/vocab/dimensionvector> ;
    vaem:latestPublishedVersion "http://www.qudt.org/doc/2021/12/DOC_VOCAB-QUANTITY-KIND-DIMENSION-VECTORS-v2.1.html"^^xsd:anyURI ;
    vaem:logo "http://www.linkedmodel.org/lib/lm/images/logos/qudt_logo-300x110.png" ;
    vaem:namespace "http://qudt.org/vocab/dimensionvector/" ;
    vaem:namespacePrefix "qkdv" ;
    vaem:owner "qudt.org" ;
    vaem:previousPublishedVersion "http://www.qudt.org/doc/2021/11/DOC_VOCAB-QUANTITY-KIND-DIMENSION-VECTORS-v2.1.html"^^xsd:anyURI ;
    vaem:revision "2.1" ;
    vaem:specificity 1 ;
    vaem:turtleFileURL "http://qudt.org/2.1/vocab/dimensionvector" ;
    vaem:usesNonImportedResource dc:contributor,
        dc:creator,
        dc:description,
        dc:rights,
        dc:subject,
        dc:title,
        dcterms:contributor,
        dcterms:created,
        dcterms:creator,
        dcterms:description,
        dcterms:modified,
        dcterms:rights,
        dcterms:subject,
        dcterms:title,
        voag:QUDT-Attribution,
        skos:closeMatch,
        skos:exactMatch ;
    vaem:withAttributionTo voag:QUDT-Attribution ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

vaem:GMD_QUDT-PREFIXES a vaem:GraphMetaData ;
    rdfs:label "Prefixes Vocabulary Version 2.1 Metadata" ;
    dcterms:contributor "Jack Hodges",
        "Ralph Hodgson",
        "Steve Ray" ;
    dcterms:created "2020-07-15"^^xsd:date ;
    dcterms:creator "Steve Ray" ;
    dcterms:modified "2021-12-13T09:26:04.442000-08:00"^^xsd:dateTime ;
    dcterms:rights "The QUDT Ontologies are issued under a Creative Commons Attribution 4.0 International License (CC BY 4.0), available at https://creativecommons.org/licenses/by/4.0/. Attribution should be made to QUDT.org" ;
    dcterms:subject "Prefixes" ;
    dcterms:title "Prefixes Version 2.1 Vocabulary" ;
    vaem:description "The Prefixes vocabulary defines the prefixes commonly prepended to units to connote multiplication, either decimal or binary." ;
    vaem:graphName "prefix" ;
    vaem:graphTitle "Prefixes Vocabulary Version 2.1.15" ;
    vaem:hasGraphRole vaem:VocabularyGraph ;
    vaem:hasOwner vaem:QUDT.org ;
    vaem:hasSteward vaem:QUDT.org ;
    vaem:intent "Provides a vocabulary of prefixes for both human and machine use" ;
    vaem:isMetadataFor <http://qudt.org/2.1/vocab/prefix> ;
    vaem:latestPublishedVersion "http://www.qudt.org/doc/2021/12/DOC_VOCAB-PREFIXES-v2.1.html"^^xsd:anyURI ;
    vaem:logo "http://www.linkedmodel.org/lib/lm/images/logos/qudt_logo-300x110.png"^^xsd:anyURI ;
    vaem:namespace "http://qudt.org/2.1/vocab/prefix/" ;
    vaem:namespacePrefix "prefix" ;
    vaem:owner "QUDT.org" ;
    vaem:previousPublishedVersion "http://www.qudt.org/doc/2021/11/DOC_VOCAB-PREFIXES-v2.1.html"^^xsd:anyURI ;
    vaem:revision "2.1" ;
    vaem:specificity 1 ;
    vaem:turtleFileURL "http://qudt.org/2.1/vocab/prefix"^^xsd:anyURI ;
    vaem:urlForHTML "http://qudt.org/2.1/vocab/prefix.html"^^xsd:anyURI ;
    vaem:usesNonImportedResource dcterms:abstract,
        dcterms:created,
        dcterms:creator,
        dcterms:modified,
        dcterms:title ;
    vaem:website "http://qudt.org/2.1/vocab/prefix.ttl"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/prefix> .

vaem:GMD_QUDT-QUANTITY-KINDS-ALL a vaem:GraphMetaData ;
    rdfs:label "QUDT Quantity Kinds Vocabulary Version 2.1.15" ;
    dcterms:contributor "Jack Hodges",
        "Steve Ray" ;
    dcterms:created "2019-08-01T16:25:54.850000+00:00"^^xsd:dateTime ;
    dcterms:creator "Ralph Hodgson",
        "Steve Ray" ;
    dcterms:description "Provides the set of all quantity kinds."^^rdf:HTML ;
    dcterms:modified "2021-12-13T09:12:33.592000-08:00"^^xsd:dateTime ;
    dcterms:rights "The QUDT Ontologies are issued under a Creative Commons Attribution 4.0 International License (CC BY 4.0), available at https://creativecommons.org/licenses/by/4.0/. Attribution should be made to QUDT.org" ;
    dcterms:subject "QUANTITY-KINDS-ALL" ;
    vaem:applicableDiscipline "All disciplines" ;
    vaem:applicableDomain "Science, Medicine and Engineering" ;
    vaem:dateCreated "2019-08-01T21:26:38"^^xsd:dateTime ;
    vaem:graphTitle "QUDT Quantity Kinds Version 2.1.15" ;
    vaem:hasGraphRole vaem:VocabularyGraph ;
    vaem:intent "TBD" ;
    vaem:isMetadataFor <http://qudt.org/2.1/vocab/quantitykind> ;
    vaem:latestPublishedVersion "http://www.qudt.org/doc/2021/12/DOC_VOCAB-QUANTITY-KINDS-ALL-v2.1.html"^^xsd:anyURI ;
    vaem:logo "http://www.linkedmodel.org/lib/lm/images/logos/qudt_logo-300x110.png" ;
    vaem:namespace "http://qudt.org/vocab/quantitykind/" ;
    vaem:namespacePrefix "quantitykind" ;
    vaem:owner "qudt.org" ;
    vaem:previousPublishedVersion "http://www.qudt.org/doc/2021/11/DOC_VOCAB-QUANTITY-KINDS-ALL-v2.1.html"^^xsd:anyURI ;
    vaem:revision "2.1" ;
    vaem:specificity 1 ;
    vaem:turtleFileURL "http://qudt.org/2.1/vocab/quantitykind" ;
    vaem:usesNonImportedResource dc:contributor,
        dc:creator,
        dc:description,
        dc:rights,
        dc:subject,
        dc:title,
        dcterms:contributor,
        dcterms:created,
        dcterms:creator,
        dcterms:description,
        dcterms:modified,
        dcterms:rights,
        dcterms:subject,
        dcterms:title,
        voag:QUDT-Attribution,
        voag:QUDT-QUANTITY-KINDS-VocabCatalogEntry_v1.2,
        voag2:QUDT-Attribution,
        skos:closeMatch,
        skos:exactMatch ;
    vaem:withAttributionTo voag:QUDT-Attribution,
        voag2:QUDT-Attribution ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

vaem:GMD_QUDT-SCHEMA-SHACL a vaem:GraphMetaData ;
    rdfs:label "QUDT Schema - Version 2.1.15" ;
    dcterms:contributor "Daniel Mekonnen",
        "David Price",
        "Jack Hodges",
        "James E. Masters",
        "Simon J D Cox",
        "Steve Ray" ;
    dcterms:created "2011-04-20"^^xsd:date ;
    dcterms:creator "Ralph Hodgson" ;
    dcterms:description """<p class="lm-para">The QUDT, or "Quantity, Unit, Dimension and Type" schema defines the base classes properties, and restrictions used for modeling physical quantities, units of measure, and their dimensions in various measurement systems. The goal of the QUDT ontology is to provide a unified model of, measurable quantities, units for measuring different kinds of quantities, the numerical values of quantities in different units of measure and the data structures and data types used to store and manipulate these objects in software.</p>

<p class="lm-para">Except for unit prefixes, all units are specified in separate vocabularies. Descriptions are provided in both HTML and LaTeX formats. A quantity is a measure of an observable phenomenon, that, when associated with something, becomes a property of that thing; a particular object, event, or physical system. </p>

<p class="lm-para">A quantity has meaning in the context of a measurement (i.e. the thing measured, the measured value, the accuracy of measurement, etc.) whereas the underlying quantity kind is independent of any particular measurement. Thus, length is a quantity kind while the height of a rocket is a specific quantity of length; its magnitude that may be expressed in meters, feet, inches, etc.  Or, as stated at Wikipedia, in the language of measurement, quantities are quantifiable aspects of the world, such as time, distance, velocity, mass, momentum, energy, and weight, and units are used to describe their measure. Many of these quantities are related to each other by various physical laws, and as a result the units of some of the quantities can be expressed as products (or ratios) of powers of other units (e.g., momentum is mass times velocity and velocity is measured in distance divided by time).</p>"""^^rdf:HTML ;
    dcterms:modified "2020-11-13T16:11:36.591000-08:00"^^xsd:dateTime ;
    dcterms:rights "The QUDT Ontologies are issued under a Creative Commons Attribution 4.0 International License (CC BY 4.0), available at https://creativecommons.org/licenses/by/4.0/. Attribution should be made to QUDT.org",
        """This product includes all or a portion of the UCUM table, UCUM codes, and UCUM definitions or is derived from it, subject to a license from Regenstrief Institute, Inc. and The UCUM Organization. Your use of the UCUM table, UCUM codes, UCUM definitions also is subject to this license, a copy of which is available at ​http://unitsofmeasure.org. The current complete UCUM table, UCUM Specification are available for download at ​http://unitsofmeasure.org. The UCUM table and UCUM codes are copyright © 1995-2009, Regenstrief Institute, Inc. and the Unified Codes for Units of Measures (UCUM) Organization. All rights reserved.

THE UCUM TABLE (IN ALL FORMATS), UCUM DEFINITIONS, AND SPECIFICATION ARE PROVIDED 'AS IS.' ANY EXPRESS OR IMPLIED WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.""" ;
    dcterms:subject "QUDT" ;
    dcterms:title "QUDT Schema - Version 2.1.15" ;
    qudt:informativeReference "http://unitsofmeasure.org/trac"^^xsd:anyURI,
        "http://www.bipm.org/en/publications/si-brochure"^^xsd:anyURI,
        "http://www.bipm.org/utils/common/documents/jcgm/JCGM_200_2008.pdf"^^xsd:anyURI,
        "https://books.google.com/books?id=pIlCAAAAIAAJ&dq=dimensional+analysis&hl=en"^^xsd:anyURI,
        "https://www.nist.gov/physical-measurement-laboratory/special-publication-811"^^xsd:anyURI ;
    vaem:graphName "qudt" ;
    vaem:graphTitle "Quantities, Units, Dimensions and Types (QUDT) Schema - Version 2.1.15" ;
    vaem:hasGraphRole vaem:SchemaGraph ;
    vaem:hasOwner vaem:QUDT ;
    vaem:hasSteward vaem:QUDT ;
    vaem:intent "Specifies the schema for quantities, units and dimensions. Types are defined in other schemas." ;
    vaem:isMetadataFor <http://qudt.org/2.1/schema/qudt> ;
    vaem:latestPublishedVersion "http://www.qudt.org/doc/2020/11/DOC_SCHEMA-QUDT-v2.1.html"^^xsd:anyURI ;
    vaem:logo "http://www.linkedmodel.org/lib/lm/images/logos/qudt_logo-300x110.png"^^xsd:anyURI ;
    vaem:namespace "http://qudt.org/schema/qudt/" ;
    vaem:namespacePrefix "qudt" ;
    vaem:owner "qudt.org" ;
    vaem:previousPublishedVersion "http://www.qudt.org/doc/2020/10/DOC_SCHEMA-QUDT-v2.1.html"^^xsd:anyURI ;
    vaem:revision "2.1" ;
    vaem:turtleFileURL "http://qudt.org/2.1/schema/qudt"^^xsd:anyURI ;
    vaem:usesNonImportedResource dcterms:abstract,
        dcterms:contributor,
        dcterms:created,
        dcterms:description,
        dcterms:modified,
        dcterms:rights,
        dcterms:source,
        dcterms:subject,
        dcterms:title,
        voag:QUDT-Attribution ;
    vaem:withAttributionTo voag:QUDT-Attribution ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    owl:versionIRI <http://qudt.org/2.1/schema/qudt> .

vaem:GMD_QUDT-SOU a vaem:GraphMetaData ;
    rdfs:label "QUDT Systems of Units Ontology Version 2.1.15" ;
    dcterms:contributor "Jack Hodges",
        "Steve Ray" ;
    dcterms:created "2016-07-04"^^xsd:date ;
    dcterms:creator "Ralph Hodgson" ;
    dcterms:description "QUDT Systems of Units Vocabulary Version 2.1.15" ;
    dcterms:modified "2021-12-13T09:26:28.555000-08:00"^^xsd:dateTime ;
    dcterms:rights "The QUDT Ontologies are issued under a Creative Commons Attribution 4.0 International License (CC BY 4.0), available at https://creativecommons.org/licenses/by/4.0/. Attribution should be made to QUDT.org" ;
    dcterms:subject "Systems of Units" ;
    dcterms:title "QUDT Systems of Units Ontology Version 2.1.15" ;
    vaem:graphTitle "Systems of Units Ontology Version 2.1.15" ;
    vaem:hasGraphRole vaem:VocabularyGraph ;
    vaem:hasOwner vaem:QUDT ;
    vaem:hasSteward vaem:QUDT ;
    vaem:intent "The intent of this graph is the specification of all Systems of Units" ;
    vaem:isMetadataFor <http://qudt.org/2.1/vocab/sou> ;
    vaem:latestPublishedVersion "http://www.qudt.org/doc/2021/12/DOC_VOCAB-SYSTEMS-OF-UNITS-v2.1.html"^^xsd:anyURI ;
    vaem:logo "http://www.linkedmodel.org/lib/lm/images/logos/qudt_logo-300x110.png"^^xsd:anyURI ;
    vaem:name "sou" ;
    vaem:namespace "http://qudt.org/vocab/sou/" ;
    vaem:namespacePrefix "sou" ;
    vaem:owner "qudt.org" ;
    vaem:previousPublishedVersion "http://www.qudt.org/doc/2021/11/DOC_VOCAB-SYSTEMS-OF-UNITS-v2.1.html"^^xsd:anyURI ;
    vaem:revision "2.1" ;
    vaem:turtleFileURL "http://qudt.org/2.1/vocab/sou"^^xsd:anyURI ;
    vaem:usesNonImportedResource prov:wasInfluencedBy,
        prov:wasInformedBy ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/sou> ;
    owl:versionIRI <http://qudt.org/2.1/vocab/sou> .

vaem:GMD_QUDT-UNITS-ALL a vaem:GraphMetaData ;
    rdfs:label "All Units Ontology Version 2.1.15" ;
    dcterms:contributor "Jack Hodges",
        "Simon J D Cox",
        "Steve Ray" ;
    dcterms:created "2019-07-30"^^xsd:date ;
    dcterms:creator "Steve Ray" ;
    dcterms:modified "2021-12-13T08:57:02.804000-08:00"^^xsd:dateTime ;
    dcterms:rights """
  This product includes all or a portion of the UCUM table, UCUM codes, and UCUM definitions or is derived from it, subject to a license from Regenstrief Institute, Inc. and The UCUM Organization. Your use of the UCUM table, UCUM codes, UCUM definitions also is subject to this license, a copy of which is available at ​http://unitsofmeasure.org. The current complete UCUM table, UCUM Specification are available for download at ​http://unitsofmeasure.org. The UCUM table and UCUM codes are copyright © 1995-2009, Regenstrief Institute, Inc. and the Unified Codes for Units of Measures (UCUM) Organization. All rights reserved.

THE UCUM TABLE (IN ALL FORMATS), UCUM DEFINITIONS, AND SPECIFICATION ARE PROVIDED 'AS IS.' ANY EXPRESS OR IMPLIED WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  """,
        "The QUDT Ontologies are issued under a Creative Commons Attribution 4.0 International License (CC BY 4.0), available at https://creativecommons.org/licenses/by/4.0/. Attribution should be made to QUDT.org" ;
    dcterms:subject "Units-All" ;
    dcterms:title "ALL UNITS Version 2.1.15 Graph Metadata" ;
    vaem:description "Standard units of measure for all units." ;
    vaem:graphName "qudt" ;
    vaem:graphTitle "All Units Ontology Version 2.1.15" ;
    vaem:hasGraphRole vaem:VocabularyGraph ;
    vaem:hasOwner vaem:QUDT.org ;
    vaem:hasSteward vaem:QUDT.org ;
    vaem:intent "To provide a vocabulary of all units." ;
    vaem:isMetadataFor <http://qudt.org/2.1/vocab/unit> ;
    vaem:latestPublishedVersion "http://www.qudt.org/doc/2021/12/DOC_VOCAB-UNITS-ALL-v2.1.html"^^xsd:anyURI ;
    vaem:logo "http://www.linkedmodel.org/lib/lm/images/logos/qudt_logo-300x110.png"^^xsd:anyURI ;
    vaem:namespace "http://qudt.org/vocab/unit/" ;
    vaem:namespacePrefix "unit" ;
    vaem:owner "QUDT.org" ;
    vaem:previousPublishedVersion "http://www.qudt.org/doc/2021/11/DOC_VOCAB-UNITS-ALL-v2.1.html"^^xsd:anyURI ;
    vaem:revision "2.1" ;
    vaem:turtleFileURL "http://qudt.org/2.1/vocab/unit"^^xsd:anyURI ;
    vaem:usesNonImportedResource dcterms:abstract,
        dcterms:created,
        dcterms:creator,
        dcterms:modified,
        dcterms:title ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

vaem:Viewpoint a owl:Class ;
    rdfs:label "ViewpointDimension"^^xsd:string ;
    dcterms:description "Viewpoint is used to denote how a set of resources, or an individual resource, is relevant to a context of use. The term \"viewpoint\" is adopted from the ISO RM-ODP specifications and its more recent use in enterprise architecture descriptions. The RM-ODP introducesd the concept of viewpoint to describe a system from a particular set of concerns. RM-ODP defines five viewpoints. Together they provide a complete description of a system: enterprise viewpoint, information viewpoint, computational viewpoint, engineering viewpoint, and technology viewpoint.  In VAEM, \"Viewpoint\" is used as a dimension for characterizing an ontology graph.  The viewpoints of an ontology may not always correpsond directly to those of a system but the idea of describing a subject area of interest from distinct viewpoints is still relevant. A viewpoint can be further distinguished by \"aspects\". For example the \"information viewpoint\" of an application can be partitioned into separate graphs for the \"security\", \"operational\" and\"data retention\" aspects."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:subClassOf vaem:Dimension .

vaem:date a owl:DatatypeProperty ;
    rdfs:label "date"^^xsd:string ;
    dcterms:description "The property \"vaem:date\" is intended for general use as the name implies.  The range of the property is set as \"vaem:dateUnion\" so as to allow a value to have a number of forms from a  year only to a full timestamp. The property is also the parent of all dates so that queries can be made for any date on an ontology"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> .

vaem:filePrefix a owl:DatatypeProperty ;
    rdfs:label "file prefix"^^xsd:string ;
    dcterms:description "The property \"vaem:filePrefix\" is for specifying a preferred file prefix for a graph. For example a schema graph may be given the file prefix \"SCHEMA\" followed by an underscore \"_\"."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:range xsd:string .

vaem:hasAspect a owl:ObjectProperty ;
    rdfs:label "has aspect "^^xsd:string ;
    dcterms:description "The property \"vaem:hasAspect\" is used to distinguish among sets of features of a domain or subject area. The term is borrowed from \"aspect-oriented\" programming, where it is used to separate concerns. An ontology may be characterized by this dimension so as to parition features that are orthogonal. For example,  in a systems ontology we can distinguish aspects for \"structure\", \"function\", \"behavior\" and \"interface\".  The property is an \"rdf:Property\" to allow both scalar and object values"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:subPropertyOf vaem:hasDimension .

vaem:hasDiscipline a owl:ObjectProperty ;
    rdfs:label "has discipline"^^xsd:string ;
    dcterms:description "The property \"vaem:hasDiscipline\" is used to indicate relevance of a set of resources, or a resource itself, to a specific discipline of work or study. Examples of disciplines in the engineering domain are electrical engineering, mechanical engineering and, in the financial domain, risk assessment, investment analysis.  In VAEM, the property is used as a dimension for characterizing an ontology graph.  The property is an \"rdf:Property\" to allow both scalar and object values"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:subPropertyOf vaem:hasDimension .

vaem:hasDomain a owl:ObjectProperty ;
    rdfs:label "has domain"^^xsd:string ;
    dcterms:description "The property \"vaem:hasDomain\" is used to specify how  a set of resources, or an individual resource is grounded in a domain, that is, a subject area of interest. Examples of domains are \"enterprise\", \"process\", \"organization\" and \"system\". In VAEM, the property is used as a dimension for characterizing an ontology graph. The property is an \"rdf:Property\" to allow both scalar and object values"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:subPropertyOf vaem:hasDimension .

vaem:hasGraphRole a owl:ObjectProperty ;
    rdfs:label "has graph role"^^xsd:string ;
    dcterms:description "The property \"lms:hasGraphRole\" is used to characterize how a resource participates in an ontology set.  The property is used to specify the role that a graph plays, for example, an ontology graph can be a schema, vocabulary, dataset, script, or ruleset"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:range vaem:GraphRole .

vaem:hasIdentifier a owl:ObjectProperty ;
    rdfs:label "has identifier"^^xsd:string ;
    dcterms:description "The property \"vaemhasIdentifier\" is intended for general use as a means to specifiy a unique reference to something. This is an object property that is a sub-property of \"vame:id\""^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> .

vaem:hasLicenseType a owl:ObjectProperty ;
    rdfs:label "has license type"@en-US ;
    dcterms:description "The property \"vaem:hasLicenseType\" points to an entry in the VOAG ontology for licenses"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> .

vaem:hasOwner a owl:ObjectProperty ;
    rdfs:label "has owner"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> .

vaem:hasViewpoint a owl:ObjectProperty ;
    rdfs:label "has viewpoint"^^xsd:string ;
    dcterms:description "The property \"vaem:hasViewpoint\" is used to denote how a set of resources, or an individual resource, is relevant to a context of use. The term \"viewpoint\" is adopted from the ISO RM-ODP specifications and its more recent use in enterprise architecture descriptions.  In VAEM, the property is used as a dimension for characterizing an ontology graph.  The property is an \"rdf:Property\" to allow both scalar and object values"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:subPropertyOf vaem:hasDimension .

vaem:id a owl:DatatypeProperty ;
    rdfs:label "id"^^xsd:string ;
    dcterms:description "The property \"vaem:id\" is intended for general use as a means to specifiy an identifier. The type of this property is intentionally set to \"rdf:Property\" so that use of the property can allow both object and scaler values.  For this reason, the property is rangeless"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> .

vaem:intent a owl:DatatypeProperty ;
    rdfs:label "intent"^^xsd:string ;
    dcterms:description "The property \"vaem:intent\" is used to outline  a statement of purpose. This typically expresses one or more desired outcomes"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:range xsd:string .

vaem:latestPublishedVersion a owl:DatatypeProperty ;
    rdfs:label "latest published version"^^xsd:string ;
    dcterms:description "The property \"vaem:latestPublishedVersion\"is a URL to documentation for the latest version of a graph."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:range xsd:anyURI .

vaem:namespace a owl:DatatypeProperty ;
    rdfs:label "namespace"^^xsd:string ;
    dcterms:description "The property \"vaem:namespace\" is the onotlogy URI with which a graph is primarily associated. The intent is to allow multiple graphs to define statements for resources in the same Ontology namespace. For example, a foundation level graph with the base URI of \"http://www.somesite.com/1.0/schema/OurOntology\"  may define general  concepts for \"OurOntology\". Another graph with the base URI \"http://www.somesite.com/1.0/schema/level2/OurOntology\"  may add more specific details to the same \"OurOntology\". Each of these two graphs would carry the same value for \"vaem:namespace\", that is, \"http://www.somesite.com/schema/OurOntology\".    In other words, an ontology URI is the URI associated with the resources of a controlled namespace. On the other hand the graph URIs (the base URIs) identify the graphs that hold resources that make up an ontology"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:range xsd:anyURI .

vaem:namespacePrefix a owl:DatatypeProperty ;
    rdfs:label "namespace prefix"^^xsd:string ;
    dcterms:description "The property \"vaem:namespacePrefix\" specifes a short handle or label for the URI of an Ontology.  Multiple graphs can define statements for resources in the same Ontololgy namespace. For example, a foundation level graph with the base URI of \"http://www.somesite.com/1.0/schema/OurOntology\"  may define general  concepts for \"OurOntology\". Another graph with the base URI \"http://www.somesite.com/1.0/schema/level2/OurOntology\"  may add more specific details to the same \"OurOntology\". Each of these two graphs would carry the same value for \"vaem:namespacePrefix\", for this example, perhaps, \"ourOntology\""^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:range xsd:string .

vaem:owner a owl:DatatypeProperty ;
    rdfs:label "owner"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:range xsd:string .

vaem:previousPublishedVersion a owl:DatatypeProperty ;
    rdfs:label "previous published version"^^xsd:string ;
    dcterms:description "The property \"vaem:previousPublishedVersion\"is a URL to documentation for the previous version of a graph."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:range xsd:anyURI .

vaem:rdfxmlFileURL a owl:DatatypeProperty ;
    rdfs:label "RDF/XML file URL"^^xsd:string ;
    dcterms:description "The property \"vaem:rdfxmlFileURL\" is used to provide a link to the location of the ontology's RDF/XML file"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:range xsd:anyURI .

vaem:revision a owl:DatatypeProperty ;
    rdfs:label "revision"^^xsd:string ;
    dcterms:description "The property \"vaem:revision\" is a property intended for general use as the name implies."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:range xsd:string .

vaem:specificity a owl:DatatypeProperty ;
    rdfs:label "specificity"^^xsd:string ;
    dcterms:description "The property \"vaem:specificity\" is intended to specify the level of detail of an ontology.  The values that can be set for this property are restriced to an integer from 1 to 5. An ontology at level 1 has concepts of more general applicability than one at level 5. By having graphs at different levels of specificity it is possible to support greater modularity for selective imports"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:range xsd:nonNegativeInteger .

vaem:turtleFileURL a owl:DatatypeProperty ;
    rdfs:label "turtle file URL"^^xsd:string ;
    dcterms:description "The property \"vaem:turtleFileURL\" is used to provide a link to the location of the ontology's turtle file"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:range xsd:anyURI .

skos:OrderedCollection a owl:Class ;
    rdfs:label "Ordered Collection"@en ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    rdfs:subClassOf skos:Collection ;
    skos:definition "An ordered collection of concepts, where both the grouping and the ordering are meaningful."@en ;
    skos:scopeNote "Ordered collections can be used where you would like a set of concepts to be displayed in a specific order, and optionally under a 'node label'."@en .

skos:broadMatch a rdf:Property,
        owl:ObjectProperty ;
    rdfs:label "has broader match"@en ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    rdfs:subPropertyOf skos:broader,
        skos:mappingRelation ;
    owl:inverseOf skos:narrowMatch ;
    skos:definition "skos:broadMatch is used to state a hierarchical mapping link between two conceptual resources in different concept schemes."@en .

skos:hasTopConcept a rdf:Property,
        owl:ObjectProperty ;
    rdfs:label "has top concept"@en ;
    rdfs:domain skos:ConceptScheme ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    rdfs:range skos:Concept ;
    owl:inverseOf skos:topConceptOf ;
    skos:definition "Relates, by convention, a concept scheme to a concept which is topmost in the broader/narrower concept hierarchies for that scheme, providing an entry point to these hierarchies."@en .

skos:inScheme a rdf:Property,
        owl:ObjectProperty ;
    rdfs:label "is in scheme"@en ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    rdfs:range skos:ConceptScheme ;
    skos:definition "Relates a resource (for example a concept) to a concept scheme in which it is included."@en ;
    skos:scopeNote "A concept may be a member of more than one concept scheme."@en .

skos:narrowMatch a rdf:Property,
        owl:ObjectProperty ;
    rdfs:label "has narrower match"@en ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    rdfs:subPropertyOf skos:mappingRelation,
        skos:narrower ;
    owl:inverseOf skos:broadMatch ;
    skos:definition "skos:narrowMatch is used to state a hierarchical mapping link between two conceptual resources in different concept schemes."@en .

skos:notation a rdf:Property,
        owl:DatatypeProperty ;
    rdfs:label "notation"@en ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    skos:definition "A notation, also known as classification code, is a string of characters such as \"T58.5\" or \"303.4833\" used to uniquely identify a concept within the scope of a given concept scheme."@en ;
    skos:scopeNote "By convention, skos:notation is used with a typed literal in the object position of the triple."@en .

skos:related a rdf:Property,
        owl:ObjectProperty,
        owl:SymmetricProperty ;
    rdfs:label "has related"@en ;
    rdfs:comment "skos:related is disjoint with skos:broaderTransitive"@en ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    rdfs:subPropertyOf skos:semanticRelation ;
    skos:definition "Relates a concept to a concept with which there is an associative semantic relationship."@en .

skos:topConceptOf a rdf:Property,
        owl:ObjectProperty ;
    rdfs:label "is top concept in scheme"@en ;
    rdfs:domain skos:Concept ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    rdfs:range skos:ConceptScheme ;
    rdfs:subPropertyOf skos:inScheme ;
    owl:inverseOf skos:hasTopConcept ;
    skos:definition "Relates a concept to the concept scheme that it is a top level concept of."@en .

time:TemporalEntity a owl:Class .

vcard:Address a owl:Class .

vcard:hasAddress a owl:ObjectProperty .

sh:AndConstraintComponent-and a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:path sh:and .

sh:BlankNode a sh:NodeKind ;
    rdfs:label "Blank node"@en ;
    rdfs:comment "The node kind of all blank nodes."@en ;
    rdfs:isDefinedBy sh: .

sh:BlankNodeOrIRI a sh:NodeKind ;
    rdfs:label "Blank node or IRI"@en ;
    rdfs:comment "The node kind of all blank nodes or IRIs."@en ;
    rdfs:isDefinedBy sh: .

sh:BlankNodeOrLiteral a sh:NodeKind ;
    rdfs:label "Blank node or literal"@en ;
    rdfs:comment "The node kind of all blank nodes or literals."@en ;
    rdfs:isDefinedBy sh: .

sh:ClassConstraintComponent-class a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:nodeKind sh:IRI ;
    sh:path sh:class .

sh:ClosedConstraintComponent-closed a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:datatype xsd:boolean ;
    sh:path sh:closed .

sh:ClosedConstraintComponent-ignoredProperties a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:optional true ;
    sh:path sh:ignoredProperties .

sh:DatatypeConstraintComponent-datatype a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:maxCount 1 ;
    sh:nodeKind sh:IRI ;
    sh:path sh:datatype .

sh:DisjointConstraintComponent-disjoint a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:nodeKind sh:IRI ;
    sh:path sh:disjoint .

sh:EqualsConstraintComponent-equals a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:nodeKind sh:IRI ;
    sh:path sh:equals .

sh:ExpressionConstraintComponent-expression a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:path sh:expression .

sh:HasValueConstraintComponent-hasValue a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:path sh:hasValue .

sh:IRIOrLiteral a sh:NodeKind ;
    rdfs:label "IRI or literal"@en ;
    rdfs:comment "The node kind of all IRIs or literals."@en ;
    rdfs:isDefinedBy sh: .

sh:InConstraintComponent-in a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:maxCount 1 ;
    sh:path sh:in .

sh:JSConstraint-js a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:path sh:js .

sh:LanguageInConstraintComponent-languageIn a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:maxCount 1 ;
    sh:path sh:languageIn .

sh:LessThanConstraintComponent-lessThan a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:nodeKind sh:IRI ;
    sh:path sh:lessThan .

sh:LessThanOrEqualsConstraintComponent-lessThanOrEquals a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:nodeKind sh:IRI ;
    sh:path sh:lessThanOrEquals .

sh:MaxCountConstraintComponent-maxCount a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:datatype xsd:integer ;
    sh:maxCount 1 ;
    sh:path sh:maxCount .

sh:MaxExclusiveConstraintComponent-maxExclusive a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:maxCount 1 ;
    sh:nodeKind sh:Literal ;
    sh:path sh:maxExclusive .

sh:MaxInclusiveConstraintComponent-maxInclusive a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:maxCount 1 ;
    sh:nodeKind sh:Literal ;
    sh:path sh:maxInclusive .

sh:MaxLengthConstraintComponent-maxLength a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:datatype xsd:integer ;
    sh:maxCount 1 ;
    sh:path sh:maxLength .

sh:MinCountConstraintComponent-minCount a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:datatype xsd:integer ;
    sh:maxCount 1 ;
    sh:path sh:minCount .

sh:MinExclusiveConstraintComponent-minExclusive a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:maxCount 1 ;
    sh:nodeKind sh:Literal ;
    sh:path sh:minExclusive .

sh:MinInclusiveConstraintComponent-minInclusive a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:maxCount 1 ;
    sh:nodeKind sh:Literal ;
    sh:path sh:minInclusive .

sh:MinLengthConstraintComponent-minLength a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:datatype xsd:integer ;
    sh:maxCount 1 ;
    sh:path sh:minLength .

sh:NodeConstraintComponent-node a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:path sh:node .

sh:NodeKindConstraintComponent-nodeKind a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ;
    sh:maxCount 1 ;
    sh:path sh:nodeKind .

sh:NotConstraintComponent-not a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:path sh:not .

sh:OrConstraintComponent-or a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:path sh:or .

sh:PatternConstraintComponent-flags a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:datatype xsd:string ;
    sh:optional true ;
    sh:path sh:flags .

sh:PatternConstraintComponent-pattern a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:datatype xsd:string ;
    sh:path sh:pattern .

sh:PropertyConstraintComponent-property a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:path sh:property .

sh:QualifiedMaxCountConstraintComponent-qualifiedMaxCount a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:datatype xsd:integer ;
    sh:path sh:qualifiedMaxCount .

sh:QualifiedMaxCountConstraintComponent-qualifiedValueShape a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:path sh:qualifiedValueShape .

sh:QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:datatype xsd:boolean ;
    sh:optional true ;
    sh:path sh:qualifiedValueShapesDisjoint .

sh:QualifiedMinCountConstraintComponent-qualifiedMinCount a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:datatype xsd:integer ;
    sh:path sh:qualifiedMinCount .

sh:QualifiedMinCountConstraintComponent-qualifiedValueShape a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:path sh:qualifiedValueShape .

sh:QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:datatype xsd:boolean ;
    sh:optional true ;
    sh:path sh:qualifiedValueShapesDisjoint .

sh:SPARQLConstraintComponent-sparql a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:path sh:sparql .

sh:UniqueLangConstraintComponent-uniqueLang a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:datatype xsd:boolean ;
    sh:maxCount 1 ;
    sh:path sh:uniqueLang .

sh:Warning a sh:Severity ;
    rdfs:label "Warning"@en ;
    rdfs:comment "The severity for a warning validation result."@en ;
    rdfs:isDefinedBy sh: .

sh:XoneConstraintComponent-xone a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:path sh:xone .

sh:and a rdf:Property ;
    rdfs:label "and"@en ;
    rdfs:comment "RDF list of shapes to validate the value nodes against."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdf:List .

sh:class a rdf:Property ;
    rdfs:label "class"@en ;
    rdfs:comment "The type that all value nodes must have."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdfs:Class .

sh:closed a rdf:Property ;
    rdfs:label "closed"@en ;
    rdfs:comment "If set to true then the shape is closed."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:boolean .

sh:datatype a rdf:Property ;
    rdfs:label "datatype"@en ;
    rdfs:comment "Specifies an RDF datatype that all value nodes must have."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdfs:Datatype .

sh:disjoint a rdf:Property ;
    rdfs:label "disjoint"@en ;
    rdfs:comment "Specifies a property where the set of values must be disjoint with the value nodes."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdf:Property .

sh:equals a rdf:Property ;
    rdfs:label "equals"@en ;
    rdfs:comment "Specifies a property that must have the same values as the value nodes."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdf:Property .

sh:expression a rdf:Property ;
    rdfs:label "expression"@en ;
    rdfs:comment "The node expression that must return true for the value nodes."@en ;
    rdfs:isDefinedBy sh: .

sh:flags a rdf:Property ;
    rdfs:label "flags"@en ;
    rdfs:comment "An optional flag to be used with regular expression pattern matching."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:string .

sh:hasValue a rdf:Property ;
    rdfs:label "has value"@en ;
    rdfs:comment "Specifies a value that must be among the value nodes."@en ;
    rdfs:isDefinedBy sh: .

sh:ignoredProperties a rdf:Property ;
    rdfs:label "ignored properties"@en ;
    rdfs:comment "An optional RDF list of properties that are also permitted in addition to those explicitly enumerated via sh:property/sh:path."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdf:List .

sh:in a rdf:Property ;
    rdfs:label "in"@en ;
    rdfs:comment "Specifies a list of allowed values so that each value node must be among the members of the given list."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdf:List .

sh:js a rdf:Property ;
    rdfs:label "JavaScript constraint"@en ;
    rdfs:comment "Constraints expressed in JavaScript." ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:JSConstraint .

sh:languageIn a rdf:Property ;
    rdfs:label "language in"@en ;
    rdfs:comment "Specifies a list of language tags that all value nodes must have."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdf:List .

sh:lessThan a rdf:Property ;
    rdfs:label "less than"@en ;
    rdfs:comment "Specifies a property that must have smaller values than the value nodes."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdf:Property .

sh:lessThanOrEquals a rdf:Property ;
    rdfs:label "less than or equals"@en ;
    rdfs:comment "Specifies a property that must have smaller or equal values than the value nodes."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdf:Property .

sh:maxCount a rdf:Property ;
    rdfs:label "max count"@en ;
    rdfs:comment "Specifies the maximum number of values in the set of value nodes."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:integer .

sh:maxExclusive a rdf:Property ;
    rdfs:label "max exclusive"@en ;
    rdfs:comment "Specifies the maximum exclusive value of each value node."@en ;
    rdfs:isDefinedBy sh: .

sh:maxInclusive a rdf:Property ;
    rdfs:label "max inclusive"@en ;
    rdfs:comment "Specifies the maximum inclusive value of each value node."@en ;
    rdfs:isDefinedBy sh: .

sh:maxLength a rdf:Property ;
    rdfs:label "max length"@en ;
    rdfs:comment "Specifies the maximum string length of each value node."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:integer .

sh:minCount a rdf:Property ;
    rdfs:label "min count"@en ;
    rdfs:comment "Specifies the minimum number of values in the set of value nodes."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:integer .

sh:minExclusive a rdf:Property ;
    rdfs:label "min exclusive"@en ;
    rdfs:comment "Specifies the minimum exclusive value of each value node."@en ;
    rdfs:isDefinedBy sh: .

sh:minInclusive a rdf:Property ;
    rdfs:label "min inclusive"@en ;
    rdfs:comment "Specifies the minimum inclusive value of each value node."@en ;
    rdfs:isDefinedBy sh: .

sh:minLength a rdf:Property ;
    rdfs:label "min length"@en ;
    rdfs:comment "Specifies the minimum string length of each value node."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:integer .

sh:node a rdf:Property ;
    rdfs:label "node"@en ;
    rdfs:comment "Specifies the node shape that all value nodes must conform to."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:NodeShape .

sh:nodeKind a rdf:Property ;
    rdfs:label "node kind"@en ;
    rdfs:comment "Specifies the node kind (e.g. IRI or literal) each value node."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:NodeKind .

sh:not a rdf:Property ;
    rdfs:label "not"@en ;
    rdfs:comment "Specifies a shape that the value nodes must not conform to."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:Shape .

sh:or a rdf:Property ;
    rdfs:label "or"@en ;
    rdfs:comment "Specifies a list of shapes so that the value nodes must conform to at least one of the shapes."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdf:List .

sh:pattern a rdf:Property ;
    rdfs:label "pattern"@en ;
    rdfs:comment "Specifies a regular expression pattern that the string representations of the value nodes must match."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:string .

sh:qualifiedMaxCount a rdf:Property ;
    rdfs:label "qualified max count"@en ;
    rdfs:comment "The maximum number of value nodes that can conform to the shape."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:integer .

sh:qualifiedMinCount a rdf:Property ;
    rdfs:label "qualified min count"@en ;
    rdfs:comment "The minimum number of value nodes that must conform to the shape."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:integer .

sh:sparql a rdf:Property ;
    rdfs:label "constraint (in SPARQL)"@en ;
    rdfs:comment "Links a shape with SPARQL constraints."@en ;
    rdfs:domain sh:Shape ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:SPARQLConstraint .

sh:uniqueLang a rdf:Property ;
    rdfs:label "unique languages"@en ;
    rdfs:comment "Specifies whether all node values must have a unique (or no) language tag."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:boolean .

sh:xone a rdf:Property ;
    rdfs:label "exactly one"@en ;
    rdfs:comment "Specifies a list of shapes so that the value nodes must conform to exactly one of the shapes."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdf:List .

sosa:actsOnProperty a owl:ObjectProperty ;
    rdfs:label "acts on property"@en ;
    sdo1:domainIncludes sosa:Actuation ;
    sdo1:rangeIncludes sosa:ActuatableProperty ;
    rdfs:comment "Relation between an Actuation and the property of a FeatureOfInterest it is acting upon."@en ;
    rdfs:isDefinedBy sosa: ;
    owl:inverseOf sosa:isActedOnBy ;
    skos:definition "Relation between an Actuation and the property of a FeatureOfInterest it is acting upon."@en ;
    skos:example "In the activity (Actuation) of automatically closing a window if the temperature in a room drops below 20 degrees Celsius, the property on which the Actuator acts upon is the state of the window as it changes from being open to being closed. "@en .

sosa:hasFeatureOfInterest a owl:ObjectProperty ;
    rdfs:label "has feature of interest"@en ;
    sdo1:domainIncludes sosa:Actuation,
        sosa:Observation,
        sosa:Sampling ;
    sdo1:rangeIncludes sosa:FeatureOfInterest,
        sosa:Sample ;
    rdfs:comment "A relation between an Observation and the entity whose quality was observed, or between an Actuation and the entity whose property was modified, or between an act of Sampling and the entity that was sampled."@en ;
    rdfs:isDefinedBy sosa: ;
    owl:inverseOf sosa:isFeatureOfInterestOf ;
    skos:definition "A relation between an Observation and the entity whose quality was observed, or between an Actuation and the entity whose property was modified, or between an act of Sampling and the entity that was sampled."@en ;
    skos:example "For example, in an Observation of the weight of a person, the FeatureOfInterest is the person and the property is its weight."@en .

sosa:hasResult a owl:ObjectProperty ;
    rdfs:label "has result"@en ;
    sdo1:domainIncludes sosa:Actuation,
        sosa:Observation,
        sosa:Sampling ;
    sdo1:rangeIncludes sosa:Result,
        sosa:Sample ;
    rdfs:comment "Relation linking an Observation or Actuation or act of Sampling and a Result or Sample."@en ;
    rdfs:isDefinedBy sosa: ;
    owl:inverseOf sosa:isResultOf ;
    skos:definition "Relation linking an Observation or Actuation or act of Sampling and a Result or Sample."@en .

sosa:hasSample a owl:ObjectProperty ;
    rdfs:label "has sample"@en ;
    sdo1:domainIncludes sosa:FeatureOfInterest ;
    sdo1:rangeIncludes sosa:Sample ;
    rdfs:comment "Relation between a FeatureOfInterest and the Sample used to represent it."@en ;
    rdfs:isDefinedBy sosa: ;
    owl:inverseOf sosa:isSampleOf ;
    skos:definition "Relation between a FeatureOfInterest and the Sample used to represent it."@en .

sosa:hosts a owl:ObjectProperty ;
    rdfs:label "hosts"@en ;
    sdo1:domainIncludes sosa:Platform ;
    sdo1:rangeIncludes sosa:Actuator,
        sosa:Platform,
        sosa:Sampler,
        sosa:Sensor ;
    rdfs:comment "Relation between a Platform and a Sensor, Actuator, Sampler, or Platform, hosted or mounted on it."@en ;
    rdfs:isDefinedBy sosa: ;
    owl:inverseOf sosa:isHostedBy ;
    skos:definition "Relation between a Platform and a Sensor, Actuator, Sampler, or Platform, hosted or mounted on it."@en .

sosa:isActedOnBy a owl:ObjectProperty ;
    rdfs:label "is acted on by"@en ;
    sdo1:domainIncludes sosa:ActuatableProperty ;
    sdo1:rangeIncludes sosa:Actuation ;
    rdfs:comment "Relation between an ActuatableProperty of a FeatureOfInterest and an Actuation changing its state."@en ;
    rdfs:isDefinedBy sosa: ;
    owl:inverseOf sosa:actsOnProperty ;
    skos:definition "Relation between an ActuatableProperty of a FeatureOfInterest and an Actuation changing its state."@en ;
    skos:example "In the activity (Actuation) of automatically closing a window if the temperature in a room drops below 20 degrees Celsius, the property on which the Actuator acts upon is the state of the window as it changes from being open to being closed. "@en .

sosa:isFeatureOfInterestOf a owl:ObjectProperty ;
    rdfs:label "is feature of interest of"@en ;
    sdo1:domainIncludes sosa:FeatureOfInterest,
        sosa:Sample ;
    sdo1:rangeIncludes sosa:Actuation,
        sosa:Observation,
        sosa:Sampling ;
    rdfs:comment "A relation between a FeatureOfInterest and an Observation about it, an Actuation acting on it, or an act of Sampling that sampled it."@en ;
    rdfs:isDefinedBy sosa: ;
    owl:inverseOf sosa:hasFeatureOfInterest ;
    skos:definition "A relation between a FeatureOfInterest and an Observation about it, an Actuation acting on it, or an act of Sampling that sampled it."@en .

sosa:isHostedBy a owl:ObjectProperty ;
    rdfs:label "is hosted by"@en ;
    sdo1:domainIncludes sosa:Actuator,
        sosa:Platform,
        sosa:Sampler,
        sosa:Sensor ;
    sdo1:rangeIncludes sosa:Platform ;
    rdfs:comment "Relation between a Sensor, Actuator, Sampler, or Platform, and the Platform that it is mounted on or hosted by."@en ;
    rdfs:isDefinedBy sosa: ;
    owl:inverseOf sosa:hosts ;
    skos:definition "Relation between a Sensor, Actuator, Sampler, or Platform, and the Platform that it is mounted on or hosted by."@en .

sosa:isObservedBy a owl:ObjectProperty ;
    rdfs:label "is observed by"@en ;
    sdo1:domainIncludes sosa:ObservableProperty ;
    sdo1:rangeIncludes sosa:Sensor ;
    rdfs:comment "Relation between an ObservableProperty and the Sensor able to observe it."@en ;
    rdfs:isDefinedBy sosa: ;
    owl:inverseOf sosa:observes ;
    skos:definition "Relation between an ObservableProperty and the Sensor able to observe it."@en .

sosa:isResultOf a owl:ObjectProperty ;
    rdfs:label "is result of"@en ;
    sdo1:domainIncludes sosa:Result,
        sosa:Sample ;
    sdo1:rangeIncludes sosa:Actuation,
        sosa:Observation,
        sosa:Sampling ;
    rdfs:comment "Relation linking a Result to the Observation or Actuation or act of Sampling that created or caused it."@en ;
    rdfs:isDefinedBy sosa: ;
    owl:inverseOf sosa:hasResult ;
    skos:definition "Relation linking a Result to the Observation or Actuation or act of Sampling that created or caused it."@en .

sosa:isSampleOf a owl:ObjectProperty ;
    rdfs:label "is sample of"@en ;
    sdo1:domainIncludes sosa:Sample ;
    sdo1:rangeIncludes sosa:FeatureOfInterest ;
    rdfs:comment "Relation from a Sample to the FeatureOfInterest that it is intended to be representative of."@en ;
    rdfs:isDefinedBy sosa: ;
    owl:inverseOf sosa:hasSample ;
    skos:definition "Relation from a Sample to the FeatureOfInterest that it is intended to be representative of."@en .

sosa:madeActuation a owl:ObjectProperty ;
    rdfs:label "made actuation"@en ;
    sdo1:domainIncludes sosa:Actuator ;
    sdo1:rangeIncludes sosa:Actuation ;
    rdfs:comment "Relation between an Actuator and the Actuation it has made."@en ;
    rdfs:isDefinedBy sosa: ;
    owl:inverseOf sosa:madeByActuator ;
    skos:definition "Relation between an Actuator and the Actuation it has made."@en .

sosa:madeByActuator a owl:ObjectProperty ;
    rdfs:label "made by actuator"@en ;
    sdo1:domainIncludes sosa:Actuation ;
    sdo1:rangeIncludes sosa:Actuator ;
    rdfs:comment "Relation linking an Actuation to the Actuator that made that Actuation."@en ;
    rdfs:isDefinedBy sosa: ;
    owl:inverseOf sosa:madeActuation ;
    skos:definition "Relation linking an Actuation to the Actuator that made that Actuation."@en .

sosa:madeBySampler a owl:ObjectProperty ;
    rdfs:label "made by sampler"@en ;
    sdo1:domainIncludes sosa:Sampling ;
    sdo1:rangeIncludes sosa:Sampler ;
    rdfs:comment "Relation linking an act of Sampling to the Sampler (sampling device or entity) that made it."@en ;
    rdfs:isDefinedBy sosa: ;
    owl:inverseOf sosa:madeSampling ;
    skos:definition "Relation linking an act of Sampling to the Sampler (sampling device or entity) that made it."@en .

sosa:madeBySensor a owl:ObjectProperty ;
    rdfs:label "made by sensor"@en ;
    sdo1:domainIncludes sosa:Observation ;
    sdo1:rangeIncludes sosa:Sensor ;
    rdfs:comment "Relation between an Observation and the Sensor which made the Observation."@en ;
    rdfs:isDefinedBy sosa: ;
    owl:inverseOf sosa:madeObservation ;
    skos:definition "Relation between an Observation and the Sensor which made the Observation."@en .

sosa:madeObservation a owl:ObjectProperty ;
    rdfs:label "made observation"@en ;
    sdo1:domainIncludes sosa:Sensor ;
    sdo1:rangeIncludes sosa:Observation ;
    rdfs:comment "Relation between a Sensor and an Observation made by the Sensor."@en ;
    rdfs:isDefinedBy sosa: ;
    owl:inverseOf sosa:madeBySensor ;
    skos:definition "Relation between a Sensor and an Observation made by the Sensor."@en .

sosa:madeSampling a owl:ObjectProperty ;
    rdfs:label "made sampling"@en ;
    sdo1:domainIncludes sosa:Sampler ;
    sdo1:rangeIncludes sosa:Sampling ;
    rdfs:comment "Relation between a Sampler (sampling device or entity) and the Sampling act it performed."@en ;
    rdfs:isDefinedBy sosa: ;
    owl:inverseOf sosa:madeBySampler ;
    skos:definition "Relation between a Sampler (sampling device or entity) and the Sampling act it performed."@en .

sosa:observes a owl:ObjectProperty ;
    rdfs:label "observes"@en ;
    sdo1:domainIncludes sosa:Sensor ;
    sdo1:rangeIncludes sosa:ObservableProperty ;
    rdfs:comment "Relation between a Sensor and an ObservableProperty that it is capable of sensing."@en ;
    rdfs:isDefinedBy sosa: ;
    owl:inverseOf sosa:isObservedBy ;
    skos:definition "Relation between a Sensor and an ObservableProperty that it is capable of sensing."@en .

foaf:Agent a owl:Class .

ifc:Project a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            skos:definition "The ID of the project" ;
            sh:datatype xsd:string ;
            sh:minCount 1 ;
            sh:path ifc:projectID ],
        [ a sh:PropertyShape ;
            skos:definition "Location of the IFC file defining the project" ;
            sh:datatype xsd:string ;
            sh:path ifc:fileLocation ] .

ifc:fileLocation a owl:DatatypeProperty .

ifc:globalID a owl:DatatypeProperty .

ifc:hasProjectReference a owl:ObjectProperty .

ifc:name a owl:DatatypeProperty .

ifc:projectID a owl:DatatypeProperty .

brick:AED a owl:Class,
        sh:NodeShape ;
    rdfs:label "AED" ;
    rdfs:subClassOf brick:Safety_Equipment ;
    owl:equivalentClass brick:Automated_External_Defibrillator ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:AED ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Defibrillator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:AED,
        tag:Defibrillator,
        tag:Equipment,
        tag:Safety .

brick:Access_Control_Equipment a owl:Class,
        sh:NodeShape ;
    rdfs:label "Access Control Equipment" ;
    rdfs:subClassOf brick:Security_Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Access ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Control ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Security ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Access,
        tag:Control,
        tag:Equipment,
        tag:Security .

brick:Adjust_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Adjust Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures user-provided adjustment of some value"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Adjust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Adjust,
        tag:Point,
        tag:Sensor .

brick:AggregationShape a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            skos:definition "The aggregation function applied to data in the interval which produces the value" ;
            sh:in ( "max" "min" "count" "mean" "sum" "median" "mode" ) ;
            sh:minCount 1 ;
            sh:path brick:aggregationFunction ],
        [ a sh:PropertyShape ;
            skos:definition "Interval expressed in an ISO 8601 Duration string, e.g. RP1D" ;
            sh:datatype xsd:string ;
            sh:minCount 1 ;
            sh:path brick:aggregationInterval ] .

brick:Air_Flow_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Flow Deadband Setpoint" ;
    rdfs:subClassOf brick:Air_Flow_Setpoint,
        brick:Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of air flow"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Deadband,
        tag:Flow,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Air .

brick:Air_Handler_Unit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Handler Unit" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    owl:equivalentClass brick:AHU,
        brick:Air_Handling_Unit ;
    skos:definition "Assembly consisting of sections containing a fan or fans and other necessary equipment to perform one or more of the following functions: circulating, filtration, heating, cooling, heat recovery, humidifying, dehumidifying, and mixing of air. Is usually connected to an air-distribution system."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Handler ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Equipment,
        tag:Handler,
        tag:Unit .

brick:Air_Handling_Unit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Handling Unit" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    owl:equivalentClass brick:AHU,
        brick:Air_Handler_Unit ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Handling ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Equipment,
        tag:Handling,
        tag:Unit .

brick:Air_Static_Pressure_Step_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Static Pressure Step Parameter" ;
    rdfs:subClassOf brick:Static_Pressure_Step_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Step ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Static,
        tag:Step .

brick:Air_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air System" ;
    rdfs:subClassOf brick:Heating_Ventilation_Air_Conditioning_System ;
    skos:definition "The equipment, distribution systems and terminals that introduce or exhaust, either collectively or individually, the air into and from the building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:System .

brick:Air_Wet_Bulb_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Wet Bulb Temperature Sensor" ;
    rdfs:subClassOf brick:Air_Temperature_Sensor,
        brick:Temperature_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Bulb ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Wet ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Bulb,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Wet ;
    brick:hasQuantity brick:Wet_Bulb_Temperature ;
    brick:hasSubstance brick:Air .

brick:Angle a brick:Quantity ;
    rdfs:label "Angle" ;
    qudt:applicableUnit unit:ARCMIN,
        unit:ARCSEC,
        unit:DEG,
        unit:GON,
        unit:GRAD,
        unit:MIL,
        unit:MIN_Angle,
        unit:MicroRAD,
        unit:MilliARCSEC,
        unit:MilliRAD,
        unit:RAD,
        unit:REV ;
    skos:definition "The inclination to each other of two intersecting lines, measured by the arc of a circle intercepted between the two lines forming the angle, the center of the circle being the point of intersection.  An acute angle is less than (90^\\circ), a right angle (90^\\circ); an obtuse angle, more than (90^\\circ) but less than (180^\\circ); a straight angle, (180^\\circ); a reflex angle, more than (180^\\circ) but less than (360^\\circ); a perigon, (360^\\circ). Any angle not a multiple of (90^\\circ) is an oblique angle. If the sum of two angles is (90^\\circ), they are complementary angles; if (180^\\circ), supplementary angles; if (360^\\circ), explementary angles."@en ;
    brick:hasQUDTReference quantitykind:Angle .

brick:Automated_External_Defibrillator a owl:Class,
        sh:NodeShape ;
    rdfs:label "Automated External Defibrillator" ;
    rdfs:subClassOf brick:Safety_Equipment ;
    owl:equivalentClass brick:AED ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:AED ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Defibrillator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:AED,
        tag:Defibrillator,
        tag:Equipment,
        tag:Safety .

brick:Average_Discharge_Air_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Average Discharge Air Flow Sensor" ;
    rdfs:subClassOf brick:Discharge_Air_Flow_Sensor ;
    skos:definition "The computed average flow of discharge air over some interval"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Average ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Average,
        tag:Discharge,
        tag:Flow,
        tag:Point,
        tag:Sensor .

brick:AzimuthShape a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:ARCMIN unit:ARCSEC unit:DEG unit:GON unit:GRAD unit:MIL unit:MIN_Angle unit:MicroRAD unit:MilliARCSEC unit:MilliRAD unit:RAD unit:REV ) ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:maxInclusive 360 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

brick:BACnetReference a owl:Class,
        sh:NodeShape ;
    sh:or ( [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:path bacnet:object-type ],
                    [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:path bacnet:description ],
                    [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:defaultValue "present-value" ;
                        sh:path brick:read-property ],
                    [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path bacnet:object-identifier ],
                    [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:minLength 1 ;
                        sh:path bacnet:object-name ] ] [ sh:property [ a sh:PropertyShape ;
                        skos:definition "Clause Q.8 BACnet URI scheme: bacnet:// <device> / <object> [ / <property> [ / <index> ]]" ;
                        sh:datatype xsd:string ;
                        sh:path brick:BACnetURI ] ] ) ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDevice ;
            sh:minCount 1 ;
            sh:path bacnet:objectOf ] .

brick:BACnetURI a owl:DatatypeProperty .

brick:Blowdown_Water a owl:Class,
        sh:NodeShape,
        brick:Blowdown_Water ;
    rdfs:label "Blowdown Water" ;
    rdfs:subClassOf brick:Water ;
    skos:definition "Water expelled from a system to remove mineral build up"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Blowdown ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Blowdown,
        tag:Fluid,
        tag:Liquid,
        tag:Water .

brick:Break_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Break Room" ;
    rdfs:subClassOf brick:Room ;
    owl:equivalentClass brick:Breakroom ;
    skos:definition "A space for people to relax while not working"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Break ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Break,
        tag:Location,
        tag:Room,
        tag:Space .

brick:Breakroom a owl:Class,
        sh:NodeShape ;
    rdfs:label "Breakroom" ;
    rdfs:subClassOf brick:Room ;
    owl:equivalentClass brick:Break_Room ;
    skos:definition "A space for people to relax while not working"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Breakroom ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Breakroom,
        tag:Location,
        tag:Room,
        tag:Space .

brick:BuildingPrimaryFunctionShape a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( "Adult Education"^^xsd:string "Ambulatory Surgical Center"^^xsd:string "Aquarium"^^xsd:string "Automobile Dealership"^^xsd:string "Bank Branch"^^xsd:string "Bar/Nightclub"^^xsd:string "Barracks"^^xsd:string "Bowling Alley"^^xsd:string "Casino"^^xsd:string "College/University"^^xsd:string "Convenience Store with Gas Station"^^xsd:string "Convenience Store without Gas Station"^^xsd:string "Convention Center"^^xsd:string "Courthouse"^^xsd:string "Data Center"^^xsd:string "Distribution Center"^^xsd:string "Drinking Water Treatment & Distribution"^^xsd:string "Enclosed Mall"^^xsd:string "Energy/Power Station"^^xsd:string "Fast Food Restaurant"^^xsd:string "Financial Office"^^xsd:string "Fire Station"^^xsd:string "Fitness Center/Health Club/Gym"^^xsd:string "Food Sales"^^xsd:string "Food Service"^^xsd:string "Hospital (General Medical & Surgical)"^^xsd:string "Hotel"^^xsd:string "Ice/Curling Rink"^^xsd:string "Indoor Arena"^^xsd:string "K-12 School"^^xsd:string "Laboratory"^^xsd:string "Library"^^xsd:string "Lifestyle Center"^^xsd:string "Mailing Center/Post Office"^^xsd:string "Manufacturing/Industrial Plant"^^xsd:string "Medical Office"^^xsd:string "Mixed Use Property"^^xsd:string "Movie Theater"^^xsd:string "Multifamily Housing"^^xsd:string "Museum"^^xsd:string "Non-Refrigerated Warehouse"^^xsd:string "Office"^^xsd:string "Other - Education"^^xsd:string "Other - Entertainment/Public Assembly"^^xsd:string "Other - Lodging/Residential"^^xsd:string "Other - Mall"^^xsd:string "Other - Public Services"^^xsd:string "Other - Recreation"^^xsd:string "Other - Restaurant/Bar"^^xsd:string "Other - Services"^^xsd:string "Other - Stadium"^^xsd:string "Other - Technology/Science"^^xsd:string "Other - Utility"^^xsd:string "Other"^^xsd:string "Other/Specialty Hospital"^^xsd:string "Outpatient Rehabilitation/Physical Therapy"^^xsd:string "Parking"^^xsd:string "Performing Arts"^^xsd:string "Personal Services (Health/Beauty, Dry Cleaning, etc)"^^xsd:string "Police Station"^^xsd:string "Pre-school/Daycare"^^xsd:string "Prison/Incarceration"^^xsd:string "Race Track"^^xsd:string "Refrigerated Warehouse"^^xsd:string "Repair Services (Vehicle, Shoe, Locksmith, etc)"^^xsd:string "Residence Hall/Dormitory"^^xsd:string "Restaurant"^^xsd:string "Retail Store"^^xsd:string "Roller Rink"^^xsd:string "Self-Storage Facility"^^xsd:string "Senior Care Community"^^xsd:string "Single Family Home"^^xsd:string "Social/Meeting Hall"^^xsd:string "Stadium (Closed)"^^xsd:string "Stadium (Open)"^^xsd:string "Strip Mall"^^xsd:string "Supermarket/Grocery Store"^^xsd:string "Swimming Pool"^^xsd:string "Transportation Terminal/Station"^^xsd:string "Urgent Care/Clinic/Other Outpatient"^^xsd:string "Veterinary Office"^^xsd:string "Vocational School"^^xsd:string "Wastewater Treatment Plant"^^xsd:string "Wholesale Club/Supercenter"^^xsd:string "Worship Facility"^^xsd:string "Zoo"^^xsd:string ) ;
            sh:minCount 1 ;
            sh:path brick:value ] .

brick:CAV a owl:Class,
        sh:NodeShape ;
    rdfs:label "CAV" ;
    rdfs:subClassOf brick:Terminal_Unit ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:CAV ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:CAV,
        tag:Equipment .

brick:CO a owl:Class,
        sh:NodeShape,
        brick:CO ;
    rdfs:label "CO" ;
    rdfs:subClassOf brick:Gas ;
    skos:definition "Carbon Monoxide in the vapor phase"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:CO ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:CO,
        tag:Fluid,
        tag:Gas .

brick:CO2_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "CO2 Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "An alarm that indicates the off-normal conditions associated with the presence of carbon dioxide."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:CO2 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:CO2,
        tag:Point .

brick:CO2_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "CO2 Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Sets some property of CO2"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:CO2 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:CO2,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:CO2 .

brick:CRAH a owl:Class,
        sh:NodeShape ;
    rdfs:label "CRAH" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    owl:equivalentClass brick:Computer_Room_Air_Handler ;
    skos:definition "a computer room air handler (CRAH) uses fans, cooling coils and a water-chiller system to remove heat."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:CRAH ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:CRAH,
        tag:Equipment .

brick:CSVReference a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            skos:definition "Location of the CSV file defining the project" ;
            sh:datatype xsd:string ;
            sh:minCount 1 ;
            sh:path brick:fileLocation ] .

brick:Camera a owl:Class,
        sh:NodeShape ;
    rdfs:label "Camera" ;
    rdfs:subClassOf brick:Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Camera ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Camera,
        tag:Equipment .

brick:Capacity a brick:Quantity ;
    rdfs:label "Capacity" ;
    brick:hasQUDTReference quantitykind:Capacity .

brick:Chilled_Water_Differential_Pressure_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Differential Pressure Deadband Setpoint" ;
    rdfs:subClassOf brick:Chilled_Water_Differential_Pressure_Setpoint,
        brick:Differential_Pressure_Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of differential pressure of chilled water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Deadband,
        tag:Differential,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Chilled_Water .

brick:Chilled_Water_Differential_Pressure_Load_Shed_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Differential Pressure Load Shed Status" ;
    rdfs:subClassOf brick:Differential_Pressure_Load_Shed_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Differential,
        tag:Load,
        tag:Point,
        tag:Pressure,
        tag:Shed,
        tag:Status,
        tag:Water .

brick:Chilled_Water_Discharge_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Discharge Flow Sensor" ;
    rdfs:subClassOf brick:Discharge_Water_Flow_Sensor ;
    skos:definition "Measures the rate of flow of chilled discharge water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Discharge,
        tag:Flow,
        tag:Point,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Discharge_Chilled_Water .

brick:Chilled_Water_Discharge_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Discharge Flow Setpoint" ;
    rdfs:subClassOf brick:Chilled_Water_Flow_Setpoint,
        brick:Discharge_Water_Flow_Setpoint ;
    skos:definition "Sets the target flow rate of chilled discharge water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Discharge,
        tag:Flow,
        tag:Point,
        tag:Setpoint,
        tag:Water .

brick:Chilled_Water_Meter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Meter" ;
    rdfs:subClassOf brick:Water_Meter ;
    skos:definition "A meter that measures the usage or consumption of chilled water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Meter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Equipment,
        tag:Meter,
        tag:Water .

brick:Computer_Room_Air_Conditioning a owl:Class,
        sh:NodeShape ;
    rdfs:label "Computer Room Air Conditioning" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    owl:equivalentClass brick:CRAC ;
    skos:definition "A device that monitors and maintains the temperature, air distribution and humidity in a network room or data center."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Computer ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Conditioning ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Computer,
        tag:Conditioning,
        tag:Equipment,
        tag:Room .

brick:Computer_Room_Air_Handler a owl:Class,
        sh:NodeShape ;
    rdfs:label "Computer Room Air Handler" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    owl:equivalentClass brick:CRAH ;
    skos:definition "a computer room air handler (CRAH) uses fans, cooling coils and a water-chiller system to remove heat."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Computer ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Handler ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Computer,
        tag:Equipment,
        tag:Handler,
        tag:Room .

brick:Conductivity_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Conductivity Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures electrical conductance"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Conductivity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Conductivity,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Conductivity .

brick:CoolingCapacityShape a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:TON_FG unit:BTU_IT-PER-HR unit:BTU_TH-PER-HR unit:W ) ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

brick:Cooling_Demand_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Demand Sensor" ;
    rdfs:subClassOf brick:Demand_Sensor ;
    skos:definition "Measures the amount of power consumed by a cooling process; typically found by multiplying the tonnage of a unit (e.g. RTU) by the efficiency rating in kW/ton"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Demand ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cool,
        tag:Demand,
        tag:Point,
        tag:Sensor .

brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Discharge Air Temperature Deadband Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Cooling_Setpoint,
        brick:Discharge_Air_Temperature_Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of temperature of cooling discharge air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Deadband,
        tag:Discharge,
        tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Discharge_Air .

brick:Cooling_Discharge_Air_Temperature_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Discharge Air Temperature Integral Time Parameter" ;
    rdfs:subClassOf brick:Air_Temperature_Integral_Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Discharge,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Temperature,
        tag:Time .

brick:Cooling_Discharge_Air_Temperature_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Discharge Air Temperature Proportional Band Parameter" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Proportional_Band_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Band,
        tag:Cool,
        tag:Discharge,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Proportional,
        tag:Temperature .

brick:Cooling_Supply_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Supply Air Flow Setpoint" ;
    rdfs:subClassOf brick:Supply_Air_Flow_Setpoint ;
    owl:equivalentClass brick:Cooling_Discharge_Air_Flow_Setpoint ;
    skos:definition "Sets supply air flow rate for cooling"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Flow,
        tag:Point,
        tag:Setpoint,
        tag:Supply .

brick:CoordinateShape a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:longitude ],
        [ a sh:PropertyShape ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:latitude ] .

brick:CurrentFlowTypeShape a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( "AC"^^xsd:string "DC"^^xsd:string ) ;
            sh:minCount 1 ;
            sh:path brick:value ] .

brick:Current_Imbalance a brick:Quantity ;
    rdfs:label "CurrentImbalance" ;
    qudt:applicableUnit unit:PERCENT ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Dimensionless ;
    skos:definition "The percent deviation from average current",
        "The percent deviation from average current"@en ;
    skos:related brick:Electric_Current .

brick:Cycle_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cycle Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "An alarm that indicates off-normal conditions associated with HVAC cycles"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cycle ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Cycle,
        tag:Point .

brick:DOAS a owl:Class,
        sh:NodeShape ;
    rdfs:label "DOAS" ;
    rdfs:subClassOf brick:AHU ;
    owl:equivalentClass brick:Dedicated_Outdoor_Air_System_Unit ;
    skos:definition "See Dedicated_Outdoor_Air_System_Unit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:DOAS ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:DOAS,
        tag:Equipment .

brick:Damper_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Damper Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Controls properties of dampers"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Damper ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Damper,
        tag:Point .

brick:Dedicated_Outdoor_Air_System_Unit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Dedicated Outdoor Air System Unit" ;
    rdfs:subClassOf brick:AHU ;
    owl:equivalentClass brick:DOAS ;
    skos:definition "A device that conditions and delivers 100% outdoor air to its assigned spaces. It decouples air-conditioning of the outdoor air, usually used to provide minimum outdoor air ventilation, from conditioning of the internal loads."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Dedicated ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outdoor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Dedicated,
        tag:Equipment,
        tag:Outdoor,
        tag:System .

brick:Delay_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Delay Parameter" ;
    rdfs:subClassOf brick:Parameter ;
    skos:definition "A parameter determining how long to delay a subsequent action to take place after a received signal"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Delay ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Delay,
        tag:Parameter,
        tag:Point .

brick:Differential_CO2_Concentration a brick:Quantity ;
    rdfs:label "ΔCO2Concentration" ;
    qudt:applicableUnit unit:PPB,
        unit:PPM ;
    qudt:isDeltaQuantity true ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader brick:CO2_Concentration ;
    skos:definition "The difference in carbon dioxide concentration between two areas" .

brick:Differential_CO_Concentration a brick:Quantity ;
    rdfs:label "ΔCOConcentration" ;
    qudt:applicableUnit unit:PPB,
        unit:PPM ;
    qudt:isDeltaQuantity true ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader brick:CO_Concentration ;
    skos:definition "The difference in carbon monoxide concentration between two areas" .

brick:Differential_Pressure_Step_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Differential Pressure Step Parameter" ;
    rdfs:subClassOf brick:Step_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Step ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Step .

brick:Direction_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Direction Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the direction in degrees in which a phenomenon is occuring"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Direction ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Direction,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Direction .

brick:Direction_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Direction Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates which direction a device is operating in"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Direction ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Direction,
        tag:Point,
        tag:Status ;
    brick:hasQuantity brick:Direction .

brick:Discharge_Air_Duct_Pressure_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Duct Pressure Status" ;
    rdfs:subClassOf brick:Pressure_Status ;
    skos:definition "Indicates if air pressure in discharge duct is within expected bounds"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Duct ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Duct,
        tag:Point,
        tag:Pressure,
        tag:Status .

brick:Discharge_Air_Flow_Demand_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Flow Demand Setpoint" ;
    rdfs:subClassOf brick:Air_Flow_Demand_Setpoint,
        brick:Discharge_Air_Flow_Setpoint ;
    skos:definition "Sets the rate of discharge air flow required for a process"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Demand ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Demand,
        tag:Discharge,
        tag:Flow,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Discharge_Air .

brick:Discharge_Air_Humidity_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Humidity Sensor" ;
    rdfs:subClassOf brick:Relative_Humidity_Sensor ;
    skos:definition "Measures the relative humidity of discharge air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Relative ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Humidity,
        tag:Point,
        tag:Relative,
        tag:Sensor ;
    brick:hasQuantity brick:Relative_Humidity ;
    brick:hasSubstance brick:Discharge_Air .

brick:Discharge_Air_Static_Pressure_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Static Pressure Deadband Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Static_Pressure_Setpoint,
        brick:Static_Pressure_Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of static pressure of discharge air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Deadband,
        tag:Discharge,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static ;
    brick:hasQuantity brick:Static_Pressure ;
    brick:hasSubstance brick:Discharge_Air .

brick:Discharge_Air_Static_Pressure_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Static Pressure Integral Time Parameter" ;
    rdfs:subClassOf brick:Static_Pressure_Integral_Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Static,
        tag:Time .

brick:Discharge_Air_Static_Pressure_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Static Pressure Proportional Band Parameter" ;
    rdfs:subClassOf brick:Static_Pressure_Proportional_Band_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Band,
        tag:Discharge,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Proportional,
        tag:Static .

brick:Discharge_Air_Static_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Static Pressure Sensor" ;
    rdfs:subClassOf brick:Static_Pressure_Sensor ;
    skos:definition "The static pressure of air within discharge regions of an HVAC system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Static ;
    brick:hasQuantity brick:Static_Pressure ;
    brick:hasSubstance brick:Discharge_Air .

brick:Discharge_Air_Temperature_Cooling_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Temperature Cooling Setpoint" ;
    rdfs:subClassOf brick:Cooling_Temperature_Setpoint,
        brick:Discharge_Air_Temperature_Setpoint ;
    skos:definition "Sets temperature of discharge air for cooling"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Discharge,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Discharge_Air_Temperature_Heating_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Temperature Heating Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Setpoint,
        brick:Heating_Temperature_Setpoint ;
    skos:definition "Sets temperature of discharge air for heating"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Heat,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Discharge_Air_Temperature_High_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Temperature High Reset Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Reset_Differential_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Discharge,
        tag:High,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Temperature .

brick:Discharge_Air_Temperature_Low_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Temperature Low Reset Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Reset_Differential_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Discharge,
        tag:Low,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Temperature .

brick:Discharge_Air_Temperature_Step_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Temperature Step Parameter" ;
    rdfs:subClassOf brick:Air_Temperature_Step_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Step ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Parameter,
        tag:Point,
        tag:Step,
        tag:Temperature .

brick:Discharge_Air_Velocity_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Velocity Pressure Sensor" ;
    rdfs:subClassOf brick:Velocity_Pressure_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Velocity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Velocity ;
    brick:hasQuantity brick:Velocity_Pressure ;
    brick:hasSubstance brick:Discharge_Air .

brick:Discharge_Fan a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Fan" ;
    rdfs:subClassOf brick:Fan ;
    skos:definition "Fan moving air discharged from HVAC vents"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Discharge,
        tag:Equipment,
        tag:Fan .

brick:Discharge_Water_Differential_Pressure_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Water Differential Pressure Deadband Setpoint" ;
    rdfs:subClassOf brick:Differential_Pressure_Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of differential pressure of discharge water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Deadband,
        tag:Differential,
        tag:Discharge,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Discharge_Water .

brick:Discharge_Water_Temperature_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Water Temperature Alarm" ;
    rdfs:subClassOf brick:Water_Temperature_Alarm ;
    skos:definition "An alarm that indicates the off-normal conditions associated with temperature of the discharge water."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Discharge,
        tag:Point,
        tag:Temperature,
        tag:Water .

brick:Domestic_Hot_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Domestic Hot Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Hot_Water_Temperature_Setpoint,
        brick:Water_Temperature_Setpoint ;
    skos:definition "Sets temperature of domestic hot water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Domestic ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Domestic,
        tag:Hot,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Water .

brick:Domestic_Water a owl:Class,
        sh:NodeShape,
        brick:Domestic_Water ;
    rdfs:label "Domestic Water" ;
    rdfs:subClassOf brick:Water ;
    skos:definition "A collection of equipment that transport and regulate domestic water among each other"@en,
        "Tap water for drinking, washing, cooking, and flushing of toliets"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Domestic ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Domestic,
        tag:Fluid,
        tag:Liquid,
        tag:Water .

brick:Dry_Bulb_Temperature a brick:Quantity ;
    rdfs:label "Dry_Bulb_Temperature" ;
    qudt:applicableUnit unit:DEG_C,
        unit:DEG_F,
        unit:K ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Temperature,
        brick:Temperature ;
    skos:definition "The temperature of air measured by a thermometer freely exposed to the air, but shielded from radiation and moisture. (https://en.wikipedia.org/wiki/Dry-bulb_temperature)",
        "The temperature of air measured by a thermometer freely exposed to the air, but shielded from radiation and moisture. (https://en.wikipedia.org/wiki/Dry-bulb_temperature)"@en .

brick:Dynamic_Pressure a brick:Quantity ;
    rdfs:label "Dynamic Pressure" ;
    skos:broader brick:Pressure .

brick:ESS_Panel a owl:Class,
        sh:NodeShape ;
    rdfs:label "ESS Panel" ;
    rdfs:subClassOf brick:Radiant_Panel ;
    skos:definition "See Embedded_Surface_System_Panel"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:ESS ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Panel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:ESS,
        tag:Equipment,
        tag:Panel .

brick:Electric_Radiator a owl:Class,
        sh:NodeShape ;
    rdfs:label "Electric Radiator" ;
    rdfs:subClassOf brick:Radiator ;
    skos:definition "Electric heating device"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Electric ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radiator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Electric,
        tag:Equipment,
        tag:Radiator .

brick:Electrical_Meter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Electrical Meter" ;
    rdfs:subClassOf brick:Meter ;
    skos:definition "A meter that measures the usage or consumption of electricity"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Electrical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Meter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Electrical,
        tag:Equipment,
        tag:Meter .

brick:Electrical_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Electrical System" ;
    rdfs:subClassOf brick:System ;
    skos:definition "Devices that serve or are part of the electrical subsystem in the building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Electrical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Electrical,
        tag:System .

brick:Elevator_Shaft a owl:Class,
        sh:NodeShape ;
    rdfs:label "Elevator Shaft" ;
    rdfs:subClassOf brick:Vertical_Space ;
    owl:equivalentClass brick:Elevator_Space ;
    skos:definition "The vertical space in which an elevator ascends and descends"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Elevator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shaft ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Vertical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Elevator,
        tag:Location,
        tag:Shaft,
        tag:Space,
        tag:Vertical .

brick:Elevator_Space a owl:Class,
        sh:NodeShape ;
    rdfs:label "Elevator Space" ;
    rdfs:subClassOf brick:Vertical_Space ;
    owl:equivalentClass brick:Elevator_Shaft ;
    skos:definition "The vertical space in whcih an elevator ascends and descends"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Elevator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Vertical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Elevator,
        tag:Location,
        tag:Space,
        tag:Vertical .

brick:Embedded_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Embedded Temperature Sensor" ;
    rdfs:subClassOf brick:Radiant_Panel_Temperature_Sensor ;
    skos:definition "Measures the internal temperature of the radiant layer of the radiant heating and cooling HVAC system."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Embedded ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Embedded,
        tag:Point,
        tag:Sensor,
        tag:Temperature .

brick:Embedded_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Embedded Temperature Setpoint" ;
    rdfs:subClassOf brick:Radiant_Panel_Temperature_Setpoint ;
    skos:definition "Sets temperature for the internal material, e.g. concrete slab, of the radiant panel."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Embedded ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Embedded,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Emergency_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Emergency Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "Alarms that indicate off-normal conditions associated with emergency systems"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Emergency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Emergency,
        tag:Point .

brick:Enable_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Enable Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if a system or piece of functionality has been enabled"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Enable,
        tag:Point,
        tag:Status .

brick:Energy_Generation_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Energy Generation System" ;
    rdfs:subClassOf brick:Energy_System ;
    skos:definition "A collection of devices that generates electricity"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Energy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Generation ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Energy,
        tag:Generation,
        tag:System .

brick:Energy_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Energy Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures energy consumption"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Energy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Energy,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Energy .

brick:Energy_Storage a owl:Class,
        sh:NodeShape ;
    rdfs:label "Energy Storage" ;
    rdfs:subClassOf brick:Electrical_Equipment ;
    skos:definition "Devices or equipment that store energy in its various forms"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Energy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Storage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Energy,
        tag:Equipment,
        tag:Storage .

brick:Energy_Storage_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Energy Storage System" ;
    rdfs:subClassOf brick:Energy_System ;
    skos:definition "A collection of devices that stores electricity"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Energy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Storage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Energy,
        tag:Storage,
        tag:System .

brick:Enthalpy_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Enthalpy Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the total heat content of some substance"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Enthalpy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Enthalpy,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Enthalpy .

brick:Exhaust_Air_Flow_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Flow Integral Time Parameter" ;
    rdfs:subClassOf brick:Integral_Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Exhaust,
        tag:Flow,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Time .

brick:Exhaust_Air_Flow_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Flow Proportional Band Parameter" ;
    rdfs:subClassOf brick:Proportional_Band_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Band,
        tag:Exhaust,
        tag:Flow,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Proportional .

brick:Exhaust_Air_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Flow Sensor" ;
    rdfs:subClassOf brick:Air_Flow_Sensor ;
    skos:definition "Measures the rate of flow of exhaust air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Exhaust,
        tag:Flow,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Exhaust_Air .

brick:Exhaust_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Flow Setpoint" ;
    rdfs:subClassOf brick:Air_Flow_Setpoint ;
    skos:definition "Sets exhaust air flow rate"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Exhaust,
        tag:Flow,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Exhaust_Air .

brick:Exhaust_Air_Stack_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Stack Flow Setpoint" ;
    rdfs:subClassOf brick:Exhaust_Air_Flow_Setpoint ;
    skos:definition "Sets exhaust air stack flow rate"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Stack ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Exhaust,
        tag:Flow,
        tag:Point,
        tag:Setpoint,
        tag:Stack .

brick:FCU a owl:Class,
        sh:NodeShape ;
    rdfs:label "FCU" ;
    rdfs:subClassOf brick:Terminal_Unit ;
    skos:definition "See Fan_Coil_Unit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:FCU ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:FCU .

brick:Fan_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fan Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates properties of fans"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fan,
        tag:Point,
        tag:Status .

brick:Filter_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Filter Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if a filter needs to be replaced"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Filter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Filter,
        tag:Point,
        tag:Status .

brick:Food_Service_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Food Service Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A space used in the production, storage, serving, or cleanup of food and beverages"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Food ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Service ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Food,
        tag:Location,
        tag:Room,
        tag:Service,
        tag:Space .

brick:Formaldehyde_Concentration a brick:Quantity ;
    rdfs:label "FormaldehydeConcentration" ;
    qudt:applicableUnit unit:PPB,
        unit:PPM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:DimensionlessRatio,
        brick:Air_Quality ;
    skos:definition "The concentration of formaldehyde in a medium" .

brick:Frequency_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Frequency Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Controls the frequency of a device's operation (e.g. rotational frequency)"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fequency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Fequency,
        tag:Point ;
    brick:hasQuantity brick:Frequency .

brick:Frequency_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Frequency Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the frequency of a phenomenon or aspect of a phenomenon, e.g. the frequency of a fan turning"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Frequency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Frequency,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Frequency .

brick:Fresh_Air_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fresh Air Setpoint Limit" ;
    rdfs:subClassOf brick:Limit ;
    skos:definition "A parameter that places a lower or upper bound on the range of permitted values of a Fresh_Air_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fresh ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Fresh,
        tag:Limit,
        tag:Point,
        tag:Setpoint .

brick:Fuel_Oil a owl:Class,
        sh:NodeShape,
        brick:Fuel_Oil ;
    rdfs:label "Fuel Oil" ;
    rdfs:subClassOf brick:Oil ;
    skos:definition "Petroleum based oil burned for energy"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fuel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Oil ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fluid,
        tag:Fuel,
        tag:Liquid,
        tag:Oil .

brick:Furniture a owl:Class,
        sh:NodeShape ;
    rdfs:label "Furniture" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Furniture> ;
    rdfs:subClassOf brick:Equipment ;
    skos:definition "Movable objects intended to support various human activities such as seating, eating and sleeping"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Furniture ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Furniture .

brick:Gas_Meter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Gas Meter" ;
    rdfs:subClassOf brick:Meter ;
    skos:definition "A meter that measures the usage or consumption of gas"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Meter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Gas,
        tag:Meter .

brick:Gasoline a owl:Class,
        sh:NodeShape,
        brick:Gasoline ;
    rdfs:label "Gasoline" ;
    rdfs:subClassOf brick:Liquid ;
    skos:definition "Petroleum derived liquid used as a fuel source"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gasoline ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fluid,
        tag:Gasoline,
        tag:Liquid .

brick:Glycol a owl:Class,
        sh:NodeShape,
        brick:Glycol ;
    rdfs:label "Glycol" ;
    rdfs:subClassOf brick:Liquid ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Glycol ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fluid,
        tag:Glycol,
        tag:Liquid .

brick:HVAC_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "HVAC System" ;
    rdfs:subClassOf brick:System ;
    skos:definition "See Heating_Ventilation_Air_Conditioning_System"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:HVAC ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:HVAC,
        tag:System .

brick:HX a owl:Class,
        sh:NodeShape ;
    rdfs:label "HX" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "See Heat_Exchanger"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:HX ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:HX .

brick:Heat_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heat Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures heat"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Heat,
        tag:Point,
        tag:Sensor .

brick:Heating_Demand_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Demand Sensor" ;
    rdfs:subClassOf brick:Demand_Sensor ;
    skos:definition "Measures the amount of power consumed by a heating process; typically found by multiplying the tonnage of a unit (e.g. RTU) by the efficiency rating in kW/ton"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Demand ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Demand,
        tag:Heat,
        tag:Point,
        tag:Sensor .

brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Discharge Air Temperature Deadband Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Deadband_Setpoint,
        brick:Discharge_Air_Temperature_Heating_Setpoint ;
    skos:definition "Sets the size of a deadband of temperature of heating discharge air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Deadband,
        tag:Discharge,
        tag:Heat,
        tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Discharge_Air .

brick:Heating_Discharge_Air_Temperature_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Discharge Air Temperature Integral Time Parameter" ;
    rdfs:subClassOf brick:Air_Temperature_Integral_Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Heat,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Temperature,
        tag:Time .

brick:Heating_Discharge_Air_Temperature_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Discharge Air Temperature Proportional Band Parameter" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Proportional_Band_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Band,
        tag:Discharge,
        tag:Heat,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Proportional,
        tag:Temperature .

brick:Heating_Supply_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Supply Air Flow Setpoint" ;
    rdfs:subClassOf brick:Supply_Air_Flow_Setpoint ;
    owl:equivalentClass brick:Heating_Discharge_Air_Flow_Setpoint ;
    skos:definition "Sets supply air flow rate for heating"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Heat,
        tag:Point,
        tag:Setpoint,
        tag:Supply .

brick:Hot_Water_Differential_Pressure_Load_Shed_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Differential Pressure Load Shed Status" ;
    rdfs:subClassOf brick:Differential_Pressure_Load_Shed_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Hot,
        tag:Load,
        tag:Point,
        tag:Pressure,
        tag:Shed,
        tag:Status,
        tag:Water .

brick:Hot_Water_Differential_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Differential Pressure Sensor" ;
    rdfs:subClassOf brick:Differential_Pressure_Sensor ;
    skos:definition "Measures the difference in water pressure on either side of a hot water valve"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Hot,
        tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Hot_Water .

brick:Hot_Water_Discharge_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Discharge Flow Sensor" ;
    rdfs:subClassOf brick:Discharge_Water_Flow_Sensor ;
    skos:definition "Measures the rate of flow of hot discharge water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Discharge,
        tag:Flow,
        tag:Hot,
        tag:Point,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Discharge_Hot_Water .

brick:Hot_Water_Discharge_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Discharge Flow Setpoint" ;
    rdfs:subClassOf brick:Discharge_Water_Flow_Setpoint,
        brick:Hot_Water_Flow_Setpoint ;
    skos:definition "Sets the target flow rate of hot discharge water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Discharge,
        tag:Flow,
        tag:Hot,
        tag:Point,
        tag:Setpoint,
        tag:Water .

brick:Hot_Water_Meter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Meter" ;
    rdfs:subClassOf brick:Water_Meter ;
    skos:definition "A meter that measures the usage or consumption of hot water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Meter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Hot,
        tag:Meter,
        tag:Water .

brick:Hot_Water_Radiator a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Radiator" ;
    rdfs:subClassOf brick:Radiator ;
    skos:definition "Radiator that uses hot water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radiator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Hot,
        tag:Radiator,
        tag:Water .

brick:Hot_Water_Supply_Temperature_Load_Shed_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Supply Temperature Load Shed Status" ;
    rdfs:subClassOf brick:Load_Shed_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Load,
        tag:Point,
        tag:Shed,
        tag:Status,
        tag:Supply,
        tag:Temperature,
        tag:Water .

brick:Hot_Water_System_Enable_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water System Enable Command" ;
    rdfs:subClassOf brick:System_Enable_Command ;
    skos:definition "Enables operation of the hot water system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Enable,
        tag:Hot,
        tag:Point,
        tag:System,
        tag:Water .

brick:Humidity_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Humidity Sensor" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Humidity> ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the concentration of water vapor in air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Humidity,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Humidity .

brick:IFCReference a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            skos:definition "Name of the entity in IFC" ;
            sh:datatype xsd:string ;
            sh:path ifc:name ],
        [ a sh:PropertyShape ;
            skos:definition "Reference to an IFC Project object, containing the project ID" ;
            sh:class ifc:Project ;
            sh:minCount 1 ;
            sh:path ifc:hasProjectReference ],
        [ a sh:PropertyShape ;
            skos:definition "The global ID of the entity in the IFC project" ;
            sh:datatype xsd:string ;
            sh:minCount 1 ;
            sh:path ifc:globalID ] .

brick:Ice a owl:Class,
        sh:NodeShape,
        brick:Ice ;
    rdfs:label "Ice" ;
    rdfs:subClassOf brick:Solid ;
    skos:definition "Water in its solid form"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Ice ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Solid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Ice,
        tag:Solid .

brick:Illuminance a brick:Quantity ;
    rdfs:label "Illuminance" ;
    qudt:applicableUnit unit:FC,
        unit:LUX,
        unit:Phot ;
    brick:hasQUDTReference quantitykind:Illuminance .

brick:Illuminance_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Illuminance Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the total luminous flux incident on a surface, per unit area"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Illuminance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Illuminance,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Illuminance .

brick:Integral_Gain_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Integral Gain Parameter" ;
    rdfs:subClassOf brick:Gain_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Gain ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Gain,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point .

brick:Irradiance a brick:Quantity ;
    rdfs:label "Irradiance" ;
    qudt:applicableUnit unit:W-PER-CentiM2,
        unit:W-PER-FT2,
        unit:W-PER-IN2,
        unit:W-PER-M2 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:PowerPerArea ;
    skos:definition "The power per unit area of electromagnetic radiation incident on a surface",
        "The power per unit area of electromagnetic radiation incident on a surface"@en .

brick:Isolation_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Isolation Valve" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Isolation_valve> ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "A valve that stops the flow of a fluid, usually for maintenance or safety purposes"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Isolation ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Isolation,
        tag:Valve .

brick:Leak_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leak Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "An alarm that indicates leaks occured in systems containing fluids"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leak ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Leak,
        tag:Point .

brick:Leaving_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Leaving Water Temperature Sensor" ;
    rdfs:subClassOf brick:Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of water leaving a piece of equipment or system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Leaving,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Leaving_Water .

brick:Linear_Speed a brick:Quantity ;
    rdfs:label "Linear_Speed" ;
    qudt:applicableUnit unit:FT-PER-HR,
        unit:FT-PER-SEC,
        unit:KiloM-PER-HR,
        unit:KiloM-PER-SEC,
        unit:M-PER-HR,
        unit:M-PER-SEC,
        unit:MI-PER-HR,
        unit:MI-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Speed,
        brick:Speed ;
    skos:definition "Speed in one dimension (linear)" .

brick:Liquid_CO2 a owl:Class,
        sh:NodeShape,
        brick:Liquid_CO2 ;
    rdfs:label "Liquid CO2" ;
    rdfs:subClassOf brick:Liquid ;
    skos:definition "Carbon Dioxide in the liquid phase"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:CO2 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:CO2,
        tag:Fluid,
        tag:Liquid .

brick:Load_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Load Parameter" ;
    rdfs:subClassOf brick:Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Load,
        tag:Parameter,
        tag:Point .

brick:Load_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Load Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Load,
        tag:Point,
        tag:Setpoint .

brick:Load_Shed_Differential_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Load Shed Differential Pressure Setpoint" ;
    rdfs:subClassOf brick:Differential_Pressure_Setpoint,
        brick:Load_Shed_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Load,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Shed .

brick:Lockout_Temperature_Differential_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Lockout Temperature Differential Parameter" ;
    rdfs:subClassOf brick:Temperature_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lockout ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Lockout,
        tag:Point,
        tag:Sensor,
        tag:Temperature .

brick:Lounge a owl:Class,
        sh:NodeShape ;
    rdfs:label "Lounge" ;
    rdfs:subClassOf brick:Common_Space ;
    skos:definition "A room for lesiure activities or relaxing"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Common ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lounge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Common,
        tag:Location,
        tag:Lounge,
        tag:Space .

brick:Low_Air_Flow_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Air Flow Alarm" ;
    rdfs:subClassOf brick:Air_Flow_Alarm ;
    skos:definition "An alarm that indicates that the air flow is lower than normal."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Flow,
        tag:Low,
        tag:Point .

brick:MAU a owl:Class,
        sh:NodeShape ;
    rdfs:label "MAU" ;
    rdfs:subClassOf brick:AHU ;
    owl:equivalentClass brick:Makeup_Air_Unit ;
    skos:definition "See Makeup_Air_Unit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:MAU ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:MAU .

brick:Makeup_Air_Unit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Makeup Air Unit" ;
    rdfs:subClassOf brick:AHU ;
    owl:equivalentClass brick:MAU ;
    skos:definition "A device designed to condition ventilation air introduced into a space or to replace air exhausted from a process or general area exhaust. The device may be used to prevent negative pressure within buildings or to reduce airborne contaminants in a space."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Makeup ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Equipment,
        tag:Makeup,
        tag:Unit .

brick:Makeup_Water a owl:Class,
        sh:NodeShape,
        brick:Makeup_Water ;
    rdfs:label "Makeup Water" ;
    rdfs:subClassOf brick:Water ;
    skos:definition "Water used used to makeup water loss through leaks, evaporation, or blowdown"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Makeup ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fluid,
        tag:Liquid,
        tag:Makeup,
        tag:Water .

brick:Mass a brick:Quantity ;
    rdfs:label "Mass" ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:Da,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTONNE,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    brick:hasQUDTReference quantitykind:Mass .

brick:Max_Discharge_Air_Static_Pressure_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Discharge Air Static Pressure Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Limit,
        brick:Max_Static_Pressure_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Discharge_Air_Static_Pressure_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static .

brick:Max_Occupied_Cooling_Discharge_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Occupied Cooling Discharge Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Cooling_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Occupied_Cooling_Discharge_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Discharge,
        tag:Flow,
        tag:Limit,
        tag:Max,
        tag:Occupied,
        tag:Parameter,
        tag:Point,
        tag:Setpoint .

brick:Max_Occupied_Heating_Discharge_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Occupied Heating Discharge Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Heating_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Occupied_Heating_Discharge_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Flow,
        tag:Heat,
        tag:Limit,
        tag:Max,
        tag:Occupied,
        tag:Parameter,
        tag:Point,
        tag:Setpoint .

brick:Max_Unoccupied_Cooling_Discharge_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Unoccupied Cooling Discharge Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Cooling_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Unoccupied_Cooling_Discharge_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Discharge,
        tag:Flow,
        tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Unoccupied .

brick:Max_Unoccupied_Heating_Discharge_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Unoccupied Heating Discharge Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Heating_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Unoccupied_Heating_Discharge_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Flow,
        tag:Heat,
        tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Unoccupied .

brick:Mechanical_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Mechanical Room" ;
    rdfs:subClassOf brick:Service_Room ;
    skos:definition "A class of service rooms where mechanical equipment (HVAC) operates"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mechanical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Service ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Mechanical,
        tag:Room,
        tag:Service,
        tag:Space .

brick:Medical_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Medical Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A class of rooms used for medical purposes"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Medical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Medical,
        tag:Room,
        tag:Space .

brick:Medium_Temperature_Hot_Water_Differential_Pressure_Load_Shed_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Medium Temperature Hot Water Differential Pressure Load Shed Status" ;
    rdfs:subClassOf brick:Differential_Pressure_Load_Shed_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Medium ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Load,
        tag:Medium,
        tag:Point,
        tag:Pressure,
        tag:Shed,
        tag:Status,
        tag:Temperature .

brick:Methane_Concentration a brick:Quantity ;
    rdfs:label "MethaneConcentration" ;
    qudt:applicableUnit unit:PPB,
        unit:PPM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:DimensionlessRatio,
        brick:Air_Quality ;
    skos:definition "The concentration of methane in a medium" .

brick:Min_Discharge_Air_Static_Pressure_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Discharge Air Static Pressure Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Limit,
        brick:Min_Static_Pressure_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Discharge_Air_Static_Pressure_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static .

brick:Min_Occupied_Cooling_Discharge_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Occupied Cooling Discharge Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Cooling_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Occupied_Cooling_Discharge_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Discharge,
        tag:Flow,
        tag:Limit,
        tag:Min,
        tag:Occupied,
        tag:Parameter,
        tag:Point,
        tag:Setpoint .

brick:Min_Occupied_Heating_Discharge_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Occupied Heating Discharge Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Heating_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Occupied_Heating_Discharge_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Flow,
        tag:Heat,
        tag:Limit,
        tag:Min,
        tag:Occupied,
        tag:Parameter,
        tag:Point,
        tag:Setpoint .

brick:Min_Unoccupied_Cooling_Discharge_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Unoccupied Cooling Discharge Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Cooling_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Unoccupied_Cooling_Discharge_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Discharge,
        tag:Flow,
        tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Unoccupied .

brick:Min_Unoccupied_Heating_Discharge_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Unoccupied Heating Discharge Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Heating_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Unoccupied_Heating_Discharge_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Flow,
        tag:Heat,
        tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Unoccupied .

brick:Motion_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Motion Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Detects the presence of motion in some area"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Motion ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Motion,
        tag:Point,
        tag:Sensor .

brick:NO2_Concentration a brick:Quantity ;
    rdfs:label "PM10Concentration" ;
    qudt:applicableUnit unit:PPB,
        unit:PPM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader brick:Air_Quality ;
    skos:definition "The concentration of nitrogen dioxide in a medium" .

brick:NVR a owl:Class,
        sh:NodeShape ;
    rdfs:label "NVR" ;
    rdfs:subClassOf brick:Video_Surveillance_Equipment ;
    owl:equivalentClass brick:Network_Video_Recorder ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:NVR ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Security ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Surveillance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Video ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:NVR,
        tag:Security,
        tag:Surveillance,
        tag:Video .

brick:Natural_Gas a owl:Class,
        sh:NodeShape,
        brick:Natural_Gas ;
    rdfs:label "Natural Gas" ;
    rdfs:subClassOf brick:Gas ;
    skos:definition "Fossil fuel energy source consisting largely of methane and other hydrocarbons"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Natural ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fluid,
        tag:Gas,
        tag:Natural .

brick:Network_Video_Recorder a owl:Class,
        sh:NodeShape ;
    rdfs:label "Network Video Recorder" ;
    rdfs:subClassOf brick:Video_Surveillance_Equipment ;
    owl:equivalentClass brick:NVR ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:NVR ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Network ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Recorder ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Security ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Video ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:NVR,
        tag:Network,
        tag:Recorder,
        tag:Security,
        tag:Video .

brick:Occupancy_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupancy Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Detects occupancy of some space or area"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Occupancy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Occupancy,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Occupancy .

brick:Occupancy_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupancy Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if a room or space is occupied"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Occupancy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Occupancy,
        tag:Point,
        tag:Status .

brick:Occupied_Cooling_Discharge_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Cooling Discharge Air Flow Setpoint" ;
    rdfs:subClassOf brick:Cooling_Discharge_Air_Flow_Setpoint,
        brick:Occupied_Discharge_Air_Flow_Setpoint ;
    skos:definition "Sets discharge air flow for cooling when occupied"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Discharge,
        tag:Flow,
        tag:Occupied,
        tag:Point,
        tag:Setpoint .

brick:Occupied_Heating_Discharge_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Heating Discharge Air Flow Setpoint" ;
    rdfs:subClassOf brick:Heating_Discharge_Air_Flow_Setpoint,
        brick:Occupied_Discharge_Air_Flow_Setpoint ;
    skos:definition "Sets discharge air flow for heating when occupied"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Flow,
        tag:Heat,
        tag:Occupied,
        tag:Point,
        tag:Setpoint .

brick:Operating_Mode_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Operating Mode Status" ;
    rdfs:subClassOf brick:Mode_Status ;
    skos:definition "Indicates the current operating mode of a system, device or control loop"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Mode ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Operating ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Mode,
        tag:Operating,
        tag:Point,
        tag:Status .

brick:Outside_Air_Temperature_Enable_Differential_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air Temperature Enable Differential Sensor" ;
    rdfs:subClassOf brick:Outside_Air_Temperature_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Enable,
        tag:Outside,
        tag:Point,
        tag:Sensor,
        tag:Temperature .

brick:Override_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Override Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Controls or reports whether or not a device or control loop is in 'override'"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Override ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Override,
        tag:Point .

brick:Ozone_Concentration a brick:Quantity ;
    rdfs:label "OzoneConcentration" ;
    qudt:applicableUnit unit:PPB,
        unit:PPM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:DimensionlessRatio,
        brick:Air_Quality ;
    skos:definition "The concentration of ozone in a medium" .

brick:PM10_Concentration a brick:Quantity ;
    rdfs:label "PM10Concentration" ;
    qudt:applicableUnit unit:MicroGM-PER-M3,
        unit:PPB,
        unit:PPM ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader brick:Air_Quality ;
    skos:definition "The concentration of particulates with diameter of 10 microns or less in air" .

brick:PM10_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "PM10 Sensor" ;
    rdfs:subClassOf brick:Particulate_Matter_Sensor ;
    skos:definition "Detects matter of size 10 microns"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Matter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PM10 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Particulate ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Matter,
        tag:PM10,
        tag:Particulate,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:PM10_Concentration ;
    brick:hasSubstance brick:Air .

brick:PM1_Concentration a brick:Quantity ;
    rdfs:label "PM1Concentration" ;
    qudt:applicableUnit unit:MicroGM-PER-M3,
        unit:PPB,
        unit:PPM ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader brick:Air_Quality ;
    skos:definition "The concentration of particulates with diameter of 1 microns or less in air" .

brick:PM1_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "PM1 Sensor" ;
    rdfs:subClassOf brick:Particulate_Matter_Sensor ;
    skos:definition "Detects matter of size 1 micron"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Matter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PM1 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Particulate ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Matter,
        tag:PM1,
        tag:Particulate,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:PM1_Concentration ;
    brick:hasSubstance brick:Air .

brick:PM2.5_Concentration a brick:Quantity ;
    rdfs:label "PM2.5Concentration" ;
    qudt:applicableUnit unit:MicroGM-PER-M3,
        unit:PPB,
        unit:PPM ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader brick:Air_Quality ;
    skos:definition "The concentration of particulates with diameter of 2.5 microns or less in air" .

brick:PM2.5_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "PM2.5 Sensor" ;
    rdfs:subClassOf brick:Particulate_Matter_Sensor ;
    skos:definition "Detects matter of size 2.5 microns"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Matter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PM2.5 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Particulate ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Matter,
        tag:PM2.5,
        tag:Particulate,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:PM2.5_Concentration ;
    brick:hasSubstance brick:Air .

brick:PV_Current_Output_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "PV Current Output Sensor" ;
    rdfs:subClassOf brick:Current_Output_Sensor ;
    skos:definition "See Photovoltaic_Current_Output_Sensor"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Current ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Output ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PV ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Current,
        tag:Output,
        tag:PV,
        tag:Point,
        tag:Sensor .

brick:Peak_Power a brick:Quantity ;
    rdfs:label "PeakPower" ;
    qudt:applicableUnit unit:KiloW,
        unit:MegaW,
        unit:MilliW,
        unit:W ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Power,
        brick:Power ;
    skos:definition "Tracks the highest (peak) observed power in some interval",
        "Tracks the highest (peak) observed power in some interval"@en .

brick:PhaseCountShape a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( "1"^^xsd:string "2"^^xsd:string "3"^^xsd:string "Total"^^xsd:string ) ;
            sh:minCount 1 ;
            sh:path brick:value ] .

brick:PhasesShape a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( "A"^^xsd:string "B"^^xsd:string "C"^^xsd:string "AB"^^xsd:string "BC"^^xsd:string "AC"^^xsd:string "ABC"^^xsd:string ) ;
            sh:minCount 1 ;
            sh:path brick:value ] .

brick:Photovoltaic_Array a owl:Class,
        sh:NodeShape ;
    rdfs:label "Photovoltaic Array" ;
    rdfs:subClassOf brick:Collection ;
    owl:equivalentClass brick:PV_Array ;
    skos:definition "A collection of photovoltaic panels"@en ;
    sh:property [ sh:or ( [ sh:class brick:PV_Panel ] ) ;
            sh:path brick:hasPart ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Array ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Collection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Photovoltaic ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Array,
        tag:Collection,
        tag:Photovoltaic .

brick:Position_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Position Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Controls or reports the position of some object"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Position ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Point,
        tag:Position ;
    brick:hasQuantity brick:Position .

brick:Potable_Water a owl:Class,
        sh:NodeShape,
        brick:Potable_Water ;
    rdfs:label "Potable Water" ;
    rdfs:subClassOf brick:Water ;
    skos:definition "Water that is safe to drink"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Potable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fluid,
        tag:Liquid,
        tag:Potable,
        tag:Water .

brick:PowerComplexityShape a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( "real"^^xsd:string "reactive"^^xsd:string "apparent"^^xsd:string ) ;
            sh:minCount 1 ;
            sh:path brick:value ] .

brick:PowerFlowShape a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( "import"^^xsd:string "export"^^xsd:string "net"^^xsd:string "absolute"^^xsd:string ) ;
            sh:minCount 1 ;
            sh:path brick:value ] .

brick:Power_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Power Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "An alarm that indicates the off-normal conditions associated with electrical power."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Power ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Point,
        tag:Power .

brick:Precipitation a brick:Quantity ;
    rdfs:label "Precipitation" ;
    qudt:applicableUnit unit:CentiM,
        unit:DeciM,
        unit:FT,
        unit:IN,
        unit:KiloM,
        unit:M,
        unit:MicroM,
        unit:MilliM,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Length,
        brick:Level ;
    skos:definition "Amount of atmospheric water vapor fallen including rain, sleet, snow, and hail (https://project-haystack.dev/doc/lib-phScience/precipitation)",
        "Amount of atmospheric water vapor fallen including rain, sleet, snow, and hail (https://project-haystack.dev/doc/lib-phScience/precipitation)"@en .

brick:Preheat_Discharge_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Preheat Discharge Air Temperature Sensor" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Sensor ;
    skos:definition "Measures the temperature of discharge air before heating is applied"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Preheat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Point,
        tag:Preheat,
        tag:Sensor,
        tag:Temperature .

brick:Proportional_Gain_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Proportional Gain Parameter" ;
    rdfs:subClassOf brick:Gain_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Gain ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Gain,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Proportional .

brick:RC_Panel a owl:Class,
        sh:NodeShape ;
    rdfs:label "RC Panel" ;
    rdfs:subClassOf brick:Radiant_Panel ;
    skos:definition "See Radiant_Ceiling_Panel"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Panel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:RC ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Panel,
        tag:RC .

brick:RTU a owl:Class,
        sh:NodeShape ;
    rdfs:label "RTU" ;
    rdfs:subClassOf brick:AHU ;
    owl:equivalentClass brick:Rooftop_Unit ;
    skos:definition "see Rooftop_Unit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:RTU ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:RTU .

brick:RVAV a owl:Class,
        sh:NodeShape ;
    rdfs:label "RVAV" ;
    rdfs:subClassOf brick:Variable_Air_Volume_Box ;
    skos:definition "See Variable_Air_Volume_Box_With_Reheat"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:RVAV ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:RVAV .

brick:Radiance a brick:Quantity ;
    rdfs:label "Radiance" ;
    qudt:applicableUnit unit:W-PER-M2-SR ;
    brick:hasQUDTReference quantitykind:Radiance .

brick:Radioactivity_Concentration_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Radioactivity Concentration Sensor" ;
    rdfs:subClassOf brick:Air_Quality_Sensor ;
    skos:definition "Measures the concentration of radioactivity"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Concentration ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radioactivity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Concentration,
        tag:Point,
        tag:Radioactivity,
        tag:Sensor ;
    brick:hasQuantity brick:Radioactivity_Concentration ;
    brick:hasSubstance brick:Air .

brick:Radon_Concentration a brick:Quantity ;
    rdfs:label "RadonConcentration" ;
    qudt:applicableUnit unit:BQ-PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T-1D0 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:ActivityConcentration,
        brick:Radioactivity_Concentration ;
    skos:definition "The concentration of radioactivity due to Radon in a medium" .

brick:Rain_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Rain Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the amount of precipitation fallen"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Rain ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Rain,
        tag:Sensor ;
    brick:hasQuantity brick:Precipitation .

brick:Reactive_Power a brick:Quantity ;
    rdfs:label "Reactive Power" ;
    qudt:applicableUnit unit:KiloV-A_Reactive,
        unit:MegaV-A_Reactive,
        unit:V-A_Reactive ;
    skos:broader brick:Electric_Power ;
    skos:definition "Reactive Power}, for a linear two-terminal element or two-terminal circuit, under sinusoidal conditions, is the quantity equal to the product of the apparent power (S) and the sine of the displacement angle (\\psi). The absolute value of the reactive power is equal to the non-active power. The ISO (and SI) unit for reactive power is the voltampere. The special name var and symbol \\textit{var are given in IEC 60027 1."@en ;
    brick:hasQUDTReference quantitykind:ReactivePower .

brick:Real_Power a brick:Quantity ;
    rdfs:label "Real Power" ;
    qudt:applicableUnit unit:KiloV-A,
        unit:MegaV-A,
        unit:V-A ;
    owl:sameAs brick:Active_Power ;
    skos:broader brick:Electric_Power ;
    skos:definition "(Active Power) is, under periodic conditions, the mean value, taken over one period (T), of the instantaneous power (p). In complex notation, (P = Re \\; S), where (S) is (complex power)\"."@en ;
    brick:hasQUDTReference quantitykind:ActivePower .

brick:Rest_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Rest Room" ;
    rdfs:subClassOf brick:Room ;
    owl:equivalentClass brick:Restroom ;
    skos:definition "A room that provides toilets and washbowls. Alternate spelling of Restroom"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Rest ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Rest,
        tag:Room,
        tag:Space .

brick:Restroom a owl:Class,
        sh:NodeShape ;
    rdfs:label "Restroom" ;
    rdfs:subClassOf brick:Room ;
    owl:equivalentClass brick:Rest_Room ;
    skos:definition "A room that provides toilets and washbowls."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Restroom ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Restroom,
        tag:Room,
        tag:Space .

brick:Rooftop_Unit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Rooftop Unit" ;
    rdfs:subClassOf brick:AHU ;
    owl:equivalentClass brick:RTU ;
    skos:definition "Packaged air conditioner mounted on a roof, the conditioned air being discharged directly into the rooms below or through a duct system."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:AHU ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Rooftop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:AHU,
        tag:Equipment,
        tag:Rooftop .

brick:Run_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Run Status" ;
    rdfs:subClassOf brick:Start_Stop_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Run ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Run,
        tag:Status .

brick:Run_Time_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Run Time Sensor" ;
    rdfs:subClassOf brick:Duration_Sensor ;
    skos:definition "Measures the duration for which a device was in an active or \"on\" state"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Run ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Run,
        tag:Sensor,
        tag:Time .

brick:Security_Service_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Security Service Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A class of spaces used by the security staff of a facility"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Security ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Service ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Room,
        tag:Security,
        tag:Service,
        tag:Space .

brick:Shading_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Shading System" ;
    rdfs:subClassOf brick:System ;
    skos:definition "Devices that can control daylighting through various means"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Shade ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Shade,
        tag:System .

brick:Site a owl:Class,
        sh:NodeShape ;
    rdfs:label "Site" ;
    rdfs:subClassOf brick:Location ;
    skos:definition "A geographic region containing 0 or more buildings. Typically used as the encapsulating location for a collection of Brick entities through the hasSite/isSiteOf relationships"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Site ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Site .

brick:Smoke_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Smoke Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "An alarm that indicates the off-normal conditions associated with smoke."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Smoke ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Point,
        tag:Smoke .

brick:Smoke_Detection_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Smoke Detection Alarm" ;
    rdfs:subClassOf brick:Smoke_Alarm ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Detection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Smoke ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Detection,
        tag:Point,
        tag:Smoke .

brick:Solar_Radiance a brick:Quantity ;
    rdfs:label "Solar_Radiance" ;
    qudt:applicableUnit unit:W-PER-M2-SR ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Radiance,
        brick:Radiance ;
    skos:definition "The amount of light that passes through or is emitted from the sun and falls within a given solid angle in a specified direction",
        "The amount of light that passes through or is emitted from the sun and falls within a given solid angle in a specified direction"@en .

brick:Solar_Thermal_Collector a owl:Class,
        sh:NodeShape ;
    rdfs:label "Solar Thermal Collector" ;
    rdfs:subClassOf brick:Equipment ;
    skos:definition "A type of solar panels that converts solar radiation into thermal energy."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Collector ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Solar ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Thermal ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Collector,
        tag:Equipment,
        tag:Solar,
        tag:Thermal .

brick:Standby_Load_Shed_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Standby Load Shed Command" ;
    rdfs:subClassOf brick:Load_Shed_Command ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Standby ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Load,
        tag:Point,
        tag:Shed,
        tag:Standby .

brick:Standby_Unit_On_Off_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Standby Unit On Off Status" ;
    rdfs:subClassOf brick:On_Off_Status ;
    skos:definition "Indicates the on/off status of a standby unit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:On ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Standby ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Off,
        tag:On,
        tag:Point,
        tag:Standby,
        tag:Status,
        tag:Unit .

brick:Static_Pressure_Step_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Static Pressure Step Parameter" ;
    rdfs:subClassOf brick:Step_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Step ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Static,
        tag:Step .

brick:Steam a owl:Class,
        sh:NodeShape,
        brick:Steam ;
    rdfs:label "Steam" ;
    rdfs:subClassOf brick:Gas ;
    skos:definition "water in the vapor phase."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Steam ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fluid,
        tag:Gas,
        tag:Steam .

brick:Steam_Radiator a owl:Class,
        sh:NodeShape ;
    rdfs:label "Steam Radiator" ;
    rdfs:subClassOf brick:Radiator ;
    skos:definition "Radiator that uses steam"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radiator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Steam ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Radiator,
        tag:Steam .

brick:Storey a owl:Class,
        sh:NodeShape ;
    rdfs:label "Storey" ;
    rdfs:subClassOf brick:Location ;
    owl:equivalentClass brick:Floor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Storey ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Storey .

brick:Supply_Air_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Flow Sensor" ;
    rdfs:subClassOf brick:Air_Flow_Sensor ;
    owl:equivalentClass brick:Discharge_Air_Flow_Sensor ;
    skos:definition "Measures the rate of flow of supply air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Point,
        tag:Sensor,
        tag:Supply ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Air_Plenum a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Plenum" ;
    rdfs:subClassOf brick:Air_Plenum ;
    skos:definition "A component of the HVAC the receives air from the air handling unit to distribute to the building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Plenum ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Equipment,
        tag:Plenum,
        tag:Supply .

brick:Supply_Air_Static_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Static Pressure Setpoint" ;
    rdfs:subClassOf brick:Static_Pressure_Setpoint ;
    owl:equivalentClass brick:Discharge_Air_Static_Pressure_Setpoint ;
    skos:definition "Sets static pressure of supply air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static,
        tag:Supply ;
    brick:hasQuantity brick:Static_Pressure ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Temperature Sensor" ;
    rdfs:subClassOf brick:Air_Temperature_Sensor ;
    owl:equivalentClass brick:Discharge_Air_Temperature_Sensor ;
    skos:definition "Measures the temperature of supply air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Sensor,
        tag:Supply,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Supply_Air .

brick:Switch a owl:Class,
        sh:NodeShape ;
    rdfs:label "Switch" ;
    rdfs:subClassOf brick:Interface ;
    skos:definition "A switch used to operate all or part of a lighting installation"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Interface ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Switch ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Interface,
        tag:Switch .

brick:TABS_Panel a owl:Class,
        sh:NodeShape ;
    rdfs:label "TABS Panel" ;
    rdfs:subClassOf brick:Radiant_Panel ;
    skos:definition "See Thermally_Activated_Building_System_Panel"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Panel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:TABS ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Panel,
        tag:TABS .

brick:TVOC_Concentration a brick:Quantity ;
    rdfs:label "TVOCConcentration" ;
    qudt:applicableUnit unit:MicroGM-PER-M3,
        unit:PPB,
        unit:PPM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:DimensionlessRatio,
        brick:Air_Quality ;
    skos:definition "The concentration of total volatile organic compounds in air" .

brick:TVOC_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "TVOC Sensor" ;
    rdfs:subClassOf brick:Particulate_Matter_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Matter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Particulate ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:TVOC ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Matter,
        tag:Particulate,
        tag:Point,
        tag:Sensor,
        tag:TVOC ;
    brick:hasQuantity brick:TVOC_Concentration ;
    brick:hasSubstance brick:Air .

brick:TemperatureCoefficientPerDegreeCelsiusShape a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:PERCENT ) ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

brick:Temperature_Step_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Temperature Step Parameter" ;
    rdfs:subClassOf brick:Step_Parameter,
        brick:Temperature_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Step ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Parameter,
        tag:Point,
        tag:Step,
        tag:Temperature .

brick:Thermal_Power_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Thermal Power Sensor" ;
    rdfs:subClassOf brick:Power_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Power ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Thermal ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Power,
        tag:Sensor,
        tag:Thermal .

brick:TiltShape a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:ARCMIN unit:ARCSEC unit:DEG unit:GON unit:GRAD unit:MIL unit:MIN_Angle unit:MicroRAD unit:MilliARCSEC unit:MilliRAD unit:RAD unit:REV ) ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

brick:TimeseriesReference a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            skos:definition "The identifier for the timeseries data corresponding to this point" ;
            sh:datatype xsd:string ;
            sh:minCount 1 ;
            sh:path brick:hasTimeseriesId ],
        [ a sh:PropertyShape ;
            skos:definition "Refers to a database storing the timeseries data for the related point. Properties on this class are *to be determined*; feel free to add arbitrary properties onto Database instances for your particular deployment" ;
            sh:datatype xsd:string ;
            sh:path brick:storedAt ] .

brick:Torque a brick:Quantity ;
    rdfs:label "Torque" ;
    qudt:applicableUnit unit:CentiN-M,
        unit:DYN-CentiM,
        unit:DeciN-M,
        unit:J,
        unit:KiloGM_F-M,
        unit:KiloGM_F-PER-M,
        unit:KiloN-M,
        unit:LB_F-FT,
        unit:LB_F-IN,
        unit:MegaN-M,
        unit:MicroN-M,
        unit:MilliN-M,
        unit:N-CentiM,
        unit:N-M,
        unit:OZ_F-IN ;
    skos:definition "In physics, a torque (τ) is a vector that measures the tendency of a force to rotate an object about some axis. The magnitude of a torque is defined as force times its lever arm. Just as a force is a push or a pull, a torque can be thought of as a twist. The SI unit for torque is newton meters ((N m)). In U.S. customary units, it is measured in foot pounds (ft lbf) (also known as \"pounds feet\"). Mathematically, the torque on a particle (which has the position r in some reference frame) can be defined as the cross product: (τ = r x F) where, r is the particle's position vector relative to the fulcrum  F is the force acting on the particles,  or, more generally, torque can be defined as the rate of change of angular momentum: (τ = dL/dt) where, L is the angular momentum vector  t stands for time."@en ;
    brick:hasQUDTReference quantitykind:Torque .

brick:Torque_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Torque Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures torque, the tendency of a force to rotate an object about some axis"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Torque ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Sensor,
        tag:Torque ;
    brick:hasQuantity brick:Torque .

brick:Unoccupied_Load_Shed_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Load Shed Command" ;
    rdfs:subClassOf brick:Load_Shed_Command ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Load,
        tag:Point,
        tag:Shed,
        tag:Unoccupied .

brick:VAV a owl:Class,
        sh:NodeShape ;
    rdfs:label "VAV" ;
    rdfs:subClassOf brick:Terminal_Unit ;
    skos:definition "See Variable_Air_Volume_Box"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:VAV ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:VAV .

brick:Voltage_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Voltage Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "An alarm that indicates the voltage is not in a normal state."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Voltage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Point,
        tag:Voltage .

brick:Voltage_Imbalance a brick:Quantity ;
    rdfs:label "VoltageImbalance" ;
    qudt:applicableUnit unit:PERCENT ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Dimensionless ;
    skos:definition "The percent deviation from average voltage",
        "The percent deviation from average voltage"@en ;
    skos:related brick:Voltage .

brick:VolumeShape a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:FT3 unit:M3 ) ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

brick:Water_Usage_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Usage Sensor" ;
    rdfs:subClassOf brick:Usage_Sensor ;
    skos:definition "Measures the amount of water that is consumed, over some period of time"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Usage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Sensor,
        tag:Usage,
        tag:Water .

brick:Wind_Direction a brick:Quantity ;
    rdfs:label "Wind_Direction" ;
    qudt:applicableUnit unit:ARCMIN,
        unit:ARCSEC,
        unit:DEG,
        unit:GON,
        unit:GRAD,
        unit:MIL,
        unit:MicroRAD,
        unit:MilliARCSEC,
        unit:MilliRAD,
        unit:RAD,
        unit:REV ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader brick:Direction ;
    skos:definition "Direction of wind relative to North",
        "Direction of wind relative to North"@en .

brick:YearBuiltShape a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:minCount 1 ;
            sh:path brick:value ] .

brick:aggregationFunction a owl:ObjectProperty .

brick:aggregationInterval a owl:DatatypeProperty .

brick:fileLocation a owl:DatatypeProperty .

brick:hasAssociatedTag a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Has associated tag" ;
    rdfs:domain owl:Class ;
    rdfs:range brick:Tag ;
    owl:inverseOf brick:isAssociatedWith ;
    skos:definition "The class is associated with the given tag"@en .

brick:hasTimeseriesId a owl:DatatypeProperty ;
    skos:definition "The unique identifier (primary key) for this TimeseriesReference in some database"@en .

brick:isAssociatedWith a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Is associated with" ;
    rdfs:domain brick:Tag ;
    rdfs:range owl:Class ;
    owl:inverseOf brick:hasAssociatedTag ;
    skos:definition "The tag is associated with the given class"@en .

brick:isLocationOf a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Is location of" ;
    rdfs:domain brick:Location ;
    owl:inverseOf brick:hasLocation ;
    skos:definition "Subject is the physical location encapsulating the object"@en .

brick:isRegulatedBy a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Is regulated by" ;
    rdfs:domain brick:Substance ;
    rdfs:range brick:Equipment .

brick:isTagOf a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Is tag of" ;
    rdfs:domain brick:Tag .

brick:latitude a owl:DatatypeProperty,
        owl:ObjectProperty ;
    rdfs:label "Latitude" ;
    rdfs:subPropertyOf sdo1:latitude .

brick:longitude a owl:DatatypeProperty,
        owl:ObjectProperty ;
    rdfs:label "Longitude" ;
    rdfs:subPropertyOf sdo1:longitude .

brick:read-property a owl:DatatypeProperty .

brick:storedAt a owl:DatatypeProperty ;
    skos:definition "A reference to where the data for this TimeseriesReference is stored"@en .

brick:thermalTransmittance a brick:EntityProperty ;
    rdfs:label "Thermal transmittance" ;
    rdfs:range brick:ThermalTransmittanceShape ;
    rdfs:seeAlso "https://www.iso.org/obp/ui/#iso:std:iso:13789:ed-3:v1:en" ;
    skos:definition "The area-weighted average heat transfer coefficient (commonly referred to as a U-value)" .

brick:timeseries a brick:EntityProperty ;
    rdfs:domain brick:Point ;
    rdfs:range brick:TimeseriesReference ;
    rdfs:subPropertyOf brick:hasExternalReference ;
    skos:definition "Metadata for accessing related timeseries data",
        "Relates a Brick point to the TimeseriesReference that indicates where and how the data for this point is stored"@en .

s223:Coil a s223:Class,
        sh:NodeShape ;
    rdfs:label "Coil" ;
    rdfs:subClassOf s223:HeatExchanger .

s223:Damper a s223:Class,
        sh:NodeShape ;
    rdfs:label "Damper" ;
    rdfs:subClassOf s223:Device ;
    sh:property [ a sh:PropertyShape ;
            sh:class s223:ConnectionPoint ;
            sh:minCount 2 ;
            sh:name "Air inlet point" ;
            sh:path s223:hasConnectionPoint ] .

s223:DifferentialSensor a s223:Class,
        sh:NodeShape ;
    rdfs:label "Differential sensor" ;
    rdfs:subClassOf s223:Sensor ;
    sh:property [ sh:maxCount 2 ;
            sh:minCount 2 ;
            sh:path s223:hasMeasurementLocation ] .

s223:FlowDevice a s223:Class,
        sh:NodeShape ;
    rdfs:label "Flow Device" ;
    rdfs:subClassOf s223:Device ;
    sh:property [ a sh:PropertyShape ;
            sh:class s223:ConnectionPoint ;
            sh:minCount 2 ;
            sh:name "Inlet or Outlet point property" ;
            sh:path s223:hasConnectionPoint ;
            sh:severity sh:Info ],
        [ a sh:PropertyShape ;
            sh:class s223:QuantifiableProperty ;
            sh:minCount 0 ;
            sh:name "outlet pressure shape" ;
            sh:path s223:hasOutletPressure ],
        [ a sh:PropertyShape ;
            sh:in ( enum:Substance-Air enum:Substance-Water enum:Substance-Glycol ) ;
            sh:maxCount 1 ;
            sh:name "substance" ;
            sh:path s223:hasSubstance ],
        [ a sh:PropertyShape ;
            sh:class s223:QuantifiableProperty ;
            sh:minCount 0 ;
            sh:name "electric consumption shape" ;
            sh:path s223:electricConsumption ] .

s223:Manual_Valve a s223:Class,
        sh:NodeShape ;
    rdfs:label "Manual Valve" ;
    rdfs:subClassOf s223:Valve .

s223:Motorized_Valve a s223:Class,
        sh:NodeShape ;
    rdfs:label "Motorized Valve" ;
    rdfs:subClassOf s223:Valve .

s223:NonQuantifiableProperty a s223:Class,
        sh:NodeShape ;
    rdfs:label "NonQuantifiableProperty" ;
    rdfs:subClassOf s223:Property .

s223:PhysicalSpace a s223:Class,
        sh:NodeShape ;
    rdfs:label "Physical space" ;
    rdfs:comment "A PhysicalSpace is an architectural concept that can represent a room, a collection of rooms such as a floor, a part of a room, or any space that might not even be thought of as a room, such as a patio space." ;
    rdfs:subClassOf s223:Connectable ;
    sh:property [ sh:class s223:PhysicalSpace ;
            sh:path s223:contains ],
        [ sh:class s223:DomainSpace ;
            sh:path s223:encloses ] ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "If an instance of PhysicalSpace doesn't have a value for hasDomain, then set it." ;
            sh:object s223:Physical ;
            sh:predicate s223:hasDomain ;
            sh:subject sh:this ] .

s223:Segment a s223:Class,
        sh:NodeShape ;
    rdfs:label "Segment" ;
    rdfs:comment "When necessary, a Connection may be subdivided into a network of Segments, joined at Junctions. This can be useful for identifying a segment of a duct before a split, for example." ;
    rdfs:subClassOf s223:Concept ;
    sh:property [ sh:maxCount 2 ;
            sh:message "Segment is missing one or both endpoints (Junction or ConnectionPoint)" ;
            sh:minCount 2 ;
            sh:or ( [ sh:class s223:Junction ] [ sh:class s223:ConnectionPoint ] ) ;
            sh:path s223:lnx ;
            sh:qualifiedMaxCount 1 ;
            sh:qualifiedValueShape [ sh:class s223:ConnectionPoint ] ;
            sh:severity sh:Warning ] .

s223:Valve a s223:Class,
        sh:NodeShape ;
    rdfs:label "Valve" ;
    rdfs:subClassOf s223:Device .

s223:actuatesProperty a rdf:Property ;
    rdfs:label "actuates Property" ;
    s223:inverseOf s223:isActuatedBy .

s223:connectedTo a rdf:Property ;
    rdfs:label "connected to" ;
    rdfs:domain s223:Device ;
    rdfs:range s223:Device .

s223:hasExternalDataSource a rdf:Property ;
    rdfs:label "has external data source" .

s223:hasMember a rdf:Property ;
    rdfs:label "has member" .

s223:hasOutletPressure a rdf:Property ;
    rdfs:label "Outlet Pressure" ;
    rdfs:subPropertyOf s223:hasProperty .

s223:lnx a s223:SymmetricProperty ;
    rdfs:label "lnx" ;
    rdfs:comment "The lnx property is a symmetric property associating adjacent entities in a Segment-Junction Network." .

s223:relativeTo a rdf:Property ;
    rdfs:label "relative to" .

s223:systemConnected a s223:SymmetricProperty ;
    rdfs:label "System CP Connected" .

<http://data.ashrae.org/standard223/1.0/inference/data-rules> a owl:Ontology ;
    owl:imports <http://data.ashrae.org/standard223/1.0/model/all>,
        sh: ;
    owl:versionInfo "Created with TopBraid Composer" ;
    sh:declare [ sh:namespace "http://data.ashrae.org/standard223#"^^xsd:anyURI ;
            sh:prefix "s223" ],
        [ sh:namespace "http://www.w3.org/2000/01/rdf-schema#"^^xsd:anyURI ;
            sh:prefix "rdfs" ] .

<http://data.ashrae.org/standard223/1.0/validation/data> a owl:Ontology ;
    owl:imports <http://data.ashrae.org/standard223/1.0/model/all>,
        sh: ;
    owl:versionInfo "Created with TopBraid Composer" ;
    sh:declare [ sh:namespace "http://data.ashrae.org/standard223#"^^xsd:anyURI ;
            sh:prefix "s223" ],
        [ sh:namespace "http://qudt.org/schema/qudt/"^^xsd:anyURI ;
            sh:prefix "qudt" ] .

enum:Substance-Glycol a s223:EnumerationValue ;
    rdfs:label "Substance-Glycol" .

enum:Substance-Water a s223:EnumerationValue ;
    rdfs:label "Substance-Water" .

dcterms:source a owl:AnnotationProperty ;
    rdfs:label "source" ;
    rdfs:isDefinedBy dcterms: ;
    rdfs:range xsd:string .

<http://qudt.org/2.1/schema/shacl/customisations/qudt> a owl:Ontology ;
    rdfs:label "QUDT SHACL Schema Customisations- Version 2.1.15" ;
    graphql:publicClass qudt:Concept ;
    owl:imports <http://qudt.org/2.1/schema/qudt>,
        <http://qudt.org/2.1/schema/shacl/overlay/qudt>,
        sh: ;
    sh:declare [ a sh:PrefixDeclaration ;
            sh:namespace "http://qudt.org/schema/qudt/"^^xsd:anyURI ;
            sh:prefix "qudt" ],
        [ a sh:PrefixDeclaration ;
            sh:namespace "http://qudt.org/vocab/quantitykind/"^^xsd:anyURI ;
            sh:prefix "quantitykind" ],
        [ a sh:PrefixDeclaration ;
            sh:namespace "http://qudt.org/vocab/unit/"^^xsd:anyURI ;
            sh:prefix "unit" ],
        [ a sh:PrefixDeclaration ;
            sh:namespace "http://www.w3.org/2004/02/skos/core#"^^xsd:anyURI ;
            sh:prefix "skos" ] .

qudt:AbstractQuantityKind a owl:Class,
        sh:NodeShape ;
    rdfs:label "Quantity Kind (abstract)" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Concept ;
    sh:property qudt:AbstractQuantityKind-qudt_latexSymbol,
        qudt:AbstractQuantityKind-qudt_symbol,
        qudt:AbstractQuantityKind-skos_broader .

qudt:AngleUnit a owl:Class ;
    rdfs:label "Angle unit" ;
    qudt:description "All units relating to specificaiton of angles. " ;
    rdfs:isDefinedBy <http://qudt.org/2.0/schema/qudt/mathematics>,
        qudt:mathematics ;
    rdfs:subClassOf qudt:DimensionlessUnit ;
    skos:exactMatch <http://dbpedia.org/resource/Category:Units_of_angle> .

qudt:Quantifiable a owl:Class,
        sh:NodeShape ;
    rdfs:label "Quantifiable" ;
    rdfs:comment "<p><em>Quantifiable</em> ascribes to some thing the capability of being measured, observed, or counted.</p>"^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Aspect ;
    sh:property qudt:Quantifiable-qudt_dataEncoding,
        qudt:Quantifiable-qudt_dataType,
        qudt:Quantifiable-qudt_relativeStandardUncertainty,
        qudt:Quantifiable-qudt_standardUncertainty,
        qudt:Quantifiable-qudt_unit,
        qudt:Quantifiable-qudt_value .

qudt:QuantityValue a owl:Class,
        sh:NodeShape ;
    rdfs:label "Quantity value" ;
    rdfs:comment "A <i>Quantity Value</i> expresses the magnitude and kind of a quantity and is given by the product of a numerical value <code>n</code> and a unit of measure <code>U</code>. The number multiplying the unit is referred to as the numerical value of the quantity expressed in that unit. Refer to <a href=\"http://physics.nist.gov/Pubs/SP811/sec07.html\">NIST SP 811 section 7</a> for more on quantity values."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Concept,
        qudt:Quantifiable ;
    sh:property qudt:QuantityValue-qudt_unit .

qudt:SignednessType a owl:Class,
        sh:NodeShape ;
    rdfs:label "Signedness type" ;
    dcterms:description "Specifics whether a value should be signed or unsigned." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:EnumeratedValue ;
    owl:oneOf ( qudt:SIGNED qudt:UNSIGNED ) .

qudt:UnitConversionGroup a sh:PropertyGroup ;
    rdfs:label "Conversion" ;
    sh:order 60.0 .

qudt:bits a rdf:Property ;
    rdfs:label "bits" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:bytes a rdf:Property,
        owl:DatatypeProperty ;
    rdfs:label "bytes" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:dataStructure a owl:DatatypeProperty ;
    rdfs:label "data structure" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:expression a owl:AnnotationProperty ;
    rdfs:label "expression" ;
    dcterms:description "An 'expression' is a finite combination of symbols that are well-formed according to rules that apply to units of measure, quantity kinds and their dimensions."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:generalization a owl:ObjectProperty ;
    rdfs:label "generalization" ;
    dcterms:description """This property relates a quantity kind to its generalization. A quantity kind, PARENT, is a generalization of the quantity kind CHILD only if:

1. PARENT and CHILD have the same dimensions in every system of quantities;
2. Every unit that is a measure of quantities of kind CHILD is also a valid measure of quantities of kind PARENT."""^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    owl:inverseOf qudt:specialization .

qudt:hasAllowedUnit a owl:ObjectProperty ;
    rdfs:label "allowed unit" ;
    dcterms:description "This property relates a unit system with a unit of measure that is not defined by or part of the system, but is allowed for use within the system. An allowed unit must be convertible to some dimensionally eqiuvalent unit that is defined by the system."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:hasUnit .

qudt:hasBaseQuantityKind a owl:FunctionalProperty,
        owl:ObjectProperty ;
    rdfs:label "has base quantity kind" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:hasQuantityKind ;
    owl:inverseOf qudt:isBaseQuantityKindOfSystem .

qudt:hasBaseUnit a owl:ObjectProperty ;
    rdfs:label "base unit" ;
    dcterms:description "This property relates a system of units to a base unit defined within the system. The base units of a system are used to define the derived units of the system by expressing the derived units as products of the base units raised to a rational power."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:hasCoherentUnit ;
    owl:inverseOf qudt:baseUnitOfSystem .

qudt:hasDerivedCoherentUnit a owl:ObjectProperty ;
    rdfs:label "derived coherent unit" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:hasCoherentUnit,
        qudt:hasDerivedUnit ;
    owl:inverseOf qudt:derivedCoherentUnitOfSystem .

qudt:hasDimensionVector a owl:ObjectProperty ;
    rdfs:label "has dimension vector" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:hasUnitSystem a owl:FunctionalProperty,
        owl:ObjectProperty ;
    rdfs:label "has unit system" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:id a owl:DatatypeProperty ;
    rdfs:label "qudt id" ;
    dcterms:description "The \"qudt:id\" is an identifier string that uniquely identifies a QUDT concept.  The identifier is constructed using a prefix. For example, units are coded using the pattern: \"UCCCENNNN\", where \"CCC\" is a numeric code or a category and \"NNNN\" is a digit string for a member element of that category. For scaled units there may be an addition field that has the format \"QNN\" where \"NN\" is a digit string representing an exponent power, and \"Q\" is a qualifier that indicates with the code \"P\" that the power is a positive decimal exponent, or the code \"N\" for a negative decimal exponent, or the code \"B\" for binary positive exponents."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:lowerBound a owl:DatatypeProperty ;
    rdfs:label "lower bound" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:normativeReference a owl:AnnotationProperty ;
    rdfs:label "normative reference" ;
    dcterms:description "Provides a way to reference information that is an authorative source providing a standard definition"^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:permissibleMaths a owl:ObjectProperty ;
    rdfs:label "permissible maths" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:permissibleTransformation a owl:ObjectProperty ;
    rdfs:label "permissible transformation" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:qkdvDenominator a owl:ObjectProperty ;
    rdfs:label "denominator dimension vector" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:qkdvNumerator a owl:ObjectProperty ;
    rdfs:label "numerator dimension vector" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:quantityValue a owl:ObjectProperty ;
    rdfs:label "quantity value" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:rationale a owl:DatatypeProperty ;
    rdfs:label "rationale" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:upperBound a owl:DatatypeProperty ;
    rdfs:label "upper bound" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:url a owl:DatatypeProperty ;
    rdfs:label "url" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:value a owl:ObjectProperty ;
    rdfs:label "value" ;
    dcterms:description "A property to relate an observable thing with a value that can be of any simple XSD type"^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qkdv:A-1E0L0I0M0H0T0D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A-1E0L0I0M0H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance -1 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:InverseAmountOfSubstance ;
    qudt:latexDefinition "\\(N^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A-1E0L2I0M0H0T0D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A-1E0L2I0M0H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance -1 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A-1E0L2I0M1H0T-1D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A-1E0L2I0M1H0T-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance -1 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:MolarAngularMomentum ;
    qudt:latexDefinition "\\(L^2 M T^-1 N^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A-1E0L3I0M1H0T-2D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A-1E0L3I0M1H0T-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance -1 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 3 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:LengthMolarEnergy ;
    qudt:latexDefinition "\\(L^3 M T^-2 N^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E-1L0I0M1H0T-1D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E-1L0I0M1H0T-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent -1 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:MassPerElectricCharge ;
    qudt:latexDefinition "\\(M T^-1 I^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E-1L0I0M1H0T-3D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E-1L0I0M1H0T-3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent -1 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -3 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:EnergyPerAreaElectricCharge ;
    qudt:latexDefinition "\\(M T^-3 I^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E-2L3I0M1H0T-3D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E-2L3I0M1H0T-3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent -2 ;
    qudt:dimensionExponentForLength 3 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -3 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E-2L3I0M1H0T-4D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E-2L3I0M1H0T-4D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent -2 ;
    qudt:dimensionExponentForLength 3 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -4 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:InversePermittivity ;
    qudt:latexDefinition "\\(L^3 M T^-4 I^-2\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-1I0M0H-1T0D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-1I0M0H-1T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature -1 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:InverseLengthTemperature ;
    qudt:latexDefinition "\\(L^-1 Θ^-1\\)"^^qudt:LatexString ;
    qudt:latexSymbol "\\(L^{-1} \\Theta^{-1}\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-1I0M0H0T-1D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-1I0M0H0T-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-1I0M0H1T0D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-1I0M0H1T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 1 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-2I0M-1H0T2D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-2I0M-1H0T2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:InverseEnergy ;
    qudt:latexDefinition "\\(L^-2 M^-1 T^2\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-4I0M-2H0T4D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-4I0M-2H0T4D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -4 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -2 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 4 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:InverseSquareEnergy ;
    qudt:latexDefinition "\\(L^-4 M^-2 T^4\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L0I0M-2H0T0D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M-2H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -2 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L0I0M0H0T2D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M0H0T2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:TimeSquared ;
    qudt:latexDefinition "\\(T^2\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L0I0M1H-4T-3D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M1H-4T-3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature -4 ;
    qudt:dimensionExponentForTime -3 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:PowerPerAreaQuarticTemperature ;
    qudt:latexDefinition "\\(M T^{-3}.H^{-4}\\)"^^qudt:LatexString ;
    qudt:latexSymbol "\\(M T^{-3}.\\Theta^{-4}\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L1I0M1H0T-3D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L1I0M1H0T-3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -3 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L2I0M0H-1T0D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L2I0M0H-1T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature -1 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:AreaThermalExpansion ;
    qudt:latexDefinition "\\(L^2  Θ^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L2I0M1H-1T-3D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L2I0M1H-1T-3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature -1 ;
    qudt:dimensionExponentForTime -3 ;
    qudt:dimensionlessExponent 0 ;
    qudt:latexDefinition "\\(L^2 M T^-3 Θ^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E1L-1I0M-1H0T2D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E1L-1I0M-1H0T2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 1 ;
    qudt:dimensionExponentForLength -1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:MagneticReluctivity ;
    qudt:latexDefinition "\\(L^{-1} M^{-1} T^2 I\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E1L-2I0M-1H0T3D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E1L-2I0M-1H0T3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 1 ;
    qudt:dimensionExponentForLength -2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 3 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:ElectricCurrentPerUnitEnergy ;
    qudt:latexDefinition "\\(L^-2 M^-1 T^3 I\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E1L0I0M-1H0T0D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E1L0I0M-1H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 1 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime "0"^^dtype:numericUnion ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:ExposureRate ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E1L0I0M-1H1T2D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E1L0I0M-1H1T2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 1 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 1 ;
    qudt:dimensionExponentForTime 2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:TemperaturePerMagneticFluxDensity ;
    qudt:latexDefinition "\\(M^-1 T^2 I Θ\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E1L0I0M0H-1T0D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E1L0I0M0H-1T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 1 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature -1 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:ElectricCurrentPerUnitTemperature ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E1L2I0M0H0T1D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E1L2I0M0H0T1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 1 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:ElectricQuadrupoleMoment ;
    qudt:latexDefinition "\\(L^2 T I\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E2L2I0M-1H0T2D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E2L2I0M-1H0T2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 2 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:EnergyPerSquareMagneticFluxDensity ;
    qudt:latexDefinition "\\(L^2 M^-1 T^2 I^2\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E3L-1I0M-2H0T7D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E3L-1I0M-2H0T7D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 3 ;
    qudt:dimensionExponentForLength -1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -2 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 7 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:CubicElectricDipoleMomentPerSquareEnergy ;
    qudt:latexDefinition "\\(L^-1 M^-2 T^7 I^3\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E4L-2I0M-3H0T10D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E4L-2I0M-3H0T10D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 4 ;
    qudt:dimensionExponentForLength -2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -3 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 10 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:QuarticElectricDipoleMomentPerCubicEnergy ;
    qudt:latexDefinition "\\(L^-2 M^-3 T^10 I^4\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A1E0L0I0M-1H0T-1D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A1E0L0I0M-1H0T-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 1 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A1E0L1I0M-2H0T2D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A1E0L1I0M-2H0T2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 1 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -2 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:AmountOfSubstancePerUnitMassPressure ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

quantitykind:AbsoluteHumidity a qudt:QuantityKind ;
    rdfs:label "Absolute Humidity"@en ;
    dcterms:description "\"Absolute Humidity\" is an amount of water vapor, usually discussed per unit volume. Absolute humidity in air ranges from zero to roughly 30 grams per cubic meter when the air is saturated at \\(30 ^\\circ C\\). The absolute humidity changes as air temperature or pressure changes. This is very inconvenient for chemical engineering calculations, e.g. for clothes dryers, where temperature can vary considerably. As a result, absolute humidity is generally defined in chemical engineering as mass of water vapor per unit mass of dry air, also known as the mass mixing ratio, which is much more rigorous for heat and mass balance calculations. Mass of water per unit volume as in the equation above would then be defined as volumetric humidity. Because of the potential confusion."^^qudt:LatexString ;
    qudt:applicableUnit unit:GRAIN-PER-GAL,
        unit:KiloGM-PER-M3,
        unit:LB-PER-FT3,
        unit:LB-PER-GAL,
        unit:LB-PER-GAL_UK,
        unit:LB-PER-GAL_US,
        unit:LB-PER-IN3,
        unit:LB-PER-M3,
        unit:LB-PER-YD3,
        unit:MilliGM-PER-DeciL,
        unit:OZ_PER-GAL,
        unit:OZ_PER-IN3,
        unit:PlanckDensity,
        unit:SLUG-PER-FT3,
        unit:TON_LONG-PER-YD3,
        unit:TON_SHORT-PER-YD3 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Humidity"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Humidity#Absolute_humidity"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition """\\(AH = \\frac{\\mathcal{M}_\\omega}{\\vee_{net}}\\),
where \\(\\mathcal{M}_\\omega\\) is the mass of water vapor per unit volume of total air and \\(\\vee_{net}\\) is water vapor mixture."""^^qudt:LatexString ;
    qudt:symbol "AH" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:RelativeHumidity ;
    skos:broader quantitykind:Density .

quantitykind:AcousticImpedance a qudt:QuantityKind ;
    rdfs:label "Acoustic Impediance"@en ;
    qudt:applicableUnit unit:PA-SEC-PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Acoustic_impedance"^^xsd:anyURI ;
    qudt:latexDefinition "\\(Z_a= \\frac{p}{q} = \\frac{p}{vS}\\), where \\(p\\) is the sound pressure, \\(q\\) is the sound volume velocity, \\(v\\) is sound particle velocity, and \\(S\\) is the surface area through which an acoustic wave of frequence \\(f\\) propagates."^^qudt:LatexString ;
    qudt:plainTextDescription "Acoustic impedance at a surface is the complex quotient of the average sound pressure over that surface by the sound volume flow rate through that surface." ;
    qudt:symbol "Z" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Action a qudt:QuantityKind ;
    rdfs:label "Action"@en ;
    qudt:applicableUnit unit:AttoJ-SEC,
        unit:J-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Action_(physics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(S = \\int Ldt\\), where \\(L\\) is the Lagrange function and \\(t\\) is time."^^qudt:LatexString ;
    qudt:plainTextDescription """An action is usually an integral over time. But for action pertaining to fields, it may be integrated over spatial variables as well. In some cases, the action is integrated along the path followed by the physical system.  If the action is represented as an integral over time, taken a the path of the system between the initial time and the final time of the development of the system.
The evolution of a physical system between two states is determined by requiring the action be minimized or, more generally, be stationary for small perturbations about the true evolution. This requirement leads to differential equations that describe the true evolution. Conversely, an action principle is a method for reformulating differential equations of motion for a physical system as an equivalent integral equation. Although several variants have been defined (see below), the most commonly used action principle is Hamilton's principle.""" ;
    qudt:symbol "S" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:AmountOfSubstancePerUnitMassPressure a qudt:QuantityKind ;
    rdfs:label "Molar Mass variation due to Pressure"@en ;
    qudt:applicableUnit unit:MOL-PER-KiloGM-PA ;
    qudt:hasDimensionVector qkdv:A1E0L1I0M-2H0T2D0 ;
    qudt:plainTextDescription "The \"Variation of Molar Mass\" of a gas as a function of pressure." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:AngularFrequency a qudt:QuantityKind ;
    rdfs:label "Angular Frequency"@en ;
    dcterms:description "\"Angular frequency\", symbol \\(\\omega\\) (also referred to by the terms angular speed, radial frequency, circular frequency, orbital frequency, radian frequency, and pulsatance) is a scalar measure of rotation rate. Angular frequency (or angular speed) is the magnitude of the vector quantity angular velocity."^^qudt:LatexString ;
    qudt:applicableUnit unit:DEG-PER-HR,
        unit:DEG-PER-MIN,
        unit:DEG-PER-SEC,
        unit:PlanckFrequency_Ang,
        unit:RAD-PER-HR,
        unit:RAD-PER-MIN,
        unit:RAD-PER-SEC,
        unit:REV-PER-HR,
        unit:REV-PER-MIN,
        unit:REV-PER-SEC ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Angular_frequency"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Angular_frequency"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\omega = 2\\pi f\\), where \\(f\\) is frequency."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\omega\\)"^^qudt:LatexString ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:AngularVelocity .

quantitykind:AngularReciprocalLatticeVector a qudt:QuantityKind ;
    rdfs:label "Angular Reciprocal Lattice Vector"@en ;
    dcterms:description "\"Angular Reciprocal Lattice Vector\" is a vector whose scalar products with all fundamental lattice vectors are integral multiples of \\(2\\pi\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:PER-M ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://www.matter.org.uk/diffraction/geometry/lattice_vectors.htm"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:symbol "G" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:AngularWavenumber a qudt:QuantityKind ;
    rdfs:label "Angular Wavenumber"@en ;
    qudt:applicableUnit unit:RAD-PER-M ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Wavenumber"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:latexDefinition """\\(k = \\frac{2\\pi}{\\lambda}= \\frac{2\\pi\\upsilon}{\\upsilon_p}=\\frac{\\omega}{\\upsilon_p}\\), where \\(\\upsilon\\) is the frequency of the wave, \\(\\lambda\\) is the wavelength, \\(\\omega = 2\\pi \\upsilon\\) is the angular frequency of the wave, and \\(\\upsilon_p\\) is the phase velocity of the wave.

Alternatively:

\\(k = \\frac{p}{\\hbar}\\), where \\(p\\) is the linear momentum of quasi free electrons in an electron gas and \\(\\hbar\\) is the reduced Planck constant (\\(h\\) divided by \\(2\\pi\\)); for phonons, its magnitude is \\(k = \\frac{2\\pi}{\\lambda}\\), where \\(\\lambda\\) is the wavelength of the lattice vibrations."""^^qudt:LatexString ;
    qudt:plainTextDescription "\"wavenumber\" is the spatial frequency of a wave - the number of waves that exist over a specified distance. More formally, it is the reciprocal of the wavelength. It is also the magnitude of the wave vector." ;
    qudt:symbol "k" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:InverseLength .

quantitykind:AreaRatio a qudt:QuantityKind ;
    rdfs:label "Area Ratio"@en ;
    qudt:applicableUnit unit:M2-PER-HA ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvDenominator qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L2I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:AreaThermalExpansion a qudt:QuantityKind ;
    rdfs:label "Area Thermal Expansion"@en ;
    qudt:applicableUnit unit:M2-PER-K ;
    qudt:baseUnitDimensions "\\(L^2/\\Theta\\)"^^qudt:LatexString,
        "\\(m^2/K\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/area_thermal_expansion"^^xsd:anyURI ;
    qudt:plainTextDescription "When the temperature of a substance changes, the energy that is stored in the intermolecular bonds between atoms changes. When the stored energy increases, so does the length of the molecular bonds. As a result, solids typically expand in response to heating and contract on cooling; this dimensional response to temperature change is expressed by its coefficient of thermal expansion." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:BloodGlucoseLevel a qudt:QuantityKind ;
    rdfs:label "Blood Glucose Level"@en ;
    dcterms:description "The blood sugar level, blood sugar concentration, or blood glucose level is the amount of glucose present in the blood of humans and other animals. Glucose is a simple sugar and approximately 4 grams of glucose are present in the blood of humans at all times. The body tightly regulates blood glucose levels as a part of metabolic homeostasis. Glucose is stored in skeletal muscle and liver cells in the form of glycogen;[2] in fasted individuals, blood glucose is maintained at a constant level at the expense of glycogen stores in the liver and skeletal muscle. [Wikipedia] \\(\\\\\\) There are two main methods of describing concentrations: by weight, and by molecular count. Weights are in grams, molecular counts in moles. A mole is \\(6.022\\times 10^{23}\\) molecules.) In both cases, the unit is usually modified by \\(milli-\\) or \\(micro-\\) or other prefix, and is always \\(per\\) some volume, often a liter. Conversion factors depend on the molecular weight of the substance in question. \\(\\\\\\) \\(mmol/L\\) is millimoles/liter, and is the world standard unit for measuring glucose in blood. Specifically, it is the designated SI (Systeme International) unit. 'World standard' is not universal; not only the US but a number of other countries use mg/dl. A mole is about \\(6\\times 10^{23}\\) molecules. \\(\\\\\\) \\(mg/dL\\) (milligrams/deciliter) is the traditional unit for measuring bG (blood glucose). There is a trend toward using \\(mmol/L\\) however mg/dL is much in practice. Some use is made of \\(mmol/L\\) as the primary unit with \\(mg/dL\\) quoted in parentheses. This acknowledges the large base of health care providers, researchers and patients who are already familiar with \\(mg/dL|)."^^qudt:LatexString ;
    qudt:applicableUnit unit:MilliMOL-PER-L ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T0D0 ;
    qudt:informativeReference "http://www.faqs.org/faqs/diabetes/faq/part1/section-9.html"^^xsd:anyURI ;
    rdfs:comment "citation: https://en.wikipedia.org/wiki/Blood_sugar_level" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:BloodGlucoseLevel_Mass .

quantitykind:BloodGlucoseLevel_Mass a qudt:QuantityKind ;
    rdfs:label "Blood Glucose Level by Mass"@en ;
    dcterms:description "The blood sugar level, blood sugar concentration, or blood glucose level is the amount of glucose present in the blood of humans and other animals. Glucose is a simple sugar and approximately 4 grams of glucose are present in the blood of humans at all times. The body tightly regulates blood glucose levels as a part of metabolic homeostasis. Glucose is stored in skeletal muscle and liver cells in the form of glycogen;[2] in fasted individuals, blood glucose is maintained at a constant level at the expense of glycogen stores in the liver and skeletal muscle. [Wikipedia] \\(\\\\\\) There are two main methods of describing concentrations: by weight, and by molecular count. Weights are in grams, molecular counts in moles. A mole is \\(6.022\\times 10^{23}\\) molecules.) In both cases, the unit is usually modified by \\(milli-\\) or \\(micro-\\) or other prefix, and is always \\(per\\) some volume, often a liter. Conversion factors depend on the molecular weight of the substance in question. \\(\\\\\\) \\(mmol/L\\) is millimoles/liter, and is the world standard unit for measuring glucose in blood. Specifically, it is the designated SI (Systeme International) unit. 'World standard' is not universal; not only the US but a number of other countries use mg/dl. A mole is about \\(6\\times 10^{23}\\) molecules. \\(\\\\\\) \\(mg/dL\\) (milligrams/deciliter) is the traditional unit for measuring bG (blood glucose). There is a trend toward using \\(mmol/L\\) however mg/dL is much in practice. Some use is made of \\(mmol/L\\) as the primary unit with \\(mg/dL\\) quoted in parentheses. This acknowledges the large base of health care providers, researchers and patients who are already familiar with \\(mg/dL|)."^^qudt:LatexString ;
    qudt:applicableUnit unit:MilliGM-PER-DeciL ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:informativeReference "http://www.faqs.org/faqs/diabetes/faq/part1/section-9.html"^^xsd:anyURI ;
    rdfs:comment "citation: https://en.wikipedia.org/wiki/Blood_sugar_level" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:BloodGlucoseLevel .

quantitykind:BodyMassIndex a qudt:QuantityKind ;
    rdfs:label "Body Mass Index"@en ;
    dcterms:description "\\(\\textit{Body Mass Index}\\), BMI, is an index of weight for height, calculated as: \\(BMI = \\frac{M_{body}}{H}\\), where \\(M_{body}\\) is body mass in kg, and \\(H\\) is height in metre. The BMI has been used as a guideline for defining whether a person is overweight because it minimizes the effect of height, but it does not take into consideration other important factors, such as age and body build. The BMI has also been used as an indicator of obesity on the assumption that the higher the index, the greater the level of body fat."^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloGM-PER-M,
        unit:KiloGM-PER-MilliM ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T0D0 ;
    qudt:informativeReference "http://www.oxfordreference.com/view/10.1093/acref/9780198631477.001.0001/acref-9780198631477-e-254"^^xsd:anyURI ;
    qudt:symbol "BMI" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "BMI" .

quantitykind:Concentration a qudt:QuantityKind ;
    rdfs:label "Concentration"@en ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Concentration"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Concentration"^^xsd:anyURI ;
    qudt:plainTextDescription "In chemistry, concentration is defined as the abundance of a constituent divided by the total volume of a mixture. Furthermore, in chemistry, four types of mathematical description can be distinguished: mass concentration, molar concentration, number concentration, and volume concentration. The term concentration can be applied to any kind of chemical mixture, but most frequently it refers to solutes in solutions." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ConductionSpeed a qudt:QuantityKind ;
    rdfs:label "Conduction Speed"@en ;
    qudt:applicableUnit unit:GigaHZ-M,
        unit:KiloHZ-M ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Conduction Speed\" is the speed of impulses in nerve fibers." ;
    qudt:symbol "c" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Speed .

quantitykind:CubicElectricDipoleMomentPerSquareEnergy a qudt:QuantityKind ;
    rdfs:label "Cubic Electric Dipole Moment per Square Energy"@en ;
    qudt:applicableUnit unit:C3-M-PER-J2 ;
    qudt:baseUnitDimensions "\\(A^3 \\cdot s^7/kg^2 \\cdot m\\)"^^qudt:LatexString,
        "\\(I^3 \\cdot T^7/L \\cdot M^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E3L-1I0M-2H0T7D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:CurieTemperature a qudt:QuantityKind ;
    rdfs:label "Curie Temperature"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Curie_temperature"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Curie Temperature\" is the critical thermodynamic temperature of a ferromagnet." ;
    qudt:symbol "T_C" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:closeMatch quantitykind:NeelTemperature,
        quantitykind:SuperconductionTransitionTemperature .

quantitykind:DisplacementCurrent a qudt:QuantityKind ;
    rdfs:label "Displacement Current"@en ;
    qudt:applicableUnit unit:A ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Displacement_current"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(I_D= \\int_S J_D \\cdot e_n dA\\), over a surface \\(S\\), where \\(J_D\\) is displacement current density and \\(e_n dA\\) is the vector surface element."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Displacement Current\" is a quantity appearing in Maxwell's equations that is defined in terms of the rate of change of electric displacement field. Displacement current has the units of electric current density, and it has an associated magnetic field just as actual currents do. However it is not an electric current of moving charges, but a time-varying electric field. In materials, there is also a contribution from the slight motion of charges bound in atoms, dielectric polarization." ;
    qudt:symbol "I_D" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricFluxDensity .

quantitykind:DisplacementCurrentDensity a qudt:QuantityKind ;
    rdfs:label "Displacement Current Density"@en ;
    dcterms:description "\\(\\textbf{Displacement Current Density}\\) is the time rate of change of the \\(\\textit{Electric Flux Density}\\). This is a measure of how quickly the electric field changes if we observe it as a function of time. This is different than if we look at how the electric field changes spatially, that is, over a region of space for a fixed amount of time."^^qudt:LatexString ;
    qudt:applicableUnit unit:A-PER-M2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Electric_flux"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T0D0 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI,
        "http://www.maxwells-equations.com/math/partial-electric-flux.php"^^xsd:anyURI ;
    qudt:latexDefinition "\\(J_D = \\frac{\\partial D}{\\partial t}\\), where \\(D\\) is electric flux density and \\(t\\) is time."^^qudt:LatexString ;
    qudt:latexSymbol "\\(J_D\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricFluxDensity .

quantitykind:DynamicPressure a qudt:QuantityKind ;
    rdfs:label "Dynamic Pressure"@en ;
    dcterms:description "Dynamic Pressure (indicated with q, or Q, and sometimes called velocity pressure) is the quantity defined by: \\(q = 1/2 * \\rho v^{2}\\), where (using SI units),  \\(q\\) is dynamic pressure in \\(pascals\\), \\(\\rho\\) is fluid density in \\(kg/m^{3}\\) (for example, density of air) and \\(v \\) is fluid velocity in \\(m/s\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CM_H2O,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Dynamic_pressure"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:symbol "q" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Pressure .

quantitykind:ElectricChargeLineDensity a qudt:QuantityKind ;
    rdfs:label "Electric Charge Line Density"@en ;
    dcterms:description "In electromagnetism, charge density is a measure of electric charge per unit volume of space, in one, two or three dimensions. More specifically: the linear, surface, or volume charge density is the amount of electric charge per unit length, surface area, or volume, respectively. The respective SI units are \\(C \\cdot \\), \\(m^{-1}\\), \\(C \\cdot m^{-2}\\) or \\(C \\cdot m^{-3}\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:C-PER-M ;
    qudt:baseUnitDimensions "\\(A \\cdot s/m\\)"^^qudt:LatexString,
        "\\(I \\cdot T/L\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M0H0T1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Charge_density"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\lambda\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectricCurrentPerUnitEnergy a qudt:QuantityKind ;
    rdfs:label "Electric Current per Unit Energy"@en ;
    qudt:applicableUnit unit:A-PER-J ;
    qudt:baseUnitDimensions "\\(A \\cdot s^3/kg \\cdot m^2\\)"^^qudt:LatexString,
        "\\(I \\cdot T^3/L^2 \\cdot M\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M-1H0T3D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectricCurrentPerUnitLength a qudt:QuantityKind ;
    rdfs:label "Electric Current per Unit Length"@en ;
    qudt:baseUnitDimensions "\\(A/m\\)"^^qudt:LatexString,
        "\\(I/L\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectricCurrentPerUnitTemperature a qudt:QuantityKind ;
    rdfs:label "Electric Current per Unit Temperature"@en ;
    qudt:applicableUnit unit:A-PER-DEG_C ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H-1T0D0 ;
    qudt:plainTextDescription "\"Electric Current per Unit Temperature\" is used to express how a current is subject to temperature. Originally used in Wien's Law to describe phenomena related to filaments. One use today is to express how a current generator derates with temperature." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind/all> .

quantitykind:ElectricPower a qudt:QuantityKind ;
    rdfs:label "Electric Power"@en ;
    dcterms:description "\"Electric Power\" is the rate at which electrical energy is transferred by an electric circuit. In the simple case of direct current circuits, electric power can be calculated as the product of the potential difference in the circuit (V) and the amount of current flowing in the circuit (I): \\(P = VI\\), where \\(P\\) is the power, \\(V\\) is the potential difference, and \\(I\\) is the current. However, in general electric power is calculated by taking the integral of the vector cross-product of the electrical and magnetic fields over a specified area."^^qudt:LatexString ;
    qudt:applicableSIUnit unit:KiloW,
        unit:MegaW,
        unit:MilliW,
        unit:W ;
    qudt:applicableUnit unit:BAR-L-PER-SEC,
        unit:BAR-M3-PER-SEC,
        unit:BTU_IT-PER-HR,
        unit:BTU_IT-PER-SEC,
        unit:ERG-PER-SEC,
        unit:FT-LB_F-PER-HR,
        unit:FT-LB_F-PER-MIN,
        unit:FT-LB_F-PER-SEC,
        unit:GigaW,
        unit:HP,
        unit:HP-PER-M,
        unit:HP-PER-V,
        unit:HP_Boiler,
        unit:HP_Brake,
        unit:HP_Electric,
        unit:HP_Metric,
        unit:J-PER-HR,
        unit:J-PER-SEC,
        unit:KiloCAL-PER-MIN,
        unit:KiloCAL-PER-SEC,
        unit:KiloW,
        unit:MegaJ-PER-SEC,
        unit:MegaPA-L-PER-SEC,
        unit:MegaPA-M3-PER-SEC,
        unit:MegaW,
        unit:MicroW,
        unit:MilliBAR-L-PER-SEC,
        unit:MilliBAR-M3-PER-SEC,
        unit:MilliW,
        unit:NanoW,
        unit:PA-L-PER-SEC,
        unit:PA-M3-PER-SEC,
        unit:PSI-IN3-PER-SEC,
        unit:PSI-M3-PER-SEC,
        unit:PSI-YD3-PER-SEC,
        unit:PicoW,
        unit:PlanckPower,
        unit:TON_FG,
        unit:TeraW,
        unit:W ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:latexDefinition "\\(p = ui\\), where \\(u\\) is instantaneous voltage and \\(i\\) is instantaneous electric current."^^qudt:LatexString ;
    qudt:symbol "P_E" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Power .

quantitykind:ElectricQuadrupoleMoment a qudt:QuantityKind ;
    rdfs:label "Electric Quadrupole Moment"@en ;
    qudt:applicableUnit unit:C-M2 ;
    qudt:baseUnitDimensions "\\(A \\cdot m^2 \\cdot s\\)"^^qudt:LatexString,
        "\\(I \\cdot L^2 \\cdot T\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L2I0M0H0T1D0 ;
    qudt:plainTextDescription "The Electric Quadrupole Moment is a quantity which describes the effective shape of the ellipsoid of nuclear charge distribution. A non-zero quadrupole moment Q indicates that the charge distribution is not spherically symmetric. By convention, the value of Q is taken to be positive if the ellipsoid is prolate and negative if it is oblate. In general, the electric quadrupole moment is tensor-valued." ;
    qudt:symbol "Q" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectromagneticEnergyDensity a qudt:QuantityKind ;
    rdfs:label "Electromagnetic Energy Density"@en ;
    dcterms:description "\\(\\textbf{Electromagnetic Energy Density}\\), also known as the \\(\\color{indigo} {\\textit{Volumic Electromagnetic Energy}}\\), is the energy associated with an electromagnetic field, per unit volume of the field."^^qudt:LatexString ;
    qudt:applicableUnit unit:J-PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-64"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(w = (1/2) ( \\mathbf{E} \\cdot \\mathbf{D} + \\mathbf{B} \\cdot \\mathbf{H})\\), where \\(\\mathbf{E}\\) is electric field strength, \\(\\mathbf{D}\\) is electric flux density, \\(\\mathbf{M}\\) is magnetic flux density, and \\(\\mathbf{H}\\) is magnetic field strength."^^qudt:LatexString ;
    qudt:symbol "w" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricFieldStrength,
        quantitykind:ElectricFluxDensity,
        quantitykind:MagneticFieldStrength_H,
        quantitykind:MagneticFluxDensity ;
    owl:sameAs quantitykind:VolumicElectromagneticEnergy .

quantitykind:EnergyPerAreaElectricCharge a qudt:QuantityKind ;
    rdfs:label "Energy Per Area Electric Charge"@en ;
    qudt:applicableUnit unit:V-PER-M2 ;
    qudt:baseUnitDimensions "\\(M/I \\cdot T^3\\)"^^qudt:LatexString,
        "\\(kg/A \\cdot s^3\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-1L0I0M1H0T-3D0 ;
    qudt:plainTextDescription "\"Energy Per Area Electric Charge\" is the amount of electric energy associated with a unit of area." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:EnergyPerSquareMagneticFluxDensity a qudt:QuantityKind ;
    rdfs:label "Energy Per Square Magnetic Flux Density"@en ;
    qudt:applicableUnit unit:J-PER-T2 ;
    qudt:baseUnitDimensions "\\(A^2 \\cdot m^2 \\cdot s^2/kg\\)"^^qudt:LatexString,
        "\\(I^2 \\cdot L^2 \\cdot T^2/M\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E2L2I0M-1H0T2D0 ;
    qudt:plainTextDescription "\"Energy Per Square Magnetic Flux Density\" is a measure of energy for a unit of magnetic flux density." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ExposureRate a qudt:QuantityKind ;
    rdfs:label "Exposure Rate"@en ;
    qudt:applicableUnit unit:C-PER-KiloGM-SEC ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M-1H0T0D0 ;
    qudt:informativeReference "http://hps.org/publicinformation/ate/faqs/gammaandexposure.html"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\dot{X} = \\frac{dX}{dt}\\), where \\(X\\) is the increment of exposure during time interval with duration \\(t\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\dot{X}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Exposure Rate\" expresses the rate of charge production per unit mass of air and is commonly expressed in roentgens per hour (R/h) or milliroentgens per hour (mR/h)." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Friction a qudt:QuantityKind ;
    rdfs:label "Friction"@en ;
    qudt:applicableUnit unit:DYN,
        unit:KIP_F,
        unit:KiloGM_F,
        unit:KiloN,
        unit:KiloP,
        unit:KiloPOND,
        unit:LB_F,
        unit:MegaLB_F,
        unit:MegaN,
        unit:MicroN,
        unit:MilliN,
        unit:N,
        unit:OZ_F,
        unit:PDL,
        unit:PlanckForce,
        unit:TON_F_US ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Friction"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Friction"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Friction\" is the force of two surfaces In contact, or the force of a medium acting on a moving object (that is air on an aircraft). When contacting surfaces move relative to each other, the friction between the two objects converts kinetic energy into thermal energy." ;
    qudt:url "http://wiki.answers.com/Q/What_is_the_symbol_of_friction"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Force .

quantitykind:GroupSpeedOfSound a qudt:QuantityKind ;
    rdfs:label "Group Speed of Sound"@en ;
    qudt:applicableUnit unit:GigaHZ-M,
        unit:KiloHZ-M ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Speed_of_sound"^^xsd:anyURI ;
    qudt:latexDefinition "\\(c_g = \\frac{d\\omega}{dk}\\), where \\(\\omega\\) is the angular frequency and \\(k\\) is angular wavenumber."^^qudt:LatexString ;
    qudt:plainTextDescription "In a dispersive medium sound speed is a function of sound frequency, through the dispersion relation. The spatial and temporal distribution of a propagating disturbance will continually change. The group speed of sound describes the propagation of the disturbance." ;
    qudt:symbol "c" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:SpeedOfSound .

quantitykind:Illuminance a qudt:QuantityKind ;
    rdfs:label "Illuminance"@en ;
    qudt:applicableUnit unit:FC,
        unit:LUX,
        unit:PHOT ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Illuminance"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-2I1M0H0T0D0 ;
    qudt:latexDefinition "\\(E_v = \\frac{d\\Phi}{dA}\\), where \\(d\\Phi\\) is the luminous flux incident on an element of the surface with area \\(dA\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "Illuminance is the total luminous flux incident on a surface, per unit area. It is a measure of the intensity of the incident light, wavelength-weighted by the luminosity function to correlate with human brightness perception." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:LuminousFluxPerArea ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Illuminance> .

quantitykind:InverseAmountOfSubstance a qudt:QuantityKind ;
    rdfs:label "Inverse amount of substance"@en ;
    qudt:applicableUnit unit:PER-MOL ;
    qudt:baseUnitDimensions "\\(/M\\)"^^qudt:LatexString,
        "\\(/mol\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A-1E0L0I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:InverseEnergy a qudt:QuantityKind ;
    rdfs:label "Inverse Energy"@en ;
    qudt:applicableUnit unit:PER-KiloV-A-HR ;
    qudt:baseUnitDimensions "\\(T^2/L^2 \\cdot M\\)"^^qudt:LatexString,
        "\\(s^2/kg \\cdot m^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M-1H0T2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:InverseLengthTemperature a qudt:QuantityKind ;
    rdfs:label "Inverse Length Temperature"@en ;
    qudt:applicableUnit unit:PER-M-K ;
    qudt:baseUnitDimensions "\\(/K \\cdot m\\)"^^qudt:LatexString,
        "\\(/\\Theta \\cdot L\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H-1T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:InversePermittivity a qudt:QuantityKind ;
    rdfs:label "Inverse Permittivity"@en ;
    qudt:applicableUnit unit:M-PER-FARAD ;
    qudt:baseUnitDimensions "\\(L^3 \\cdot M/I^2 \\cdot T^4\\)"^^qudt:LatexString,
        "\\(kg \\cdot m^3/A^2 \\cdot s^4\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-2L3I0M1H0T-4D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:InverseSquareEnergy a qudt:QuantityKind ;
    rdfs:label "Inverse Square Energy"@en ;
    qudt:applicableUnit unit:PER-GigaEV2 ;
    qudt:baseUnitDimensions "\\(T^4/L^4 \\cdot M^2\\)"^^qudt:LatexString,
        "\\(s^4/kg^2 \\cdot m^4\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-4I0M-2H0T4D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:InverseTime a qudt:QuantityKind ;
    rdfs:label "Inverse Time"@en ;
    qudt:baseUnitDimensions "\\(/T\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:IonizationEnergy a qudt:QuantityKind ;
    rdfs:label "Ionization Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Ionization_energy"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Ionization Energy\" is the energy difference between an electron at rest at infinity and an electron at a certain energy level. The amount of energy required to remove an electron from that atom or molecule in the gas phase." ;
    qudt:symbol "E_i" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

quantitykind:IsentropicCompressibility a qudt:QuantityKind ;
    rdfs:label "Isentropic Compressibility"@en ;
    qudt:applicableUnit unit:PER-PA ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M-1H0T2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Compressibility"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\varkappa_S = \\frac{1}{V}\\left (\\frac{\\partial V}{\\partial p} \\right )_S\\), where \\(V\\) is volume, \\(p\\) is \\(pressure\\), and \\(S\\) is entropy,"^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\varkappa_S\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Isentropic compressibility is the extent to which a material reduces its volume when it is subjected to compressive stresses at a constant value of entropy." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:IsentropicExponent a qudt:QuantityKind ;
    rdfs:label "Isentropic Exponent"@en ;
    dcterms:description "Isentropic exponent is a variant of \"Specific Heat Ratio Capacities}. For an ideal gas \\textit{Isentropic Exponent\"\\(, \\varkappa\\). is equal to \\(\\gamma\\), the ratio of its specific heat capacities \\(c_p\\) and \\(c_v\\) under steady pressure and volume."^^qudt:LatexString ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.citizendium.org/wiki/Specific_heat_ratio"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Compressibility"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\varkappa = -\\frac{V}{p}\\left \\{  \\frac{\\partial p}{\\partial  V}\\right \\}_S\\), where \\(V\\) is volume, \\(p\\) is pressure, and \\(S\\) is entropy."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\varkappa\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:IsentropicCompressibility .

quantitykind:KinematicViscosity a qudt:QuantityKind ;
    rdfs:label "Kinematic Viscosity"@en ;
    dcterms:description "The ratio of the viscosity of a liquid to its density. Viscosity is a measure of the resistance of a fluid which is being deformed by either shear stress or tensile stress. In many situations, we are concerned with the ratio of the inertial force to the viscous force (that is the Reynolds number), the former characterized by the fluid density \\(\\rho\\). This ratio is characterized by the kinematic viscosity (Greek letter \\(\\nu\\)), defined as follows:  \\(\\nu = \\mu / \\rho\\). The SI unit of \\(\\nu\\) is \\(m^{2}/s\\). The SI unit of \\(\\nu\\) is \\(kg/m^{1}\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:CentiST,
        unit:ST ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Viscosity"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Viscosity"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\nu = \\frac{\\eta}{\\rho}\\), where \\(\\eta\\) is dynamic viscosity and \\(\\rho\\) is mass density."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\nu\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:AreaPerTime .

quantitykind:LengthEnergy a qudt:QuantityKind ;
    rdfs:label "Length Energy"@en ;
    qudt:applicableUnit unit:MegaEV-FemtoM ;
    qudt:baseUnitDimensions "\\(L^3 \\cdot M/T^2\\)"^^qudt:LatexString,
        "\\(kg \\cdot m^3/s^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LengthMolarEnergy a qudt:QuantityKind ;
    rdfs:label "Length Molar Energy"@en ;
    qudt:applicableUnit unit:J-M-PER-MOL ;
    qudt:baseUnitDimensions "\\(L^3 \\cdot M/M \\cdot T^2\\)"^^qudt:LatexString,
        "\\(kg \\cdot m^3/mol \\cdot s^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A-1E0L3I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LinearAcceleration a qudt:QuantityKind ;
    rdfs:label "Linear Acceleration"@en ;
    qudt:baseUnitDimensions "\\(L/T^2\\)"^^qudt:LatexString,
        "\\(m/s^2\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Acceleration"^^xsd:anyURI ;
    qudt:exactMatch quantitykind:Acceleration ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:Acceleration .

quantitykind:LinearDensity a qudt:QuantityKind ;
    rdfs:label "Linear Density"@en ;
    qudt:applicableUnit unit:KiloGM-PER-M,
        unit:KiloGM-PER-MilliM ;
    qudt:baseUnitDimensions "\\(kg m^{-1}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Linear_density"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\rho_l = \\frac{dm}{dl}\\), where \\(m\\) is mass and \\(l\\) is length."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\rho_l\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The Linear density, linear mass density or linear mass is a measure of mass per unit of length, and it is a characteristic of strings or other one-dimensional objects." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LuminousFlux a qudt:QuantityKind ;
    rdfs:label "Luminous Flux"@en ;
    qudt:applicableUnit unit:LM ;
    qudt:baseUnitDimensions "\\(J \\cdot U\\)"^^qudt:LatexString,
        "\\(cd\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Luminous_flux"^^xsd:anyURI ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Luminous_flux"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Phi_v = K_m \\int_{0}^{\\infty}{\\Phi_\\lambda(\\lambda)}{V(\\lambda)d\\lambda}\\), where \\(K_m\\) is the maximum spectral luminous efficacy, \\(\\Phi_\\lambda(\\lambda)\\) is the spectral radiant flux, \\(V(\\lambda)\\) is the spectral luminous efficiency, and \\(\\lambda\\) is the wavelength."^^qudt:LatexString ;
    qudt:plainTextDescription "Luminous Flux or Luminous Power is the measure of the perceived power of light. It differs from radiant flux, the measure of the total power of light emitted, in that luminous flux is adjusted to reflect the varying sensitivity of the human eye to different wavelengths of light." ;
    qudt:symbol "F" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Luminous_flux> .

quantitykind:MagneticField a qudt:QuantityKind ;
    rdfs:label "Magnetic Field"@en ;
    dcterms:description "The Magnetic Field, denoted \\(B\\), is a fundamental field in electrodynamics which characterizes the magnetic force exerted by electric currents.  It is closely related to the auxillary magnetic field H (see quantitykind:AuxillaryMagneticField)."^^qudt:LatexString ;
    qudt:applicableUnit unit:Gamma,
        unit:T_Ab ;
    qudt:baseUnitDimensions "\\(M/I \\cdot T^2\\)"^^qudt:LatexString,
        "\\(kg/A \\cdot s^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-1L0I0M1H0T-2D0 ;
    qudt:symbol "B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MagneticReluctivity a qudt:QuantityKind ;
    rdfs:label "Magnetic Reluctivity"@en ;
    qudt:applicableUnit unit:PER-T-M ;
    qudt:baseUnitDimensions "\\(A \\cdot s^2/kg \\cdot m\\)"^^qudt:LatexString,
        "\\(I \\cdot T^2/L \\cdot M\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M-1H0T2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Permeability_(electromagnetism)"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Length Per Unit Magnetic Flux} is the the resistance of a material to the establishment of a magnetic field in it. It is the reciprocal of \\textit{Magnetic Permeability\", the inverse of the measure of the ability of a material to support the formation of a magnetic field within itself." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectromagneticPermeability .

quantitykind:MagneticTension a qudt:QuantityKind ;
    rdfs:label "Magnetic Tension"@en ;
    qudt:applicableUnit unit:A ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-57"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(U_m = \\int_{r_a(C)}^{r_b} \\mathbf{H} \\cdot dr\\), where \\(\\mathbf{H}\\) is magnetic field strength and \\(r\\) is the position vector along a given curve \\(C\\) from point \\(a\\) to point \\(b\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Magnetic Tension} is a scalar quantity equal to the line integral of the magnetic field strength \\mathbf{H\" along a specified path linking two points a and b." ;
    qudt:symbol "U_m" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:MagneticFieldStrength_H .

quantitykind:Magnetization a qudt:QuantityKind ;
    rdfs:label "Magnetization"@en ;
    qudt:applicableUnit unit:A-PER-CentiM,
        unit:A-PER-M,
        unit:A-PER-MilliM,
        unit:KiloA-PER-M,
        unit:MilliA-PER-IN,
        unit:MilliA-PER-MilliM ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-52"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(M = dm/dV\\), where \\(m\\) is magentic moment of a substance in a domain with Volume \\(V\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Magnetization\" is defined as the ratio of magnetic moment per unit volume. It is a vector-valued quantity." ;
    qudt:symbol "H_i",
        "M" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:LinearElectricCurrent .

quantitykind:MassFractionOfDryMatter a qudt:QuantityKind ;
    rdfs:label "Mass Fraction of Dry Matter"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(w_d= 1 - w_{h2o}\\), where \\(w_{h2o}\\) is mass fraction of water."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Mass Fraction of Dry Matter} is one of a number of \\textit{Concentration\" quantities defined by ISO 8000." ;
    qudt:symbol "w_d" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:MassFractionOfWater .

quantitykind:MassFractionOfWater a qudt:QuantityKind ;
    rdfs:label "Mass Fraction of Water"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(w_{H_2o} = \\frac{u}{1+u}\\), where \\(u\\) is mass ratio of water to dry water."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Mass Fraction of Water} is one of a number of \\textit{Concentration\" quantities defined by ISO 8000." ;
    qudt:symbol "w_{H_2o}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:MassFractionOfDryMatter .

quantitykind:MassPerElectricCharge a qudt:QuantityKind ;
    rdfs:label "Mass per Electric Charge"@en ;
    dcterms:description "The mass-to-charge ratio ratio (\\(m/Q\\)) is a physical quantity that is widely used in the electrodynamics of charged particles, for example, in electron optics and ion optics. The importance of the mass-to-charge ratio, according to classical electrodynamics, is that two particles with the same mass-to-charge ratio move in the same path in a vacuum when subjected to the same electric and magnetic fields. Its SI units are \\(kg/C\\), but it can also be measured in Thomson (\\(Th\\))."^^qudt:LatexString ;
    qudt:applicableUnit unit:T-SEC ;
    qudt:baseUnitDimensions "\\(M/I \\cdot T\\)"^^qudt:LatexString,
        "\\(kg/A \\cdot s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-1L0I0M1H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mass-to-charge_ratio"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MeanMassRange a qudt:QuantityKind ;
    rdfs:label "Mean Mass Range"@en ;
    qudt:applicableUnit unit:KiloGM-PER-M2,
        unit:LB-PER-IN2 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T0D0 ;
    qudt:informativeReference "http://goldbook.iupac.org/M03783.html"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(R_\\rho = R\\rho\\), where \\(R\\) is the mean linear range and \\(\\rho\\) is the mass density of the sample."^^qudt:LatexString ;
    qudt:latexSymbol "\\(R_\\rho\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Mean Mass Range\" is the mean linear range multiplied by the mass density of the material." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MolarAngularMomentum a qudt:QuantityKind ;
    rdfs:label "Molar Angular Momentum"@en ;
    qudt:applicableUnit unit:J-SEC-PER-MOL ;
    qudt:baseUnitDimensions "\\(L^2 \\cdot M/M \\cdot T\\)"^^qudt:LatexString,
        "\\(kg \\cdot m^2/mol \\cdot s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A-1E0L2I0M1H0T-1D0 ;
    qudt:url "http://cvika.grimoar.cz/callen/callen_21.pdf"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MolarAttenuationCoefficient a qudt:QuantityKind ;
    rdfs:label "Molar Attenuation Coefficient"@en ;
    qudt:applicableUnit unit:M2-PER-MOL ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mass_attenuation_coefficient"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mu_c = -\\frac{\\mu}{c}\\), where \\(\\mu\\) is the linear attenuation coefficient and \\(c\\) is the amount-of-substance concentration."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\mu_c\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Molar Attenuation Coefficient\" is a measurement of how strongly a chemical species or substance absorbs or scatters light at a given wavelength, per amount of substance." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:closeMatch quantitykind:MassAttenuationCoefficient .

quantitykind:MortalityRate a qudt:QuantityKind ;
    rdfs:label "Mortality Rate"@en ;
    qudt:applicableUnit unit:DEATHS-PER-1000000I-YR,
        unit:DEATHS-PER-1000I-YR ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Mortality_rate"^^xsd:anyURI ;
    qudt:plainTextDescription "Mortality rate, or death rate, is a measure of the number of deaths (in general, or due to a specific cause) in a particular population, scaled to the size of that population, per unit of time." ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Incidence .

quantitykind:NeelTemperature a qudt:QuantityKind ;
    rdfs:label "Neel Temperature"@en ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Néel_temperature"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Neel Temperature\" is the critical thermodynamic temperature of an antiferromagnet." ;
    qudt:symbol "T_C" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:closeMatch quantitykind:CurieTemperature,
        quantitykind:SuperconductionTransitionTemperature .

quantitykind:NuclearQuadrupoleMoment a qudt:QuantityKind ;
    rdfs:label "Nuclear Quadrupole Moment"@en ;
    qudt:applicableUnit unit:M2,
        unit:NanoM2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Nuclear_quadrupole_resonance"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(Q = (\\frac{1}{e}) \\int (3z^2 - r^2)\\rho(x, y, z)dV\\), in the quantum state with the nuclear spin in the field direction \\((z)\\), where \\(\\rho(x, y, z)\\) is the nuclear electric charge density, \\(e\\) is the elementary charge, \\(r^2 = x^2 + y^2 + z^2\\), and \\(dV\\) is the volume element \\(dx\\) \\(dy\\) \\(dz\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Nuclear Quadrupole Moment\" is a quantity that characterizes the deviation from spherical symmetry of the electrical charge distribution in an atomic nucleus." ;
    qudt:symbol "Q" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PhaseSpeedOfSound a qudt:QuantityKind ;
    rdfs:label "Phase speed of sound"@en ;
    qudt:applicableUnit unit:GigaHZ-M,
        unit:KiloHZ-M ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Speed_of_sound"^^xsd:anyURI ;
    qudt:latexDefinition "\\(c = \\frac{\\omega}{k} = \\lambda f\\), where \\(\\omega\\) is the angular frequency, \\(k\\) is angular wavenumber, \\(\\lambda\\) is the wavelength, and \\(f\\) is the frequency."^^qudt:LatexString ;
    qudt:plainTextDescription "In a dispersive medium sound speed is a function of sound frequency, through the dispersion relation. The spatial and temporal distribution of a propagating disturbance will continually change. Each frequency component propagates at its own Phase Velocity of Sound." ;
    qudt:symbol "c" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:SpeedOfSound .

quantitykind:PlaneAngle a qudt:QuantityKind ;
    rdfs:label "Plane Angle"@en ;
    dcterms:description "The inclination to each other of two intersecting lines, measured by the arc of a circle intercepted between the two lines forming the angle, the center of the circle being the point of intersection.  An acute angle is less than \\(90^\\circ\\), a right angle \\(90^\\circ\\); an obtuse angle, more than \\(90^\\circ\\) but less than \\(180^\\circ\\); a straight angle, \\(180^\\circ\\); a reflex angle, more than \\(180^\\circ\\) but less than \\(360^\\circ\\); a perigon, \\(360^\\circ\\). Any angle not a multiple of \\(90^\\circ\\) is an oblique angle. If the sum of two angles is \\(90^\\circ\\), they are complementary angles; if \\(180^\\circ\\), supplementary angles; if \\(360^\\circ\\), explementary angles."^^qudt:LatexString ;
    qudt:applicableUnit unit:ARCMIN,
        unit:ARCSEC,
        unit:DEG,
        unit:GON,
        unit:GRAD,
        unit:MIL,
        unit:MIN_Angle,
        unit:MicroRAD,
        unit:MilliARCSEC,
        unit:MilliRAD,
        unit:RAD,
        unit:REV ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Plane_angle"^^xsd:anyURI ;
    qudt:exactMatch quantitykind:Angle ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.thefreedictionary.com/plane+angle"^^xsd:anyURI ;
    qudt:plainTextDescription "An angle formed by two straight lines (in the same plane) angle - the space between two lines or planes that intersect; the inclination of one line to another; measured in degrees or radians" ;
    qudt:qkdvDenominator qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L1I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:Angle ;
    skos:broader quantitykind:Angle .

quantitykind:PowerAreaPerSolidAngle a qudt:QuantityKind ;
    rdfs:label "Power Area per Solid Angle"@en ;
    qudt:applicableUnit unit:W-M2-PER-SR,
        unit:W-PER-M2-SR ;
    qudt:baseUnitDimensions "\\(L^4 \\cdot M/T^3 \\cdot U\\)"^^qudt:LatexString,
        "\\(kg \\cdot m^4/s^3\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PowerFactor a qudt:QuantityKind ;
    rdfs:label "Power Factor"@en ;
    dcterms:description "\"Power Factor\", under periodic conditions, is the ratio of the absolute value of the active power \\(P\\) to the apparent power \\(S\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:expression "\\(power-factor\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-11-46"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\lambda = \\left | P \\right | / \\left | S \\right |\\), where \\(P\\) is active power and \\(S\\) is apparent power."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\lambda\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ActivePower,
        quantitykind:ApparentPower .

quantitykind:PowerPerAreaQuarticTemperature a qudt:QuantityKind ;
    rdfs:label "Power per area quartic temperature"@en ;
    qudt:applicableUnit unit:W-PER-M2-K4 ;
    qudt:baseUnitDimensions "\\(M/\\Theta^4 \\cdot T^3\\)"^^qudt:LatexString,
        "\\(kg/K^4 \\cdot s^3\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H-4T-3D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:QualityFactor a qudt:QuantityKind ;
    rdfs:label "Quality Factor"@en ;
    dcterms:description "\"Quality Factor\", of a resonant circuit, is a measure of the \"goodness\" or quality of a resonant circuit. A higher value for this figure of merit correspondes to a more narrow bandwith, which is desirable in many applications. More formally, \\(Q\\) is the ratio of power stored to power dissipated in the circuit reactance and resistance, respectively"^^qudt:LatexString ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.sourcetronic.com/electrical-measurement-glossary/quality-factor.html"^^xsd:anyURI,
        "http://www.allaboutcircuits.com/vol_2/chpt_6/6.html"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "If \\(\\underline{Z} = R + jX\\), then \\(Q = \\left | X \\right |/R\\), where \\(\\underline{Z}\\) is impedance, \\(R\\) is resistance, and \\(X\\) is reactance."^^qudt:LatexString ;
    qudt:symbol "Q" ;
    vaem:todo "Resolve Quality Facor - electronics and also doses" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Impedance,
        quantitykind:Resistance .

quantitykind:QuarticElectricDipoleMomentPerCubicEnergy a qudt:QuantityKind ;
    rdfs:label "Quartic Electric Dipole Moment per Cubic Energy"@en ;
    qudt:applicableUnit unit:C4-M4-PER-J3 ;
    qudt:baseUnitDimensions "\\(I^4 \\cdot T^{10}/L^2 \\cdot M^3\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E4L-2I0M-3H0T10D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:RF-Power a qudt:QuantityKind ;
    rdfs:label "RF-Power Level"@en ;
    qudt:applicableUnit unit:B,
        unit:DeciB ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-3D0 ;
    qudt:informativeReference "https://www.analog.com/en/technical-articles/measurement-control-rf-power-parti.html"^^xsd:anyURI ;
    qudt:plainTextDescription "Radio-Frequency Power. Power level of electromagnetic waves alternating at the frequency of radio waves (up to 10^10 Hz)." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:SignalStrength .

quantitykind:RadiantIntensity a qudt:QuantityKind ;
    rdfs:label "Radiant Intensity"@en ;
    qudt:applicableUnit unit:W-PER-SR ;
    qudt:baseUnitDimensions "\\(L^2 \\cdot M/T^3 \\cdot U\\)"^^qudt:LatexString,
        "\\(kg \\cdot m^2/s^3\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T-3D0 ;
    qudt:latexDefinition "\\(I = \\frac{d\\Phi}{d\\Omega}\\), where \\(d\\Phi\\) is the radiant flux leaving the source in an elementary cone containing the given direction with the solid angle \\(d\\Omega\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "Radiant Intensity is a measure of the intensity of electromagnetic radiation. It is defined as power per unit solid angle." ;
    qudt:symbol "I" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Radiant_intensity> .

quantitykind:Reactance a qudt:QuantityKind ;
    rdfs:label "Reactance"@en ;
    qudt:applicableUnit unit:OHM ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Electrical_reactance"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E-2L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Electrical_reactance?oldid=494180019"^^xsd:anyURI,
        "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-12-46"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(X = im \\underline{Z}\\), where \\(\\underline{Z}\\) is impedance and \\(im\\) denotes the imaginary part."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Reactance\" is the opposition of a circuit element to a change of electric current or voltage, due to that element's inductance or capacitance. A built-up electric field resists the change of voltage on the element, while a magnetic field resists the change of current. The notion of reactance is similar to electrical resistance, but they differ in several respects. Capacitance and inductance are inherent properties of an element, just like resistance." ;
    qudt:symbol "X" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Impedance .

quantitykind:Resistivity a qudt:QuantityKind ;
    rdfs:label "Resistivity"@en ;
    qudt:applicableUnit unit:OHM-M,
        unit:OHM-M2-PER-M ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-12-04"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\rho = \\frac{1}{\\sigma}\\), if it exists, where \\(\\sigma\\) is conductivity."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\rho\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Resistivity\" is the inverse of the conductivity when this inverse exists." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Conductivity .

quantitykind:SecondPolarMomentOfArea a qudt:QuantityKind ;
    rdfs:label "Second Polar Moment of Area"@en ;
    qudt:applicableUnit unit:M4,
        unit:MilliM4 ;
    qudt:hasDimensionVector qkdv:A0E0L4I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Second_moment_of_area"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(I_p = \\int r^2_Q dA\\), where \\(r_Q\\) is the radial distance from a \\(Q-axis\\) and \\(A\\) is area."^^qudt:LatexString ;
    qudt:plainTextDescription "The moment of inertia, also called mass moment of inertia, rotational inertia, polar moment of inertia of mass, or the angular mass is a property of a distribution of mass in space that measures its resistance to rotational acceleration about an axis." ;
    qudt:symbol "I" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SoundParticleVelocity a qudt:QuantityKind ;
    rdfs:label "Sound particle velocity"@en ;
    qudt:applicableUnit unit:GigaHZ-M,
        unit:KiloHZ-M ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Particle_velocity"^^xsd:anyURI ;
    qudt:latexDefinition "\\(v = \\frac{\\partial\\delta }{\\partial t}\\), where \\(\\delta\\) is sound particle displacement and \\(t\\) is time."^^qudt:LatexString ;
    qudt:plainTextDescription "Sound Particle velocity is the velocity v of a particle (real or imagined) in a medium as it transmits a wave. In many cases this is a longitudinal wave of pressure as with sound, but it can also be a transverse wave as with the vibration of a taut string. When applied to a sound wave through a medium of a fluid like air, particle velocity would be the physical speed of a parcel of fluid as it moves back and forth in the direction the sound wave is travelling as it passes." ;
    qudt:symbol "v" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Velocity .

quantitykind:SoundPowerLevel a qudt:QuantityKind ;
    rdfs:label "Sound power level"@en ;
    dcterms:description "Sound Power Level abbreviated as \\(SWL\\) expresses sound power more practically as a relation to the threshold of hearing - 10-12 W - in a logarithmic scale."^^qudt:LatexString ;
    qudt:applicableUnit unit:DeciB ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Sound_power#Sound_power_level"^^xsd:anyURI ;
    qudt:latexDefinition "\\(L_W = 10 \\log_{10} \\frac{P}{P_0} dB\\), where \\(P\\) is sound power and the reference value is \\(P_0 =1pW\\)."^^qudt:LatexString ;
    qudt:symbol "L" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SpecificAcousticImpedance a qudt:QuantityKind ;
    rdfs:label "Specific Acoustic Impedance"@en ;
    qudt:applicableUnit unit:N-SEC-PER-M3,
        unit:RAYL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SpecificEntropy a qudt:QuantityKind ;
    rdfs:label "Specific Entropy"@en ;
    qudt:applicableUnit unit:J-PER-KiloGM-K,
        unit:KiloJ-PER-KiloGM-K ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Entropy"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T-2D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(s = S/m\\), where \\(S\\) is entropy and \\(m\\) is mass."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Specific Entropy\" is entropy per unit of mass." ;
    qudt:symbol "s" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Entropy .

quantitykind:SpecificHeatPressure a qudt:QuantityKind ;
    rdfs:label "Specific Heat Pressure"@en ;
    qudt:applicableUnit unit:J-PER-KiloGM-K-PA ;
    qudt:baseUnitDimensions "\\(L^3/\\Theta \\cdot M\\)"^^qudt:LatexString,
        "\\(m^3/K \\cdot kg\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T-2D0 ;
    qudt:plainTextDescription "Specific heat at a constant pressure." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SpecificHeatVolume a qudt:QuantityKind ;
    rdfs:label "Specific Heat Volume"@en ;
    qudt:applicableUnit unit:J-PER-KiloGM-K-M3 ;
    qudt:baseUnitDimensions "\\(/K \\cdot m \\cdot s^2\\)"^^qudt:LatexString,
        "\\(/\\Theta \\cdot L \\cdot T^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T-2D0 ;
    qudt:plainTextDescription "Specific heat per constant volume." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SpeedOfSound a qudt:QuantityKind ;
    rdfs:label "Speed of sound"@en ;
    qudt:applicableUnit unit:BFT,
        unit:FT3-PER-MIN-FT2,
        unit:GigaC-PER-M3,
        unit:GigaHZ-M,
        unit:HZ-M,
        unit:M-PER-SEC,
        unit:MegaHZ-M ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Speed_of_sound"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Speed_of_sound"^^xsd:anyURI ;
    qudt:latexDefinition "\\(c = \\sqrt{\\frac{K}{\\rho}}\\), where \\(K\\) is the coefficient of stiffness, the bulk modulus (or the modulus of bulk elasticity for gases), and \\(\\rho\\) is the density. Also, \\(c^2 = \\frac{\\partial p}{\\partial \\rho}\\), where \\(p\\) is the pressure and \\(\\rho\\) is the density."^^qudt:LatexString ;
    qudt:plainTextDescription "The speed of sound is the distance travelled during a unit of time by a sound wave propagating through an elastic medium." ;
    qudt:symbol "c" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Speed .

quantitykind:StaticPressure a qudt:QuantityKind ;
    rdfs:label "Static pressure"@en ;
    dcterms:description "\"Static Pressure\" is the pressure at a nominated point in a fluid. Every point in a steadily flowing fluid, regardless of the fluid speed at that point, has its own static pressure \\(P\\), dynamic pressure \\(q\\), and total pressure \\(P_0\\). The total pressure is the sum of the dynamic and static pressures, that is \\(P_0 = P + q\\)."^^qudt:LatexString ;
    qudt:abbreviation "p" ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CM_H2O,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Static_pressure"^^xsd:anyURI ;
    qudt:symbol "p" ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Pressure .

quantitykind:Stress a qudt:QuantityKind ;
    rdfs:label "Stress"@en ;
    dcterms:description "Stress is a measure of the average amount of force exerted per unit area of a surface within a deformable body on which internal forces act. In other words, it is a measure of the intensity or internal distribution of the total internal forces acting within a deformable body across imaginary surfaces. These internal forces are produced between the particles in the body as a reaction to external forces applied on the body. Stress is defined as \\({\\rm{Stress}} = \\frac{F}{A}\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CM_H2O,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:latexDefinition "\\({\\rm{Stress}} = \\frac{F}{A}\\)"^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\sigma\\)"^^qudt:LatexString ;
    qudt:url "http://www.freestudy.co.uk/mech%20prin%20h2/stress.pdf"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ForcePerArea .

quantitykind:SuperconductionTransitionTemperature a qudt:QuantityKind ;
    rdfs:label "Superconduction Transition Temperature"@en ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Superconductivity"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Superconduction Transition Temperature\" is the critical thermodynamic temperature of a superconductor." ;
    qudt:symbol "T_c" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:closeMatch quantitykind:CurieTemperature,
        quantitykind:NeelTemperature .

quantitykind:TemperaturePerMagneticFluxDensity a qudt:QuantityKind ;
    rdfs:label "Temperature per Magnetic Flux Density"@en ;
    qudt:applicableUnit unit:K-PER-T ;
    qudt:baseUnitDimensions "\\(A \\cdot K \\cdot s^2/kg\\)"^^qudt:LatexString,
        "\\(\\Theta \\cdot I \\cdot T^2/M\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M-1H1T2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:TimeSquared a qudt:QuantityKind ;
    rdfs:label "Time Squared"@en ;
    qudt:applicableUnit unit:SEC2 ;
    qudt:baseUnitDimensions "\\(T^2\\)"^^qudt:LatexString,
        "\\(s^2\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Time_Squared"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Viscosity a qudt:QuantityKind ;
    rdfs:label "Viscosity"@en ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Viscosity"^^xsd:anyURI ;
    qudt:plainTextDescription "Viscosity is a measure of the resistance of a fluid which is being deformed by either shear stress or extensional stress. In general terms it is the resistance of a liquid to flow, or its \"thickness\". Viscosity describes a fluid's internal resistance to flow and may be thought of as a measure of fluid friction. [Wikipedia]" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:VoltagePhasor a qudt:QuantityKind ;
    rdfs:label "Voltage Phasor"@en ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-11-26"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "When \\(u = \\hat{U} \\cos{(\\omega t + \\alpha)}\\), where \\(u\\) is the voltage, \\(\\omega\\) is angular frequency, \\(t\\) is time, and \\(\\alpha\\) is initial phase, then \\(\\underline{U} = Ue^{ja}\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\underline{U}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Voltage Phasor\" is a representation of voltage as a sinusoidal integral quantity using a complex quantity whose argument is equal to the initial phase and whose modulus is equal to the root-mean-square value. A phasor is a constant complex number, usually expressed in exponential form, representing the complex amplitude (magnitude and phase) of a sinusoidal function of time. Phasors are used by electrical engineers to simplify computations involving sinusoids, where they can often reduce a differential equation problem to an algebraic one." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:VolumetricFlux a qudt:QuantityKind ;
    rdfs:label "Volumetric Flux"@en ;
    qudt:applicableUnit unit:MilliL-PER-CentiM2-MIN,
        unit:MilliL-PER-CentiM2-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Volumetric_flux"^^xsd:anyURI ;
    qudt:plainTextDescription "In fluid dynamics, the volumetric flux is the rate of volume flow across a unit area (m3·s−1·m−2).[Wikipedia]" ;
    qudt:qkdvDenominator qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L3I0M0H0T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:VolumicElectromagneticEnergy a qudt:QuantityKind ;
    rdfs:label "Volumic Electromagnetic Energy"@en ;
    dcterms:description "\\(\\textit{Volumic Electromagnetic Energy}\\), also known as the \\(\\textit{Electromagnetic Energy Density}\\), is the energy associated with an electromagnetic field, per unit volume of the field."^^qudt:LatexString ;
    qudt:applicableUnit unit:J-PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-64"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(w = (1/2) ( \\mathbf{E} \\cdot \\mathbf{D} + \\mathbf{B} \\cdot \\mathbf{H})\\), where \\(\\mathbf{E}\\) is electric field strength, \\(\\mathbf{D}\\) is electric flux density, \\(\\mathbf{M}\\) is magnetic flux density, and \\(\\mathbf{H}\\) is magnetic field strength."^^qudt:LatexString ;
    qudt:latexSymbol "\\(w\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricFieldStrength,
        quantitykind:ElectricFluxDensity,
        quantitykind:MagneticFieldStrength_H,
        quantitykind:MagneticFluxDensity ;
    owl:sameAs quantitykind:ElectromagneticEnergyDensity .

unit:A-HR a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Ampere Hour"@en ;
    dcterms:description "\\(\\textbf{Ampere hour}\\) is a practical unit of electric charge equal to the charge flowing in one hour through a conductor passing one ampere. An ampere-hour or amp-hour (symbol \\(Ah,\\,AHr,\\, A \\cdot h, A h\\)) is a unit of electric charge, with sub-units milliampere-hour (\\(mAh\\)) and milliampere second (\\(mAs\\)). One ampere-hour is equal to 3600 coulombs (ampere-seconds), the electric charge transferred by a steady current of one ampere for one hour. The ampere-hour is frequently used in measurements of electrochemical systems such as electroplating and electrical batteries. The commonly seen milliampere-hour (\\(mAh\\) or \\(mA \\cdot h\\)) is one-thousandth of an ampere-hour (\\(3.6 \\,coulombs\\))."^^qudt:LatexString ;
    qudt:conversionMultiplier 3600.0 ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:iec61360Code "0112/2///62720#UAA102" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Ampere-hour"^^xsd:anyURI,
        "http://www.oxfordreference.com/view/10.1093/acref/9780199233991.001.0001/acref-9780199233991-e-86"^^xsd:anyURI ;
    qudt:symbol "A h" ;
    qudt:ucumCode "A.h"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "AMH" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:A-M2-PER-J-SEC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Ampere Square Metre Per Joule Second"@en,
        "Ampere Square Meter Per Joule Second"@en-us ;
    dcterms:description "The SI unit of gyromagnetic ratio."^^rdf:HTML ;
    qudt:expression "\\(A-m^2/J-s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:GyromagneticRatio,
        quantitykind:MagneticDipoleMoment ;
    qudt:informativeReference "http://encyclopedia2.thefreedictionary.com/ampere+square+meter+per+joule+second"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:ucumCode "A.m2.J-1.s-1"^^qudt:UCUMcs,
        "A.m2/(J.s)"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:A-SEC a qudt:Unit ;
    rdfs:label "Ampere Second"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:iec61360Code "0112/2///62720#UAA107" ;
    qudt:plainTextDescription "product out of the SI base unit ampere and the SI base unit second" ;
    qudt:ucumCode "A.s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A8" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:AT-PER-IN a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Ampere Turn per Inch"@en ;
    dcterms:description "The \\(\\textit{Ampere Turn per Inch}\\) is a measure of magnetic field intensity and is eual to 12.5664 Oersted."^^rdf:HTML ;
    qudt:conversionMultiplier 39.3700787 ;
    qudt:expression "\\(At/in\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MagneticFieldStrength_H ;
    qudt:unitOfSystem sou:USCS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:AT-PER-M a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Ampere Turn per Metre"@en,
        "Ampere Turn per Meter"@en-us ;
    dcterms:description "The  \\(\\textit{Ampere Turn per Metre}\\) is the SI unit of magnetic field strength. One ampere per meter is equal to \\(\\pi/250\\) oersteds (12.566 371 millioersteds) in CGS units. The ampere per meter is also the SI unit of \"magnetization\" in the sense of magnetic dipole moment per unit volume; in this context \\(1 A/m = 0.001 emu per cubic centimeter\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(At/m\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MagneticFieldStrength_H ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:A_Stat a qudt:Unit,
        unit:Unit ;
    rdfs:label "Statampere"@en ;
    dcterms:description "\"Statampere\" (statA) is a unit in the category of Electric current. It is also known as statamperes. This unit is commonly used in the cgs unit system. Statampere (statA) has a dimension of I where I is electric current. It can be converted to the corresponding standard SI unit A by multiplying its value by a factor of 3.355641E-010."^^rdf:HTML ;
    qudt:conversionMultiplier 0.0000000003335641 ;
    qudt:derivedUnitOfSystem sou:CGS-ESU ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCurrent ;
    qudt:informativeReference "http://www.efunda.com/glossary/units/units--electric_current--statampere.cfm"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/statampere> ;
    qudt:symbol "statA",
        "statA"^^xsd:string ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:AttoC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "AttoCoulomb"@en ;
    dcterms:description "An AttoColomb is \\(10^{-18} C\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.000000000000000001 ;
    qudt:derivedUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:isScalingOf unit:C ;
    qudt:prefix prefix:Atto ;
    qudt:symbol "aC" ;
    qudt:ucumCode "aC"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    prov:wasDerivedFrom unit:C .

unit:B a qudt:DimensionlessUnit,
        qudt:LogarithmicUnit,
        qudt:Unit ;
    rdfs:label "Bel"@en ;
    dcterms:description "A logarithmic unit of sound pressure equal to 10 decibels (dB),  It is defined as: \\(1 B = (1/2) \\log_{10}(Np)\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Bel"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:RF-Power,
        quantitykind:SignalStrength ;
    qudt:iec61360Code "0112/2///62720#UAB351" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Sound_unit"^^xsd:anyURI ;
    qudt:symbol "B" ;
    qudt:ucumCode "B"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BBL_UK_PET-PER-DAY a qudt:Unit,
        unit:Unit ;
    rdfs:label "Barrel (UK Petroleum) Per Day"@en ;
    qudt:conversionMultiplier 0.000001841587 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA331" ;
    qudt:plainTextDescription "unit of the volume barrel (UK petroleum) for crude oil according to the Imperial system of units divided by the unit day" ;
    qudt:uneceCommonCode "J59" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BBL_UK_PET-PER-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Barrel (UK Petroleum) Per Hour"@en ;
    qudt:conversionMultiplier 0.0000441981 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA332" ;
    qudt:plainTextDescription "unit of the volume barrel (UK petroleum) for crude oil according to the Imperial system of units divided by the unit hour" ;
    qudt:uneceCommonCode "J60" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BBL_UK_PET-PER-MIN a qudt:Unit,
        unit:Unit ;
    rdfs:label "Barrel (UK Petroleum) Per Minute"@en ;
    qudt:conversionMultiplier 0.002651886 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA330" ;
    qudt:plainTextDescription "unit of the volume barrel (UK petroleum) for crude oil according to the Imperial system of units divided by the unit minute" ;
    qudt:uneceCommonCode "J58" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BBL_UK_PET-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Barrel (UK Petroleum) Per Second"@en ;
    qudt:conversionMultiplier 0.1591132 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA333" ;
    qudt:plainTextDescription "unit of the volume barrel (UK petroleum) for crude oil according to the Imperial system of units divided by the SI base unit second" ;
    qudt:uneceCommonCode "J61" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BBL_US-PER-DAY a qudt:Unit,
        unit:Unit ;
    rdfs:label "Barrel (US) Per Day"@en ;
    qudt:conversionMultiplier 0.00000184 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA335" ;
    qudt:plainTextDescription "unit of the volume barrel (US petroleum) for crude oil according to the Anglo-American system of units divided by the unit day" ;
    qudt:ucumCode "[bbl_us].d-1"^^qudt:UCUMcs,
        "[bbl_us]/d"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B1" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BBL_US-PER-MIN a qudt:Unit,
        unit:Unit ;
    rdfs:label "Barrel (US) Per Minute"@en ;
    qudt:conversionMultiplier 0.0026498 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA337" ;
    qudt:plainTextDescription "unit of the volume barrel (US petroleum) for crude oil according to the Anglo-American system of units divided by the unit minute" ;
    qudt:ucumCode "[bbl_us].min-1"^^qudt:UCUMcs,
        "[bbl_us]/min"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J63" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BBL_US_PET-PER-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Barrel (US Petroleum) Per Hour"@en ;
    qudt:conversionMultiplier 0.000044163 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA336" ;
    qudt:plainTextDescription "unit of the volume barrel (US petroleum) for crude oil according to the Anglo-American system of units divided by the unit hour" ;
    qudt:ucumCode "[bbl_us].h-1"^^qudt:UCUMcs,
        "[bbl_us]/h"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J62" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BBL_US_PET-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Barrel (US Petroleum) Per Second"@en ;
    qudt:conversionMultiplier 0.1589873 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA338" ;
    qudt:plainTextDescription "unit of the volume barrel (US petroleum) for crude oil according to the Anglo-American system of units divided by the SI base unit second" ;
    qudt:ucumCode "[bbl_us].s-1"^^qudt:UCUMcs,
        "[bbl_us]/s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J62" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BIT a qudt:CountingUnit,
        qudt:Unit ;
    rdfs:label "Bit"@en ;
    dcterms:description "In information theory, a bit is the amount of information that, on average, can be stored in a discrete bit. It is thus the amount of information carried by a choice between two equally likely outcomes. One bit corresponds to about 0.693 nats (ln(2)), or 0.301 hartleys (log10(2))."^^rdf:HTML ;
    qudt:conversionMultiplier 0.69314718055994530941723212145818 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Bit"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:InformationEntropy ;
    qudt:iec61360Code "0112/2///62720#UAA339" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Bit?oldid=495288173"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/bit> ;
    qudt:symbol "bit" ;
    qudt:ucumCode "bit"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J63" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BQ-PER-KiloGM a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Becquerel per Kilogram"@en ;
    dcterms:description "The only unit in the category of Specific radioactivity. It is also known as becquerels per kilogram, becquerel/kilogram. This unit is commonly used in the SI unit system. Becquerel Per Kilogram (Bq/kg) has a dimension of \\(M{-1}T{-1}\\) where \\(M\\) is mass, and \\(T\\) is time. It essentially the same as the corresponding standard SI unit \\(/kg/s\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(Bq/kg\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassicActivity,
        quantitykind:SpecificActivity ;
    qudt:iec61360Code "0112/2///62720#UAA112" ;
    qudt:informativeReference "http://www.efunda.com/glossary/units/units--specific_radioactivity--becquerel_per_kilogram.cfm"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Bequerel per Kilogram\" is used to describe radioactivity, which is often expressed in becquerels per unit of volume or weight, to express how much radioactive material is contained in a sample." ;
    qudt:ucumCode "Bq.kg-1"^^qudt:UCUMcs,
        "Bq/kg"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A18" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BQ-PER-M3 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Becquerel per Cubic Metre"@en,
        "Becquerel per Cubic Meter"@en-us ;
    dcterms:description "Becquerel Per Cubic Meter (\\(Bq/m3\\)) is a unit in the category of Radioactivity concentration. It is also known as becquerels per cubic meter, becquerel per cubic metre, becquerels per cubic metre, becquerel/cubic inch. This unit is commonly used in the SI unit system. Becquerel Per Cubic Meter (Bq/m3) has a dimension of \\(L{-3}T{-1}\\) where \\(L\\) is length, and \\(T\\) is time. It essentially the same as the corresponding standard SI unit \\(/s\\cdot m{3}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(Bq/m^3\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:ActivityConcentration ;
    qudt:iec61360Code "0112/2///62720#UAB126" ;
    qudt:informativeReference "http://www.efunda.com/glossary/units/units--radioactivity_concentration--becquerel_per_cubic_meter.cfm"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "The SI derived unit of unit in the category of Radioactivity concentration." ;
    qudt:ucumCode "Bq.m-3"^^qudt:UCUMcs,
        "Bq/m3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A19" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_IT-IN-PER-FT2-HR-DEG_F a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "British Thermal Unit (international Table) Inch Per Hour Square Foot Degree Fahrenheit"@en ;
    dcterms:description "\\(BTU_{th}\\) Inch per Square Foot Hour Degree Fahrenheit is an Imperial unit for 'Thermal Conductivity' expressed as \\(Btu_{it}-in/(hr-ft^{2}-degF)\\). An International British thermal unit inch per second per square foot per degree Fahrenheit is a unit of thermal conductivity in the US Customary Units and British Imperial Units. \\(1 Btu_{it} \\cdot in/(hr \\cdot ft^{2}  \\cdot degF)\\) shows that one thermochemical BTU of heat per one hour moves through one square foot of material, which is one foot thick due to a temperature difference of one degree Fahrenheit."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.144227889 ;
    qudt:expression "\\(Btu(it)-in-per-hr-ft2-degF\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H-1T-3D0 ;
    qudt:hasQuantityKind quantitykind:ThermalConductivity ;
    qudt:iec61360Code "0112/2///62720#UAA117" ;
    qudt:informativeReference "http://www.translatorscafe.com/cafe/EN/units-converter/thermal-conductivity/c/"^^xsd:anyURI ;
    qudt:latexSymbol "\\(Btu_{it} \\cdot in/(hr \\cdot ft^{2}  \\cdot degF)\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "BTU (th) Inch per Square Foot Hour Degree Fahrenheit is an Imperial unit for 'Thermal Conductivity', an International British thermal unit inch per second per square foot per degree Fahrenheit is a unit of thermal conductivity in the US Customary Units and British Imperial Units." ;
    qudt:ucumCode "[Btu_IT].[in_i].[ft_i]-2.h-1.[degF]-1"^^qudt:UCUMcs,
        "[Btu_IT].[in_i]/([ft_i]2.h.[degF])"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J41" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    vaem:comment "owl:sameAs: unit:BTU_IT-IN-PER-HR-FT2-DEG_F" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:BTU_IT-IN-PER-HR-FT2-DEG_F .

unit:BTU_IT-IN-PER-FT2-SEC-DEG_F a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "BTU (IT) Inch per Square Foot Second Degree Fahrenheit"@en ;
    dcterms:description "\\(BTU_{IT}\\), Inch per Square Foot Second Degree Fahrenheit, is an Imperial unit for 'Thermal Conductivity' expressed as \\(Btu_{it}-in/(ft^{2}-s-degF)\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 519.220399911 ;
    qudt:expression "\\(Btu(it)-in-per-s-ft2-degF\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H-1T-3D0 ;
    qudt:hasQuantityKind quantitykind:ThermalConductivity ;
    qudt:iec61360Code "0112/2///62720#UAA118" ;
    qudt:informativeReference "http://www.translatorscafe.com/cafe/EN/units-converter/thermal-conductivity/c/"^^xsd:anyURI ;
    qudt:plainTextDescription "British thermal unit (international table) inch per second Square foot degree Fahrenheit is the unit of the thermal conductivity according to the Imperial system of units." ;
    qudt:ucumCode "[Btu_IT].[in_i].[ft_i]-2.s-1.[degF]-1"^^qudt:UCUMcs,
        "[Btu_IT].[in_i]/([ft_i]2.s.[degF])"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J42" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:BTU_IT-IN-PER-SEC-FT2-DEG_F .

unit:BTU_IT-IN-PER-HR-FT2-DEG_F a qudt:Unit ;
    rdfs:label "British Thermal Unit (international Table) Inch Per Hour Square Foot degree Fahrenheit"@en ;
    qudt:conversionMultiplier 0.1442279 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H-1T-3D0 ;
    qudt:hasQuantityKind quantitykind:ThermalConductivity ;
    qudt:iec61360Code "0112/2///62720#UAA117" ;
    qudt:plainTextDescription "unit of the thermal conductivity according to the Imperial system of units" ;
    qudt:ucumCode "[Btu_IT].[in_i].h-1.[ft_i]-2.[degF]-1"^^qudt:UCUMcs,
        "[Btu_IT].[in_i]/(h.[ft_i]2.[degF])"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J41" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:BTU_IT-IN-PER-FT2-HR-DEG_F .

unit:BTU_IT-IN-PER-SEC-FT2-DEG_F a qudt:Unit ;
    rdfs:label "British Thermal Unit (international Table) Inch Per Second Square Foot degree Fahrenheit"@en ;
    qudt:conversionMultiplier 519.2204 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H-1T-3D0 ;
    qudt:hasQuantityKind quantitykind:ThermalConductivity ;
    qudt:iec61360Code "0112/2///62720#UAA118" ;
    qudt:plainTextDescription "unit of the thermal conductivity according to the Imperial system of units" ;
    qudt:ucumCode "[Btu_IT].[in_i].s-1.[ft_i]-2.[degF]-1"^^qudt:UCUMcs,
        "[Btu_IT].[in_i]/(s.[ft_i]2.[degF])"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J42" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:BTU_IT-IN-PER-FT2-SEC-DEG_F .

unit:BTU_IT-PER-LB a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "BTU-IT-PER-lb"@en ;
    dcterms:description "The amount of energy generated by a pound of substance is measured in British thermal units (IT) per pound of mass. 1 \\(Btu_{IT}/lb\\) is equivalent to \\(2.326 \\times 10^3\\) joule per kilogram (J/kg)."^^qudt:LatexString ;
    qudt:conversionMultiplier 2326.0 ;
    qudt:definedUnitOfSystem sou:IMPERIAL ;
    qudt:expression "\\(Btu/lb\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:SpecificEnergy ;
    qudt:informativeReference "http://physics.nist.gov/Pubs/SP811/appenB9.html"^^xsd:anyURI,
        "http://www.efunda.com/glossary/units/units--energy_density--british_thermal_unit_it_per_cubic_foot.cfm"^^xsd:anyURI ;
    qudt:ucumCode "[Btu_IT].[lb_av]-1"^^qudt:UCUMcs,
        "[Btu_IT]/[lb_av]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_TH-PER-HR a qudt:Unit ;
    rdfs:label "British Thermal Unit (thermochemical) Per Hour"@en ;
    qudt:conversionMultiplier 0.2929 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:HeatFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA124" ;
    qudt:plainTextDescription "unit of the heat energy according to the Imperial system of units divided by the unit hour" ;
    qudt:ucumCode "[Btu_th].h-1"^^qudt:UCUMcs,
        "[Btu_th]/h"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J47" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_TH-PER-LB a qudt:Unit ;
    rdfs:label "British Thermal Unit (TH) Per Pound"@en ;
    dcterms:description "\\({\\bf Btu_{th} / lbm}\\), British Thermal Unit (therm.) Per Pound Mass, is a unit in the category of Thermal heat capacity. It is also known as Btu per pound, Btu/pound, Btu/lb. This unit is commonly used in the UK unit system. British Thermal Unit (therm.) Per Pound Mass (Btu (therm.)/lbm) has a dimension of \\(L^2T^{-2}\\) where \\(L\\) is length, and \\(T\\) is time. It can be converted to the corresponding standard SI unit J/kg by multiplying its value by a factor of 2324.443861."^^qudt:LatexString ;
    qudt:conversionMultiplier 2324.443861 ;
    qudt:expression "\\(btu_th-per-lb\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:SpecificEnergy ;
    qudt:informativeReference "http://physics.nist.gov/Pubs/SP811/appenB9.html"^^xsd:anyURI,
        "http://www.efunda.com/glossary/units/units--thermal_heat_capacity--british_thermal_unit_therm_per_pound_mass.cfm"^^xsd:anyURI ;
    qudt:ucumCode "[Btu_th].[lb_av]-1"^^qudt:UCUMcs,
        "[Btu_th]/[lb_av]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BU_UK-PER-DAY a qudt:Unit,
        unit:Unit ;
    rdfs:label "Bushel (UK) Per Day"@en ;
    qudt:conversionMultiplier 0.0000004209343 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA345" ;
    qudt:plainTextDescription "unit of the volume bushel (UK) (for fluids and for dry measures) according to the Imperial system of units divided by the unit for time day" ;
    qudt:ucumCode "[bu_br].d-1"^^qudt:UCUMcs,
        "[bu_br]/d"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J64" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BU_UK-PER-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Bushel (UK) Per Hour"@en ;
    qudt:conversionMultiplier 0.00001010242 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA346" ;
    qudt:plainTextDescription "unit of the volume bushel (UK) (for fluids and for dry measures) according to the Imperial system of units divided by the unit for time hour" ;
    qudt:uneceCommonCode "J65" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BU_UK-PER-MIN a qudt:Unit,
        unit:Unit ;
    rdfs:label "Bushel (UK) Per Minute"@en ;
    qudt:conversionMultiplier 0.0006061453 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA347" ;
    qudt:plainTextDescription "unit of the volume bushel (UK) (for fluids and for dry measures) according to the Imperial system of units divided by the unit for time minute" ;
    qudt:ucumCode "[bu_br].min-1"^^qudt:UCUMcs,
        "[bu_br]/min"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J66" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BU_UK-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Bushel (UK) Per Second"@en ;
    qudt:conversionMultiplier 0.03636872 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA348" ;
    qudt:plainTextDescription "unit of the volume bushel (UK) (for fluids and for dry measures) according to the Imperial system of units divided by the SI base unit second" ;
    qudt:ucumCode "[bu_br].s-1"^^qudt:UCUMcs,
        "[bu_br]/s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J67" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BU_US_DRY-PER-DAY a qudt:Unit,
        unit:Unit ;
    rdfs:label "Bushel (US Dry) Per Day"@en ;
    qudt:conversionMultiplier 0.00000040786 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA349" ;
    qudt:plainTextDescription "unit of the volume bushel (US dry) for dry measure according to the Anglo-American system of units divided by the unit for time day" ;
    qudt:ucumCode "[bu_us].d-1"^^qudt:UCUMcs,
        "[bu_us]/d"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J68" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BU_US_DRY-PER-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Bushel (US Dry) Per Hour"@en ;
    qudt:conversionMultiplier 0.000009789 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA350" ;
    qudt:plainTextDescription "unit of the volume bushel (US dry) for dry measure according to the Anglo-American system of units divided by the unit for time hour" ;
    qudt:ucumCode "[bu_us].h-1"^^qudt:UCUMcs,
        "[bu_us]/h"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J69" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BU_US_DRY-PER-MIN a qudt:Unit,
        unit:Unit ;
    rdfs:label "Bushel (US Dry) Per Minute"@en ;
    qudt:conversionMultiplier 0.00058732 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA351" ;
    qudt:plainTextDescription "unit of the volume bushel (US dry) for dry measure according to the Anglo-American system of units divided by the unit for time minute" ;
    qudt:ucumCode "[bu_us].min-1"^^qudt:UCUMcs,
        "[bu_us]/min"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J70" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BU_US_DRY-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Bushel (US Dry) Per Second"@en ;
    qudt:conversionMultiplier 0.03523907 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA352" ;
    qudt:plainTextDescription "unit of the volume bushel (US dry) for dry measure according to the Anglo-American system of units divided by the SI base unit second" ;
    qudt:ucumCode "[bu_us].s-1"^^qudt:UCUMcs,
        "[bu_us]/s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J71" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:C-PER-KiloGM a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Coulomb per Kilogram"@en ;
    dcterms:description "\\(\\textbf{Coulomb Per Kilogram (C/kg)}\\) is the unit in the category of Exposure. It is also known as coulombs per kilogram, coulomb/kilogram. This unit is commonly used in the SI unit system. Coulomb Per Kilogram (C/kg) has a dimension of \\(M^{-1}TI\\) where \\(M\\) is mass, \\(T\\) is time, and \\(I\\) is electric current. This unit is the standard SI unit in this category."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(C/kg\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M-1H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricChargePerMass ;
    qudt:iec61360Code "0112/2///62720#UAA131" ;
    qudt:ucumCode "C.kg-1"^^qudt:UCUMcs,
        "C/kg"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "CKG" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:C-PER-M a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Coulomb per Metre"@en,
        "Coulomb per Meter"@en-us ;
    dcterms:description "\"Coulomb per Meter\" is a unit for  'Electric Charge Line Density' expressed as \\(C/m\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(C/m\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricChargeLineDensity,
        quantitykind:ElectricChargeLinearDensity ;
    qudt:iec61360Code "0112/2///62720#UAB337" ;
    qudt:ucumCode "C.m-1"^^qudt:UCUMcs,
        "C/m"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:C-PER-M3 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Coulomb per Cubic Metre"@en,
        "Coulomb per Cubic Meter"@en-us ;
    dcterms:description "Coulomb Per Cubic Meter (\\(C/m^{3}\\)) is a unit in the category of Electric charge density. It is also known as coulomb per cubic metre, coulombs per cubic meter, coulombs per cubic metre, coulomb/cubic meter, coulomb/cubic metre. This unit is commonly used in the SI unit system. Coulomb Per Cubic Meter has a dimension of \\(L^{-3}TI\\) where \\(L\\) is length, \\(T\\) is time, and \\(I\\) is electric current. This unit is the standard SI unit in this category."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(C/m^{3}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L-3I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricChargeDensity,
        quantitykind:ElectricChargeVolumeDensity ;
    qudt:iec61360Code "0112/2///62720#UAA135" ;
    qudt:ucumCode "C.m-3"^^qudt:UCUMcs,
        "C/m3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A29" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CAL_IT-PER-GM a qudt:Unit ;
    rdfs:label "Calorie (international Table) Per Gram"@en ;
    dcterms:description "Calories produced per gram of substance." ;
    qudt:conversionMultiplier 4186.8 ;
    qudt:expression "\\(cal_{it}-per-gm\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:SpecificEnergy ;
    qudt:iec61360Code "0112/2///62720#UAB176" ;
    qudt:informativeReference "http://physics.nist.gov/Pubs/SP811/appenB9.html"^^xsd:anyURI,
        "http://www.efunda.com/glossary/units/units--thermal_heat_capacity--british_thermal_unit_therm_per_pound_mass.cfm"^^xsd:anyURI ;
    qudt:plainTextDescription "unit calorie according to the international steam table divided by the 0.001-fold of the SI base unit kilogram" ;
    qudt:ucumCode "cal_IT.g-1"^^qudt:UCUMcs,
        "cal_IT/g"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D75" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CAL_TH-PER-G a qudt:Unit ;
    rdfs:label "calorie (thermochemical) per gram (calTH/g)"@en ;
    dcterms:description "\\(Thermochemical Calorie. Calories produced per gram of substance.\\)"^^qudt:LatexString ;
    dcterms:isReplacedBy "unit:CAL_TH-PER-GM" ;
    qudt:conversionMultiplier 4184.0 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:expression "\\(cal\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:SpecificEnergy ;
    qudt:informativeReference "http://physics.nist.gov/Pubs/SP811/appenB9.html"^^xsd:anyURI,
        "http://www.efunda.com/glossary/units/units--thermal_heat_capacity--british_thermal_unit_therm_per_pound_mass.cfm"^^xsd:anyURI ;
    qudt:ucumCode "cal_th.g-1"^^qudt:UCUMcs,
        "cal_th/g"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:deprecated true ;
    skos:changeNote "2020-10-30 - incorrect local-name - G is for Gravity, GM is for gram - the correct named individual was already present, so this one deprecated. " .

unit:CAL_TH-PER-GM a qudt:Unit ;
    rdfs:label "Calorie (thermochemical) Per Gram"@en ;
    dcterms:description "Thermochemical Calorie. Calories produced per gram of substance." ;
    qudt:conversionMultiplier 4184.0 ;
    qudt:expression "\\(cal\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:SpecificEnergy ;
    qudt:iec61360Code "0112/2///62720#UAB153" ;
    qudt:informativeReference "http://physics.nist.gov/Pubs/SP811/appenB9.html"^^xsd:anyURI,
        "http://www.efunda.com/glossary/units/units--thermal_heat_capacity--british_thermal_unit_therm_per_pound_mass.cfm"^^xsd:anyURI ;
    qudt:plainTextDescription "unit thermochemical calorie divided by the 0.001-fold of the SI base unit kilogram" ;
    qudt:ucumCode "cal_th.g-1"^^qudt:UCUMcs,
        "cal_th/g"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B36" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CD-PER-IN2 a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Candela per Square Inch"@en ;
    dcterms:description "\"Candela per Square Inch\" is a unit for  'Luminance' expressed as \\(cd/in^{2}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1550.0031000062002 ;
    qudt:expression "\\(cd/in^{2}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-2I1M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Luminance ;
    qudt:iec61360Code "0112/2///62720#UAB257" ;
    qudt:ucumCode "cd.[in_i]-2"^^qudt:UCUMcs,
        "cd/[in_i]2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CD-PER-M2 a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "candela per square metre"@en,
        "candela per square meter"@en-us ;
    dcterms:description "The candela per square metre (\\(cd/m^2\\)) is the derived SI unit of luminance. The unit is based on the candela, the SI unit of luminous intensity, and the square metre, the SI unit of area. Nit (nt) is a deprecated non-SI name also used for this unit (\\(1 nit = 1 cd/m^2\\)). As a measure of light emitted per unit area, this unit is frequently used to specify the brightness of a display device. Most consumer desktop liquid crystal displays have luminances of 200 to 300 \\(cd/m^2\\); the sRGB spec for monitors targets 80 cd/m2. HDTVs range from 450 to about 1000 cd/m2. Typically, calibrated monitors should have a brightness of \\(120 cd/m^2\\). \\(Nit\\) is believed to come from the Latin word nitere, to shine."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(cd/m^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-2I1M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Luminance ;
    qudt:iec61360Code "0112/2///62720#UAA371" ;
    qudt:ucumCode "cd.m-2"^^qudt:UCUMcs,
        "cd/m2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A24" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:C_Ab a qudt:Unit ;
    rdfs:label "Abcoulomb"@en ;
    dcterms:description "\"abcoulomb\" (abC or aC) or electromagnetic unit of charge (emu of charge) is the basic physical unit of electric charge in the cgs-emu system of units. One abcoulomb is equal to ten coulombs (\\(1\\,abC\\,=\\,10\\,C\\))."^^qudt:LatexString ;
    qudt:conversionMultiplier 10.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Abcoulomb"^^xsd:anyURI ;
    qudt:derivedUnitOfSystem sou:CGS-EMU ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Abcoulomb?oldid=477198635"^^xsd:anyURI,
        "http://www.oxfordreference.com/view/10.1093/acref/9780198605225.001.0001/acref-9780198605225-e-9?rskey=KHjyOu"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/abcoulomb> ;
    qudt:symbol "abC" ;
    qudt:ucumCode "10.C"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CentiC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "CentiCoulomb"@en ;
    dcterms:description "A CentiCoulomb is \\(10^{-2} C\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.01 ;
    qudt:derivedUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:isScalingOf unit:C ;
    qudt:prefix prefix:Centi ;
    qudt:symbol "cC" ;
    qudt:ucumCode "cC"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    prov:wasDerivedFrom unit:C .

unit:CentiM3-PER-DAY a qudt:Unit,
        unit:Unit ;
    rdfs:label "Cubic Centimetre Per Day"@en,
        "Cubic Centimeter Per Day"@en-us ;
    qudt:conversionMultiplier 0.00000000001157407 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA388" ;
    qudt:plainTextDescription "0,000 001-fold of the power of the SI base unit metre with the exponent 3 divided by the unit day" ;
    qudt:ucumCode "cm3.d-1"^^qudt:UCUMcs,
        "cm3/d"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G47" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CentiM3-PER-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Cubic Centimetre Per Hour"@en,
        "Cubic Centimeter Per Hour"@en-us ;
    qudt:conversionMultiplier 0.0000000002777778 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA391" ;
    qudt:plainTextDescription "0,000 001-fold of the power of the SI base unit metre with the exponent 3 divided by the unit hour" ;
    qudt:ucumCode "cm3.h-1"^^qudt:UCUMcs,
        "cm3/h"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G48" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CentiM3-PER-MIN a qudt:Unit,
        unit:Unit ;
    rdfs:label "Cubic Centimetre Per Minute"@en,
        "Cubic Centimeter Per Minute"@en-us ;
    qudt:conversionMultiplier 0.00000001666667 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA395" ;
    qudt:plainTextDescription "0,000 001-fold of the power of the SI base unit metre with the exponent 3 divided by the unit minute" ;
    qudt:ucumCode "cm3.min-1"^^qudt:UCUMcs,
        "cm3/min"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G49" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CentiM3-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Cubic Centimetre Per Second"@en,
        "Cubic Centimeter Per Second"@en-us ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA399" ;
    qudt:plainTextDescription "0,000 001-fold of the power of the SI base unit metre with the exponent 3 divided by the SI base unit second" ;
    qudt:ucumCode "cm3.s-1"^^qudt:UCUMcs,
        "cm3/s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "2J" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Ci a qudt:Unit ;
    rdfs:label "Curie"@en ;
    dcterms:description "The curie (symbol Ci) is a non-SI unit of radioactivity, named after Marie and Pierre Curie. It is defined as \\(1Ci = 3.7 \\times 10^{10} decays\\ per\\ second\\). Its continued use is discouraged. One Curie is roughly the activity of 1 gram of the radium isotope Ra, a substance studied by the Curies. The SI derived unit of radioactivity is the becquerel (Bq), which equates to one decay per second. Therefore: \\(1Ci = 3.7 \\times 10^{10} Bq= 37 GBq\\) and \\(1Bq \\equiv 2.703 \\times 10^{-11}Ci \\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 37000000000.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Curie"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Activity ;
    qudt:iec61360Code "0112/2///62720#UAA138" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Curie?oldid=495080313"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/curie> ;
    qudt:symbol "Ci" ;
    qudt:ucumCode "Ci"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "CUR" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DPI a qudt:Unit ;
    rdfs:label "Dots Per Inch"@en ;
    qudt:conversionMultiplier 39.37008 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:InverseLength ;
    qudt:iec61360Code "0112/2///62720#UAA421" ;
    qudt:plainTextDescription "point density as amount of the picture base element divided by the unit inch according to the Anglo-American and the Imperial system of units" ;
    qudt:ucumCode "{dot}/[in_i]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "E39" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DecaC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "DecaCoulomb"@en ;
    dcterms:description "A DecaCoulomb is \\(10 C\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 10.0 ;
    qudt:derivedUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:isScalingOf unit:C ;
    qudt:prefix prefix:Deca ;
    qudt:symbol "daC" ;
    qudt:ucumCode "daC"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    prov:wasDerivedFrom unit:C .

unit:DeciC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "DeciCoulomb"@en ;
    dcterms:description "A DeciCoulomb is \\(10^{-1} C\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.1 ;
    qudt:derivedUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:isScalingOf unit:C ;
    qudt:prefix prefix:Deci ;
    qudt:symbol "dC" ;
    qudt:ucumCode "dC"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    prov:wasDerivedFrom unit:C .

unit:DeciM3-PER-DAY a qudt:Unit,
        unit:Unit ;
    rdfs:label "Cubic Decimetre Per Day"@en,
        "Cubic Decimeter Per Day"@en-us ;
    qudt:conversionMultiplier 0.00000001157407407 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA415" ;
    qudt:plainTextDescription "0,001-fold of the power of the SI base unit metre with the exponent 3 divided by the unit for time day" ;
    qudt:ucumCode "dm3.d-1"^^qudt:UCUMcs,
        "dm3/d"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J90" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DeciM3-PER-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Cubic Decimetre Per Hour"@en,
        "Cubic Decimeter Per Hour"@en-us ;
    qudt:conversionMultiplier 0.0000002777778 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA416" ;
    qudt:plainTextDescription "0,001-fold of the power of the SI base unit metre with the exponent 3 divided by the unit hour" ;
    qudt:ucumCode "dm3.h-1"^^qudt:UCUMcs,
        "dm3/h"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "E92" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DeciM3-PER-MIN a qudt:Unit,
        unit:Unit ;
    rdfs:label "Cubic Decimetre Per Minute"@en,
        "Cubic Decimeter Per Minute"@en-us ;
    qudt:conversionMultiplier 0.00001666667 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA418" ;
    qudt:plainTextDescription "0,001-fold of the power of the SI base unit metre with the exponent 3 divided by the unit for time minute" ;
    qudt:ucumCode "dm3.min-3"^^qudt:UCUMcs,
        "dm3/min3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J92" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DeciM3-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Cubic Decimetre Per Second"@en,
        "Cubic Decimeter Per Second"@en-us ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA420" ;
    qudt:plainTextDescription "0,001-fold of the power of the SI base unit metre with the exponent 3 divided by the unit for time second" ;
    qudt:ucumCode "dm3.s-1"^^qudt:UCUMcs,
        "dm3/s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J93" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DeciS-PER-M a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "decisiemens per metre"@en,
        "decisiemens per meter"@en-us ;
    qudt:conversionMultiplier 0.1 ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T3D0 ;
    qudt:hasQuantityKind quantitykind:Conductivity ;
    qudt:plainTextDescription "Decisiemens per metre." ;
    qudt:symbol "ds/m",
        "ds/m"^^xsd:string ;
    qudt:ucumCode "dS.m-1"^^qudt:UCUMcs,
        "dS/m"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:E a qudt:Unit ;
    rdfs:label "Elementary Charge"@en ;
    dcterms:description "\"Elementary Charge\", usually denoted as \\(e\\), is the electric charge carried by a single proton, or equivalently, the negation (opposite) of the electric charge carried by a single electron. This elementary charge is a fundamental physical constant. To avoid confusion over its sign, e is sometimes called the elementary positive charge. This charge has a measured value of approximately \\(1.602176565(35) \\times 10 coulombs\\). In the cgs system, \\(e\\) is \\(4.80320425(10) \\times 10 statcoulombs\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 16.02176565 ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:symbol "e" ;
    qudt:ucumCode "[e]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:ERG-PER-G a qudt:Unit ;
    rdfs:label "Erg per Gram"@en ;
    qudt:conversionMultiplier 0.0001 ;
    qudt:derivedUnitOfSystem sou:CGS,
        sou:CGS-GAUSS ;
    qudt:expression "\\(erg-per-g\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:SpecificEnergy ;
    qudt:iec61360Code "0112/2///62720#UAB061" ;
    qudt:ucumCode "erg.g-1"^^qudt:UCUMcs,
        "erg/g"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A61" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:ERG-PER-GM a qudt:Unit ;
    rdfs:label "Erg Per Gram"@en ;
    qudt:conversionMultiplier 0.0001 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:SpecificEnergy ;
    qudt:iec61360Code "0112/2///62720#UAB061" ;
    qudt:plainTextDescription "CGS unit of the mass-related energy" ;
    qudt:ucumCode "erg.g-1"^^qudt:UCUMcs,
        "erg/g"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A61" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:ElementaryCharge a qudt:Unit ;
    rdfs:label "Elementary Charge"@en ;
    dcterms:description "\\(\\textbf{Elementary Charge}, usually denoted as \\(e\\), is the electric charge carried by a single proton, or equivalently, the negation (opposite) of the electric charge carried by a single electron. This elementary charge is a fundamental physical constant. To avoid confusion over its sign, e is sometimes called the elementary positive charge. This charge has a measured value of approximately \\(1.602176565(35) \\times 10\\,coulombs\\). In the cgs system, \\(e\\) is \\(4.80320425(10) \\times 10\\, statcoulombs\\)."^^qudt:LatexString ;
    qudt:allowedUnitOfSystem sou:SI ;
    qudt:conversionMultiplier 16.02176565 ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:symbol "e" ;
    qudt:ucumCode "[e]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:ExaC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "ExaCoulomb"@en ;
    dcterms:description "An ExaCoulomb is \\(10^{18} C\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1000000000000000000.0 ;
    qudt:derivedUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:isScalingOf unit:C ;
    qudt:prefix prefix:Exa ;
    qudt:symbol "EC" ;
    qudt:ucumCode "EC"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    prov:wasDerivedFrom unit:C .

unit:F a qudt:Unit ;
    rdfs:label "Faraday"@en ;
    dcterms:description "\"Faraday\" is a unit for  'Electric Charge' expressed as \\(F\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 96485.3399 ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/faraday> ;
    qudt:symbol "F" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT-LA a qudt:Unit,
        unit:Unit ;
    rdfs:label "Foot Lambert"@en ;
    dcterms:description "\"Foot Lambert\" is a C.G.S System unit for  'Luminance' expressed as \\(ft-L\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 3.4262591 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:expression "\\(ft-L\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-2I1M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Luminance ;
    qudt:ucumCode "[ft_i].Lmb"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT3-PER-DAY a qudt:Unit,
        unit:Unit ;
    rdfs:label "Cubic Foot Per Day"@en ;
    qudt:conversionMultiplier 0.0000003277413 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA458" ;
    qudt:plainTextDescription "power of the unit foot according to the Anglo-American and the Imperial system of units with the exponent 3 divided by the unit for time day" ;
    qudt:ucumCode "[cft_i].d-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K22" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT3-PER-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Cubic Foot Per Hour"@en ;
    qudt:conversionMultiplier 0.000007865792 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA459" ;
    qudt:plainTextDescription "power of the unit foot according to the Anglo-American and the Imperial system of units with the exponent 3 divided by the unit hour" ;
    qudt:ucumCode "[cft_i].h-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "2K" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FemtoC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "FemtoCoulomb"@en ;
    dcterms:description "A FemtoCoulomb is \\(10^{-15} C\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.000000000000001 ;
    qudt:derivedUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:isScalingOf unit:C ;
    qudt:prefix prefix:Femto ;
    qudt:symbol "fC" ;
    qudt:ucumCode "fC"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    prov:wasDerivedFrom unit:C .

unit:GAL_UK-PER-DAY a qudt:Unit,
        unit:Unit ;
    rdfs:label "Gallon (UK) Per Day"@en ;
    qudt:conversionMultiplier 0.00000005261678 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA501" ;
    qudt:plainTextDescription "unit gallon (UK dry or liq.) according to the Imperial system of units divided by the SI unit day" ;
    qudt:ucumCode "[gal_br].d-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K26" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GAL_UK-PER-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Gallon (UK) Per Hour"@en ;
    qudt:conversionMultiplier 0.000001262803 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA502" ;
    qudt:plainTextDescription "unit gallon (UK dry or Liq.) according to the Imperial system of units divided by the SI unit hour" ;
    qudt:ucumCode "[gal_br].h-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K27" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GAL_UK-PER-MIN a qudt:Unit,
        unit:Unit ;
    rdfs:label "Gallon UK) Per Minute"@en ;
    qudt:conversionMultiplier 0.00007576817 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA503" ;
    qudt:plainTextDescription "unit gallon (UK dry or liq.) according to the Imperial system of units divided by the SI unit minute" ;
    qudt:ucumCode "[gal_br].m-1in"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G3" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GAL_UK-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Gallon (UK) Per Second"@en ;
    qudt:conversionMultiplier 0.00454609 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA504" ;
    qudt:plainTextDescription "unit gallon (UK dry or liq.) according to the Imperial system of units divided by the SI base unit second" ;
    qudt:ucumCode "[gal_br].s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K28" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GAL_US-PER-DAY a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "US Gallon per Day"@en ;
    dcterms:description "\"US Gallon per Day\" is a unit for  'Volume Per Unit Time' expressed as \\(gal/d\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0000000438126389 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:expression "\\(gal/d\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumePerUnitTime ;
    qudt:ucumCode "[gal_us].d-1"^^qudt:UCUMcs,
        "[gal_us]/d"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GAL_US-PER-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Gallon (US) Per Hour"@en ;
    qudt:conversionMultiplier 0.000001051503 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA507" ;
    qudt:plainTextDescription "unit gallon (US, liq.) according to the Anglo-American system of units divided by the SI unit hour" ;
    qudt:ucumCode "[gal_us].h-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G50" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GAL_US-PER-MIN a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "US Gallon per Minute"@en ;
    dcterms:description "\"US Gallon per Minute\" is a C.G.S System unit for  'Volume Per Unit Time' expressed as \\(gal/min\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0000630902 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:expression "\\(gal/min\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumePerUnitTime ;
    qudt:ucumCode "[gal_us].min-1"^^qudt:UCUMcs,
        "[gal_us]/min"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GAL_US-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Gallon (US Liquid) Per Second"@en ;
    qudt:conversionMultiplier 0.003785412 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA509" ;
    qudt:plainTextDescription "unit gallon (US, liq.) according to the Anglo-American system of units divided by the SI base unit second" ;
    qudt:ucumCode "[gal_us].s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K30" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GI_UK-PER-DAY a qudt:Unit,
        unit:Unit ;
    rdfs:label "Gill (UK) Per Day"@en ;
    qudt:conversionMultiplier 0.000000001644274 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA512" ;
    qudt:plainTextDescription "unit of the volume gill (UK) for fluids according to the Imperial system of units divided by the unit for time day" ;
    qudt:ucumCode "[gil_br].d-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K32" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GI_UK-PER-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Gill (UK) Per Hour"@en ;
    qudt:conversionMultiplier 0.00000003946258 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA513" ;
    qudt:plainTextDescription "unit of the volume gill (UK) for fluids according to the Imperial system of units divided by the unit for time hour" ;
    qudt:ucumCode "[gil_br].h-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K33" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GI_UK-PER-MIN a qudt:Unit,
        unit:Unit ;
    rdfs:label "Gill (UK) Per Minute"@en ;
    qudt:conversionMultiplier 0.000002367755 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA514" ;
    qudt:plainTextDescription "unit of the volume gill (UK) for fluids according to the Imperial system of units divided by the unit for time minute" ;
    qudt:ucumCode "[gil_br].min-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K34" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GI_UK-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Gill (UK) Per Second"@en ;
    qudt:conversionMultiplier 0.0001420653 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA515" ;
    qudt:plainTextDescription "unit of the volume gill (UK) for fluids according to the Imperial system of units divided by the SI base unit second" ;
    qudt:ucumCode "[gil_br].s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K35" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GI_US-PER-DAY a qudt:Unit,
        unit:Unit ;
    rdfs:label "Gill (US) Per Day"@en ;
    qudt:conversionMultiplier 0.000000001369145 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA517" ;
    qudt:plainTextDescription "unit of the volume gill (US) for fluids according to the Anglo-American system of units divided by the unit for time day" ;
    qudt:ucumCode "[gil_us].d-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K36" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GI_US-PER-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Gill (US) Per Hour"@en ;
    qudt:conversionMultiplier 0.00000003285947 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA518" ;
    qudt:plainTextDescription "unit of the volume gill (US) for fluids according to the Anglo-American system of units divided by the unit for time hour" ;
    qudt:ucumCode "[gil_us].h-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K37" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GI_US-PER-MIN a qudt:Unit,
        unit:Unit ;
    rdfs:label "Gill (US) Per Minute"@en ;
    qudt:conversionMultiplier 0.000001971568 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA519" ;
    qudt:plainTextDescription "unit of the volume gill (US) for fluids according to the Anglo-American system of units divided by the unit for time minute" ;
    qudt:ucumCode "[gil_us].min-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K38" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GI_US-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Gill (US) Per Second"@en ;
    qudt:conversionMultiplier 0.0001182941 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA520" ;
    qudt:plainTextDescription "unit of the volume gill (US) for fluids according to the Anglo-American system of units divided by the SI base unit second" ;
    qudt:ucumCode "[gil_us].s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K39" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GRAY-PER-SEC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Gray per Second"@en ;
    dcterms:description "\"Gray per Second\" is a unit for  'Absorbed Dose Rate' expressed as \\(Gy/s\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(Gy/s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:AbsorbedDoseRate,
        quantitykind:KermaRate ;
    qudt:iec61360Code "0112/2///62720#UAA164" ;
    qudt:ucumCode "Gy.s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A96" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Gamma a qudt:Unit ;
    rdfs:label "Gamma"@en ;
    dcterms:description "\"Gamma\" is a C.G.S System unit for  'Magnetic Field'."^^rdf:HTML ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Gamma"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E-1L0I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:MagneticField,
        quantitykind:MagneticFluxDensity ;
    qudt:iec61360Code "0112/2///62720#UAB213" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Gamma?oldid=494680973"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/gamma> ;
    qudt:symbol "γ" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GigaC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "GigaCoulomb"@en ;
    qudt:conversionMultiplier 1000000000.0 ;
    qudt:derivedUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:isScalingOf unit:C ;
    qudt:prefix prefix:Giga ;
    qudt:symbol "GC" ;
    qudt:ucumCode "GC"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    prov:wasDerivedFrom unit:C .

unit:H-PER-M a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Henry per Metre"@en,
        "Henry per Meter"@en-us ;
    dcterms:description "The henry per meter (symbolized \\(H/m\\)) is the unit of magnetic permeability in the International System of Units ( SI ). Reduced to base units in SI, \\(1\\,H/m\\) is the equivalent of one kilogram meter per square second per square ampere."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(H/m\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-2L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ElectromagneticPermeability,
        quantitykind:Permeability ;
    qudt:iec61360Code "0112/2///62720#UAA168" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Henry?oldid=491435978"^^xsd:anyURI ;
    qudt:ucumCode "H.m-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A98" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HZ-PER-T a qudt:Unit ;
    rdfs:label "Hertz per Tesla"@en ;
    dcterms:description "\"Hertz per Tesla\" is a unit for  'Electric Charge Per Mass' expressed as \\(Hz T^{-1}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(Hz T^{-1}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M-1H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricChargePerMass ;
    qudt:ucumCode "Hz.T-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:H_Stat-PER-CentiM a qudt:Unit ;
    rdfs:label "Stathenry per Centimetre"@en,
        "Stathenry per Centimeter"@en-us ;
    dcterms:description "The Stathenry per Centimeter is a unit of measure for the absolute permeability of free space."^^rdf:HTML ;
    qudt:conversionMultiplier 89876000000000.0 ;
    qudt:derivedUnitOfSystem sou:CGS-ESU ;
    qudt:expression "\\(stath-per-cm\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-2L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ElectromagneticPermeability,
        quantitykind:Permeability ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HectoC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "HectoCoulomb"@en ;
    dcterms:description "\"HectoCoulomb\" is a unit for  'Electric Charge' expressed as \\(hC\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 100.0 ;
    qudt:derivedUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:isScalingOf unit:C ;
    qudt:prefix prefix:Hecto ;
    qudt:symbol "hC" ;
    qudt:ucumCode "hC"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    prov:wasDerivedFrom unit:C .

unit:IN3-PER-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Cubic Inch Per Hour"@en ;
    qudt:conversionMultiplier 0.000000004551961 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA550" ;
    qudt:plainTextDescription "power of the unit inch according to the Anglo-American and the Imperial system of units with the exponent 3 divided by the unit hour" ;
    qudt:ucumCode "[cin_i].h-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G56" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:IN3-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Cubic Inch Per Second"@en ;
    qudt:conversionMultiplier 0.00001638706 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA552" ;
    qudt:plainTextDescription "power of the unit inch according to the Anglo-American and the Imperial system of units with the exponent 3 divided by the SI base unit second" ;
    qudt:ucumCode "[cin_i].s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G58" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:J-PER-GM a qudt:Unit ;
    rdfs:label "Joule Per Gram"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:SpecificEnergy ;
    qudt:iec61360Code "0112/2///62720#UAA174" ;
    qudt:plainTextDescription "SI derived unit joule divided by the 0.001-fold of the SI base unit kilogram" ;
    qudt:ucumCode "J.g-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D95" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:J-PER-K a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Joule per Kelvin"@en ;
    dcterms:description "Joule Per Kelvin (J/K) is a unit in the category of Entropy. It is also known as joules per kelvin, joule/kelvin. This unit is commonly used in the SI unit system. Joule Per Kelvin (J/K) has a dimension of \\(ML^{2}T^{-2}Q^{-1}\\( where \\(M\\) is mass, L is length, T is time, and Q is temperature. This unit is the standard SI unit in this category."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(J/K\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:Entropy,
        quantitykind:HeatCapacity ;
    qudt:iec61360Code "0112/2///62720#UAA173" ;
    qudt:ucumCode "J.K-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "JE" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:J-PER-KiloGM-K-M3 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Joule per Kilogram Kelvin Cubic Metre"@en,
        "Joule per Kilogram Kelvin Cubic Meter"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(j-per-kg-k-m3\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:SpecificHeatCapacityAtConstantVolume,
        quantitykind:SpecificHeatVolume ;
    qudt:ucumCode "J.kg-1.K.m-3"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:J-PER-KiloGM-K-PA a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Joule per Kilogram Kelvin per Pascal"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(j-per-kg-k-pa\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:SpecificHeatCapacityAtConstantPressure,
        quantitykind:SpecificHeatPressure ;
    qudt:ucumCode "J.kg-1.K-1.Pa-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:J-PER-M a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Joule Per Metre"@en,
        "Joule Per Meter"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Steradian"^^xsd:anyURI ;
    qudt:expression "\\(j/m\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:LinearEnergyTransfer,
        quantitykind:TotalLinearStoppingPower ;
    qudt:iec61360Code "0112/2///62720#UAA178" ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:ucumCode "J.m-1"^^qudt:UCUMcs,
        "J/m"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B12" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:J-PER-MOL-K a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Joule per Mole Kelvin"@en ;
    dcterms:description "Energy needed to heat one mole of substance by 1 Kelvin, under standard conditions (not standard temperature and pressure STP). The standard molar entropy is usually given the symbol S, and has units of joules per mole kelvin ( \\( J\\cdot mol^{-1} K^{-1}\\)). Unlike standard enthalpies of formation, the value of S is an absolute. That is, an element in its standard state has a nonzero value of S at room temperature."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(J/(mol-K)\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A-1E0L2I0M1H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:MolarEntropy,
        quantitykind:MolarHeatCapacity ;
    qudt:iec61360Code "0112/2///62720#UAA184" ;
    qudt:ucumCode "J.mol-1.K-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B16" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KY a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Kayser"@en ;
    qudt:conversionMultiplier 100.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Kayser"^^xsd:anyURI ;
    qudt:derivedUnitOfSystem sou:CGS,
        sou:CGS-GAUSS ;
    qudt:expression "\\(\\(cm^{-1}\\)\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:InverseLength ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Kayser?oldid=458489166"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/kayser> ;
    qudt:ucumCode "Ky"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloA a qudt:Unit,
        unit:Unit ;
    rdfs:label "kiloampere"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCurrent ;
    qudt:iec61360Code "0112/2///62720#UAA557" ;
    qudt:isScalingOf unit:A ;
    qudt:prefix prefix:Kilo ;
    qudt:symbol "kA",
        "kA"^^xsd:string ;
    qudt:ucumCode "kA"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B22" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloA-HR a qudt:Unit ;
    rdfs:label "Kiloampere Hour"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:iec61360Code "0112/2///62720#UAB053" ;
    qudt:plainTextDescription "product of the 1 000-fold of the SI base unit ampere and the unit hour" ;
    qudt:ucumCode "kA.h"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "TAH" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloBIT-PER-SEC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Kilobit per Second"@en ;
    dcterms:description "A kilobit per second (kB/s) is a unit of data transfer rate equal to 1,000 bits per second."^^rdf:HTML ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:DataRate ;
    qudt:iec61360Code "0112/2///62720#UAA586" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Data_rate_units#Kilobit_per_second"^^xsd:anyURI ;
    qudt:isScalingOf unit:BIT-PER-SEC ;
    qudt:symbol "kbps" ;
    qudt:ucumCode "kbit.s-2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C74" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "KiloCoulomb"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:derivedUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:iec61360Code "0112/2///62720#UAA563" ;
    qudt:isScalingOf unit:C ;
    qudt:prefix prefix:Kilo ;
    qudt:symbol "kC" ;
    qudt:ucumCode "kC"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B26" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    prov:wasDerivedFrom unit:C .

unit:KiloCAL-PER-GM a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Kilocalorie per Gram"@en ;
    dcterms:description "\"Kilocalorie per Gram\" is a unit for  'Specific Energy' expressed as \\(kcal/gm\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 4184000.0 ;
    qudt:expression "\\(kcal/gm\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:SpecificEnergy ;
    qudt:ucumCode "kcal.g-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloCi a qudt:Unit ;
    rdfs:label "Kilocurie"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Activity,
        quantitykind:DecayConstant ;
    qudt:iec61360Code "0112/2///62720#UAB046" ;
    qudt:plainTextDescription "1 000-fold of the unit curie" ;
    qudt:ucumCode "kCi"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "2R" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-PER-HR a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Kilogram per Hour"@en ;
    dcterms:description "Kilogram Per Hour (kg/h) is a unit in the category of Mass flow rate. It is also known as kilogram/hour. Kilogram Per Hour (kg/h) has a dimension of MT-1 where M is mass, and T is time. It can be converted to the corresponding standard SI unit kg/s by multiplying its value by a factor of 0.000277777777778."^^rdf:HTML ;
    qudt:allowedUnitOfSystem sou:SI ;
    qudt:conversionMultiplier 0.000277777778 ;
    qudt:expression "\\(kg/h\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate,
        quantitykind:MassPerTime ;
    qudt:iec61360Code "0112/2///62720#UAA607" ;
    qudt:ucumCode "kg.h-1"^^qudt:UCUMcs,
        "kg/h"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "E93" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-PER-KiloM2 a qudt:Unit ;
    rdfs:label "Kilograms per square kilometre"@en ;
    dcterms:description "One SI standard unit of mass over the square of one thousand standard unit of length."@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassPerArea,
        quantitykind:SurfaceDensity ;
    qudt:ucumCode "kg.km-2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-PER-M2-SEC a qudt:Unit ;
    rdfs:label "Kilograms per square metre per second"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:CharacteristicAcousticImpedance,
        quantitykind:MassPerAreaTime ;
    qudt:ucumCode "kg.m-2.s-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-PER-SEC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Kilogram per Second"@en ;
    dcterms:description "Kilogram Per Second (kg/s) is a unit in the category of Mass flow rate. It is also known as kilogram/second, kilograms per second. This unit is commonly used in the SI unit system. Kilogram Per Second (kg/s) has a dimension of \\(MT^{-1}\\) where M is mass, and T is time. This unit is the standard SI unit in this category."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(kg/s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate,
        quantitykind:MassPerTime ;
    qudt:iec61360Code "0112/2///62720#UAA629" ;
    qudt:ucumCode "kg.s-1"^^qudt:UCUMcs,
        "kg/s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "KGS" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloJ-PER-K a qudt:Unit ;
    rdfs:label "Kilojoule Per Kelvin"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:EnergyPerTemperature ;
    qudt:iec61360Code "0112/2///62720#UAA569" ;
    qudt:plainTextDescription "1 000-fold of the SI derived unit joule divided by the SI base unit kelvin" ;
    qudt:ucumCode "kJ.K-1"^^qudt:UCUMcs,
        "kJ/K"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B41" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloJ-PER-KiloGM a qudt:Unit ;
    rdfs:label "Kilojoule Per Kilogram"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:SpecificEnergy ;
    qudt:iec61360Code "0112/2///62720#UAA570" ;
    qudt:plainTextDescription "1 000-fold of the SI derived unit joule divided by the SI base unit kilogram" ;
    qudt:ucumCode "kJ.kg-1"^^qudt:UCUMcs,
        "kJ/kg"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B42" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloL-PER-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilolitre Per Hour"@en,
        "Kilolitre Per Hour"@en-us ;
    qudt:conversionMultiplier 0.00277777777778 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAB121" ;
    qudt:plainTextDescription "unit of the volume kilolitres divided by the unit hour" ;
    qudt:ucumCode "kL.h-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "4X" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloLB_F-FT-PER-LB a qudt:Unit ;
    rdfs:label "Pound Force Foot Per Pound"@en ;
    qudt:conversionMultiplier 2989.067 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:SpecificEnergy ;
    qudt:iec61360Code "0112/2///62720#UAB484" ;
    qudt:plainTextDescription "product of the Anglo-American unit pound-force and the Anglo-American unit foot divided by the Anglo-American unit pound (US) of mass" ;
    qudt:ucumCode "[lbf_av].[ft_i].[lb_av]-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G20" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloR a qudt:Unit ;
    rdfs:label "Kiloroentgen"@en ;
    qudt:conversionMultiplier 0.258 ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M-1H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricChargePerMass ;
    qudt:iec61360Code "0112/2///62720#UAB057" ;
    qudt:plainTextDescription "1 000-fold of the unit roentgen" ;
    qudt:ucumCode "kR"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "KR" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloS-PER-M a qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilosiemens Per Metre"@en,
        "Kilosiemens Per Meter"@en-us ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T3D0 ;
    qudt:hasQuantityKind quantitykind:Conductivity ;
    qudt:iec61360Code "0112/2///62720#UAA579" ;
    qudt:plainTextDescription "1 000-fold of the SI derived unit siemens divided by the SI base unit metre" ;
    qudt:ucumCode "kS.m-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B54" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloTONNE a qudt:Unit,
        unit:Unit ;
    rdfs:label "KiloTonne"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:KiloTON_Metric .

unit:L-PER-DAY a qudt:Unit,
        unit:Unit ;
    rdfs:label "Litre Per Day"@en,
        "Liter Per Day"@en-us ;
    qudt:conversionMultiplier 0.00000001157407 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA652" ;
    qudt:plainTextDescription "unit litre divided by the unit day" ;
    qudt:ucumCode "L.d-1"^^qudt:UCUMcs,
        "L/d"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "LD" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:L-PER-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Litre Per Hour"@en,
        "Liter Per Hour"@en-us ;
    qudt:conversionMultiplier 0.0000002777778 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA655" ;
    qudt:plainTextDescription "Unit litre divided by the unit hour" ;
    qudt:ucumCode "L.h-1"^^qudt:UCUMcs,
        "L/h"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "E32" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:L-PER-MIN a qudt:Unit,
        unit:Unit ;
    rdfs:label "Litre Per Minute"@en,
        "Liter Per Minute"@en-us ;
    qudt:conversionMultiplier 0.00001666667 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA659" ;
    qudt:plainTextDescription "unit litre divided by the unit minute" ;
    qudt:ucumCode "L.min-1"^^qudt:UCUMcs,
        "L/min"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L2" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:L-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Litre Per Second"@en,
        "Liter Per Second"@en-us ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA664" ;
    qudt:plainTextDescription "unit litre divided by the SI base unit second" ;
    qudt:ucumCode "L.s-1"^^qudt:UCUMcs,
        "L/s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G51" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LA a qudt:Unit,
        unit:Unit ;
    rdfs:label "Lambert"@en ;
    dcterms:description "The lambert (symbol \\(L\\), \\(la\\) or \\(Lb\\)) is a non-SI unit of luminance. A related unit of luminance, the foot-lambert, is used in the lighting, cinema and flight simulation industries. The SI unit is the candela per square metre (\\(cd/m^2\\))."^^qudt:LatexString ;
    qudt:conversionMultiplier 3183.09886 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Lambert"^^xsd:anyURI ;
    qudt:derivedCoherentUnitOfSystem sou:CGS ;
    qudt:hasDimensionVector qkdv:A0E0L-2I1M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Luminance ;
    qudt:iec61360Code "0112/2///62720#UAB259" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Lambert?oldid=494078267"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/lambert> ;
    qudt:symbol "L",
        "L"^^xsd:string ;
    qudt:ucumCode "Lmb"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB-PER-HR a qudt:Unit ;
    rdfs:label "Pound per Hour"@en ;
    dcterms:description "Pound per hour is a mass flow unit. It is abbreviated as PPH or more conventionally as lb/h. Fuel flow for engines is usually expressed using this unit, it is particularly useful when dealing with gases or liquids as volume flow varies more with temperature and pressure. \\(1 lb/h = 0.4535927 kg/h = 126.00 mg/s\\).  Minimum fuel intake on a jumbojet can be as low as 150 lb/h when idling, however this is not enough to sustain flight."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00012599788055555556 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Pound_per_hour"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(PPH\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate,
        quantitykind:MassPerTime ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Pound_per_hour?oldid=328571072"^^xsd:anyURI ;
    qudt:ucumCode "[lb_av].h-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB-PER-MIN a qudt:Unit ;
    rdfs:label "Pound per Minute"@en ;
    dcterms:description "\"Pound per Minute\" is an Imperial unit for  'Mass Per Time' expressed as \\(lb/min\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.007559872833333333 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(lb/min\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate,
        quantitykind:MassPerTime ;
    qudt:ucumCode "[lb_av].min-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LM-PER-W a qudt:Unit ;
    rdfs:label "Lumen per Watt"@en ;
    dcterms:description "A measurement of luminous efficacy, which is the light output in lumens using one watt of electricity."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(lm-per-w\\)"^^qudt:LatexString ;
    qudt:hasQuantityKind quantitykind:LuminousEfficacy,
        quantitykind:SpectralLuminousEfficiency ;
    qudt:iec61360Code "0112/2///62720#UAA719" ;
    qudt:ucumCode "lm.W-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B61" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M3-PER-DAY a qudt:Unit,
        unit:Unit ;
    rdfs:label "Cubic Metre Per Day"@en,
        "Cubic Meter Per Day"@en-us ;
    qudt:conversionMultiplier 0.00001157407 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA760" ;
    qudt:plainTextDescription "power of the SI base unit metre with the exponent 3 divided by the unit day" ;
    qudt:ucumCode "m3.d-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G52" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M3-PER-MIN a qudt:Unit,
        unit:Unit ;
    rdfs:label "Cubic Metre Per Minute"@en,
        "Cubic Meter Per Minute"@en-us ;
    qudt:conversionMultiplier 0.01666667 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA768" ;
    qudt:plainTextDescription "power of the SI base unit metre with the exponent 3 divided by the unit minute" ;
    qudt:ucumCode "m3.min-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G53" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M4 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Quartic Metre"@en,
        "Quartic Meter"@en-us ;
    dcterms:description "A unit associated with area moments of inertia."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Quartic_metre"^^xsd:anyURI ;
    qudt:expression "\\(m^{4}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L4I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:SecondAxialMomentOfArea,
        quantitykind:SecondPolarMomentOfArea ;
    qudt:ucumCode "m4"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MHO a qudt:Unit ;
    rdfs:label "Mho"@en ;
    dcterms:description "\"Mho\" is a C.G.S System unit for  'Electric Conductivity' expressed as \\(mho\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Siemens_%28unit%29"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T3D0 ;
    qudt:hasQuantityKind quantitykind:ElectricConductivity ;
    qudt:iec61360Code "0112/2///62720#UAB200" ;
    qudt:informativeReference "http://www.simetric.co.uk/siderived.htm"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/mho> ;
    qudt:symbol "℧" ;
    qudt:ucumCode "mho"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "NQ" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:S .

unit:MHO_Stat a qudt:Unit ;
    rdfs:label "Statmho"@en ;
    dcterms:description "\"StatMHO\" is the unit of conductance, admittance, and susceptance in the C.G.S e.s.u system of units. One \\(statmho\\) is the conductance between two points in a conductor when a constant potential difference of \\(1 \\; statvolt\\) applied between the points produces in the conductor a current of \\(1 \\; statampere\\), the conductor not being the source of any electromotive force, approximately \\(1.1126 \\times 10^{-12} mho\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0000000000011126 ;
    qudt:exactMatch unit:S_Stat ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T3D0 ;
    qudt:hasQuantityKind quantitykind:ElectricConductivity ;
    qudt:informativeReference "http://www.sizes.com/units/statmho.htm"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/statmho> ;
    qudt:symbol "stat℧" ;
    qudt:unitOfSystem sou:CGS,
        sou:SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:S_Stat .

unit:MOL-PER-M3 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Mole per Cubic Metre"@en,
        "Mole per Cubic Meter"@en-us ;
    dcterms:description "The SI derived unit for amount-of-substance concentration is the mole/cubic meter."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(mol/m^{3}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:AmountOfSubstanceConcentrationOfB,
        quantitykind:AmountOfSubstancePerUnitVolume ;
    qudt:iec61360Code "0112/2///62720#UAA891" ;
    qudt:ucumCode "mol.m-3"^^qudt:UCUMcs,
        "mol/m3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C36" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaA a qudt:Unit,
        unit:Unit ;
    rdfs:label "Megaampere"@en ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCurrent ;
    qudt:iec61360Code "0112/2///62720#UAA202" ;
    qudt:plainTextDescription "1 000 000-fold of the SI base unit ampere" ;
    qudt:ucumCode "MA"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H38" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "MegaCoulomb"@en ;
    dcterms:description "A MegaCoulomb is \\(10^{6} C\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:derivedUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:iec61360Code "0112/2///62720#UAA206" ;
    qudt:isScalingOf unit:C ;
    qudt:prefix prefix:Mega ;
    qudt:symbol "MC" ;
    qudt:ucumCode "MC"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D77" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    prov:wasDerivedFrom unit:C .

unit:MegaHZ-PER-T a qudt:Unit ;
    rdfs:label "Mega Hertz per Tesla"@en ;
    dcterms:description "\"Mega Hertz per Tesla\" is a unit for  'Electric Charge Per Mass' expressed as \\(MHz T^{-1}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:expression "\\(MHz T^{-1}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M-1H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricChargePerMass ;
    qudt:ucumCode "MHz.T-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaJ-PER-KiloGM a qudt:Unit ;
    rdfs:label "Megajoule Per Kilogram"@en ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:SpecificEnergy ;
    qudt:iec61360Code "0112/2///62720#UAB093" ;
    qudt:plainTextDescription "1,000,000-fold of the derived SI unit joule divided by the SI base unit kilogram" ;
    qudt:ucumCode "MJ.kg-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "JK" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaS-PER-M a qudt:Unit,
        unit:Unit ;
    rdfs:label "Megasiemens Per Metre"@en,
        "Megasiemens Per Meter"@en-us ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T3D0 ;
    qudt:hasQuantityKind quantitykind:Conductivity ;
    qudt:iec61360Code "0112/2///62720#UAA220" ;
    qudt:plainTextDescription "1,000,000-fold of the SI derived unit siemens divided by the SI base unit metre" ;
    qudt:ucumCode "MS.m-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B77" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroA a qudt:Unit,
        unit:Unit ;
    rdfs:label "microampere"@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCurrent ;
    qudt:iec61360Code "0112/2///62720#UAA057" ;
    qudt:isScalingOf unit:A ;
    qudt:latexSymbol "\\(\\mu A\\)"^^qudt:LatexString ;
    qudt:prefix prefix:Micro ;
    qudt:symbol "µA",
        "µA"^^xsd:string ;
    qudt:ucumCode "uA"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B84" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "MicroCoulomb"@en ;
    dcterms:description "A MicroCoulomb is \\(10^{-6} C\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:derivedUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:iec61360Code "0112/2///62720#UAA059" ;
    qudt:isScalingOf unit:C ;
    qudt:prefix prefix:Micro ;
    qudt:symbol "μC" ;
    qudt:ucumCode "uC"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B86" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    prov:wasDerivedFrom unit:C .

unit:MicroGM-PER-MilliL a qudt:Unit ;
    rdfs:label "Micrograms per millilitre"@en ;
    dcterms:description "One 10**6 part of the SI standard unit of mass of the measurand per millilitre volume of matrix."@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassConcentration,
        quantitykind:MassDensity ;
    qudt:ucumCode "ug.mL-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroS-PER-CentiM a qudt:Unit,
        unit:Unit ;
    rdfs:label "Microsiemens Per Centimetre"@en,
        "Microsiemens Per Centimeter"@en-us ;
    qudt:conversionMultiplier 0.0001 ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T3D0 ;
    qudt:hasQuantityKind quantitykind:Conductivity ;
    qudt:iec61360Code "0112/2///62720#UAA075" ;
    qudt:plainTextDescription "0.000001-fold of the SI derived unit Siemens divided by the 0.01-fold of the SI base unit metre" ;
    qudt:ucumCode "uS.cm-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G42" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroS-PER-M a qudt:Unit,
        unit:Unit ;
    rdfs:label "Microsiemens Per Metre"@en,
        "Microsiemens Per Meter"@en-us ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T3D0 ;
    qudt:hasQuantityKind quantitykind:Conductivity ;
    qudt:iec61360Code "0112/2///62720#UAA076" ;
    qudt:plainTextDescription "0.000001-fold of the SI derived unit Siemens divided by the SI base unit metre" ;
    qudt:ucumCode "uS.m-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G43" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliA a qudt:Unit,
        unit:Unit ;
    rdfs:label "MilliAmpere"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCurrent ;
    qudt:iec61360Code "0112/2///62720#UAA775" ;
    qudt:isScalingOf unit:A ;
    qudt:prefix prefix:Micro ;
    qudt:symbol "mA",
        "mA"^^xsd:string ;
    qudt:ucumCode "mA"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "4K" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliA-HR a qudt:Unit ;
    rdfs:label "Milliampere Hour"@en ;
    qudt:conversionMultiplier 3.6 ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:iec61360Code "0112/2///62720#UAA777" ;
    qudt:plainTextDescription "product of the 0.001-fold of the SI base unit ampere and the unit hour" ;
    qudt:ucumCode "mA.h"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "E09" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "MilliCoulomb"@en ;
    dcterms:description "A MilliCoulomb is \\(10^{-3} C\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.001 ;
    qudt:derivedUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:iec61360Code "0112/2///62720#UAA782" ;
    qudt:isScalingOf unit:C ;
    qudt:prefix prefix:Milli ;
    qudt:symbol "mC" ;
    qudt:ucumCode "mC"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D86" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    prov:wasDerivedFrom unit:C .

unit:MilliC-PER-KiloGM a qudt:Unit ;
    rdfs:label "Millicoulomb Per Kilogram"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M-1H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricChargePerMass ;
    qudt:iec61360Code "0112/2///62720#UAA783" ;
    qudt:plainTextDescription "0.001-fold of the SI derived unit coulomb divided by the SI base unit kilogram" ;
    qudt:ucumCode "mC.kg-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C8" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliL-PER-DAY a qudt:Unit,
        unit:Unit ;
    rdfs:label "Millilitre Per Day"@en,
        "Millilitre Per Day"@en-us ;
    qudt:conversionMultiplier 0.00000000001157407 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA847" ;
    qudt:plainTextDescription "0.001-fold of the unit litre divided by the unit day" ;
    qudt:ucumCode "mL.d-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G54" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliL-PER-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Millilitre Per Hour"@en,
        "Millilitre Per Hour"@en-us ;
    qudt:conversionMultiplier 0.0000000002777778 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA850" ;
    qudt:plainTextDescription "0.001-fold of the unit litre divided by the unit hour" ;
    qudt:ucumCode "mL.h-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G55" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliL-PER-MIN a qudt:Unit,
        unit:Unit ;
    rdfs:label "Millilitre Per Minute"@en,
        "Millilitre Per Minute"@en-us ;
    qudt:conversionMultiplier 0.00000001666667 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA855" ;
    qudt:plainTextDescription "0.001-fold of the unit litre divided by the unit minute" ;
    qudt:ucumCode "mL.min-1"^^qudt:UCUMcs,
        "mL/min"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "41" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliL-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Millilitre Per Second"@en,
        "Millilitre Per Second"@en-us ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA859" ;
    qudt:plainTextDescription "0.001-fold of the unit litre divided by the SI base unit second" ;
    qudt:ucumCode "mL.s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "40" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliM4 a qudt:Unit ;
    rdfs:label "Quartic Millimetre"@en,
        "Quartic Millimeter"@en-us ;
    qudt:conversionMultiplier 0.000000000001 ;
    qudt:hasDimensionVector qkdv:A0E0L4I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:SecondAxialMomentOfArea,
        quantitykind:SecondPolarMomentOfArea ;
    qudt:iec61360Code "0112/2///62720#UAA869" ;
    qudt:plainTextDescription "0.001-fold of the power of the SI base unit metre with the exponent 4" ;
    qudt:ucumCode "mm4"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G77" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliMOL-PER-GM a qudt:Unit ;
    rdfs:label "Millimole Per Gram"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M-1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:AmountOfSubstancePerUnitMass,
        quantitykind:IonicStrength ;
    qudt:iec61360Code "0112/2///62720#UAA878" ;
    qudt:plainTextDescription "0.001-fold of the SI base unit mol divided by the 0.001-fold of the SI base unit kilogram" ;
    qudt:ucumCode "mmol.g-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H68" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliMOL-PER-KiloGM a qudt:Unit ;
    rdfs:label "Millimole Per Kilogram"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M-1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:AmountOfSubstancePerUnitMass,
        quantitykind:IonicStrength ;
    qudt:iec61360Code "0112/2///62720#UAA879" ;
    qudt:plainTextDescription "0.001-fold of the SI base unit mol divided by the SI base unit kilogram" ;
    qudt:ucumCode "mmol.kg-1"^^qudt:UCUMcs,
        "mmol/kg"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D87" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliMOL-PER-L a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "millimoles per litre"@en,
        "millimoles per litre"@en-us ;
    dcterms:description "The SI derived unit for amount-of-substance concentration is the mmo/L."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(mmo/L\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:AmountOfSubstancePerUnitVolume,
        quantitykind:BloodGlucoseLevel ;
    qudt:ucumCode "mmol.L-1"^^qudt:UCUMcs,
        "mmol/L"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "M33" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliR a qudt:Unit ;
    rdfs:label "Milliroentgen"@en ;
    qudt:conversionMultiplier 0.000000258 ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M-1H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricChargePerMass ;
    qudt:iec61360Code "0112/2///62720#UAA898",
        "0112/2///62720#UAB056" ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Roentgen_(unit)"^^xsd:anyURI ;
    qudt:plainTextDescription "0.001-fold of the unit roentgen." ;
    qudt:ucumCode "mR"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "2Y",
        "L31" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliS-PER-CentiM a qudt:Unit,
        unit:Unit ;
    rdfs:label "Millisiemens Per Centimetre"@en,
        "Millisiemens Per Centimeter"@en-us ;
    qudt:conversionMultiplier 0.1 ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T3D0 ;
    qudt:hasQuantityKind quantitykind:Conductivity ;
    qudt:iec61360Code "0112/2///62720#UAA801" ;
    qudt:plainTextDescription "0.001-fold of the SI derived unit Siemens divided by the 0.01-fold of the SI base unit metre" ;
    qudt:ucumCode "mS.cm-1"^^qudt:UCUMcs,
        "mS/cm"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H61" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliS-PER-M a qudt:Unit,
        unit:Unit ;
    rdfs:label "MilliSiemens per metre"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T3D0 ;
    qudt:hasQuantityKind quantitykind:Conductivity ;
    qudt:ucumCode "mS.m-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:N-M-PER-KiloGM a qudt:Unit ;
    rdfs:label "Newton Metre Per Kilogram"@en,
        "Newton Meter Per Kilogram"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:SpecificEnergy ;
    qudt:iec61360Code "0112/2///62720#UAB490" ;
    qudt:plainTextDescription "product of the derived SI unit newton and the SI base unit metre divided by the SI base unit kilogram" ;
    qudt:ucumCode "N.m.kg-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G19" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:N-M2-PER-A a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Newton Metre Squared per Ampere"@en,
        "Newton Meter Squared per Ampere"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E1L2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MagneticDipoleMoment ;
    qudt:ucumCode "N.m^2.A-1"^^qudt:UCUMcs,
        "N.m^2/A"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "P49" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:WB-M .

unit:NanoA a qudt:Unit,
        unit:Unit ;
    rdfs:label "nanoampere"@en ;
    qudt:conversionMultiplier 0.000000001 ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCurrent ;
    qudt:iec61360Code "0112/2///62720#UAA901" ;
    qudt:isScalingOf unit:A ;
    qudt:prefix prefix:Nano ;
    qudt:symbol "nA",
        "nA"^^xsd:string ;
    qudt:ucumCode "nA"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C39" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NanoC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "NanoCoulomb"@en ;
    dcterms:description "A NanoCoulomb is \\(10^{-9} C\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.000000001 ;
    qudt:derivedUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:iec61360Code "0112/2///62720#UAA902" ;
    qudt:isScalingOf unit:C ;
    qudt:prefix prefix:Nano ;
    qudt:symbol "nC" ;
    qudt:ucumCode "nC"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C40" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    prov:wasDerivedFrom unit:C .

unit:NanoGM-PER-MilliL a qudt:Unit ;
    rdfs:label "Nanograms per millilitre"@en ;
    dcterms:description "One 10**12 part of the SI standard unit of mass of the measurand per millilitre volume of matrix."@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassConcentration,
        quantitykind:MassDensity ;
    qudt:ucumCode "ng.mL-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NanoH a qudt:Unit ;
    rdfs:label "Nanohenry"@en ;
    qudt:conversionMultiplier 0.000000001 ;
    qudt:hasDimensionVector qkdv:A0E-2L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Inductance,
        quantitykind:Permeance ;
    qudt:iec61360Code "0112/2///62720#UAA905" ;
    qudt:plainTextDescription "0.000000001-fold of the SI derived unit henry" ;
    qudt:ucumCode "nH"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C43" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NanoS-PER-CentiM a qudt:Unit,
        unit:Unit ;
    rdfs:label "Nanosiemens Per Centimetre"@en,
        "Nanosiemens Per Centimeter"@en-us ;
    qudt:conversionMultiplier 0.0000001 ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T3D0 ;
    qudt:hasQuantityKind quantitykind:Conductivity ;
    qudt:iec61360Code "0112/2///62720#UAA907" ;
    qudt:plainTextDescription "0.000000001-fold of the SI derived unit Siemens by the 0.01 fol of the SI base unit metre" ;
    qudt:ucumCode "nS.cm-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G44" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NanoS-PER-M a qudt:Unit,
        unit:Unit ;
    rdfs:label "Nanosiemens Per Metre"@en,
        "Nanosiemens Per Meter"@en-us ;
    qudt:conversionMultiplier 0.000000001 ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T3D0 ;
    qudt:hasQuantityKind quantitykind:Conductivity ;
    qudt:iec61360Code "0112/2///62720#UAA908" ;
    qudt:plainTextDescription "0.000000001-fold of the SI derived unit Siemens divided by the SI base unit metre" ;
    qudt:ucumCode "nS.m-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G45" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OERSTED a qudt:Unit ;
    rdfs:label "Oersted"@en ;
    dcterms:description "Oersted (abbreviated as Oe) is the unit of magnetizing field (also known as H-field, magnetic field strength or intensity) in the CGS system of units."^^rdf:HTML ;
    qudt:conversionMultiplier 79.5774715 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Oersted"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MagneticFieldStrength_H ;
    qudt:iec61360Code "0112/2///62720#UAB134" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Oersted?oldid=491396460"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/oersted> ;
    qudt:symbol "Oe" ;
    qudt:ucumCode "Oe"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "66" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    prov:wasDerivedFrom unit:Gs .

unit:OHM-M a qudt:Unit ;
    rdfs:label "Ohm Metre"@en,
        "Ohm Meter"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E-2L3I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:ResidualResistivity,
        quantitykind:Resistivity ;
    qudt:iec61360Code "0112/2///62720#UAA020" ;
    qudt:informativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:ucumCode "Ohm.m"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C61" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OZ_VOL_UK-PER-DAY a qudt:Unit,
        unit:Unit ;
    rdfs:label "Ounce (UK Fluid) Per Day"@en ;
    qudt:conversionMultiplier 0.00000787487 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA432" ;
    qudt:plainTextDescription "unit of the volume fluid ounce (UK) for fluids according to the Imperial system of units divided by the unit for time day" ;
    qudt:ucumCode "[foz_br].d-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J95" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OZ_VOL_UK-PER-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Ounce (UK Fluid) Per Hour"@en ;
    qudt:conversionMultiplier 0.00000787487 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA433" ;
    qudt:plainTextDescription "unit of the volume fluid ounce (UK) for fluids according to the Imperial system of units divided by the unit for time hour" ;
    qudt:ucumCode "[foz_br].h-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J96" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OZ_VOL_UK-PER-MIN a qudt:Unit,
        unit:Unit ;
    rdfs:label "Ounce (UK Fluid) Per Minute"@en ;
    qudt:conversionMultiplier 0.00472492 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA434" ;
    qudt:plainTextDescription "unit of the volume fluid ounce (UK) for fluids according to the Imperial system of units divided by the unit for time minute" ;
    qudt:ucumCode "[foz_br].min-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J97" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OZ_VOL_UK-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Ounce (UK Fluid) Per Second"@en ;
    qudt:conversionMultiplier 0.0000284 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA435" ;
    qudt:plainTextDescription "unit of the volume fluid ounce (UK) for fluids according to the Imperial system of units divided by the SI base unit second" ;
    qudt:ucumCode "[foz_br].s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J98" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OZ_VOL_US-PER-DAY a qudt:Unit,
        unit:Unit ;
    rdfs:label "Ounce (US Fluid) Per Day"@en ;
    qudt:conversionMultiplier 0.000000000342286 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA436" ;
    qudt:plainTextDescription "unit of the volume fluid ounce (US) for fluids according to the Anglo-American system of units divided by unit for time day" ;
    qudt:ucumCode "[foz_us].d-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J99" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OZ_VOL_US-PER-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Ounce (US Fluid) Per Hour"@en ;
    qudt:conversionMultiplier 0.000000008214869 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA437" ;
    qudt:plainTextDescription "unit of the volume fluid ounce (US) for fluids according to the Anglo-American system of units divided by the unit for time hour" ;
    qudt:ucumCode "[foz_us].h-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K10" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OZ_VOL_US-PER-MIN a qudt:Unit,
        unit:Unit ;
    rdfs:label "Ounce (US Fluid) Per Minute"@en ;
    qudt:conversionMultiplier 0.000000492892 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA438" ;
    qudt:plainTextDescription "unit of the volume fluid ounce (US) for fluids according to the Anglo-American system of units divided by the unit for time minute" ;
    qudt:ucumCode "[foz_us].min-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K11" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OZ_VOL_US-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Ounce (US Fluid) Per Second"@en ;
    qudt:conversionMultiplier 0.0000295735296 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA439" ;
    qudt:plainTextDescription "unit of the volume fluid ounce (US) for fluids according to the Anglo-American system of units divided by the SI base unit second" ;
    qudt:ucumCode "[foz_us].s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K12" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PA-PER-MIN a qudt:Unit ;
    rdfs:label "Pascal per Minute"@en ;
    dcterms:description "A rate of change of pressure measured as the number of Pascals in a period of one minute."^^rdf:HTML ;
    qudt:conversionMultiplier 0.0166666667 ;
    qudt:expression "\\(P / min\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerAreaTime ;
    qudt:isScalingOf unit:PA-PER-SEC ;
    qudt:ucumCode "Pa.min-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PA-PER-SEC a qudt:Unit ;
    rdfs:label "Pascal per Second"@en ;
    dcterms:description "A rate of change of pressure measured as the number of Pascals in a period of one second."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(P / s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerAreaTime ;
    qudt:ucumCode "Pa.s-1"^^qudt:UCUMcs,
        "Pa/s"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-ANGSTROM a qudt:Unit ;
    rdfs:label "Reciprocal Ã¥ngstrÃ¶m"@en ;
    qudt:conversionMultiplier 0.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:InverseLength ;
    qudt:iec61360Code "0112/2///62720#UAB058" ;
    qudt:plainTextDescription "reciprocal of the unit angstrom" ;
    qudt:ucumCode "Ao-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C85" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-BAR a qudt:Unit ;
    rdfs:label "Reciprocal Bar"@en ;
    qudt:conversionMultiplier 0.00001 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M-1H0T2D0 ;
    qudt:hasQuantityKind quantitykind:Compressibility,
        quantitykind:InversePressure ;
    qudt:iec61360Code "0112/2///62720#UAA328" ;
    qudt:plainTextDescription "reciprocal of the metrical unit with the name bar" ;
    qudt:ucumCode "bar-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F58" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-CentiM a qudt:Unit ;
    rdfs:label "Reciprocal Centimetre"@en,
        "Reciprocal Centimeter"@en-us ;
    qudt:conversionMultiplier 100.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:InverseLength ;
    qudt:iec61360Code "0112/2///62720#UAA382" ;
    qudt:plainTextDescription "reciprocal of the 0.01-fold of the SI base unit metre" ;
    qudt:ucumCode "/cm"^^qudt:UCUMcs,
        "cm-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "E90" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-M3-SEC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Reciprocal Cubic Metre Second"@en,
        "Reciprocal cubic metre per second"@en,
        "Reciprocal Cubic Meter Second"@en-us ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(m^{-3}-s^{-1}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:ParticleSourceDensity,
        quantitykind:Slowing-DownDensity ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:ucumCode "m-3.s-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-SEC-SR a qudt:Unit ;
    rdfs:label "Reciprocal Second Steradian"@en ;
    dcterms:description "Per Second Steradian Unit is a denominator unit with dimensions \\(/sec-sr\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(/sec-sr\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:PhotonIntensity,
        quantitykind:TemporalSummationFunction ;
    qudt:ucumCode "/(s.sr)"^^qudt:UCUMcs,
        "s-1.sr-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-T-SEC a qudt:Unit ;
    rdfs:label "Reciprocal Tesla Second Unit"@en ;
    dcterms:description "Per Tesla Second Unit is a a denominator unit with dimensions \\(/s . T\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(/s . T\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M-1H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricChargePerMass ;
    qudt:ucumCode "T-1.s-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PINT_UK-PER-DAY a qudt:Unit,
        unit:Unit ;
    rdfs:label "Pint (UK) Per Day"@en ;
    qudt:conversionMultiplier 0.000000006577098 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA953" ;
    qudt:plainTextDescription "unit of the volume pint (UK) (both for fluids and for dry measures) according to the Imperial system of units divided by the unit for time day" ;
    qudt:ucumCode "[pt_br].d"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L53" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PINT_UK-PER-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Pint (UK) Per Hour"@en ;
    qudt:conversionMultiplier 0.0000001578504 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA954" ;
    qudt:plainTextDescription "unit of the volume pint (UK) (both for fluids and for dry measures) according to the Imperial system of units divided by the unit for time hour" ;
    qudt:ucumCode "[pt_br].h-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L54" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PINT_UK-PER-MIN a qudt:Unit,
        unit:Unit ;
    rdfs:label "Pint (UK) Per Minute"@en ;
    qudt:conversionMultiplier 0.000009471022 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA955" ;
    qudt:plainTextDescription "unit of the volume pint (UK) (both for fluids and for dry measures) according to the Imperial system of units divided by the unit for time minute" ;
    qudt:ucumCode "[pt_br].min-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L55" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PINT_UK-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Pint (UK) Per Second"@en ;
    qudt:conversionMultiplier 0.0005682613 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA956" ;
    qudt:plainTextDescription "unit of the volume pint (UK) (both for fluids and for dry measures) according to the Imperial system of units divided by the SI base unit second" ;
    qudt:ucumCode "[pt_br].s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L56" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PINT_US-PER-DAY a qudt:Unit,
        unit:Unit ;
    rdfs:label "Pint (US Liquid) Per Day"@en ;
    qudt:conversionMultiplier 0.00000000547658 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA958" ;
    qudt:plainTextDescription "unit of the volume pint (US liquid) according to the Anglo-American system of units divided by the unit for time day" ;
    qudt:ucumCode "[pt_us].d-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L57" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PINT_US-PER-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Pint (US Liquid) Per Hour"@en ;
    qudt:conversionMultiplier 0.0000001314379 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA959" ;
    qudt:plainTextDescription "unit of the volume pint (US liquid) according to the Anglo-American system of units divided by the unit for time hour" ;
    qudt:ucumCode "[pt_us].h-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L58" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PINT_US-PER-MIN a qudt:Unit,
        unit:Unit ;
    rdfs:label "Pint (US Liquid) Per Minute"@en ;
    qudt:conversionMultiplier 0.000007886275 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA960" ;
    qudt:plainTextDescription "unit of the volume pint (US liquid) according to the Anglo-American system of units divided by the unit for time minute" ;
    qudt:ucumCode "[pt_us].min-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L59" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PINT_US-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Pint (US Liquid) Per Second"@en ;
    qudt:conversionMultiplier 0.0004731765 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA961" ;
    qudt:plainTextDescription "unit of the volume pint (US liquid) according to the Anglo-American system of units divided by the SI base unit second" ;
    qudt:ucumCode "[pt_us].s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L60" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PK_UK-PER-DAY a qudt:Unit,
        unit:Unit ;
    rdfs:label "Peck (UK) Per Day"@en ;
    qudt:conversionMultiplier 0.000000105233576 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA940" ;
    qudt:plainTextDescription "unit of the volume peck (UK) according to the Imperial system of units divided by the unit for time day" ;
    qudt:ucumCode "[pk_br].d-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L44" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PK_UK-PER-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Peck (UK) Per Hour"@en ;
    qudt:conversionMultiplier 0.000002525605833 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA941" ;
    qudt:plainTextDescription "unit of the volume peck (UK) according to the Imperial system of units divided by the unit for time hour" ;
    qudt:ucumCode "[pk_br].h-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L45" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PK_UK-PER-MIN a qudt:Unit,
        unit:Unit ;
    rdfs:label "Peck (UK) Per Minute"@en ;
    qudt:conversionMultiplier 0.00015153635 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA942" ;
    qudt:plainTextDescription "unit of the volume peck (UK) according to the Imperial system of units divided by the unit for time minute" ;
    qudt:ucumCode "[pk_br].min-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L46" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PK_UK-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Peck (UK) Per Second"@en ;
    qudt:conversionMultiplier 0.009092181 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA943" ;
    qudt:plainTextDescription "unit of the volume peck (UK) according to the Imperial system of units divided by the SI base unit second" ;
    qudt:ucumCode "[pk_br].s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L47" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PK_US_DRY-PER-DAY a qudt:Unit,
        unit:Unit ;
    rdfs:label "Peck (US Dry) Per Day"@en ;
    qudt:conversionMultiplier 0.000000101964902 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA944" ;
    qudt:plainTextDescription "unit of the volume peck (US dry) as dry measure according to the Anglo-American system of units divided by the unit for time day" ;
    qudt:ucumCode "[pk_us].d-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L48" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PK_US_DRY-PER-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Peck (US Dry) Per Hour"@en ;
    qudt:conversionMultiplier 0.000002447157651 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA945" ;
    qudt:plainTextDescription "unit of the volume peck (US dry) as dry measure according to the Anglo-American system of units divided by the unit for time hour" ;
    qudt:ucumCode "[pk_us].h-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L49" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PK_US_DRY-PER-MIN a qudt:Unit,
        unit:Unit ;
    rdfs:label "Peck (US Dry) Per Minute"@en ;
    qudt:conversionMultiplier 0.000146829459067 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA946" ;
    qudt:plainTextDescription "unit of the volume peck (US dry) as dry measure according to the Anglo-American system of units divided by the unit for time minute" ;
    qudt:ucumCode "[pk_us].min-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L50" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PK_US_DRY-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Peck (US Dry) Per Second"@en ;
    qudt:conversionMultiplier 0.00880976754 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA947" ;
    qudt:plainTextDescription "unit of the volume peck (US dry) as dry measure according to the Anglo-American system of units divided by the SI base unit second" ;
    qudt:ucumCode "[pk_us].s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L51" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PetaC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "PetaCoulomb"@en ;
    dcterms:description "A PetaCoulomb is \\(10^{15} C\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1000000000000000.0 ;
    qudt:derivedUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:isScalingOf unit:C ;
    qudt:prefix prefix:Peta ;
    qudt:symbol "PC" ;
    qudt:ucumCode "PC"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    prov:wasDerivedFrom unit:C .

unit:PicoA a qudt:Unit,
        unit:Unit ;
    rdfs:label "picoampere"@en ;
    qudt:conversionMultiplier 0.000000000001 ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCurrent ;
    qudt:iec61360Code "0112/2///62720#UAA928" ;
    qudt:isScalingOf unit:A ;
    qudt:prefix prefix:Pico ;
    qudt:symbol "pA",
        "pA"^^xsd:string ;
    qudt:ucumCode "pA"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C70" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PicoC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "PicoCoulomb"@en ;
    dcterms:description "A PicoCoulomb is \\(10^{-12} C\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.000000000001 ;
    qudt:derivedUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:iec61360Code "0112/2///62720#UAA929" ;
    qudt:isScalingOf unit:C ;
    qudt:prefix prefix:Pico ;
    qudt:symbol "pC" ;
    qudt:ucumCode "pC"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C71" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    prov:wasDerivedFrom unit:C .

unit:PicoGM-PER-MilliL a qudt:Unit ;
    rdfs:label "Picograms per millilitre"@en ;
    dcterms:description "One 10**15 part of the SI standard unit of mass of the measurand per millilitre volume of matrix."@en ;
    qudt:conversionMultiplier 0.000000001 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassConcentration,
        quantitykind:MassDensity ;
    qudt:ucumCode "pg.mL-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PicoS-PER-M a qudt:Unit,
        unit:Unit ;
    rdfs:label "Picosiemens Per Metre"@en,
        "Picosiemens Per Meter"@en-us ;
    qudt:conversionMultiplier 0.000000000001 ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T3D0 ;
    qudt:hasQuantityKind quantitykind:Conductivity ;
    qudt:iec61360Code "0112/2///62720#UAA934" ;
    qudt:plainTextDescription "0.000000000001-fold of the SI derived unit Siemens divided by the SI base unit metre" ;
    qudt:ucumCode "pS.m-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L42" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PlanckCurrent a qudt:Unit,
        unit:Unit ;
    rdfs:label "Planck Current"@en ;
    dcterms:description "The Planck current is the unit of electric current, denoted by IP, in the system of natural units known as Planck units. \\(\\approx 3.479 \\times 10 A\\), where:  the Planck time is the permittivity in vacuum and the reduced Planck constant G is the gravitational constant c is the speed of light in vacuum. The Planck current is that current which, in a conductor, carries a Planck charge in Planck time. Alternatively, the Planck current is that constant current which, if maintained in two straight parallel conductors of infinite length and negligible circular cross-section, and placed a Planck length apart in vacuum, would produce between these conductors a force equal to a Planck force per Planck length."^^qudt:LatexString ;
    qudt:conversionMultiplier 34789000000000000000000000.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Planck_current"^^xsd:anyURI ;
    qudt:derivedUnitOfSystem sou:PLANCK ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCurrent ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Planck_current?oldid=493640689"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:QT_UK-PER-DAY a qudt:Unit,
        unit:Unit ;
    rdfs:label "Quart (UK Liquid) Per Day"@en ;
    qudt:conversionMultiplier 0.0000000131542 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA710" ;
    qudt:plainTextDescription "unit of the volume quart (UK liquid) for fluids according to the Imperial system of units divided by the unit for time day" ;
    qudt:ucumCode "[qt_br].d-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K94" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:QT_UK-PER-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Quart (UK Liquid) Per Hour"@en ;
    qudt:conversionMultiplier 0.0000003157007 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA711" ;
    qudt:plainTextDescription "unit of the volume quart (UK liquid) for fluids according to the Imperial system of units divided by the unit for time hour" ;
    qudt:ucumCode "[qt_br].h-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K95" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:QT_UK-PER-MIN a qudt:Unit,
        unit:Unit ;
    rdfs:label "Quart (UK Liquid) Per Minute"@en ;
    qudt:conversionMultiplier 0.00001894205 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA712" ;
    qudt:plainTextDescription "unit of the volume quart (UK liquid) for fluids according to the Imperial system of units divided by the unit for time minute" ;
    qudt:ucumCode "[qt_br].min-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K96" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:QT_UK-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Quart (UK Liquid) Per Second"@en ;
    qudt:conversionMultiplier 0.0011365225 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA713" ;
    qudt:plainTextDescription "unit of the volume quart (UK liquid) for fluids according to the Imperial system of units divided by the SI base unit second" ;
    qudt:ucumCode "[qt_br].h-1.s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K97" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:QT_US-PER-DAY a qudt:Unit,
        unit:Unit ;
    rdfs:label "Quart (US Liquid) Per Day"@en ;
    qudt:conversionMultiplier 0.00000001095316 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA714" ;
    qudt:plainTextDescription "unit fo the volume quart (US liquid) for fluids according to the Anglo-American system of units divided by the unit for time day" ;
    qudt:ucumCode "[qt_us].d-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K98" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:QT_US-PER-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Quart (US Liquid) Per Hour"@en ;
    qudt:conversionMultiplier 0.000000262875833 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA715" ;
    qudt:plainTextDescription "unit fo the volume quart (US liquid) for fluids according to the Anglo-American system of units divided by the unit for time hour" ;
    qudt:ucumCode "[qt_us].h-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K99" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:QT_US-PER-MIN a qudt:Unit,
        unit:Unit ;
    rdfs:label "Quart (US Liquid) Per Minute"@en ;
    qudt:conversionMultiplier 0.00001577255 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA716" ;
    qudt:plainTextDescription "unit fo the volume quart (US liquid) for fluids according to the Anglo-American system of units divided by the unit for time minute" ;
    qudt:ucumCode "[qt_us].min-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L10" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:QT_US-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Quart (US Liquid) Per Second"@en ;
    qudt:conversionMultiplier 0.000946353 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA717" ;
    qudt:plainTextDescription "unit fo the volume quart (US liquid) for fluids according to the Anglo-American system of units divided by the SI base unit second" ;
    qudt:ucumCode "[qt_us].s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L11" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:R a qudt:Unit ;
    rdfs:label "Roentgen"@en ;
    dcterms:description "Not to be confused with roentgen equivalent man or roentgen equivalent physical. The roentgen (symbol R) is an obsolete unit of measurement for the kerma of X-rays and gamma rays up to 3 MeV."^^rdf:HTML ;
    qudt:conversionMultiplier 0.000258 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Roentgen"^^xsd:anyURI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M-1H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricChargePerMass ;
    qudt:iec61360Code "0112/2///62720#UAA275" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Roentgen?oldid=491213233"^^xsd:anyURI ;
    qudt:symbol "R" ;
    qudt:ucumCode "R"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "2C" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:S-PER-CentiM a qudt:Unit,
        unit:Unit ;
    rdfs:label "Siemens Per Centimetre"@en,
        "Siemens Per Centimeter"@en-us ;
    qudt:conversionMultiplier 100.0 ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T3D0 ;
    qudt:hasQuantityKind quantitykind:Conductivity ;
    qudt:iec61360Code "0112/2///62720#UAA278" ;
    qudt:plainTextDescription "SI derived unit Siemens divided by the 0.01-fold of the SI base unit metre" ;
    qudt:ucumCode "S.cm-2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H43" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SLUG-PER-SEC a qudt:Unit ;
    rdfs:label "Slug per Second"@en ;
    dcterms:description "\"Slug per Second\" is an Imperial unit for  'Mass Per Time' expressed as \\(slug/s\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 14.593903 ;
    qudt:definedUnitOfSystem sou:IMPERIAL ;
    qudt:expression "\\(slug/s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate,
        quantitykind:MassPerTime ;
    qudt:iec61360Code "0112/2///62720#UAA984" ;
    qudt:uneceCommonCode "L68" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:STILB a qudt:Unit,
        unit:Unit ;
    rdfs:label "Stilb"@en ;
    dcterms:description "\\(The \\textit{stilb (sb)} is the CGS unit of luminance for objects that are not self-luminous. It is equal to one candela per square centimeter or 10 nits (candelas per square meter). The name was coined by the French physicist A. Blondel around 1920. It comes from the Greek word stilbein meaning 'to glitter'. It was in common use in Europe up to World War I. In North America self-explanatory terms such as candle per square inch and candle per square meter were more common. The unit has since largely been replaced by the SI unit: candela per square meter.\\)"^^qudt:LatexString ;
    qudt:conversionMultiplier 10000.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Stilb"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-2I1M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Luminance ;
    qudt:iec61360Code "0112/2///62720#UAB260" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Stilb?oldid=375748497"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/stilb> ;
    qudt:symbol "sb",
        "sb"^^xsd:string ;
    qudt:ucumCode "sb"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SV a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Sievert"@en ;
    dcterms:description "Although the sievert has the same dimensions as the gray (i.e. joules per kilogram), it measures a different quantity. To avoid any risk of confusion between the absorbed dose and the equivalent dose, the corresponding special units, namely the gray instead of the joule per kilogram for absorbed dose and the sievert instead of the joule per kilogram for the dose equivalent, should be used."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Sievert"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:derivedUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:DoseEquivalent ;
    qudt:iec61360Code "0112/2///62720#UAA284" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Sievert?oldid=495474333"^^xsd:anyURI,
        "http://www.oxfordreference.com/view/10.1093/acref/9780198605225.001.0001/acref-9780198605225-e-1284"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/sievert> ;
    qudt:siUnitsExpression "J/kg" ;
    qudt:symbol "Sv" ;
    qudt:ucumCode "Sv"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D13" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:TONNE-PER-DAY a qudt:Unit ;
    rdfs:label "Tonne Per Day"@en ;
    qudt:conversionMultiplier 0.011574074074074 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA991" ;
    qudt:plainTextDescription "metric unit tonne divided by the unit for time day" ;
    qudt:ucumCode "t.d-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L71" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:TON_Metric-PER-DAY .

unit:TONNE-PER-HA a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "tonne per hectare"@en ;
    qudt:conversionMultiplier 0.1 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassPerArea ;
    qudt:plainTextDescription "A measure of density equivalent to 1000kg per hectare or one Megagram per hectare, typically used to express a volume of biomass or crop yield." ;
    qudt:symbol "t/ha" ;
    qudt:ucumCode "t.har-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:TON_Metric-PER-HA .

unit:TONNE-PER-M3 a qudt:Unit ;
    rdfs:label "Tonne Per Cubic Metre"@en,
        "Tonne Per Cubic Meter"@en-us ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:iec61360Code "0112/2///62720#UAA997" ;
    qudt:plainTextDescription "unit tonne divided by the power of the SI base unit metre with the exponent 3" ;
    qudt:ucumCode "t.m-3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D41" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:TON_Metric-PER-M3 .

unit:TONNE-PER-MIN a qudt:Unit ;
    rdfs:label "Tonne Per Minute"@en ;
    qudt:conversionMultiplier 16.666666666666668 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAB000" ;
    qudt:plainTextDescription "unit tonne divided by the unit for time minute" ;
    qudt:ucumCode "t.min-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L78" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:TON_Metric-PER-MIN .

unit:TONNE-PER-SEC a qudt:Unit ;
    rdfs:label "Tonne Per Second"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAB003" ;
    qudt:plainTextDescription "unit tonne divided by the SI base unit second" ;
    qudt:ucumCode "t.s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L81" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:TON_Metric-PER-SEC .

unit:TON_Metric-PER-DAY a qudt:Unit ;
    rdfs:label "Tonne Per Day"@en ;
    qudt:conversionMultiplier 0.011574074074074 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA991" ;
    qudt:plainTextDescription "metric unit ton divided by the unit for time day" ;
    qudt:ucumCode "t.d-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L71" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:TONNE-PER-DAY .

unit:TON_Metric-PER-HA a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "metric tonne per hectare"@en ;
    qudt:conversionMultiplier 0.1 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassPerArea ;
    qudt:plainTextDescription "A measure of density equivalent to 1000kg per hectare or one Megagram per hectare, typically used to express a volume of biomass or crop yield." ;
    qudt:symbol "t/ha" ;
    qudt:ucumCode "t.har-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:TONNE-PER-HA .

unit:TON_Metric-PER-M3 a qudt:Unit ;
    rdfs:label "Tonne Per Cubic Metre"@en,
        "Tonne Per Cubic Meter"@en-us ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:iec61360Code "0112/2///62720#UAA997" ;
    qudt:plainTextDescription "unit tonne divided by the power of the SI base unit metre with the exponent 3" ;
    qudt:ucumCode "t.m-3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D41" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:TONNE-PER-M3 .

unit:TON_Metric-PER-MIN a qudt:Unit ;
    rdfs:label "Tonne Per Minute"@en ;
    qudt:conversionMultiplier 16.666666666666668 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAB000" ;
    qudt:plainTextDescription "unit ton divided by the unit for time minute" ;
    qudt:ucumCode "t.min-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L78" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:TONNE-PER-MIN .

unit:TON_Metric-PER-SEC a qudt:Unit ;
    rdfs:label "Tonne Per Second (metric Ton)"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAB003" ;
    qudt:plainTextDescription "unit ton divided by the SI base unit second" ;
    qudt:ucumCode "t.s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L81" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:TONNE-PER-SEC .

unit:TON_US-PER-HR a qudt:Unit ;
    rdfs:label "Ton (US) Per Hour"@en ;
    qudt:conversionMultiplier 0.251944444444444 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAA994",
        "0112/2///62720#UAB019" ;
    qudt:plainTextDescription "unit ton divided by the unit for time hour" ;
    qudt:ucumCode "[ston_av].h-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "4W",
        "E18" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:TON_SHORT-PER-HR .

unit:TeraC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "TeraCoulomb"@en ;
    dcterms:description "A TeraCoulomb is \\(10^{12} C\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1000000000000.0 ;
    qudt:derivedUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:isScalingOf unit:C ;
    qudt:prefix prefix:Tera ;
    qudt:symbol "TC" ;
    qudt:ucumCode "TC"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    prov:wasDerivedFrom unit:C .

unit:V-PER-K a qudt:Unit ;
    rdfs:label "Volt per Kelvin"@en ;
    qudt:expression "\\(v/k\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H-1T-3D0 ;
    qudt:hasQuantityKind quantitykind:SeebeckCoefficient,
        quantitykind:ThomsonCoefficient ;
    qudt:iec61360Code "0112/2///62720#UAB173" ;
    qudt:informativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:ucumCode "V.K-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D48" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:V-PER-M a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Volt per Metre"@en,
        "Volt per Meter"@en-us ;
    dcterms:description "Volt Per Meter (V/m) is a unit in the category of Electric field strength. It is also known as volts per meter, volt/meter, volt/metre, volt per metre, volts per metre. This unit is commonly used in the SI unit system. Volt Per Meter (V/m) has a dimension of \\(MLT^{-3}I^{-1}\\) where M is mass, L is length, T is time, and I is electric current. This unit is the standard SI unit in this category."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(V/m\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:ElectricField,
        quantitykind:ElectricFieldStrength ;
    qudt:iec61360Code "0112/2///62720#UAA301" ;
    qudt:informativeReference "http://www.efunda.com/glossary/units/units--electric_field_strength--volt_per_meter.cfm"^^xsd:anyURI ;
    qudt:ucumCode "V.m-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D50" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:V_Ab-PER-CentiM a qudt:Unit ;
    rdfs:label "Abvolt per centimetre"@en,
        "Abvolt per centimeter"@en-us ;
    dcterms:description "In the electromagnetic centimeter-gram-second system of units, 'abvolt per centimeter' is the unit of electric field strength."^^rdf:HTML ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:derivedUnitOfSystem sou:CGS-EMU ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:ElectricField,
        quantitykind:ElectricFieldStrength ;
    qudt:informativeReference "http://www.endmemo.com/convert/electric%20field%20strength.php"^^xsd:anyURI ;
    qudt:symbol "abV/cm" ;
    qudt:ucumCode "10.nV.cm-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:V_Stat-PER-CentiM a qudt:Unit ;
    rdfs:label "Statvolt per Centimetre"@en,
        "Statvolt per Centimeter"@en-us ;
    dcterms:description """One statvolt per centimetre is equal in magnitude to one gauss. For example, an electric field of one statvolt/cm has the same energy density as a magnetic field of one gauss. Likewise, a plane wave propagating in a vacuum has perpendicular electric and magnetic fields such that for every gauss of magnetic field intensity there is one statvolt/cm of electric field intensity.
The abvolt is another option for a unit of voltage in the cgs system."""^^rdf:HTML ;
    qudt:conversionMultiplier 29979.2458 ;
    qudt:expression "\\(statv-per-cm\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:ElectricField,
        quantitykind:ElectricFieldStrength ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Statvolt"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:WB-M a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Weber Metre"@en,
        "Weber Meter"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasQuantityKind quantitykind:MagneticDipoleMoment ;
    qudt:iec61360Code "0112/2///62720#UAB333" ;
    qudt:informativeReference "http://www.simetric.co.uk/siderived.htm"^^xsd:anyURI ;
    qudt:symbol "WbM" ;
    qudt:ucumCode "Wb.m"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "P50" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:N-M2-PER-A .

unit:YD3-PER-DAY a qudt:Unit,
        unit:Unit ;
    rdfs:label "Cubic Yard Per Day"@en ;
    qudt:conversionMultiplier 0.00000884901456 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAB037" ;
    qudt:plainTextDescription "power of the unit yard according to the Anglo-American and the Imperial system of units with the exponent 3 divided by the unit for time day" ;
    qudt:ucumCode "[cyd_i].d-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "M12" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:YD3-PER-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Cubic Yard Per Hour"@en ;
    qudt:conversionMultiplier 0.00021237634944 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAB038" ;
    qudt:plainTextDescription "power of the unit yard according to the Anglo-American and the Imperial system of units with the exponent 3 divided by the unit for the time hour" ;
    qudt:ucumCode "[cyd_i].h-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "M13" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:YD3-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Cubic Yard Per Second"@en ;
    qudt:conversionMultiplier 0.764554857984 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate ;
    qudt:iec61360Code "0112/2///62720#UAB041" ;
    qudt:plainTextDescription "power of the unit and the Anglo-American and Imperial system of units with the exponent 3 divided by the SI base unit second" ;
    qudt:ucumCode "[cyd_i].s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "M16" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:YoctoC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "YoctoCoulomb"@en ;
    dcterms:description "A YoctoCoulomb is \\(10^{-24} C\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.000000000000000000000001 ;
    qudt:derivedUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:isScalingOf unit:C ;
    qudt:prefix prefix:Yocto ;
    qudt:symbol "yC" ;
    qudt:ucumCode "yC"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    prov:wasDerivedFrom unit:C .

unit:YottaC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "YottaCoulomb"@en ;
    dcterms:description "A YottaCoulomb is \\(10^{24} C\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1000000000000000000000000.0 ;
    qudt:derivedUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:isScalingOf unit:C ;
    qudt:prefix prefix:Yotta ;
    qudt:symbol "YC" ;
    qudt:ucumCode "YC"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    prov:wasDerivedFrom unit:C .

unit:ZeptoC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "ZeptoCoulomb"@en ;
    dcterms:description "A ZeptoCoulomb is \\(10^{-21} C\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.000000000000000000001 ;
    qudt:derivedUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:isScalingOf unit:C ;
    qudt:prefix prefix:Zepto ;
    qudt:symbol "zC" ;
    qudt:ucumCode "zC"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    prov:wasDerivedFrom unit:C .

unit:ZettaC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "ZettaCoulomb"@en ;
    dcterms:description "A ZettaCoulomb is \\(10^{21} C\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1000000000000000000000.0 ;
    qudt:derivedUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:isScalingOf unit:C ;
    qudt:prefix prefix:Zetta ;
    qudt:symbol "ZC" ;
    qudt:ucumCode "ZC"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    prov:wasDerivedFrom unit:C .

arg:uriStart a rdf:Property ;
    rdfs:subPropertyOf sp:arg .

sp:if a spin:Function ;
    rdfs:label "IF" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType xsd:boolean ;
            rdfs:comment "A condition to evaluate - if true then the ?arg2 will be returned, otherwise ?arg3." ],
        [ a spl:Argument ;
            spl:predicate sp:arg3 ;
            rdfs:comment "The function result if ?arg1 is false." ],
        [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            rdfs:comment "The function result if ?arg1 is true." ] ;
    spin:symbol "IF" ;
    rdfs:comment "The SPARQL 1.1 built-in function IF." ;
    rdfs:subClassOf spl:MiscFunctions .

<http://spinrdf.org/spl> a spin:LibraryOntology,
        owl:Ontology ;
    rdfs:label "SPIN Standard Library" ;
    rdfs:comment "A collection of generally useful SPARQL functions (expressed as SPIN functions), and SPIN templates. Also provides a top-level classification of functions, and definitions of the standard SPARQL functions." ;
    owl:imports <http://spinrdf.org/spin> ;
    owl:versionInfo "1.4.2" .

spl:PrimaryKeyPropertyConstraint a spl:ConstraintTemplate ;
    rdfs:label "Primary key property constraint" ;
    spin:body [ a sp:Construct ;
            sp:templates ( [ sp:object spin:ConstraintViolation ;
                        sp:predicate rdf:type ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b907 ] [ sp:object [ sp:varName "label" ] ;
                        sp:predicate rdfs:label ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b907 ] [ sp:object spin:_this ;
                        sp:predicate spin:violationRoot ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b907 ] [ sp:object [ sp:varName "property" ] ;
                        sp:predicate spin:violationPath ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b907 ] ) ;
            sp:where ( [ a sp:Union ;
                        sp:elements ( ( [ a sp:Filter ;
                                        sp:expression [ a sp:notExists ;
                                                sp:elements ( [ sp:object [ sp:varName "any" ] ;
                                                            sp:predicate [ sp:varName "property" ] ;
                                                            sp:subject spin:_this ] ) ] ] [ a sp:Bind ;
                                        sp:expression "Missing value for primary key property" ;
                                        sp:variable [ sp:varName "label" ] ] ) ( [ a sp:Filter ;
                                        sp:expression [ a sp:gt ;
                                                sp:arg1 [ a spl:objectCount ;
                                                        sp:arg1 spin:_this ;
                                                        sp:arg2 [ sp:varName "property" ] ] ;
                                                sp:arg2 1 ] ] [ a sp:Bind ;
                                        sp:expression "Multiple values of primary key property" ;
                                        sp:variable [ sp:varName "label" ] ] ) ( [ a sp:Filter ;
                                        sp:expression [ a sp:eq ;
                                                sp:arg1 [ a spl:objectCount ;
                                                        sp:arg1 spin:_this ;
                                                        sp:arg2 [ sp:varName "property" ] ] ;
                                                sp:arg2 1 ] ] [ sp:object [ sp:varName "value" ] ;
                                        sp:predicate [ sp:varName "property" ] ;
                                        sp:subject spin:_this ] [ a sp:Bind ;
                                        sp:expression [ a sp:concat ;
                                                sp:arg1 [ sp:varName "uriStart" ] ;
                                                sp:arg2 [ a sp:encode_for_uri ;
                                                        sp:arg1 [ a xsd:string ;
                                                                sp:arg1 [ sp:varName "value" ] ] ] ] ;
                                        sp:variable [ sp:varName "uri" ] ] [ a sp:Filter ;
                                        sp:expression [ a sp:ne ;
                                                sp:arg1 [ a xsd:string ;
                                                        sp:arg1 spin:_this ] ;
                                                sp:arg2 [ sp:varName "uri" ] ] ] [ a sp:Bind ;
                                        sp:expression [ a sp:concat ;
                                                sp:arg1 "Primary key value " ;
                                                sp:arg2 [ a sp:str ;
                                                        sp:arg1 [ sp:varName "value" ] ] ;
                                                sp:arg3 " does not align with the expected URI " ;
                                                sp:arg4 [ sp:varName "uri" ] ] ;
                                        sp:variable [ sp:varName "label" ] ] ) ) ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:predicate arg:uriStart ;
            spl:valueType xsd:string ;
            rdfs:comment "The start of the URIs of well-formed instances of the associated class." ],
        [ a sp:Ask ;
            sp:where ( [ sp:object rdfs:label ;
                        sp:predicate arg:property ;
                        sp:subject spin:_this ] ) ;
            rdfs:comment "rdfs:label cannot be used as primary key" ] ;
    spin:labelTemplate "The property {?property} is the primary key and URIs start with {?uriStart}" ;
    rdfs:comment "Specifies that the given property is a primary key for instances of the associated class (and its subclasses). If a property has been declared to be the primary key then each instance of the class must have exactly one value for that property. Furthermore, the URIs of those instances must start with a given string (arg:uriStart), followed by the URL-encoded primary key value. For example if arg:uriStart is \"http://example.org/country-\" and the primary key for an instance is \"de\" then the URI must be \"http://example.org/country-de\". Finally, as a result of the URI policy, there can not be any other instance with the same value under the same primary key policy." ;
    rdfs:subClassOf spl:PropertyConstraintTemplates .

spl:class a rdf:Property ;
    rdfs:label "class" ;
    rdfs:subPropertyOf sp:arg .

spl:count a rdf:Property ;
    rdfs:label "count" ;
    rdfs:subPropertyOf sp:arg .

spl:object a spin:Function ;
    rdfs:label "object" ;
    spin:body [ a sp:Select ;
            sp:resultVariables ( [ sp:varName "object" ] ) ;
            sp:where ( [ sp:object [ sp:varName "object" ] ;
                        sp:predicate spin:_arg2 ;
                        sp:subject spin:_arg1 ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Resource ;
            rdfs:comment "The subject to get the object from." ],
        [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType rdf:Property ;
            rdfs:comment "The predicate to get the object of." ] ;
    rdfs:comment """Gets the object of a given subject (?arg1) / predicate (?arg2) combination.

Note that if multiple values are present then the result might be unpredictably random. Furthermore, if one of the arguments is unbound, it will return the first match of the resulting SPO pattern. These scenarios are strongly discouraged but remain left supported for backward compatibility reasons.""" ;
    rdfs:subClassOf spl:OntologyFunctions ;
    owl:versionInfo "Note that in TopBraid this function has been implemented in native Java code, for performance reasons." .

spl:primaryKeyProperty a spin:Function ;
    rdfs:label "primary key property" ;
    spin:body [ a sp:Select ;
            sp:resultVariables ( [ sp:varName "property" ] ) ;
            sp:where ( [ a sp:TriplePath ;
                        sp:object [ sp:varName "type" ] ;
                        sp:path [ a sp:ModPath ;
                                sp:modMax -2 ;
                                sp:modMin 0 ;
                                sp:subPath rdfs:subClassOf ] ;
                        sp:subject [ sp:varName "class" ] ] [ sp:object [ sp:varName "constraint" ] ;
                        sp:predicate spin:constraint ;
                        sp:subject [ sp:varName "type" ] ] [ sp:object spl:PrimaryKeyPropertyConstraint ;
                        sp:predicate rdf:type ;
                        sp:subject [ sp:varName "constraint" ] ] [ sp:object [ sp:varName "property" ] ;
                        sp:predicate arg:property ;
                        sp:subject [ sp:varName "constraint" ] ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:predicate arg:class ;
            spl:valueType rdfs:Class ;
            rdfs:comment "The class to get the primary key of." ] ;
    spin:returnType rdf:Property ;
    rdfs:comment "Gets the primary key property declared for a given class, using spl:PrimaryKeyPropertyConstraint." ;
    rdfs:subClassOf spl:OntologyFunctions .

spl:testExpression a rdf:Property ;
    rdfs:label "test expression" ;
    rdfs:subPropertyOf sp:arg .

spl:testResult a rdf:Property ;
    rdfs:label "testResult" ;
    rdfs:subPropertyOf sp:arg .

spl:valueType a rdf:Property ;
    rdfs:label "value type" ;
    rdfs:subPropertyOf sp:arg .

dtype:CompositeCodeList a owl:Class ;
    rdfs:label "Composite Code List"^^xsd:string ;
    vaem:comment "A composite codelist is a codelist made up of other codelists. It does not introduce any new codes."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/1.1/schema/dtype>,
        <http://www.linkedmodel.org/schema/dtype> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:allValuesFrom dtype:CodeList ;
            owl:onProperty dtype:compositeOf ],
        dtype:CodeList ;
    owl:disjointWith dtype:DerivedCodeList,
        dtype:SimpleCodeList .

dtype:DerivedCodeList a owl:Class ;
    rdfs:label "Derived Code List"^^xsd:string ;
    vaem:comment "A derived codelist is a sublist of another codelist. The members that it has must be members of the source list."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/1.1/schema/dtype>,
        <http://www.linkedmodel.org/schema/dtype> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:allValuesFrom dtype:CodeList ;
            owl:onProperty dtype:derivedFrom ],
        [ a owl:Restriction ;
            owl:allValuesFrom dtype:ValueReference ;
            owl:onProperty dtype:hasMember ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty dtype:derivedFrom ],
        dtype:CodeList ;
    owl:disjointWith dtype:CompositeCodeList,
        dtype:SimpleCodeList .

dtype:SimpleCodeList a owl:Class ;
    rdfs:label "Simple Code List"^^xsd:string ;
    vaem:comment "A simple codelist is one made up only of enumerated values."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/1.1/schema/dtype>,
        <http://www.linkedmodel.org/schema/dtype> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:allValuesFrom dtype:EnumeratedValue ;
            owl:onProperty dtype:hasMember ],
        dtype:CodeList ;
    owl:disjointWith dtype:CompositeCodeList,
        dtype:DerivedCodeList .

dtype:defaultValue a rdf:Property ;
    rdfs:label "default value"^^xsd:string ;
    vaem:comment "The property \"dtype:defaultValue\" is a general property for specifying a value in situations where none is specified, or can be determined. In some cases of use, this property could have a scalar value and in other cases may need to refer to a first class concept that holds a \"value object\".  For this reason, the  type of this property is set as \"rdf:Property\" and the property is rangeless."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/1.1/schema/dtype>,
        <http://www.linkedmodel.org/schema/dtype> .

dtype:derivedFrom a owl:ObjectProperty ;
    rdfs:label "derived from"^^xsd:string ;
    vaem:comment "A property for specifying a derivation relationship."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/1.1/schema/dtype>,
        <http://www.linkedmodel.org/schema/dtype> .

dtype:hasMember a owl:ObjectProperty ;
    rdfs:label "has member"^^xsd:string ;
    vaem:comment "A property for specifying how member elements make up a data structure."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/1.1/schema/dtype>,
        <http://www.linkedmodel.org/schema/dtype> .

dtype:position a owl:DatatypeProperty ;
    rdfs:label "position"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/1.1/schema/dtype>,
        <http://www.linkedmodel.org/schema/dtype> ;
    rdfs:range xsd:nonNegativeInteger .

dtype:refersTo a owl:ObjectProperty ;
    rdfs:label "refers to"^^xsd:string ;
    vaem:comment "An indirection pointer for relating a slot in am occurrence data structure, such as \"dtype:ValueReference\" with another resource."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/1.1/schema/dtype>,
        <http://www.linkedmodel.org/schema/dtype> .

vaem:GMD_VAEM a vaem:GraphMetaData ;
    rdfs:label "VAEM Schema Version 2.0 Metadata"^^xsd:string ;
    dcterms:abstract "VAEM stands for \"Vocabulary for Attaching Essential Metadata\". What VAEM regards as essential metadata is data about dates and times, confidentiality, and other characterisitic qualifiers of the ontology, but also references to where a ontology is documented and where to find ontology registration for governance, attribution and provenance. VAEM makes use of some properties from the DC terms vocabulary using the namespace prefix \"dct\". VAEM is OWL-DL compliant."^^xsd:string ;
    dcterms:created "2011-04-20"^^xsd:date ;
    dcterms:modified "2014-07-26"^^xsd:date ;
    dcterms:title "VAEM Version 2.0 Metadata"^^xsd:string ;
    vaem:description "VAEM stands for \"Vocabulary for Attaching Essential Metadata\". What VAEM regards as essential metadata is data about dates and times, confidentiality, and other characterisitic qualifiers of the ontology, but also references to where a ontology is documented and where to find ontology registration for governance, attribution and provenance. VAEM makes use of some properties from the DC terms vocabulary using the namespace prefix \"dct\". VAEM is OWL-DL compliant."^^xsd:string ;
    vaem:hasGraphRole vaem:SchemaGraph ;
    vaem:hasOwner vaem:TopQuadrant ;
    vaem:hasSteward vaem:TopQuadrant ;
    vaem:intent "The purpose of VAEM is to provide, by import, a foundation for commonly needed resources for metadata on an ontology."^^xsd:string ;
    vaem:latestPublishedVersion "http://www.linkedmodel.org/doc/2014/SCHEMA_vaem-v2.0"^^xsd:anyURI ;
    vaem:logo "http://linkedmodel.org/lib/lm/images/logos/TopBraid-RDM-Graph-Logo.png"^^xsd:anyURI ;
    vaem:name "VAEM"^^xsd:string ;
    vaem:namespace "http://www.linkedmodel.org/schema/vaem#"^^xsd:anyURI ;
    vaem:namespacePrefix "vaem"^^xsd:string ;
    vaem:owner "TopQuadrant, Inc."^^xsd:string ;
    vaem:previousPublishedVersion "http://linkedmodel.org/doc/vaem/1.2/"^^xsd:anyURI ;
    vaem:rdfxmlFileURL "http://www.linkedmodel.org/2.0/schema/SCHEMA_vaem-v2.0.rdf"^^xsd:anyURI ;
    vaem:revision "2.0"^^xsd:string ;
    vaem:title "Vocabulary for Attaching Essential Metadata (VAEM) - Version 2.0"^^xsd:string ;
    vaem:turtleFileURL "http://www.linkedmodel.org/2.0/schema/SCHEMA_vaem-v2.0.ttl"^^xsd:anyURI ;
    vaem:usesNonImportedResource dcterms:abstract,
        dcterms:author,
        dcterms:created,
        dcterms:modified,
        dcterms:title,
        voag2:CC-SHAREALIKE_3PT0-US ;
    vaem:withAttributionTo "VAEM is issued under a Creative Commons Attribution Share Alike 3.0 United States License. Attribution should be made to TopQuadrant, Inc."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> .

vaem:TopQuadrant a vaem:Party ;
    rdfs:label "TopQuadrant"^^xsd:string ;
    vaem:name "TopQuadrant, Inc."^^xsd:string ;
    vaem:url "http:/www.topquadrant.com"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> .

vaem:hasMetadata a owl:ObjectProperty ;
    rdfs:label "has metadata"^^xsd:string ;
    dcterms:description "The property \"hasMetadata\" is used to reference a metadata information structure."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> .

vaem:hasSteward a owl:ObjectProperty ;
    rdfs:label "has steward"^^xsd:string ;
    dcterms:description "A property that is used to refer to a \"Steward\", that is, the party or role that is responsible for maintaining an asset, in the case of VAEM, an ontology graph."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> .

vaem:url a owl:DatatypeProperty ;
    rdfs:label "url"^^xsd:string ;
    dcterms:description "The property \"vaem:url\" is intended for general use as the name implies.  The range of the property is set as an XSD URI"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:range xsd:anyURI .

skos:broaderTransitive a rdf:Property,
        owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "has broader transitive"@en ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    rdfs:subPropertyOf skos:semanticRelation ;
    owl:inverseOf skos:narrowerTransitive ;
    skos:definition "skos:broaderTransitive is a transitive superproperty of skos:broader." ;
    skos:scopeNote "By convention, skos:broaderTransitive is not used to make assertions. Rather, the properties can be used to draw inferences about the transitive closure of the hierarchical relation, which is useful e.g. when implementing a simple query expansion algorithm in a search application."@en .

skos:narrower a rdf:Property,
        owl:ObjectProperty ;
    rdfs:label "has narrower"@en ;
    rdfs:comment "Narrower concepts are typically rendered as children in a concept hierarchy (tree)."@en ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    rdfs:subPropertyOf skos:narrowerTransitive ;
    owl:inverseOf skos:broader ;
    skos:definition "Relates a concept to a concept that is more specific in meaning."@en ;
    skos:scopeNote "By convention, skos:broader is only used to assert an immediate (i.e. direct) hierarchical link between two conceptual resources."@en .

skos:narrowerTransitive a rdf:Property,
        owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "has narrower transitive"@en ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    rdfs:subPropertyOf skos:semanticRelation ;
    owl:inverseOf skos:broaderTransitive ;
    skos:definition "skos:narrowerTransitive is a transitive superproperty of skos:narrower." ;
    skos:scopeNote "By convention, skos:narrowerTransitive is not used to make assertions. Rather, the properties can be used to draw inferences about the transitive closure of the hierarchical relation, which is useful e.g. when implementing a simple query expansion algorithm in a search application."@en .

prov:wasInfluencedBy a owl:ObjectProperty .

sh:qualifiedValueShape a rdf:Property ;
    rdfs:label "qualified value shape"@en ;
    rdfs:comment "The shape that a specified number of values must conform to."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:Shape .

sh:qualifiedValueShapesDisjoint a rdf:Property ;
    rdfs:label "qualified value shapes disjoint"@en ;
    rdfs:comment "Can be used to mark the qualified value shape to be disjoint with its sibling shapes."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:boolean .

<https://brickschema.org/schema/1.3/Brick> a owl:Ontology ;
    rdfs:label "Brick" ;
    dcterms1:creator ( [ a sdo1:Person ;
                sdo1:email "gtfierro@cs.berkeley.edu" ;
                sdo1:name "Gabe Fierro" ] [ a sdo1:Person ;
                sdo1:email "jbkoh@eng.ucsd.edu" ;
                sdo1:name "Jason Koh" ] ) ;
    dcterms1:issued "2016-11-16" ;
    dcterms1:license <https://github.com/BrickSchema/brick/blob/master/LICENSE> ;
    dcterms1:modified "2022-01-04" ;
    dcterms1:publisher [ a sdo1:Consortium ;
            sdo1:legalName "Brick Consortium, Inc" ;
            sdo1:sameAs <https://brickschema.org/consortium/> ] ;
    rdfs:isDefinedBy <https://brickschema.org/schema/1.3/Brick> ;
    rdfs:seeAlso <https://brickschema.org> ;
    owl:versionInfo "1.3.0rc1" .

brick:Active_Power a brick:Quantity ;
    rdfs:label "Active Power" ;
    qudt:applicableUnit unit:KiloV-A,
        unit:MegaV-A,
        unit:V-A ;
    owl:sameAs brick:Real_Power ;
    skos:broader brick:Electric_Power ;
    skos:definition "(Active Power) is, under periodic conditions, the mean value, taken over one period (T), of the instantaneous power (p). In complex notation, (P = Re \\; S), where (S) is (complex power)\"."@en ;
    brick:hasQUDTReference quantitykind:ActivePower .

brick:Air_Enthalpy_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Enthalpy Sensor" ;
    rdfs:subClassOf brick:Enthalpy_Sensor ;
    skos:definition "Measures the total heat content of air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enthalpy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Enthalpy,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Enthalpy ;
    brick:hasSubstance brick:Air .

brick:Air_Flow_Demand_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Flow Demand Setpoint" ;
    rdfs:subClassOf brick:Air_Flow_Setpoint,
        brick:Demand_Setpoint ;
    skos:definition "Sets the rate of air flow required for a process"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Demand ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Demand,
        tag:Flow,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Air .

brick:Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Limit ;
    skos:definition "A parameter that places a lower or upper bound on the range of permitted values of a Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Limit,
        tag:Parameter,
        tag:Point,
        tag:Setpoint .

brick:Air_Grains_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Grains Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the mass of water vapor in air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Grains ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Grains,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:GrainsOfMoisture ;
    brick:hasSubstance brick:Air .

brick:Air_Plenum a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Plenum" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "A component of the HVAC the receives air from the air handling unit or room to distribute or exhaust to or from the building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Plenum ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Equipment,
        tag:Plenum .

brick:Air_Temperature_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Temperature Setpoint Limit" ;
    rdfs:subClassOf brick:Limit,
        brick:Temperature_Parameter ;
    skos:definition "A parameter that places a lower or upper bound on the range of permitted values of a Air_Temperature_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Limit,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Air_Temperature_Step_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Temperature Step Parameter" ;
    rdfs:subClassOf brick:Temperature_Step_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Step ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Parameter,
        tag:Point,
        tag:Step,
        tag:Temperature .

brick:Angle_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Angle Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measues the planar angle of some phenomenon"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Angle ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Angle,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Angle .

brick:Boiler a owl:Class,
        sh:NodeShape ;
    rdfs:label "Boiler" ;
    rdfs:subClassOf brick:HVAC_Equipment,
        brick:Water_Heater ;
    skos:definition "A closed, pressure vessel that uses fuel or electricity for heating water or other fluids to supply steam or hot water for heating, humidification, or other applications."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Boiler ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Boiler,
        tag:Equipment .

brick:Bypass_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Bypass Valve" ;
    rdfs:seeAlso <https://www.petropedia.com/definition/5050/bypass-valve> ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "A type of valve installed in a bypass pipeline"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Bypass ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Bypass,
        tag:Equipment,
        tag:Valve .

brick:CO2 a owl:Class,
        sh:NodeShape,
        brick:CO2 ;
    rdfs:label "CO2" ;
    rdfs:subClassOf brick:Gas ;
    skos:definition "Carbon Dioxide in the vapor phase"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:CO2 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:CO2,
        tag:Fluid,
        tag:Gas .

brick:CRAC a owl:Class,
        sh:NodeShape ;
    rdfs:label "CRAC" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    owl:equivalentClass brick:Computer_Room_Air_Conditioning ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:CRAC ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:CRAC,
        tag:Equipment .

brick:Chilled_Beam a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Beam" ;
    rdfs:subClassOf brick:Terminal_Unit ;
    skos:definition "A device with an integrated coil that performs sensible heating of a space via circulation of room air. Chilled Beams are not designed to perform latent cooling; see Induction Units. Despite their name, Chilled Beams may perform heating or cooling of a space depending on their configuration."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Beam ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Beam,
        tag:Chilled,
        tag:Equipment .

brick:Chilled_Water_Differential_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Differential Pressure Setpoint" ;
    rdfs:subClassOf brick:Water_Differential_Pressure_Setpoint ;
    skos:definition "Sets the target water differential pressure between an upstream and downstream point in a water pipe or conduit used to carry chilled water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Differential,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Chilled_Water .

brick:Chilled_Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Flow Sensor" ;
    rdfs:subClassOf brick:Water_Flow_Sensor ;
    skos:definition "Measures the rate of flow in a chilled water circuit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Flow,
        tag:Point,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Chilled_Water .

brick:Chilled_Water_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Flow Setpoint" ;
    rdfs:subClassOf brick:Water_Flow_Setpoint ;
    skos:definition "Sets the target flow rate of chilled water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Flow,
        tag:Point,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Chilled_Water .

brick:Chilled_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Water_Temperature_Setpoint ;
    skos:definition "Sets the temperature of chilled water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Chilled_Water .

brick:Coil a owl:Class,
        sh:NodeShape ;
    rdfs:label "Coil" ;
    rdfs:subClassOf brick:Heat_Exchanger ;
    skos:definition "Cooling or heating element made of pipe or tube that may or may not be finned and formed into helical or serpentine shape (ASHRAE Dictionary)"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Coil ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Coil,
        tag:Equipment .

brick:Condenser_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Condenser Water Temperature Sensor" ;
    rdfs:subClassOf brick:Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of condenser water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Condenser_Water .

brick:Conductivity a brick:Quantity ;
    rdfs:label "Conductivity" ;
    qudt:applicableUnit unit:DeciS-PER-M,
        unit:KiloS-PER-M,
        unit:MegaS-PER-M,
        unit:MicroS-PER-CentiM,
        unit:MicroS-PER-M,
        unit:MilliS-PER-CentiM,
        unit:MilliS-PER-M,
        unit:NanoS-PER-CentiM,
        unit:NanoS-PER-M,
        unit:PicoS-PER-M,
        unit:S-PER-CentiM,
        unit:S-PER-M ;
    brick:hasQUDTReference quantitykind:Conductivity .

brick:Cooling_Coil a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Coil" ;
    rdfs:subClassOf brick:Coil ;
    skos:definition "A cooling element made of pipe or tube that removes heat from equipment, machines or airflows. Typically filled with either refrigerant or cold water."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Coil ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Coil,
        tag:Cool,
        tag:Equipment .

brick:Current_Output_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Current Output Sensor" ;
    rdfs:subClassOf brick:Current_Sensor ;
    skos:definition "Senses the amperes of electrical current produced as output by a device"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Current ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Output ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Current,
        tag:Output,
        tag:Point,
        tag:Sensor .

brick:Discharge_Air_Flow_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Flow Reset Setpoint" ;
    rdfs:subClassOf brick:Reset_Setpoint ;
    skos:definition "Setpoints used in Reset strategies"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Flow,
        tag:Point,
        tag:Reset,
        tag:Setpoint ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Discharge_Air .

brick:Discharge_Air_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Flow Sensor" ;
    rdfs:subClassOf brick:Air_Flow_Sensor ;
    skos:definition "Measures the rate of flow of discharge air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Flow,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Discharge_Air .

brick:Discharge_Air_Static_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Static Pressure Setpoint" ;
    rdfs:subClassOf brick:Static_Pressure_Setpoint ;
    skos:definition "Sets static pressure of discharge air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static ;
    brick:hasQuantity brick:Static_Pressure ;
    brick:hasSubstance brick:Discharge_Air .

brick:Discharge_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Temperature Sensor" ;
    rdfs:subClassOf brick:Air_Temperature_Sensor ;
    skos:definition "Measures the temperature of discharge air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Point,
        tag:Sensor,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Discharge_Air .

brick:Discharge_Air_Temperature_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Temperature Setpoint Limit" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint_Limit ;
    skos:definition "A parameter that places a lower or upper bound on the range of permitted values of a Discharge_Air_Temperature_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Limit,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Distribution_Frame a owl:Class,
        sh:NodeShape ;
    rdfs:label "Distribution Frame" ;
    rdfs:subClassOf brick:Telecom_Room ;
    skos:definition "A class of spaces where the cables carrying signals meet and connect, e.g. a wiring closet or a broadcast downlink room"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Distribution ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Frame ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Telecom ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Distribution,
        tag:Frame,
        tag:Location,
        tag:Room,
        tag:Space,
        tag:Telecom .

brick:Electric_Energy a brick:Quantity ;
    rdfs:label "ElectricEnergy" ;
    qudt:applicableUnit unit:J ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Energy,
        brick:Energy ;
    skos:definition "A form of energy resulting from the flow of electrical charge" .

brick:Emergency_Power_Off_System_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Emergency Power Off System Status" ;
    rdfs:subClassOf brick:Off_Status,
        brick:System_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Emergency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Power ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Emergency,
        tag:Off,
        tag:Point,
        tag:Power,
        tag:Status,
        tag:System .

brick:Energy_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Energy System" ;
    rdfs:subClassOf brick:Electrical_System ;
    skos:definition "A collection of devices that generates, stores or transports electricity"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Energy ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Energy,
        tag:System .

brick:Exhaust_Air_Static_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Exhaust Air Static Pressure Sensor" ;
    rdfs:subClassOf brick:Static_Pressure_Sensor ;
    skos:definition "The static pressure of air within exhaust regions of an HVAC system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Exhaust,
        tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Static ;
    brick:hasQuantity brick:Static_Pressure ;
    brick:hasSubstance brick:Exhaust_Air .

brick:Failure_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Failure Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "Alarms that indicate the failure of devices, equipment, systems and control loops"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Failure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Failure,
        tag:Point .

brick:Fault_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fault Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates the presence of a fault in a device, system or control loop"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fault ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fault,
        tag:Point,
        tag:Status .

brick:Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Flow Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the rate of flow of some substance"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Flow,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Flow .

brick:Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Flow Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Sets flow"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Flow,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Flow .

brick:Frost a owl:Class,
        sh:NodeShape,
        brick:Frost ;
    rdfs:label "Frost" ;
    rdfs:subClassOf brick:Solid ;
    skos:definition "frost formed on the cold surface (tubes, plates) of a cooling coil."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Frost ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Solid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Frost,
        tag:Solid .

brick:Hail a owl:Class,
        sh:NodeShape,
        brick:Hail ;
    rdfs:label "Hail" ;
    rdfs:subClassOf brick:Solid ;
    skos:definition "pellets of frozen rain which fall in showers from cumulonimbus clouds."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hail ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Solid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hail,
        tag:Solid .

brick:Heating_Coil a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Coil" ;
    rdfs:subClassOf brick:Coil ;
    skos:definition "A heating element typically made of pipe, tube or wire that emits heat. Typically filled with hot water, or, in the case of wire, uses electricity."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Coil ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Coil,
        tag:Equipment,
        tag:Heat .

brick:Heating_Discharge_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Discharge Air Flow Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Flow_Setpoint ;
    skos:definition "Sets discharge air flow for heating"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Flow,
        tag:Heat,
        tag:Point,
        tag:Setpoint .

brick:High_Temperature_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "High Temperature Alarm" ;
    rdfs:subClassOf brick:Temperature_Alarm ;
    skos:definition "An alarm that indicates high temperature."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:High,
        tag:Point,
        tag:Temperature .

brick:Hot_Water_Differential_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Differential Pressure Setpoint" ;
    rdfs:subClassOf brick:Water_Differential_Pressure_Setpoint ;
    skos:definition "Sets the target water differential pressure between an upstream and downstream point in a water pipe or conduit used to carry hot water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Hot,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Hot_Water .

brick:Hot_Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Flow Sensor" ;
    rdfs:subClassOf brick:Water_Flow_Sensor ;
    skos:definition "Measures the rate of flow in a hot water circuit"@en,
        "Measures the rate of flow of hot water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Flow,
        tag:Hot,
        tag:Point,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Hot_Water .

brick:Hot_Water_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Flow Setpoint" ;
    rdfs:subClassOf brick:Water_Flow_Setpoint ;
    skos:definition "Sets the target flow rate of hot water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Flow,
        tag:Hot,
        tag:Point,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Hot_Water .

brick:Hot_Water_Return_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Return Temperature Sensor" ;
    rdfs:subClassOf brick:Return_Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of water returned to a hot water system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Point,
        tag:Return,
        tag:Sensor,
        tag:Temperature,
        tag:Water .

brick:Hot_Water_Supply_Temperature_High_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Supply Temperature High Reset Setpoint" ;
    rdfs:subClassOf brick:Temperature_High_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:High,
        tag:Hot,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Supply_Hot_Water .

brick:Hot_Water_Supply_Temperature_Low_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Supply Temperature Low Reset Setpoint" ;
    rdfs:subClassOf brick:Temperature_Low_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Low,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Supply_Hot_Water .

brick:Hot_Water_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Valve" ;
    rdfs:subClassOf brick:Heating_Valve,
        brick:Water_Valve ;
    skos:definition "A valve regulating the flow of hot water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Hot,
        tag:Valve,
        tag:Water .

brick:Humidity_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Humidity Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "An alarm that indicates the off-normal conditions associated with the concentration of water vapor in the air."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Humidity,
        tag:Point .

brick:Imbalance_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Imbalance Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "A sensor which measures difference (imbalance) between phases of an electrical system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Imbalance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Imbalance,
        tag:Point,
        tag:Sensor .

brick:Intercom_Equipment a owl:Class,
        sh:NodeShape ;
    rdfs:label "Intercom Equipment" ;
    rdfs:subClassOf brick:Security_Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Intercom ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Security ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Intercom,
        tag:Security .

brick:Interface a owl:Class,
        sh:NodeShape ;
    rdfs:label "Interface" ;
    rdfs:subClassOf brick:Lighting_Equipment ;
    skos:definition "A device that provides an occupant control over a lighting system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Interface ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Interface .

brick:Lighting a owl:Class ;
    rdfs:label "Lighting" ;
    rdfs:subClassOf brick:Lighting_Equipment .

brick:Lighting_Equipment a owl:Class,
        sh:NodeShape ;
    rdfs:label "Lighting Equipment" ;
    rdfs:subClassOf brick:Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lighting ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Lighting .

brick:Load_Shed_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Load Shed Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Controls load shedding behavior provided by a control system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Load,
        tag:Point,
        tag:Shed .

brick:Lobby a owl:Class,
        sh:NodeShape ;
    rdfs:label "Lobby" ;
    rdfs:subClassOf brick:Common_Space ;
    skos:definition "A space just after the entrance to a building or other space of a building, where visitors can wait"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Common ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lobby ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Common,
        tag:Lobby,
        tag:Location,
        tag:Space .

brick:Low_Temperature_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Low Temperature Alarm" ;
    rdfs:subClassOf brick:Temperature_Alarm ;
    skos:definition "An alarm that indicates low temperature."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Low,
        tag:Point,
        tag:Temperature .

brick:Manual_Fire_Alarm_Activation_Equipment a owl:Class,
        sh:NodeShape ;
    rdfs:label "Manual Fire Alarm Activation Equipment" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Manual_fire_alarm_activation> ;
    rdfs:subClassOf brick:Fire_Safety_Equipment ;
    skos:definition "A device for manually activating fire alarm"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Activation ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fire ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Manual ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Activation,
        tag:Alarm,
        tag:Equipment,
        tag:Fire,
        tag:Manual,
        tag:Safety .

brick:Max_Cooling_Supply_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Cooling Supply Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Air_Flow_Setpoint_Limit ;
    owl:equivalentClass brick:Max_Cooling_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Cooling_Supply_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Flow,
        tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Supply .

brick:Max_Heating_Supply_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Heating Supply Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Air_Flow_Setpoint_Limit ;
    owl:equivalentClass brick:Max_Heating_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Heating_Supply_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Heat,
        tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Supply .

brick:Max_Static_Pressure_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Static Pressure Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Limit,
        brick:Static_Pressure_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Static_Pressure_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static .

brick:Max_Temperature_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Temperature Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Limit,
        brick:Temperature_Parameter ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Temperature_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Limit,
        tag:Max,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Measurable a owl:Class ;
    rdfs:label "Measurable" ;
    rdfs:subClassOf brick:Entity .

brick:Min_Cooling_Supply_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Cooling Supply Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Air_Flow_Setpoint_Limit ;
    owl:equivalentClass brick:Min_Cooling_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Cooling_Supply_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Flow,
        tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Supply .

brick:Min_Heating_Supply_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Heating Supply Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Air_Flow_Setpoint_Limit ;
    owl:equivalentClass brick:Min_Heating_Discharge_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Heating_Supply_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Heat,
        tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Supply .

brick:Min_Static_Pressure_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Static Pressure Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Limit,
        brick:Static_Pressure_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Static_Pressure_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static .

brick:Min_Temperature_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Temperature Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Limit,
        brick:Temperature_Parameter ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Temperature_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Limit,
        tag:Min,
        tag:Point,
        tag:Setpoint,
        tag:Temperature .

brick:Mode_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Mode Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates which mode a system, device or control loop is currently in"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Mode ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Mode,
        tag:Point,
        tag:Status .

brick:Motor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Motor" ;
    rdfs:seeAlso <https://xp20.ashrae.org/terminology/index.php?term=motor> ;
    rdfs:subClassOf brick:Equipment ;
    skos:definition "A machine in which power is applied to do work by the conversion of various forms of energy into mechanical force and motion."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Motor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Motor .

brick:Natural_Gas_Boiler a owl:Class,
        sh:NodeShape ;
    rdfs:label "Natural Gas Boiler" ;
    rdfs:subClassOf brick:Boiler ;
    skos:definition "A closed, pressure vessel that uses natural gas for heating water or other fluids to supply steam or hot water for heating, humidification, or other applications."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Boiler ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Natural ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Boiler,
        tag:Equipment,
        tag:Gas,
        tag:Natural .

brick:Occupied_Supply_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Supply Air Flow Setpoint" ;
    rdfs:subClassOf brick:Supply_Air_Flow_Setpoint ;
    owl:equivalentClass brick:Occupied_Discharge_Air_Flow_Setpoint ;
    skos:definition "Sets supply air flow rate when occupied"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Occupied,
        tag:Point,
        tag:Setpoint,
        tag:Supply .

brick:Oil a owl:Class,
        sh:NodeShape,
        brick:Oil ;
    rdfs:label "Oil" ;
    rdfs:subClassOf brick:Liquid ;
    skos:definition "a viscous liquid derived from petroleum, especially for use as a fuel or lubricant."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Oil ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fluid,
        tag:Liquid,
        tag:Oil .

brick:On_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "On Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if a control loop, relay or equipment is on"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:On ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:On,
        tag:Point,
        tag:Status .

brick:Outside_Air_Lockout_Temperature_Differential_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air Lockout Temperature Differential Parameter" ;
    rdfs:subClassOf brick:Lockout_Temperature_Differential_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Lockout ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Lockout,
        tag:Outside,
        tag:Parameter,
        tag:Point,
        tag:Temperature .

brick:Overridden_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Overridden Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if the expected operating status of an equipment or control loop has been overridden"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Overridden ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Overridden,
        tag:Point,
        tag:Status .

brick:PV_Array a owl:Class,
        sh:NodeShape ;
    rdfs:label "PV Array" ;
    rdfs:subClassOf brick:Collection ;
    owl:equivalentClass brick:Photovoltaic_Array ;
    sh:property [ sh:or ( [ sh:class brick:PV_Panel ] ) ;
            sh:path brick:hasPart ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Array ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Collection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PV ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Array,
        tag:Collection,
        tag:PV .

brick:Phasor a brick:Quantity ;
    rdfs:label "Phasor" .

brick:Phasor_Angle a brick:Quantity ;
    rdfs:label "PhasorAngle" ;
    qudt:applicableUnit unit:ARCMIN,
        unit:ARCSEC,
        unit:DEG,
        unit:GON,
        unit:GRAD,
        unit:MIL,
        unit:MicroRAD,
        unit:MilliARCSEC,
        unit:MilliRAD,
        unit:RAD,
        unit:REV ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:PlaneAngle ;
    skos:definition "Angle component of a phasor" ;
    skos:related brick:Phasor .

brick:Position_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Position Limit" ;
    rdfs:subClassOf brick:Limit ;
    skos:definition "A parameter that places a lower or upper bound on the range of permitted values of a Position_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Position ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Limit,
        tag:Point,
        tag:Position .

brick:Power_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Power Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the amount of instantaneous power consumed"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Power ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Power,
        tag:Sensor ;
    brick:hasQuantity brick:Power .

brick:Pressure_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Pressure Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "An alarm that indicates the off-normal conditions associated with pressure."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Point,
        tag:Pressure .

brick:Pump a owl:Class,
        sh:NodeShape ;
    rdfs:label "Pump" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "Machine for imparting energy to a fluid, causing it to do work, drawing a fluid into itself through an entrance port, and forcing the fluid out through an exhaust port."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pump ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Pump .

brick:Radioactivity_Concentration a brick:Quantity ;
    rdfs:label "Radioactivity Concentration" ;
    skos:broader brick:Air_Quality .

brick:Return_Air_Temperature_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air Temperature Alarm" ;
    rdfs:subClassOf brick:Air_Temperature_Alarm ;
    skos:definition "An alarm that indicates the off-normal conditions associated with the temperature of return air."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Point,
        tag:Return,
        tag:Temperature .

brick:Return_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Water_Temperature_Setpoint ;
    skos:definition "Sets the temperature of return water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Return,
        tag:Setpoint,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Return_Water .

brick:Speed_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Speed Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Sets speed"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Speed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Setpoint,
        tag:Speed ;
    brick:hasQuantity brick:Speed .

brick:Speed_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Speed Setpoint Limit" ;
    rdfs:subClassOf brick:Limit ;
    skos:definition "A parameter that places a lower or upper bound on the range of permitted values of a Speed_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Speed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Limit,
        tag:Parameter,
        tag:Point,
        tag:Setpoint,
        tag:Speed .

brick:StageShape a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( 1 2 3 4 ) ;
            sh:minCount 1 ;
            sh:path brick:value ] .

brick:Static_Pressure_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Static Pressure Deadband Setpoint" ;
    rdfs:subClassOf brick:Deadband_Setpoint,
        brick:Static_Pressure_Setpoint ;
    skos:definition "Sets the size of a deadband of static pressure"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Deadband,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static ;
    brick:hasQuantity brick:Static_Pressure .

brick:Static_Pressure_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Static Pressure Integral Time Parameter" ;
    rdfs:subClassOf brick:Integral_Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Static,
        tag:Time .

brick:Storage_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Storage Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A class of spaces used for storage"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Storage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Room,
        tag:Space,
        tag:Storage .

brick:Supply_Air_Temperature_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Temperature Deadband Setpoint" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint,
        brick:Temperature_Deadband_Setpoint ;
    owl:equivalentClass brick:Discharge_Air_Temperature_Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of temperature of supply air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Deadband,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Air_Temperature_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Temperature Proportional Band Parameter" ;
    rdfs:subClassOf brick:Proportional_Band_Parameter,
        brick:Temperature_Parameter ;
    owl:equivalentClass brick:Discharge_Air_Temperature_Proportional_Band_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Band,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Proportional,
        tag:Supply,
        tag:Temperature .

brick:Supply_Air_Temperature_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Temperature Setpoint Limit" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint_Limit ;
    skos:definition "A parameter limiting a Supply_Air_Temperature_Setpoint"@en,
        "A parameter that places a lower or upper bound on the range of permitted values of a Supply_Air_Temperature_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Limit,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature .

brick:Supply_Water_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Water Flow Setpoint" ;
    rdfs:subClassOf brick:Water_Flow_Setpoint ;
    owl:equivalentClass brick:Discharge_Water_Flow_Setpoint ;
    skos:definition "Sets the flow rate of hot supply water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Flow,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Supply_Water .

brick:System_Enable_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "System Enable Command" ;
    rdfs:subClassOf brick:Enable_Command ;
    skos:definition "Enables operation of a system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Enable,
        tag:Point,
        tag:System .

brick:Temperature_Differential_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Temperature Differential Reset Setpoint" ;
    rdfs:subClassOf brick:Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Differential_Temperature .

brick:ThermalTransmittanceShape a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:BTU_IT unit:W-PER-M2-K ) ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

brick:Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Time Parameter" ;
    rdfs:subClassOf brick:PID_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Parameter,
        tag:Point,
        tag:Time .

brick:Time_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Time Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Setpoint,
        tag:Time ;
    brick:hasQuantity brick:Time .

brick:Tolerance_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Tolerance Parameter" ;
    rdfs:subClassOf brick:Parameter ;
    skos:definition "difference between upper and lower limits of size for a given nominal dimension or value."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Tolerance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Parameter,
        tag:Point,
        tag:Tolerance .

brick:Variable_Air_Volume_Box a owl:Class,
        sh:NodeShape ;
    rdfs:label "Variable Air Volume Box" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Variable_air_volume> ;
    rdfs:subClassOf brick:Terminal_Unit ;
    owl:equivalentClass brick:VAV ;
    skos:definition "A device that regulates the volume and temperature of air delivered to a zone by opening or closing a damper"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Box ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Variable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Volume ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Box,
        tag:Equipment,
        tag:Variable,
        tag:Volume .

brick:Water_Differential_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Differential Pressure Setpoint" ;
    rdfs:subClassOf brick:Differential_Pressure_Setpoint ;
    skos:definition "Sets the target water differential pressure between an upstream and downstream point in a water pipe or conduit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Water .

brick:Water_Heater a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Heater" ;
    rdfs:seeAlso <https://www.merriam-webster.com/dictionary/waterheater> ;
    rdfs:subClassOf brick:Equipment ;
    skos:definition "An apparatus for heating and usually storing hot water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heater ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Heater,
        tag:Water .

brick:Water_Level_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Level Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the height/level of water in some container"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Level,
        tag:Point,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Level ;
    brick:hasSubstance brick:Water .

brick:Water_Temperature_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Temperature Alarm" ;
    rdfs:subClassOf brick:Temperature_Alarm,
        brick:Water_Alarm ;
    skos:definition "An alarm that indicates the off-normal conditions associated with temperature of water."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Point,
        tag:Temperature,
        tag:Water .

brick:Wet_Bulb_Temperature a brick:Quantity ;
    rdfs:label "Wet_Bulb_Temperature" ;
    qudt:applicableUnit unit:DEG_C,
        unit:DEG_F,
        unit:K ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Temperature,
        brick:Temperature ;
    skos:definition "The temperature read by a thermometer covered in water-soaked cloth (wet-bulb thermometer) over which air is passed. A wet-bulb thermometer indicates a temperature close to the true (thermodynamic) wet-bulb temperature. The wet-bulb temperature is the lowest temperature that can be reached under current ambient conditions by the evaporation of water only.  DBT is the temperature that is usually thought of as air temperature, and it is the true thermodynamic temperature. It indicates the amount of heat in the air and is directly proportional to the mean kinetic energy of the air molecule. (https://en.wikipedia.org/wiki/Wet-bulb_temperature)",
        "The temperature read by a thermometer covered in water-soaked cloth (wet-bulb thermometer) over which air is passed. A wet-bulb thermometer indicates a temperature close to the true (thermodynamic) wet-bulb temperature. The wet-bulb temperature is the lowest temperature that can be reached under current ambient conditions by the evaporation of water only.  DBT is the temperature that is usually thought of as air temperature, and it is the true thermodynamic temperature. It indicates the amount of heat in the air and is directly proportional to the mean kinetic energy of the air molecule. (https://en.wikipedia.org/wiki/Wet-bulb_temperature)"@en .

brick:conversionEfficiency a brick:EntityProperty ;
    rdfs:label "Conversion efficiency" ;
    rdfs:range brick:EfficiencyShape ;
    skos:definition "The percent efficiency of the conversion process (usually to power or energy) carried out by the entity" .

brick:isFedBy a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Is fed by" ;
    owl:inverseOf brick:feeds .

tag:Ablutions a brick:Tag ;
    rdfs:label "Ablutions" .

tag:Absorption a brick:Tag ;
    rdfs:label "Absorption" .

tag:Acceleration a brick:Tag ;
    rdfs:label "Acceleration" .

tag:Activated a brick:Tag ;
    rdfs:label "Activated" .

tag:Activation a brick:Tag ;
    rdfs:label "Activation" .

tag:Active a brick:Tag ;
    rdfs:label "Active" .

tag:Atrium a brick:Tag ;
    rdfs:label "Atrium" .

tag:Auditorium a brick:Tag ;
    rdfs:label "Auditorium" .

tag:Auto a brick:Tag ;
    rdfs:label "Auto" .

tag:Availability a brick:Tag ;
    rdfs:label "Availability" .

tag:Azimuth a brick:Tag ;
    rdfs:label "Azimuth" .

tag:Basement a brick:Tag ;
    rdfs:label "Basement" .

tag:Bench a brick:Tag ;
    rdfs:label "Bench" .

tag:Blowdown a brick:Tag ;
    rdfs:label "Blowdown" .

tag:Booster a brick:Tag ;
    rdfs:label "Booster" .

tag:Booth a brick:Tag ;
    rdfs:label "Booth" .

tag:Break a brick:Tag ;
    rdfs:label "Break" .

tag:Breaker a brick:Tag ;
    rdfs:label "Breaker" .

tag:Breakroom a brick:Tag ;
    rdfs:label "Breakroom" .

tag:Broadcast a brick:Tag ;
    rdfs:label "Broadcast" .

tag:Bus a brick:Tag ;
    rdfs:label "Bus" .

tag:Button a brick:Tag ;
    rdfs:label "Button" .

tag:CAV a brick:Tag ;
    rdfs:label "CAV" .

tag:CRAH a brick:Tag ;
    rdfs:label "CRAH" .

tag:Cafeteria a brick:Tag ;
    rdfs:label "Cafeteria" .

tag:Call a brick:Tag ;
    rdfs:label "Call" .

tag:Capacity a brick:Tag ;
    rdfs:label "Capacity" .

tag:Center a brick:Tag ;
    rdfs:label "Center" .

tag:Centrifugal a brick:Tag ;
    rdfs:label "Centrifugal" .

tag:Change a brick:Tag ;
    rdfs:label "Change" .

tag:Code a brick:Tag ;
    rdfs:label "Code" .

tag:Cold a brick:Tag ;
    rdfs:label "Cold" .

tag:Coldest a brick:Tag ;
    rdfs:label "Coldest" .

tag:Communication a brick:Tag ;
    rdfs:label "Communication" .

tag:Compressor a brick:Tag ;
    rdfs:label "Compressor" .

tag:Concessions a brick:Tag ;
    rdfs:label "Concessions" .

tag:Condensate a brick:Tag ;
    rdfs:label "Condensate" .

tag:Condensing a brick:Tag ;
    rdfs:label "Condensing" .

tag:Conference a brick:Tag ;
    rdfs:label "Conference" .

tag:Constant a brick:Tag ;
    rdfs:label "Constant" .

tag:Contact a brick:Tag ;
    rdfs:label "Contact" .

tag:Cooling a brick:Tag ;
    rdfs:label "Cooling" .

tag:Copy a brick:Tag ;
    rdfs:label "Copy" .

tag:Cubicle a brick:Tag ;
    rdfs:label "Cubicle" .

tag:Curtailment a brick:Tag ;
    rdfs:label "Curtailment" .

tag:Cutout a brick:Tag ;
    rdfs:label "Cutout" .

tag:DOAS a brick:Tag ;
    rdfs:label "DOAS" .

tag:Dc a brick:Tag ;
    rdfs:label "Dc" .

tag:Deceleration a brick:Tag ;
    rdfs:label "Deceleration" .

tag:Dedicated a brick:Tag ;
    rdfs:label "Dedicated" .

tag:Dehumidification a brick:Tag ;
    rdfs:label "Dehumidification" .

tag:Desk a brick:Tag ;
    rdfs:label "Desk" .

tag:Detention a brick:Tag ;
    rdfs:label "Detention" .

tag:Dimmer a brick:Tag ;
    rdfs:label "Dimmer" .

tag:Disconnect a brick:Tag ;
    rdfs:label "Disconnect" .

tag:Displacement a brick:Tag ;
    rdfs:label "Displacement" .

tag:Dock a brick:Tag ;
    rdfs:label "Dock" .

tag:Drench a brick:Tag ;
    rdfs:label "Drench" .

tag:Driver a brick:Tag ;
    rdfs:label "Driver" .

tag:ESS a brick:Tag ;
    rdfs:label "ESS" .

tag:Econcycle a brick:Tag ;
    rdfs:label "Econcycle" .

tag:Employee a brick:Tag ;
    rdfs:label "Employee" .

tag:Environment a brick:Tag ;
    rdfs:label "Environment" .

tag:Evaporative a brick:Tag ;
    rdfs:label "Evaporative" .

tag:Even a brick:Tag ;
    rdfs:label "Even" .

tag:Exercise a brick:Tag ;
    rdfs:label "Exercise" .

tag:Eye a brick:Tag ;
    rdfs:label "Eye" .

tag:FCU a brick:Tag ;
    rdfs:label "FCU" .

tag:Field a brick:Tag ;
    rdfs:label "Field" .

tag:Final a brick:Tag ;
    rdfs:label "Final" .

tag:First a brick:Tag ;
    rdfs:label "First" .

tag:FirstAid a brick:Tag ;
    rdfs:label "FirstAid" .

tag:Formaldehyde a brick:Tag ;
    rdfs:label "Formaldehyde" .

tag:Freezer a brick:Tag ;
    rdfs:label "Freezer" .

tag:Fuel a brick:Tag ;
    rdfs:label "Fuel" .

tag:Gasoline a brick:Tag ;
    rdfs:label "Gasoline" .

tag:Gatehouse a brick:Tag ;
    rdfs:label "Gatehouse" .

tag:Generation a brick:Tag ;
    rdfs:label "Generation" .

tag:Glycol a brick:Tag ;
    rdfs:label "Glycol" .

tag:Glycool a brick:Tag ;
    rdfs:label "Glycool" .

tag:HX a brick:Tag ;
    rdfs:label "HX" .

tag:Hallway a brick:Tag ;
    rdfs:label "Hallway" .

tag:Handling a brick:Tag ;
    rdfs:label "Handling" .

tag:Hazardous a brick:Tag ;
    rdfs:label "Hazardous" .

tag:Head a brick:Tag ;
    rdfs:label "Head" .

tag:Heat_Sink a brick:Tag ;
    rdfs:label "Heat_Sink" .

tag:Hold a brick:Tag ;
    rdfs:label "Hold" .

tag:Hose a brick:Tag ;
    rdfs:label "Hose" .

tag:Hospitality a brick:Tag ;
    rdfs:label "Hospitality" .

tag:Humidification a brick:Tag ;
    rdfs:label "Humidification" .

tag:Humidify a brick:Tag ;
    rdfs:label "Humidify" .

tag:IDF a brick:Tag ;
    rdfs:label "IDF" .

tag:Induction a brick:Tag ;
    rdfs:label "Induction" .

tag:Information a brick:Tag ;
    rdfs:label "Information" .

tag:Intrusion a brick:Tag ;
    rdfs:label "Intrusion" .

tag:Inverter a brick:Tag ;
    rdfs:label "Inverter" .

tag:Janitor a brick:Tag ;
    rdfs:label "Janitor" .

tag:Jet a brick:Tag ;
    rdfs:label "Jet" .

tag:Kitchen a brick:Tag ;
    rdfs:label "Kitchen" .

tag:Laminar a brick:Tag ;
    rdfs:label "Laminar" .

tag:Last a brick:Tag ;
    rdfs:label "Last" .

tag:Library a brick:Tag ;
    rdfs:label "Library" .

tag:Loading a brick:Tag ;
    rdfs:label "Loading" .

tag:Locally a brick:Tag ;
    rdfs:label "Locally" .

tag:Louver a brick:Tag ;
    rdfs:label "Louver" .

tag:Lowest a brick:Tag ;
    rdfs:label "Lowest" .

tag:MAU a brick:Tag ;
    rdfs:label "MAU" .

tag:MDF a brick:Tag ;
    rdfs:label "MDF" .

tag:Mail a brick:Tag ;
    rdfs:label "Mail" .

tag:Majlis a brick:Tag ;
    rdfs:label "Majlis" .

tag:Massage a brick:Tag ;
    rdfs:label "Massage" .

tag:Materials a brick:Tag ;
    rdfs:label "Materials" .

tag:Medical a brick:Tag ;
    rdfs:label "Medical" .

tag:Meidcal a brick:Tag ;
    rdfs:label "Meidcal" .

tag:Methane a brick:Tag ;
    rdfs:label "Methane" .

tag:Month a brick:Tag ;
    rdfs:label "Month" .

tag:Motion a brick:Tag ;
    rdfs:label "Motion" .

tag:NO2 a brick:Tag ;
    rdfs:label "NO2" .

tag:Network a brick:Tag ;
    rdfs:label "Network" .

tag:No a brick:Tag ;
    rdfs:label "No" .

tag:Noncondensing a brick:Tag ;
    rdfs:label "Noncondensing" .

tag:Nozzle a brick:Tag ;
    rdfs:label "Nozzle" .

tag:Overload a brick:Tag ;
    rdfs:label "Overload" .

tag:Ozone a brick:Tag ;
    rdfs:label "Ozone" .

tag:PAU a brick:Tag ;
    rdfs:label "PAU" .

tag:PIR a brick:Tag ;
    rdfs:label "PIR" .

tag:Passive a brick:Tag ;
    rdfs:label "Passive" .

tag:Peak a brick:Tag ;
    rdfs:label "Peak" .

tag:Phone a brick:Tag ;
    rdfs:label "Phone" .

tag:Piezoelectric a brick:Tag ;
    rdfs:label "Piezoelectric" .

tag:Play a brick:Tag ;
    rdfs:label "Play" .

tag:PlugStrip a brick:Tag ;
    rdfs:label "PlugStrip" .

tag:Plumbing a brick:Tag ;
    rdfs:label "Plumbing" .

tag:Portfolio a brick:Tag ;
    rdfs:label "Portfolio" .

tag:Potable a brick:Tag ;
    rdfs:label "Potable" .

tag:Prayer a brick:Tag ;
    rdfs:label "Prayer" .

tag:Private a brick:Tag ;
    rdfs:label "Private" .

tag:Production a brick:Tag ;
    rdfs:label "Production" .

tag:Protect a brick:Tag ;
    rdfs:label "Protect" .

tag:Pull a brick:Tag ;
    rdfs:label "Pull" .

tag:Push a brick:Tag ;
    rdfs:label "Push" .

tag:Quality a brick:Tag ;
    rdfs:label "Quality" .

tag:RC a brick:Tag ;
    rdfs:label "RC" .

tag:RTU a brick:Tag ;
    rdfs:label "RTU" .

tag:RVAV a brick:Tag ;
    rdfs:label "RVAV" .

tag:Radiance a brick:Tag ;
    rdfs:label "Radiance" .

tag:Radiation a brick:Tag ;
    rdfs:label "Radiation" .

tag:Radioactivity a brick:Tag ;
    rdfs:label "Radioactivity" .

tag:Radon a brick:Tag ;
    rdfs:label "Radon" .

tag:Rated a brick:Tag ;
    rdfs:label "Rated" .

tag:Ratio a brick:Tag ;
    rdfs:label "Ratio" .

tag:Reactive a brick:Tag ;
    rdfs:label "Reactive" .

tag:Reader a brick:Tag ;
    rdfs:label "Reader" .

tag:Ready a brick:Tag ;
    rdfs:label "Ready" .

tag:Real a brick:Tag ;
    rdfs:label "Real" .

tag:Reception a brick:Tag ;
    rdfs:label "Reception" .

tag:Recorder a brick:Tag ;
    rdfs:label "Recorder" .

tag:Recovery a brick:Tag ;
    rdfs:label "Recovery" .

tag:Region a brick:Tag ;
    rdfs:label "Region" .

tag:Remotely a brick:Tag ;
    rdfs:label "Remotely" .

tag:Request a brick:Tag ;
    rdfs:label "Request" .

tag:Required a brick:Tag ;
    rdfs:label "Required" .

tag:Rest a brick:Tag ;
    rdfs:label "Rest" .

tag:Restroom a brick:Tag ;
    rdfs:label "Restroom" .

tag:Retail a brick:Tag ;
    rdfs:label "Retail" .

tag:Sash a brick:Tag ;
    rdfs:label "Sash" .

tag:Schedule a brick:Tag ;
    rdfs:label "Schedule" .

tag:Sensitivity a brick:Tag ;
    rdfs:label "Sensitivity" .

tag:Server a brick:Tag ;
    rdfs:label "Server" .

tag:Shaft a brick:Tag ;
    rdfs:label "Shaft" .

tag:Shared a brick:Tag ;
    rdfs:label "Shared" .

tag:Short a brick:Tag ;
    rdfs:label "Short" .

tag:Shutdown a brick:Tag ;
    rdfs:label "Shutdown" .

tag:Site a brick:Tag ;
    rdfs:label "Site" .

tag:Sports a brick:Tag ;
    rdfs:label "Sports" .

tag:Stages a brick:Tag ;
    rdfs:label "Stages" .

tag:Staircase a brick:Tag ;
    rdfs:label "Staircase" .

tag:Storey a brick:Tag ;
    rdfs:label "Storey" .

tag:Structure a brick:Tag ;
    rdfs:label "Structure" .

tag:Studio a brick:Tag ;
    rdfs:label "Studio" .

tag:Suction a brick:Tag ;
    rdfs:label "Suction" .

tag:Switchgear a brick:Tag ;
    rdfs:label "Switchgear" .

tag:TABS a brick:Tag ;
    rdfs:label "TABS" .

tag:TETRA a brick:Tag ;
    rdfs:label "TETRA" .

tag:Team a brick:Tag ;
    rdfs:label "Team" .

tag:Temporary a brick:Tag ;
    rdfs:label "Temporary" .

tag:Terminal a brick:Tag ;
    rdfs:label "Terminal" .

tag:Thermally a brick:Tag ;
    rdfs:label "Thermally" .

tag:Thermostat a brick:Tag ;
    rdfs:label "Thermostat" .

tag:Ticketing a brick:Tag ;
    rdfs:label "Ticketing" .

tag:Timer a brick:Tag ;
    rdfs:label "Timer" .

tag:Touchpanel a brick:Tag ;
    rdfs:label "Touchpanel" .

tag:Trace a brick:Tag ;
    rdfs:label "Trace" .

tag:Tunnel a brick:Tag ;
    rdfs:label "Tunnel" .

tag:VAV a brick:Tag ;
    rdfs:label "VAV" .

tag:Vent a brick:Tag ;
    rdfs:label "Vent" .

tag:Visitor a brick:Tag ;
    rdfs:label "Visitor" .

tag:Wardrobe a brick:Tag ;
    rdfs:label "Wardrobe" .

tag:Warm a brick:Tag ;
    rdfs:label "Warm" .

tag:Warmest a brick:Tag ;
    rdfs:label "Warmest" .

tag:Waste a brick:Tag ;
    rdfs:label "Waste" .

tag:Weather a brick:Tag ;
    rdfs:label "Weather" .

tag:Window a brick:Tag ;
    rdfs:label "Window" .

tag:Wing a brick:Tag ;
    rdfs:label "Wing" .

tag:Workshop a brick:Tag ;
    rdfs:label "Workshop" .

tag:Zenith a brick:Tag ;
    rdfs:label "Zenith" .

s223:ActuatableProperty a s223:Class,
        sh:NodeShape ;
    rdfs:label "actuatable property" ;
    rdfs:comment "This class describes non-numeric actuator/control settings, such as the state of a switch (\"on\" or \"off\")" ;
    rdfs:subClassOf s223:Property .

s223:Direction a s223:Class,
        sh:NodeShape ;
    rdfs:label "Direction" ;
    rdfs:comment "This class has enumerated instances of Bidirectional, Inlet and Outlet used to qualify ConnectionPoints." ;
    rdfs:subClassOf s223:Concept .

s223:Enumerable a s223:Class,
        sh:NodeShape ;
    rdfs:label "Enumerable" ;
    rdfs:subClassOf s223:Concept ;
    sh:property [ sh:path s223:hasValue ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    sh:message "{$this} has an enumeration value of {?value} which is not a valid {?kind}." ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/validation/model> ;
                    sh:select """
SELECT $this ?value ?kind
WHERE {
$this s223:hasValue ?value .
$this s223:hasEnumerationKind ?kind .
FILTER (NOT EXISTS {?kind s223:includes*/s223:hasMember ?value}) .
}
""" ] ],
        [ sh:class s223:EnumerationKind ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path s223:hasEnumerationKind ] .

s223:ObservableProperty a s223:Class,
        sh:NodeShape ;
    rdfs:label "observable property" ;
    rdfs:comment "This class describes non-numeric observations or readings, such as the state of an alarm detector." ;
    rdfs:subClassOf s223:Property .

s223:SetpointAspect a s223:Class,
        sh:NodeShape ;
    rdfs:label "SetpointAspect" ;
    rdfs:subClassOf s223:Concept .

s223:Zone a s223:Class,
        sh:NodeShape ;
    rdfs:label "Zone" ;
    rdfs:comment "A Zone represents a collection of Spaces to identify a domain of control, such as a Lighting Zone." ;
    rdfs:subClassOf s223:Concept ;
    sh:property [ sh:or ( [ sh:class s223:DomainSpace ] [ sh:class s223:Zone ] ) ;
            sh:path s223:contains ],
        [ sh:class s223:Domain ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path s223:hasDomain ],
        s223:hasPropertyShape ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "Traverse down the contains hierarchy to determine the domain" ;
            sh:object [ sh:path ( [ sh:zeroOrMorePath s223:contains ] s223:hasDomain ) ] ;
            sh:predicate s223:hasDomain ;
            sh:subject sh:this ] .

s223:connected a s223:SymmetricProperty,
        rdf:Property ;
    rdfs:label "connected" .

s223:connectedThrough a rdf:Property ;
    rdfs:label "connected through" ;
    rdfs:domain s223:Device ;
    rdfs:range s223:Connection .

s223:hasContextualRoleShape a sh:PropertyShape ;
    rdfs:label "has Contextual Role Shape" ;
    sh:node s223:ContextualRole ;
    sh:path s223:hasContextualRole .

s223:hasEnumerationKind a rdf:Property ;
    rdfs:label "has enumeration kind" .

s223:mapsTo a rdf:Property ;
    rdfs:label "mapsTo" .

s223:observesProperty a rdf:Property ;
    rdfs:label "observes property" ;
    s223:inverseOf s223:isObservedBy .

<http://data.ashrae.org/standard223/1.0/inference/owl-subset> a owl:Ontology ;
    owl:imports <http://data.ashrae.org/standard223/1.0/model/all>,
        sh: ;
    owl:versionInfo "Created with TopBraid Composer" ;
    sh:declare [ sh:namespace "http://data.ashrae.org/standard223#"^^xsd:anyURI ;
            sh:prefix "s223" ] .

<http://data.ashrae.org/standard223/1.0/validation/schema> a owl:Ontology ;
    owl:imports <http://data.ashrae.org/standard223/1.0/model/all>,
        sh: ;
    owl:versionInfo "Created with TopBraid Composer" ;
    sh:declare [ sh:namespace "http://data.ashrae.org/standard223#"^^xsd:anyURI ;
            sh:prefix "s223" ],
        [ sh:namespace "http://www.w3.org/2000/01/rdf-schema#"^^xsd:anyURI ;
            sh:prefix "rdfs" ] .

<http://data.ashrae.org/standard223/1.0/vocab/enumeration> a owl:Ontology ;
    owl:imports <http://data.ashrae.org/standard223/1.0/model/all>,
        sh: ;
    owl:versionInfo "Created with TopBraid Composer" .

qudt:AspectClass a owl:Class,
        sh:NodeShape ;
    rdfs:label "Aspect Class" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf rdfs:Class .

qudt:FloatingPointEncodingType a owl:Class,
        sh:NodeShape ;
    rdfs:label "Floating Point Encoding" ;
    dcterms:description "A \"Encoding\" with the following instance(s): \"Double Precision Encoding\", \"Single Precision Real Encoding\"." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Encoding .

qudt:IntervalScale a owl:Class,
        sh:NodeShape ;
    rdfs:label "Interval scale" ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Level_of_measurement"^^xsd:anyURI ;
    rdfs:comment """<p>The interval type allows for the degree of difference between items, but not the ratio between them. Examples include temperature with the Celsius scale, which has two defined points (the freezing and boiling point of water at specific conditions) and then separated into 100 intervals, date when measured from an arbitrary epoch (such as AD), percentage such as a percentage return on a stock,[16] location in Cartesian coordinates, and direction measured in degrees from true or magnetic north. Ratios are not meaningful since 20 °C cannot be said to be "twice as hot" as 10 °C, nor can multiplication/division be carried out between any two dates directly. However, ratios of differences can be expressed; for example, one difference can be twice another. Interval type variables are sometimes also called "scaled variables", but the formal mathematical term is an affine space (in this case an affine line).</p>
<p>Characteristics: median, percentile &amp; Monotonic increasing (order (&lt;) &amp; totally ordered set</p>"""^^rdf:HTML,
        "median, percentile & Monotonic increasing (order (<)) & totally ordered set"^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:seeAlso qudt:NominalScale,
        qudt:OrdinalScale,
        qudt:RatioScale ;
    rdfs:subClassOf qudt:Scale .

qudt:NominalScale a owl:Class,
        sh:NodeShape ;
    rdfs:label "Nominal scale" ;
    qudt:description "mode, Chi-squared &  One to One (equality (=)) & standard set structure (unordered)" ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Level_of_measurement"^^xsd:anyURI ;
    rdfs:comment "A nominal scale differentiates between items or subjects based only on their names or (meta-)categories and other qualitative classifications they belong to; thus dichotomous data involves the construction of classifications as well as the classification of items. Discovery of an exception to a classification can be viewed as progress. Numbers may be used to represent the variables but the numbers do not have numerical value or relationship: For example, a Globally unique identifier. Examples of these classifications include gender, nationality, ethnicity, language, genre, style, biological species, and form. In a university one could also use hall of affiliation as an example."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.0/schema/qudt/mathematics>,
        <http://qudt.org/2.1/schema/qudt>,
        qudt:mathematics ;
    rdfs:seeAlso qudt:IntervalScale,
        qudt:OrdinalScale,
        qudt:RatioScale ;
    rdfs:subClassOf qudt:Scale ;
    skos:prefLabel "Nominal scale" .

qudt:OrdinalScale a owl:Class,
        sh:NodeShape ;
    rdfs:label "Ordinal scale" ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Level_of_measurement"^^xsd:anyURI ;
    rdfs:comment "The ordinal type allows for rank order (1st, 2nd, 3rd, etc.) by which data can be sorted, but still does not allow for relative degree of difference between them. Examples include, on one hand, dichotomous data with dichotomous (or dichotomized) values such as 'sick' vs. 'healthy' when measuring health, 'guilty' vs. 'innocent' when making judgments in courts, 'wrong/false' vs. 'right/true' when measuring truth value, and, on the other hand, non-dichotomous data consisting of a spectrum of values, such as 'completely agree', 'mostly agree', 'mostly disagree', 'completely disagree' when measuring opinion."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:seeAlso qudt:IntervalScale,
        qudt:NominalScale,
        qudt:RatioScale ;
    rdfs:subClassOf qudt:Scale ;
    sh:property qudt:OrdinalScale-qudt_order .

qudt:Quantity a owl:Class,
        sh:NodeShape ;
    rdfs:label "Quantity" ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Quantity"^^xsd:anyURI ;
    rdfs:comment """<p class="lm-para">A <b>quantity</b> is the measurement of an observable property of a particular object, event, or physical system. A quantity is always associated with the context of measurement (i.e. the thing measured, the measured value, the accuracy of measurement, etc.) whereas the underlying <b>quantity kind</b> is independent of any particular measurement. Thus, length is a quantity kind while the height of a rocket is a specific quantity of length; its magnitude that may be expressed in meters, feet, inches, etc. Examples of physical quantities include physical constants, such as the speed of light in a vacuum, Planck's constant, the electric permittivity of free space, and the fine structure constant. </p>

<p class="lm-para">In other words, quantities are quantifiable aspects of the world, such as the duration of a movie, the distance between two points, velocity of a car, the pressure of the atmosphere, and a person's weight; and units are used to describe their numerical measure. 

<p class="lm-para">Many <b>quantity kinds</b> are related to each other by various physical laws, and as a result, the associated units of some quantity kinds can be expressed as products (or ratios) of powers of other quantity kinds (e.g., momentum is mass times velocity and velocity is defined as distance divided by time). In this way, some quantities can be calculated from other measured quantities using their associations to the quantity kinds in these expressions. These quantity kind relationships are also discussed in dimensional analysis. Those that cannot be so expressed can be regarded as "fundamental" in this sense.</p>
<p class="lm-para">A quantity is distinguished from a "quantity kind" in that the former carries a value and the latter is a type specifier.</p>"""^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Concept,
        qudt:Quantifiable ;
    sh:property qudt:Quantity-qudt_hasQuantityKind,
        qudt:Quantity-qudt_isDeltaQuantity,
        qudt:Quantity-qudt_quantityValue .

qudt:RatioScale a owl:Class,
        sh:NodeShape ;
    rdfs:label "Ratio scale" ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Level_of_measurement"^^xsd:anyURI ;
    rdfs:comment "The ratio type takes its name from the fact that measurement is the estimation of the ratio between a magnitude of a continuous quantity and a unit magnitude of the same kind (Michell, 1997, 1999). A ratio scale possesses a meaningful (unique and non-arbitrary) zero value. Most measurement in the physical sciences and engineering is done on ratio scales. Examples include mass, length, duration, plane angle, energy and electric charge. In contrast to interval scales, ratios are now meaningful because having a non-arbitrary zero point makes it meaningful to say, for example, that one object has \"twice the length\" of another (= is \"twice as long\"). Very informally, many ratio scales can be described as specifying \"how much\" of something (i.e. an amount or magnitude) or \"how many\" (a count). The Kelvin temperature scale is a ratio scale because it has a unique, non-arbitrary zero point called absolute zero."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:seeAlso qudt:IntervalScale,
        qudt:NominalScale,
        qudt:OrdinalScale ;
    rdfs:subClassOf qudt:Scale .

qudt:StringEncodingType a owl:Class,
        sh:NodeShape ;
    rdfs:label "String Encoding Type" ;
    dcterms:description "A \"Encoding\" with the following instance(s): \"UTF-16 String\", \"UTF-8 Encoding\"." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Encoding .

qudt:derivedUnitOfSystem a owl:ObjectProperty ;
    rdfs:label "is derived unit of system" ;
    dcterms:description "This property relates a unit of measure to the system of units in which it is defined as a derived unit. That is, the derived unit is defined as a product of the base units for the system raised to some rational power."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:unitOfSystem ;
    owl:inverseOf qudt:hasDerivedUnit .

qudt:isQuantityKindOf a owl:ObjectProperty ;
    rdfs:label "is quantity kind of" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    owl:inverseOf qudt:hasQuantityKind .

qudt:mathMLdefinition a owl:AnnotationProperty ;
    rdfs:label "mathML definition" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:mathDefinition .

qkdv:A-1E1L0I0M0H0T1D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A-1E1L0I0M0H0T1D0" ;
    qudt:dimensionExponentForAmountOfSubstance -1 ;
    qudt:dimensionExponentForElectricCurrent 1 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:ElectricChargePerAmountOfSubstance ;
    qudt:latexDefinition "\\(T I N^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E-1L3I0M1H0T-3D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E-1L3I0M1H0T-3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent -1 ;
    qudt:dimensionExponentForLength 3 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -3 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:ElectricFlux ;
    qudt:latexDefinition "\\(L^3 M T^-3 I^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-2I0M-1H1T3D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-2I0M-1H1T3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 1 ;
    qudt:dimensionExponentForTime 3 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:ThermalResistance ;
    qudt:latexDefinition "\\(L^-2 M^-1 T^3 Θ\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L0I0M0H-1T-1D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M0H-1T-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature -1 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:InverseTimeTemperature ;
    qudt:latexDefinition "\\(T^-1  Θ^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L0I0M0H-1T0D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M0H-1T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance "0"^^dtype:numericUnion ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength "0"^^dtype:numericUnion ;
    qudt:dimensionExponentForLuminousIntensity "0"^^dtype:numericUnion ;
    qudt:dimensionExponentForMass "0"^^dtype:numericUnion ;
    qudt:dimensionExponentForThermodynamicTemperature "-1"^^dtype:numericUnion ;
    qudt:dimensionExponentForTime "0"^^dtype:numericUnion ;
    qudt:dimensionlessExponent "0"^^dtype:numericUnion ;
    rdfs:isDefinedBy "<http://qudt.org/2.1/vocab/dimensionvector>" .

qkdv:A0E0L0I0M0H1T1D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M0H1T1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 1 ;
    qudt:dimensionExponentForTime 1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:TimeTemperature ;
    qudt:latexDefinition "\\(T Θ\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L0I1M0H0T0D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I1M0H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 1 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:LuminousIntensity ;
    qudt:latexDefinition "\\(J\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L2I0M0H1T0D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L2I0M0H1T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 1 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:AreaTemperature ;
    qudt:latexDefinition "\\(L^2 Θ\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L2I0M0H1T1D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L2I0M0H1T1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 1 ;
    qudt:dimensionExponentForTime 1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:AreaTimeTemperature ;
    qudt:latexDefinition "\\(L^2 T Θ\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L3I0M-1H0T-2D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L3I0M-1H0T-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 3 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:GravitationalAttraction ;
    qudt:latexDefinition "\\(L^3 M^-1 T^-2\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L3I0M0H0T-2D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L3I0M0H0T-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 3 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:StandardGravitationalParameter ;
    qudt:latexDefinition "\\(L^3 T^-2\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E1L-1I0M0H0T1D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E1L-1I0M0H0T1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 1 ;
    qudt:dimensionExponentForLength -1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:ElectricChargeLineDensity ;
    qudt:latexDefinition "\\(L^-1 T I\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E1L-2I0M-1H0T2D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E1L-2I0M-1H0T2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 1 ;
    qudt:dimensionExponentForLength -2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:InverseMagneticFlux ;
    qudt:latexDefinition "\\(L^-2 M^-1 T^2 I\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E1L1I0M0H0T1D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E1L1I0M0H0T1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 1 ;
    qudt:dimensionExponentForLength 1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:ElectricDipoleMoment ;
    qudt:latexDefinition "\\(L T I\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E2L-2I0M-1H0T3D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E2L-2I0M-1H0T3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 2 ;
    qudt:dimensionExponentForLength -2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 3 ;
    qudt:dimensionlessExponent 0 ;
    qudt:latexDefinition "\\(L^-2 M^-1 T^3 I^2\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E2L0I0M-1H0T4D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E2L0I0M-1H0T4D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 2 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 4 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:Polarizability ;
    qudt:latexDefinition "\\(M^-1 T^4 I^2\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A1E0L-2I0M0H0T0D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A1E0L-2I0M0H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 1 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

quantitykind:Admittance a qudt:QuantityKind ;
    rdfs:label "Admittance"@en ;
    dcterms:description "\"Admittance\" is a measure of how easily a circuit or device will allow a current to flow. It is defined as the inverse of the impedance (\\(Z\\)). "^^qudt:LatexString ;
    qudt:applicableUnit unit:S ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Admittance"^^xsd:anyURI,
        "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-12-51"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(Y = \\frac{1}{Z}\\), where \\(Z\\) is impedance."^^qudt:LatexString ;
    qudt:latexSymbol "\\(Y\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Impedance .

quantitykind:AngularCrossSection a qudt:QuantityKind ;
    rdfs:label "Angular Cross-section"@en ;
    dcterms:description "\"Angular Cross-section\" is the cross-section for ejecting or scattering a particle into an elementary cone, divided by the solid angle \\(d\\Omega\\) of that cone."^^qudt:LatexString ;
    qudt:applicableUnit unit:M2-PER-SR ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Cross_section_(physics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\sigma = \\int \\sigma_\\Omega d\\Omega\\)"^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\sigma_\\Omega\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:closeMatch quantitykind:SpectralCrossSection .

quantitykind:AngularImpulse a qudt:QuantityKind ;
    rdfs:label "Angular Impulse"@en ;
    dcterms:description "The Angular Impulse, also known as angular momentum, is the moment of linear momentum around a point. It is defined as\\(H = \\int Mdt\\), where \\(M\\) is the moment of force and \\(t\\) is time."^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloGM-M2-PER-SEC,
        unit:N-M-SEC ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/AngularMomentum"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-1D0 ;
    qudt:informativeReference "http://emweb.unl.edu/NEGAHBAN/EM373/note13/note.htm"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:symbol "H" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:AngularMomentum .

quantitykind:ApparentPower a qudt:QuantityKind ;
    rdfs:label "Apparent Power"@en ;
    dcterms:description "\"Apparent Power\" is the product of the rms voltage \\(U\\) between the terminals of a two-terminal element or two-terminal circuit and the rms electric current I in the element or circuit. Under sinusoidal conditions, the apparent power is the modulus of the complex power."^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloV-A,
        unit:MegaV-A,
        unit:V-A ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-11-41"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\left | \\underline{S} \\right | =  UI\\), where \\(U\\) is rms value of voltage and \\(I\\) is rms value of electric current."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\left | \\underline{S} \\right |\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricCurrent,
        quantitykind:Voltage ;
    skos:broader quantitykind:ComplexPower .

quantitykind:AreaTemperature a qudt:QuantityKind ;
    rdfs:label "Area Temperature"@en ;
    qudt:applicableUnit unit:FT2-DEG_F,
        unit:M2-K ;
    qudt:baseUnitDimensions "\\(K \\cdot m^2\\)"^^qudt:LatexString,
        "\\(\\Theta \\cdot L^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H1T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:AreaTimeTemperature a qudt:QuantityKind ;
    rdfs:label "Area Time Temperature"@en ;
    qudt:applicableUnit unit:FT2-HR-DEG_F,
        unit:FT2-SEC-DEG_F ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H1T1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:CanonicalPartitionFunction a qudt:QuantityKind ;
    rdfs:label "Canonical Partition Function"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Partition_function_(statistical_mechanics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(Z = \\sum_r e^{-\\frac{E_r}{kT}}\\), where the sum is over all quantum states consistent with given energy, volume, external fields, and content, \\(E_r\\) is the energy in the \\(rth\\) quantum state, \\(k\\) is the Boltzmann constant, and \\(T\\) is thermodynamic temperature."^^qudt:LatexString ;
    qudt:plainTextDescription "A \"Canonical Partition Function\" applies to a canonical ensemble, in which the system is allowed to exchange heat with the environment at fixed temperature, volume, and number of particles." ;
    qudt:symbol "Z" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:CatalyticActivity a qudt:QuantityKind ;
    rdfs:label "Catalytic Activity"@en ;
    dcterms:description "An index of the actual or potential activity of a catalyst. The catalytic activity of an enzyme or an enzyme-containing preparation is defined as the property measured by the increase in the rate of conversion of a specified chemical reaction that the enzyme produces in a specified assay system. Catalytic activity is an extensive quantity and is a property of the enzyme, not of the reaction mixture; it is thus conceptually different from rate of conversion although measured by and equidimensional with it. The unit for catalytic activity is the \\(katal\\); it may also be expressed in mol \\(s^{-1}\\). Dimensions: \\(N T^{-1}\\). Former terms such as catalytic ability, catalytic amount, and enzymic activity are no er recommended. Derived quantities are molar catalytic activity, specific catalytic activity, and catalytic activity concentration. Source(s): <a href=\"http://www.answers.com/topic/catalytic-activity-biochemistry\">www.answers.com</a>"^^qudt:LatexString ;
    qudt:applicableUnit unit:KAT,
        unit:KiloMOL-PER-HR ;
    qudt:baseUnitDimensions "\\(M/T\\)"^^qudt:LatexString,
        "\\(mol/s\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Catalysis"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H0T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Conductance a qudt:QuantityKind ;
    rdfs:label "Conductance"@en ;
    dcterms:description "\\(\\textit{Conductance}\\), for a resistive two-terminal element or two-terminal circuit with terminals A and B, quotient of the electric current i in the element or circuit by the voltage \\(u_{AB}\\) between the terminals: \\(G = \\frac{1}{R}\\), where the electric current is taken as positive if its direction is from A to B and negative in the opposite case. The conductance of an element or circuit is the inverse of its resistance."^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloS,
        unit:MilliS ;
    qudt:hasDimensionVector qkdv:A0E2L-2I0M-1H0T3D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-12-06"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition """\\(G = Re\\underline{Y}\\), where \\(\\underline{Y}\\) is admittance.

Alternatively:

\\(G = \\frac{1}{R}\\), where \\(R\\) is resistance."""^^qudt:LatexString ;
    qudt:symbol "G" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Admittance .

quantitykind:CrossSection a qudt:QuantityKind ;
    rdfs:label "Cross-section"@en ;
    qudt:applicableUnit unit:AC,
        unit:ARE,
        unit:BARN,
        unit:CentiM2,
        unit:DecaARE,
        unit:DeciM2,
        unit:FT2,
        unit:HA,
        unit:IN2,
        unit:M2,
        unit:MI2,
        unit:MIL_Circ,
        unit:MicroM2,
        unit:MilliM2,
        unit:NanoM2,
        unit:PlanckArea,
        unit:YD2 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Cross_section_(physics)"^^xsd:anyURI ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Cross-section\" is used to express the likelihood of interaction between particles. For a specified target particle and for a specified reaction or process produced by incident charged or uncharged particles of specified type and energy, it is the mean number of such reactions or processes divided by the incident-particle fluence." ;
    qudt:symbol "σ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Area .

quantitykind:Curvature a qudt:QuantityKind ;
    rdfs:label "Curvature"@en ;
    dcterms:description "The canonical example of extrinsic curvature is that of a circle, which has curvature equal to the inverse of its radius everywhere. Smaller circles bend more sharply, and hence have higher curvature. The curvature of a smooth curve is defined as the curvature of its osculating circle at each point. The osculating circle of a sufficiently smooth plane curve at a given point on the curve is the circle whose center lies on the inner normal line and whose curvature is the same as that of the given curve at that point. This circle is tangent to the curve at the given point. The magnitude of curvature at points on physical curves can be measured in \\(diopters\\) (also spelled \\(dioptre\\)) — this is the convention in optics."^^qudt:LatexString ;
    qudt:applicableUnit unit:DIOPTER ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Curvature"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Curvature"^^xsd:anyURI ;
    qudt:plainTextDescription """The canonical example of extrinsic curvature is that of a circle, which has curvature equal to the inverse of its radius everywhere. Smaller circles bend more sharply, and hence have higher curvature. The curvature of a smooth curve is defined as the curvature of its osculating circle at each point. The osculating circle of a sufficiently smooth plane curve at a given point on the curve is the circle whose center lies on the inner normal line and whose curvature is the same as that of the given curve at that point. This circle is tangent to the curve at the given point.
That is, given a point P on a smooth curve C, the curvature of C at P is defined to be 1/R where R is the radius of the osculating circle of C at P. The magnitude of curvature at points on physical curves can be measured in diopters (also spelled dioptre) — this is the convention in optics. [Wikipedia],""" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:InverseLength .

quantitykind:DataRate a qudt:QuantityKind ;
    rdfs:label "Data Rate"@en ;
    qudt:applicableUnit unit:BIT-PER-SEC,
        unit:KiloBIT-PER-SEC,
        unit:MegaBIT-PER-SEC ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Data_rate"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:plainTextDescription "The frequency derived from the period of time required to transmit one bit. This represents the amount of data transferred per second by a communications channel or a computing or storage device. Data rate is measured in units of bits per second (written \"b/s\" or \"bps\"), bytes per second (Bps), or baud. When applied to data rate, the multiplier prefixes \"kilo-\", \"mega-\", \"giga-\", etc. (and their abbreviations, \"k\", \"M\", \"G\", etc.) always denote powers of 1000. For example, 64 kbps is 64,000 bits per second. This contrasts with units of storage which use different prefixes to denote multiplication by powers of 1024, for example 1 kibibit = 1024 bits." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:InformationFlowRate .

quantitykind:ElectricChargePerAmountOfSubstance a qudt:QuantityKind ;
    rdfs:label "Electric charge per amount of substance"@en ;
    dcterms:description "\"Electric Charge Per Amount Of Substance\" is the charge assocated with a given amount of substance. Un the ISO and SI systems this is \\(1 mol\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:C-PER-MOL,
        unit:C_Stat-PER-MOL ;
    qudt:baseUnitDimensions "\\(A \\cdot s/mol\\)"^^qudt:LatexString,
        "\\(I \\cdot T/M\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A-1E1L0I0M0H0T1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectricChargeSurfaceDensity a qudt:QuantityKind ;
    rdfs:label "Electric Charge Surface Density"@en ;
    qudt:applicableUnit unit:C-PER-M2 ;
    qudt:expression "\\(surface-charge-density\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Charge_density"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\rho_A = \\frac{dQ}{dA}\\), where \\(Q\\) is electric charge and \\(A\\) is Area."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\rho_A\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "In electromagnetism, charge density is a measure of electric charge per unit volume of space, in one, two or three dimensions. More specifically: the linear, surface, or volume charge density is the amount of electric charge per unit length, surface area, or volume, respectively." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricChargeDensity .

quantitykind:ElectricCurrentPhasor a qudt:QuantityKind ;
    rdfs:label "Electric Current Phasor"@en ;
    qudt:applicableUnit unit:A ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Phasor_(electronics)"^^xsd:anyURI,
        "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-11-26"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "When \\(i = \\hat{I} \\cos{(\\omega t + \\alpha)}\\), where \\(i\\) is the electric current, \\(\\omega\\) is angular frequence, \\(t\\) is time, and \\(\\alpha\\) is initial phase, then \\(\\underline{I} = Ie^{ja}\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\underline{I}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Electric Current Phasor\" is a representation of current as a sinusoidal integral quantity using a complex quantity whose argument is equal to the initial phase and whose modulus is equal to the root-mean-square value. A phasor is a constant complex number, usually expressed in exponential form, representing the complex amplitude (magnitude and phase) of a sinusoidal function of time. Phasors are used by electrical engineers to simplify computations involving sinusoids, where they can often reduce a differential equation problem to an algebraic one." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectricFlux a qudt:QuantityKind ;
    rdfs:label "Electric Flux"@en ;
    qudt:applicableUnit unit:V-M,
        unit:V_Stat-CentiM ;
    qudt:baseUnitDimensions "\\(L^3 \\cdot M/I \\cdot T^3\\)"^^qudt:LatexString,
        "\\(kg \\cdot m^3/A \\cdot s^3\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Electric_flux"^^xsd:anyURI ;
    qudt:expression "\\(electirc-flux\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-1L3I0M1H0T-3D0 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Psi = \\int_S D \\cdot e_n dA\\), over a surface \\(S\\), where \\(D\\) is electric flux density and \\(e_n dA\\) is the vector surface element."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\Psi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Electric Flux\" through an area is defined as the electric field multiplied by the area of the surface projected in a plane perpendicular to the field. Electric Flux is a scalar-valued quantity." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricFluxDensity .

quantitykind:ElectricPolarization a qudt:QuantityKind ;
    rdfs:label "Electric Polarization"@en ;
    qudt:applicableUnit unit:C-PER-M2,
        unit:KiloC-PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T1D0 ;
    qudt:informativeReference "http://www.britannica.com/EBchecked/topic/182690/electric-polarization"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(P =\\frac{dp}{dV}\\), where \\(p\\) is electic charge density and \\(V\\) is volume."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Electric Polarization\" is the relative shift of positive and negative electric charge in opposite directions within an insulator, or dielectric, induced by an external electric field. Polarization occurs when an electric field distorts the negative cloud of electrons around positive atomic nuclei in a direction opposite the field. This slight separation of charge makes one side of the atom somewhat positive and the opposite side somewhat negative. In some materials whose molecules are permanently polarized by chemical forces, such as water molecules, some of the polarization is caused by molecules rotating into the same alignment under the influence of the electric field. One of the measures of polarization is electric dipole moment, which equals the distance between the slightly shifted centres of positive and negative charge multiplied by the amount of one of the charges. Polarization P in its quantitative meaning is the amount of dipole moment p per unit volume V of a polarized material, P = p/V." ;
    qudt:symbol "P" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricChargeDensity,
        quantitykind:ElectricDipoleMoment .

quantitykind:Entropy a qudt:QuantityKind ;
    rdfs:label "Entropy"@en ;
    dcterms:description "When a small amount of heat \\(dQ\\) is received by a system whose thermodynamic temperature is \\(T\\), the entropy of the system increases by \\(dQ/T\\), provided that no irreversible change takes place in the system."^^qudt:LatexString ;
    qudt:applicableUnit unit:J-PER-K ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Entropy"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H-1T-2D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:symbol "S" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:EquilibriumConstant a qudt:QuantityKind ;
    rdfs:label "Equilibrium Constant"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Equilibrium_constant"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(K^\\Theta = \\Pi_B(\\lambda_B^\\Theta)^{-\\nu_B}\\), where \\(\\Pi_B\\) denotes the product for all substances \\(B\\), \\(\\lambda_B^\\Theta\\) is the standard absolute activity of substance \\(B\\), and \\(\\nu_B\\) is the stoichiometric number of the substance \\(B\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(K^\\Theta\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Equlilbrium Constant\", also known as the thermodynamic equilibrium constant, is an expression that gives us a ratio of the products and reactants of a reaction at equilibrium with respect to a specific unit." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:EquilibriumConstantOnConcentrationBasis,
        quantitykind:EquilibriumConstantOnPressureBasis .

quantitykind:Flux a qudt:QuantityKind ;
    rdfs:label "Flux"@en ;
    qudt:applicableUnit unit:NUM-PER-M2-DAY,
        unit:PER-M2-SEC,
        unit:PER-SEC-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M0H0T-1D0 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Flux"^^xsd:anyURI ;
    qudt:plainTextDescription "Flux describes any effect that appears to pass or travel (whether it actually moves or not) through a surface or substance. [Wikipedia]" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ForceMagnitude a qudt:QuantityKind ;
    rdfs:label "Force Magnitude"@en ;
    qudt:applicableUnit unit:ERG,
        unit:J ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://wiki.answers.com/Q/What_is_magnitude_of_force"^^xsd:anyURI ;
    qudt:plainTextDescription "The 'magnitude' of a force is its 'size' or 'strength', regardless of the direction in which it acts." ;
    qudt:symbol "U" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:GibbsEnergy a qudt:QuantityKind ;
    rdfs:label "Gibbs Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.citizendium.org/wiki/Thermodynamics"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(G = H - T \\cdot S\\), where \\(H\\) is enthalpy, \\(T\\) is thermodynamic temperature and \\(S\\) is entropy."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Gibbs Energy} is one of the potentials are used to measure energy changes in systems as they evolve from an initial state to a final state. The potential used depends on the constraints of the system, such as constant temperature or pressure. \\textit{Internal Energy} is the internal energy of the system, \\textit{Enthalpy} is the internal energy of the system plus the energy related to pressure-volume work, and Helmholtz and Gibbs free energy are the energies available in a system to do useful work when the temperature and volume or the pressure and temperature are fixed, respectively. The name \\textit{Gibbs Free Energy\" is also used." ;
    qudt:symbol "G" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Energy,
        quantitykind:Enthalpy,
        quantitykind:HelmholtzEnergy,
        quantitykind:InternalEnergy ;
    skos:broader quantitykind:Energy .

quantitykind:GravitationalAttraction a qudt:QuantityKind ;
    rdfs:label "Gravitational Attraction"@en ;
    qudt:applicableUnit unit:M3-PER-KiloGM-SEC2,
        unit:N-M2-PER-KiloGM2 ;
    qudt:baseUnitDimensions "\\(L^3/M \\cdot T^2\\)"^^qudt:LatexString,
        "\\(m^3/kg \\cdot s^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M-1H0T-2D0 ;
    qudt:informativeReference "http://www.thefreedictionary.com/gravitational+attraction"^^xsd:anyURI ;
    qudt:plainTextDescription "The force of attraction between all masses in the universe; especially the attraction of the earth's mass for bodies near its surface; the more remote the body the less the gravity; the gravitation between two bodies is proportional to the product of their masses and inversely proportional to the square of the distance between them." ;
    qudt:symbol "G" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:HelmholtzEnergy a qudt:QuantityKind ;
    rdfs:label "Helmholtz Energy"@en ;
    dcterms:description "\\(\\textit{Helmholtz Energy}\\) is one of the potentials are used to measure energy changes in systems as they evolve from an initial state to a final state. The potential used depends on the constraints of the system, such as constant temperature or pressure. \\(\\textit{Internal Energy}\\) is the internal energy of the system, \\(\\textit{Enthalpy}\\) is the internal energy of the system plus the energy related to pressure-volume work, and Helmholtz and Gibbs free energy are the energies available in a system to do useful work when the temperature and volume or the pressure and temperature are fixed, respectively. The name \\(\\textit{Helmholz Free Energy}\\) is also used."^^qudt:LatexString ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.citizendium.org/wiki/Thermodynamics"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(H = U - T \\cdot S\\), where \\(U\\) is internal energy, \\(T\\) is thermodynamic temperature and \\(S\\) is entropy."^^qudt:LatexString ;
    qudt:symbol "A" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Energy,
        quantitykind:Enthalpy,
        quantitykind:GibbsEnergy,
        quantitykind:InternalEnergy ;
    skos:broader quantitykind:Energy .

quantitykind:InstantaneousPower a qudt:QuantityKind ;
    rdfs:label "Instantaneous Power"@en ;
    dcterms:description "\"Instantaneous Power}, for a two-terminal element or a two-terminal circuit with terminals A and B, is the product of the voltage \\(u_{AB}\\) between the terminals and the electric current i in the element or circuit: \\(p = \\)u_{AB} \\cdot i\\(, where \\)u_{AB\" is the line integral of the electric field strength from A to B, and where the electric current in the element or circuit is taken positive if its direction is from A to B and negative in the opposite case.  For an n-terminal circuit, it is the sum of the instantaneous powers relative to the n - 1 pairs of terminals when one of the terminals is chosen as a common terminal for the pairs. For a polyphase element, it is the sum of the instantaneous powers in all phase elements of a polyphase element.  For a polyphase line consisting of m line conductors and one neutral conductor, it is the sum of the m instantaneous powers expressed for each line conductor by the product of the polyphase line-to-neutral voltage and the corresponding line current."^^qudt:LatexString ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Power"^^xsd:anyURI,
        "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-11-30"^^xsd:anyURI,
        "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-11-31"^^xsd:anyURI,
        "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=141-02-14"^^xsd:anyURI,
        "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=141-03-10"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(p = ui\\), where \\(u\\) is instantaneous voltage and \\(i\\) is instantaneous electric current."^^qudt:LatexString ;
    qudt:symbol "p" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:InverseMagneticFlux a qudt:QuantityKind ;
    rdfs:label "Inverse Magnetic Flux"@en ;
    qudt:applicableUnit unit:HZ-PER-V,
        unit:PER-WB ;
    qudt:baseUnitDimensions "\\(A \\cdot s^2/kg \\cdot m^2\\)"^^qudt:LatexString,
        "\\(I \\cdot T^2/L^2 \\cdot M\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M-1H0T2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:InverseTimeTemperature a qudt:QuantityKind ;
    rdfs:label "Inverse Time Temperature"@en ;
    qudt:applicableUnit unit:HZ-PER-K,
        unit:MegaHZ-PER-K ;
    qudt:baseUnitDimensions "\\(/K \\cdot s\\)"^^qudt:LatexString,
        "\\(/\\Theta \\cdot T\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H-1T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:IsothermalCompressibility a qudt:QuantityKind ;
    rdfs:label "Isothermal compressibility"@en ;
    qudt:applicableUnit unit:PER-MILLE-PER-PSI,
        unit:PER-PA ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M-1H0T2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Compressibility"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\varkappa_T = \\frac{1}{V}\\left (\\frac{\\partial V}{\\partial p} \\right )_T\\), where \\(V\\) is volume, \\(p\\) is \\(pressure\\), and \\(T\\) is thermodynamic temperature."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\varkappa_T\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The isothermal compressibility defines the rate of change of system volume with pressure." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:InversePressure .

quantitykind:LinearEnergyTransfer a qudt:QuantityKind ;
    rdfs:label "Linear Energy Transfer"@en ;
    qudt:applicableUnit unit:J-PER-M,
        unit:KiloEV-PER-MicroM,
        unit:MegaEV-PER-CentiM ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Linear_energy_transfer"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Linear_energy_transfer"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "For ionizing charged particles, \\(L_\\Delta = \\frac{dE_\\Delta}{dl}\\), where \\(dE_\\Delta\\) is the mean energy lost in elctronic collisions locally to matter along a small path through the matter, minus the sum of the kinetic energies of all the electrons released with kinetic energies in excess of \\(\\Delta\\), and \\(dl\\) is the length of that path."^^qudt:LatexString ;
    qudt:latexSymbol "\\(L_\\Delta\\)"^^qudt:LatexString,
        "\\(L_\\bigtriangleup\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Linear Energy Transfer\"  (LET) is the linear density of energy lost by a charged ionizing particle travelling through matter.Typically, this measure is used to quantify the effects of ionizing radiation on biological specimens or electronic devices." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LuminousEnergy a qudt:QuantityKind ;
    rdfs:label "Luminous Energy"@en ;
    qudt:applicableUnit unit:LM-SEC ;
    qudt:latexDefinition "\\(Q_v = \\int_{0}^{\\Delta t}{\\Phi_v}{dt}\\), where \\(\\Phi_v\\) is the luminous flux occurring during the time interval with duration \\(\\Delta t\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "Luminous Energy is the perceived energy of light. This is sometimes also called the quantity of light." ;
    qudt:symbol "Q_v",
        "Qv" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:closeMatch quantitykind:RadiantEnergy ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Luminous_energy> .

quantitykind:MolalityOfSolute a qudt:QuantityKind ;
    rdfs:label "Molality of Solute"@en ;
    qudt:applicableUnit unit:CentiMOL-PER-KiloGM,
        unit:KiloMOL-PER-KiloGM,
        unit:MOL-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M-1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Molality"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(b_B = \\frac{n_B}{m_a}\\), where \\(n_B\\) is the amount of substance and \\(m_A\\) is the mass."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Molality of Solute\" of a solution is defined as the amount of substance of solute divided by the mass in kg of the solvent." ;
    qudt:symbol "b_B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MomentOfForce a qudt:QuantityKind ;
    rdfs:label "Moment of Force"@en ;
    qudt:applicableUnit unit:N-M ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Moment_(physics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(M = r \\cdot F\\), where \\(r\\) is the position vector and \\(F\\) is the force."^^qudt:LatexString ;
    qudt:plainTextDescription "Moment of force (often just moment) is the tendency of a force to twist or rotate an object." ;
    qudt:symbol "M" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:Torque .

quantitykind:MultiplicationFactor a qudt:QuantityKind ;
    rdfs:label "Multiplication Factor"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Neutron_multiplication_factor"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Multiplication Factor\" is the ratio of the total number of fission or fission-dependent neutrons produced in a time interval to the total number of neutrons lost by absorption and leakage during the same interval." ;
    qudt:symbol "k" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PRODUCT-OF-INERTIA a qudt:QuantityKind ;
    rdfs:label "Product of Inertia"@en ;
    qudt:plainTextDescription "A measure of a body's dynamic (or coupled) imbalance resulting in a precession when rotating about an axis other than the body?s principal axis." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Polarizability a qudt:QuantityKind ;
    rdfs:label "Polarizability"@en ;
    dcterms:description "\"Polarizability\" is the relative tendency of a charge distribution, like the electron cloud of an atom or molecule, to be distorted from its normal shape by an external electric field, which may be caused by the presence of a nearby ion or dipole. The electronic polarizability \\(\\alpha\\) is defined as the ratio of the induced dipole moment of an atom to the electric field that produces this dipole moment. Polarizability is often a scalar valued quantity, however in the general case it is tensor-valued."^^qudt:LatexString ;
    qudt:applicableUnit unit:C-M2-PER-V,
        unit:C2-M-PER-J ;
    qudt:baseUnitDimensions "\\(A^2 \\cdot s^4/kg\\)"^^qudt:LatexString,
        "\\(I^2 \\cdot T^4/M\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Polarizability"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E2L0I0M-1H0T4D0 ;
    qudt:latexSymbol "\\(\\alpha\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Radiance a qudt:QuantityKind ;
    rdfs:label "Radiance"@en ;
    qudt:applicableUnit unit:W-PER-M2-SR ;
    qudt:baseUnitDimensions "\\(M/T^3 \\cdot U\\)"^^qudt:LatexString,
        "\\(kg/s^3\\)"^^qudt:LatexString ;
    qudt:latexDefinition "\\(L = \\frac{dI}{dA}\\frac{1}{cos\\alpha}\\), where \\(dI\\) is the radiant intensity emitted from an element of the surface area \\(dA\\), and angle \\(\\alpha\\) is the angle between the normal to the surface and the given direction."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Radiance\" is a radiometric measure that describes the amount of light that passes through or is emitted from a particular area, and falls within a given solid angle in a specified direction." ;
    qudt:symbol "L" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:PowerPerAreaAngle ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Radiance> .

quantitykind:RelativePartialPressure a qudt:QuantityKind ;
    rdfs:label "Relative Partial Pressure"@en ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\varphi = p / p_{sat}\\), where \\(p\\) is partial pressure of vapour,  \\(p_{sat}\\) is thermodynamic temperature and \\(V\\) is its partial pressure at saturation (at the same temperature). Relative partial pressure is often referred to as \\(RH\\) and expressed in percent. \\(\\textit{Relative Partial Pressure}\\) is also referred to as \\(\\textit{Relative Humidity}\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\varphi\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:RelativeHumidity ;
    skos:altLabel "RH" .

quantitykind:SignalStrength a qudt:QuantityKind ;
    rdfs:label "Signal Strength"@en ;
    qudt:applicableUnit unit:B,
        unit:DeciB ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Signal_strength"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-3D0 ;
    qudt:plainTextDescription "In telecommunications, particularly in radio, signal strength refers to the magnitude of the electric field at a reference point that is a significant distance from the transmitting antenna. It may also be referred to as received signal level or field strength. Typically, it is expressed in voltage per length or signal power received by a reference antenna. High-powered transmissions, such as those used in broadcasting, are expressed in dB-millivolts per metre (dBmV/m)." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ElectricField,
        quantitykind:ElectricFieldStrength .

quantitykind:SolidAngle a qudt:QuantityKind ;
    rdfs:label "Solid Angle"@en ;
    qudt:applicableUnit unit:DEG2,
        unit:FA,
        unit:SR ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Solid_angle"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:plainTextDescription "The solid angle subtended by a surface S is defined as the surface area of a unit sphere covered by the surface S's projection onto the sphere. A solid angle is related to the surface of a sphere in the same way an ordinary angle is related to the circumference of a circle. Since the total surface area of the unit sphere is 4*pi, the measure of solid angle will always be between 0 and 4*pi." ;
    qudt:qkdvDenominator qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L2I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:AreaRatio .

quantitykind:SpectralCrossSection a qudt:QuantityKind ;
    rdfs:label "Spectral Cross-section"@en ;
    dcterms:description "\"Spectral Cross-section\" is the cross-section for a process in which the energy of the ejected or scattered particle is in an interval of energy, divided by the range \\(dE\\) of this interval."^^qudt:LatexString ;
    qudt:applicableUnit unit:M2-PER-J ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Cross_section_(physics)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\sigma = \\int \\sigma_E dE\\)"^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\sigma_E\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:closeMatch quantitykind:AngularCrossSection .

quantitykind:StandardGravitationalParameter a qudt:QuantityKind ;
    rdfs:label "Standard Gravitational Parameter"@en ;
    dcterms:description "In celestial mechanics the standard gravitational parameter of a celestial body is the product of the gravitational constant G and the mass M of the body. Expressed as \\(\\mu = G \\cdot M\\). The SI units of the standard gravitational parameter are \\(m^{3}s^{-2}\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloM3-PER-SEC2,
        unit:M3-PER-SEC2 ;
    qudt:baseUnitDimensions "\\(L^3/T^2\\)"^^qudt:LatexString,
        "\\(m^3/s^2\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Standard_gravitational_parameter"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Standard_gravitational_parameter"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\mu\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Strain a qudt:QuantityKind ;
    rdfs:label "Strain"@en ;
    qudt:applicableUnit unit:DeciB_M,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Strain"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:latexSymbol "\\(\\epsilon\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "In any branch of science dealing with materials and their behaviour, strain is the geometrical expression of deformation caused by the action of stress on a physical body. Strain is calculated by first assuming a change between two body states: the beginning state and the final state. Then the difference in placement of two points in this body in those two states expresses the numerical value of strain. Strain therefore expresses itself as a change in size and/or shape. [Wikipedia]" ;
    qudt:url "http://www.freestudy.co.uk/mech%20prin%20h2/stress.pdf"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:LinearStrain ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:SurfaceDensity a qudt:QuantityKind ;
    rdfs:label "Surface Density"@en ;
    qudt:applicableUnit unit:KiloGM-PER-KiloM2,
        unit:KiloGM-PER-M2,
        unit:LB-PER-IN2 ;
    qudt:baseUnitDimensions "\\(kg m^{-2}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Area_density"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\rho_A = \\frac{dm}{dA}\\), where \\(m\\) is mass and \\(A\\) is area."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\rho_A\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The area density (also known as areal density, surface density, or superficial density) of a two-dimensional object is calculated as the mass per unit area." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:TemperatureAmountOfSubstance a qudt:QuantityKind ;
    rdfs:label "Temperature Amount of Substance"@en ;
    qudt:applicableUnit unit:MOL-DEG_C,
        unit:MOL-K ;
    qudt:baseUnitDimensions "\\(K \\cdot mol\\)"^^qudt:LatexString,
        "\\(\\Theta \\cdot M\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H1T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:TemperatureRatio a qudt:QuantityKind ;
    rdfs:label "Temperature Ratio"@en ;
    qudt:applicableUnit unit:DEG_C-PER-K,
        unit:DEG_F-PER-K,
        unit:K-PER-K ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M0H1T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:ThermalEnergyLength a qudt:QuantityKind ;
    rdfs:label "Thermal Energy Length"@en ;
    qudt:applicableUnit unit:BTU_IT-FT,
        unit:BTU_IT-IN ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ThermalResistance a qudt:QuantityKind ;
    rdfs:label "Thermal Resistance"@en ;
    dcterms:description "\\(\\textit{Thermal Resistance}\\) is a heat property and a measure of a temperature difference by which an object or material resists a heat flow (heat per time unit or thermal resistance). Thermal resistance is the reciprocal thermal conductance. the thermodynamic temperature difference divided by heat flow rate. Thermal resistance \\(R\\) has the units \\(\\frac{m^2 \\cdot K}{W}\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:DEG_F-HR-PER-BTU_IT,
        unit:K-PER-W ;
    qudt:baseUnitDimensions "\\(K \\cdot s^3/kg \\cdot m^2\\)"^^qudt:LatexString,
        "\\(\\Theta \\cdot T^3/L^2 \\cdot M\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Thermal_resistance"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M-1H1T3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Thermal_resistance"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:symbol "R" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:HeatFlowRate,
        quantitykind:ThermalInsulance,
        quantitykind:ThermodynamicTemperature .

quantitykind:ThrustToMassRatio a qudt:QuantityKind ;
    rdfs:label "Thrust To Mass Ratio"@en ;
    qudt:applicableUnit unit:LB_F-PER-LB,
        unit:N-PER-KiloGM ;
    qudt:baseUnitDimensions "\\(L/T^2\\)"^^qudt:LatexString,
        "\\(m/s^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-2D0 ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Acceleration .

quantitykind:TimeTemperature a qudt:QuantityKind ;
    rdfs:label "Time Temperature"@en ;
    qudt:applicableUnit unit:DEG_C-WK,
        unit:K-SEC ;
    qudt:baseUnitDimensions "\\(K \\cdot s\\)"^^qudt:LatexString,
        "\\(\\Theta \\cdot T\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T1D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:VehicleVelocity a qudt:QuantityKind ;
    rdfs:label "Vehicle Velocity"@en ;
    qudt:applicableUnit unit:CentiM-PER-HR,
        unit:CentiM-PER-KiloYR,
        unit:CentiM-PER-SEC,
        unit:FT-PER-HR,
        unit:FT-PER-MIN,
        unit:FT-PER-SEC,
        unit:GigaHZ-M,
        unit:IN-PER-SEC,
        unit:KN,
        unit:KiloM-PER-DAY,
        unit:KiloM-PER-HR,
        unit:KiloM-PER-SEC,
        unit:M-PER-HR,
        unit:M-PER-MIN,
        unit:M-PER-SEC,
        unit:M-PER-YR,
        unit:MI-PER-HR,
        unit:MI-PER-MIN,
        unit:MI_N-PER-HR,
        unit:MI_N-PER-MIN,
        unit:MilliM-PER-DAY,
        unit:MilliM-PER-HR,
        unit:MilliM-PER-MIN,
        unit:MilliM-PER-SEC,
        unit:MilliM-PER-YR ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:symbol "V" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Velocity .

quantitykind:Voltage a qudt:QuantityKind ;
    rdfs:label "Voltage"@en ;
    dcterms:description """\\(\\textit{Voltage}\\), also referred to as \\(\\textit{Electric Tension}\\), is the difference between electrical potentials of two points. For an electric field within a medium, \\(U_{ab} = - \\int_{r_a}^{r_b} E . {dr}\\), where \\(E\\) is electric field strength.
For an irrotational electric field, the voltage is independent of the path between the two points \\(a\\) and \\(b\\)."""^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloV,
        unit:MegaV,
        unit:MicroV,
        unit:MilliV,
        unit:PlanckVolt,
        unit:V,
        unit:V_Ab,
        unit:V_Stat ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(U_{ab} = V_a - V_b\\), where \\(V_a\\) and \\(V_b\\) are electric potentials at points \\(a\\) and \\(b\\), respectively."^^qudt:LatexString ;
    qudt:latexSymbol "\\(U_{ab}\\)"^^qudt:LatexString ;
    qudt:symbol "U" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:EnergyPerElectricCharge ;
    skos:broader quantitykind:EnergyPerElectricCharge .

unit:A-PER-M2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Ampere per Square Metre"@en,
        "Ampere per Square Meter"@en-us ;
    dcterms:description "\\(\\textbf{Ampere Per Square Meter}\\) is a unit in the category of electric current density. This unit is commonly used in the SI unit system."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(A/m^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:DisplacementCurrentDensity,
        quantitykind:ElectricCurrentDensity,
        quantitykind:TotalCurrentDensity ;
    qudt:iec61360Code "0112/2///62720#UAA105" ;
    qudt:informativeReference "https://cdd.iec.ch/cdd/iec61360/iec61360.nsf/Units/0112-2---62720%23UAA105"^^xsd:anyURI ;
    qudt:ucumCode "A.m-2"^^qudt:UCUMcs,
        "A/m2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A41" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:AC-FT a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Acre Foot"@en ;
    dcterms:description "An acre-foot is a unit of volume commonly used in the United States in reference to large-scale water resources, such as reservoirs, aqueducts, canals, sewer flow capacity, and river flows. It is defined by the volume of one acre of surface area to a depth of one foot. Since the acre is defined as a chain by a furlong (\\(66 ft \\times 660 ft\\)) the acre-foot is exactly \\(43,560 cubic feet\\). For irrigation water, the volume of \\(1 ft \\times 1 \\; ac = 43,560 \\; ft^{3} (1,233.482 \\; m^{3}, 325,851 \\; US gal)\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1233.4818375475202 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Acre-foot"^^xsd:anyURI,
        "http://www.oxfordreference.com/view/10.1093/acref/9780198605225.001.0001/acref-9780198605225-e-35"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/acreFoot> ;
    qudt:symbol "ac-ft" ;
    qudt:ucumCode "[acr_br].[ft_i]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:A_Ab a qudt:Unit,
        unit:Unit ;
    rdfs:label "Abampere"@en ;
    qudt:conversionMultiplier 10.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Abampere"^^xsd:anyURI ;
    qudt:derivedUnitOfSystem sou:CGS-EMU ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCurrent ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Abampere?oldid=489318583"^^xsd:anyURI,
        "http://wordinfo.info/results/abampere"^^xsd:anyURI,
        "http://www.oxfordreference.com/view/10.1093/acref/9780198605225.001.0001/acref-9780198605225-e-13?rskey=i2kRRz"^^xsd:anyURI ;
    qudt:isScalingOf unit:A ;
    qudt:latexDefinition "\\(1\\,abA = 10\\,A\\)"^^qudt:LatexString ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/abampere> ;
    qudt:plainTextDescription "The Abampere (aA), also called the biot after Jean-Baptiste Biot, is the basic electromagnetic unit of electric current in the emu-cgs system of units (electromagnetic cgs). One abampere is equal to ten amperes in the SI system of units. An abampere is the constant current that produces, when maintained in two parallel conductors of negligible circular section and of infinite length placed 1 centimetre apart, a force of 2 dynes per centimetre between the two conductors." ;
    qudt:symbol "Bi"^^xsd:string,
        "abA",
        "abA"^^xsd:string ;
    qudt:ucumCode "Bi"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:BIOT ;
    skos:altLabel "biot" .

unit:BBL a qudt:Unit ;
    rdfs:label "Barrel"@en ;
    dcterms:description "A barrel is one of several units of volume, with dry barrels, fluid barrels (UK beer barrel, U.S. beer barrel), oil barrel, etc. The volume of some barrel units is double others, with various volumes in the range of about 100-200 litres (22-44 imp gal; 26-53 US gal)."^^rdf:HTML ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Barrel"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:iec61360Code "0112/2///62720#UAA334" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Barrel?oldid=494614619"^^xsd:anyURI ;
    qudt:symbol "bbl" ;
    qudt:ucumCode "[bbl_us]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "BLL" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BBL_UK_PET a qudt:Unit ;
    rdfs:label "Barrel (UK Petroleum)"@en ;
    qudt:conversionMultiplier 0.1591132 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:iec61360Code "0112/2///62720#UAA329" ;
    qudt:plainTextDescription "unit of the volume for crude oil according to the Imperial system of units" ;
    qudt:uneceCommonCode "J57" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BBL_US a qudt:Unit ;
    rdfs:label "Barrel (US)"@en ;
    qudt:conversionMultiplier 0.1589873 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:iec61360Code "0112/2///62720#UAA334" ;
    qudt:plainTextDescription "unit of the volume for crude oil according to the Anglo-American system of units" ;
    qudt:ucumCode "[bbl_us]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "BLL" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BIT-PER-SEC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Bit per Second"@en ;
    dcterms:description "A bit per second (B/s) is a unit of data transfer rate equal to 1 bits per second."^^rdf:HTML ;
    qudt:conversionMultiplier 0.69314718055994530941723212145818 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:DataRate ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Data_rate_units#Kilobyte_per_second"^^xsd:anyURI ;
    qudt:symbol "bit/s" ;
    qudt:ucumCode "Bd"^^qudt:UCUMcs,
        "bit.s-1"^^qudt:UCUMcs,
        "bit/s"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_IT-PER-FT2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "BTU per Square Foot"@en ;
    dcterms:description "\\(\\textbf{BTU per Square Foot}\\) is an Imperial unit for  'Energy Per Area' expressed as \\(Btu/ft^2\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 11356.5267 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(Btu/ft^{2}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:EnergyPerArea ;
    qudt:ucumCode "[Btu_IT].[ft_i]-2"^^qudt:UCUMcs,
        "[Btu_IT]/[ft_i]2"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_IT-PER-FT3 a qudt:Unit ;
    rdfs:label "British Thermal Unit (IT) Per Cubic Foot"@en ;
    dcterms:description "\\(\\textit{British Thermal Unit (IT) Per Cubic Foot}\\) (\\(Btu (IT)/ft^3\\)) is a unit in the category of Energy density. It is also known as Btu per cubic foot, Btu/cubic foot. This unit is commonly used in the UK, US unit systems. It has a dimension of \\(ML^{-1}T^{-2}\\) where \\(M\\) is mass, \\(L\\) is length, and \\(T\\) is time. It can be converted to the corresponding standard SI unit \\(J/m^3\\) by multiplying its value by a factor of 37258.94579."^^qudt:LatexString ;
    qudt:conversionMultiplier 37258.94579 ;
    qudt:expression "\\(Btu(IT)-per-ft3\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:EnergyDensity ;
    qudt:informativeReference "http://physics.nist.gov/Pubs/SP811/appenB9.html"^^xsd:anyURI,
        "http://www.efunda.com/glossary/units/units--energy_density--british_thermal_unit_it_per_cubic_foot.cfm"^^xsd:anyURI,
        "http://www.translatorscafe.com/cafe/EN/units-converter/fuel-efficiency--volume/c/"^^xsd:anyURI ;
    qudt:ucumCode "[Btu_IT].[ft_i]-3"^^qudt:UCUMcs,
        "[Btu_IT]/[ft_i]3"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_MEAN a qudt:Unit,
        unit:Unit ;
    rdfs:label "British Thermal Unit (mean)"@en ;
    qudt:conversionMultiplier 1055.05585262 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ThermalEnergy ;
    qudt:iec61360Code "0112/2///62720#UAA113" ;
    qudt:plainTextDescription "unit of the heat energy according to the Imperial system of units" ;
    qudt:ucumCode "[Btu_m]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J39" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_TH-PER-FT3 a qudt:Unit ;
    rdfs:label "British Thermal Unit (TH) Per Cubic Foot"@en ;
    dcterms:description "British Thermal Unit (TH) Per Cubic Foot (\\(Btu (TH)/ft^3\\)) is a unit in the category of Energy density. It is also known as Btu per cubic foot, Btu/cubic foot. This unit is commonly used in the UK, US unit systems. It has a dimension of \\(ML^{-1}T^{-2}\\) where \\(M\\) is mass, \\(L\\) is length, and \\(T\\) is time. It can be converted to the corresponding standard SI unit \\(J/m^3\\) by multiplying its value by a factor of 37234.03."^^qudt:LatexString ;
    qudt:conversionMultiplier 37234.03 ;
    qudt:expression "\\(Btu(th)-per-ft3\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:EnergyDensity ;
    qudt:informativeReference "http://physics.nist.gov/Pubs/SP811/appenB9.html"^^xsd:anyURI,
        "http://www.efunda.com/glossary/units/units--energy_density--british_thermal_unit_it_per_cubic_foot.cfm"^^xsd:anyURI,
        "http://www.translatorscafe.com/cafe/EN/units-converter/fuel-efficiency--volume/c/"^^xsd:anyURI ;
    qudt:ucumCode "[Btu_th].[ft_i]-3"^^qudt:UCUMcs,
        "[Btu_th]/[ft_i]3"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CAL_15_DEG_C a qudt:Unit,
        unit:Unit ;
    rdfs:label "Calorie (15 Degrees C)"@en ;
    qudt:conversionMultiplier 4.1855 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ThermalEnergy ;
    qudt:iec61360Code "0112/2///62720#UAB139" ;
    qudt:plainTextDescription "unit for the quantity of heat which is required to warm up 1 g  of water, which is free of air, at a constant pressure of 101.325 kPa (the pressure of the standard atmosphere on sea level) from 14.5 degrees Celsius to 15.5 degrees Celsius" ;
    qudt:ucumCode "cal_[15]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A1" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CAL_MEAN a qudt:Unit,
        unit:Unit ;
    rdfs:label "Calorie (mean)"@en ;
    qudt:conversionMultiplier 4.19 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ThermalEnergy ;
    qudt:iec61360Code "0112/2///62720#UAA360" ;
    qudt:plainTextDescription "unit used particularly for calorific values of foods" ;
    qudt:ucumCode "cal_m"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J75" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CP a qudt:Unit,
        unit:Unit ;
    rdfs:label "Candlepower"@en ;
    dcterms:description "\"Candlepower\" (abbreviated as cp) is a now-obsolete unit which was used to express levels of light intensity in terms of the light emitted by a candle of specific size and constituents. In modern usage Candlepower equates directly to the unit known as the candela."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Candlepower"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I1M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:LuminousIntensity ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Candlepower?oldid=491140098"^^xsd:anyURI ;
    qudt:symbol "cd",
        "cd"^^xsd:string ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:C_Stat a qudt:Unit ;
    rdfs:label "Statcoulomb"@en ;
    dcterms:description "The statcoulomb (\\(statC\\)) or franklin (\\(Fr\\)) or electrostatic unit of charge (\\(esu\\)) is the physical unit for electrical charge used in the centimetre-gram-second system of units (cgs) and Gaussian units. It is a derived unit given by \\(1\\ statC = 1\\ g\\ cm\\ s = 1\\ erg\\ cm\\). The SI system of units uses the coulomb (C) instead. The conversion between C and statC is different in different contexts. The number 2997924580 is 10 times the value of the speed of light expressed in meters/second, and the conversions are exact except where indicated. The coulomb is an extremely large charge rarely encountered in electrostatics, while the statcoulomb is closer to everyday charges."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00000000033356409519815204957557671447492 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Statcoulomb"^^xsd:anyURI ;
    qudt:derivedUnitOfSystem sou:CGS-ESU ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Statcoulomb?oldid=492664360"^^xsd:anyURI ;
    qudt:latexDefinition "\\(1 C \\leftrightarrow 2997924580 statC \\approx 3.00 \\times 10^9 statC,\\ 1 \\hspace{0.3pc} statC \\leftrightarrow \\hspace{0.3pc} \\approx 3.34 \\times 10^{-10} C\\) for electric charge."^^qudt:LatexString,
        "\\(1 C \\leftrightarrow 4 \\pi \\times 2997924580 statC \\approx 3.77 \\times 10^{10} statC,\\ 1 \\hspace{0.3pc} statC \\leftrightarrow \\hspace{0.2pc} \\approx 2.6 \\times 10^{-11} C\\) for electric flux \\(\\Phi_D\\)"^^qudt:LatexString,
        "\\(1 C/m \\leftrightarrow 4 \\pi \\times 2997924580 \\times 10^{-4} statC/cm \\approx 3.77 \\times 10^6 statC/cm,\\ 1 \\hspace{0.3pc} statC/cm \\leftrightarrow \\hspace{0.3pc} \\approx 2.65 \\times 10^{-7} C/m\\) for electric displacement field \\(D\\)."^^qudt:LatexString ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/statcoulomb> ;
    qudt:symbol "statC" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:FR .

unit:CentiM-PER-SEC2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Centimetre per Square Second"@en,
        "Centimeter per Square Second"@en-us ;
    dcterms:description "\\(\\textit{Centimeter per Square Second}\\) is a C.G.S System unit for  \\(\\textit{Linear Acceleration}\\) expressed as \\(cm/s^2\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.01 ;
    qudt:derivedUnitOfSystem sou:CGS,
        sou:CGS-GAUSS ;
    qudt:expression "\\(cm/s^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Acceleration ;
    qudt:iec61360Code "0112/2///62720#UAB398" ;
    qudt:ucumCode "cm.s-2"^^qudt:UCUMcs,
        "cm/s2"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CentiM2-PER-SEC a qudt:Unit ;
    rdfs:label "Square centimetres per second"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.0001 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:AreaPerTime ;
    qudt:ucumCode "cm2.s-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CentiM3 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "cubic centimetre"@en,
        "cubic centimeter"@en-us ;
    dcterms:description "The CGS unit of volume, equal to 10-6 cubic meter, 1 milliliter, or about 0.061 023 7 cubic inch"^^rdf:HTML ;
    qudt:allowedUnitOfSystem sou:SI ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:expression "\\(cubic-cm\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:iec61360Code "0112/2///62720#UAA385" ;
    qudt:ucumCode "cm3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "CMQ" ;
    qudt:unitOfSystem sou:SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CentiMOL-PER-KiloGM a qudt:Unit ;
    rdfs:label "Centimole per kilogram"@en ;
    qudt:conversionMultiplier 0.01 ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M-1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:AmountOfSubstancePerUnitMass,
        quantitykind:IonicStrength,
        quantitykind:MolalityOfSolute ;
    qudt:plainTextDescription "1/100 of SI unit of amount of substance per kilogram" ;
    qudt:ucumCode "cmol.kg-1"^^qudt:UCUMcs,
        "cmol/kg"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CentiN-M a qudt:Unit,
        unit:Unit ;
    rdfs:label "Centinewton Metre"@en,
        "Centinewton Meter"@en-us ;
    qudt:conversionMultiplier 0.01 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Torque ;
    qudt:iec61360Code "0112/2///62720#UAA355" ;
    qudt:plainTextDescription "0,01-fold of the product of the SI derived unit newton and SI base unit metre" ;
    qudt:ucumCode "cN.m"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J72" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG_C-PER-HR a qudt:Unit ;
    rdfs:label "Degree Celsius per Hour"@en ;
    dcterms:description "\\(\\textbf{Degree Celsius per Hour} is a unit for 'Temperature Per Time' expressed as \\(degC / hr\\)."^^qudt:LatexString ;
    qudt:expression "\\(degC / hr\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T-1D0 ;
    qudt:hasQuantityKind quantitykind:TemperaturePerTime ;
    qudt:iec61360Code "0112/2///62720#UAA036" ;
    qudt:ucumCode "Cel.h-1"^^qudt:UCUMcs,
        "Cel/h"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H12" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG_C-PER-MIN a qudt:Unit ;
    rdfs:label "Degree Celsius per Minute"@en ;
    dcterms:description "\\(\\textbf{Degree Celsius per Minute} is a unit for 'Temperature Per Time' expressed as \\(degC / m\\)."^^qudt:LatexString ;
    qudt:expression "\\(degC / m\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T-1D0 ;
    qudt:hasQuantityKind quantitykind:TemperaturePerTime ;
    qudt:iec61360Code "0112/2///62720#UAA037" ;
    qudt:ucumCode "Cel.min-1"^^qudt:UCUMcs,
        "Cel/min"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H13" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG_C-PER-SEC a qudt:Unit ;
    rdfs:label "Degree Celsius per Second"@en ;
    dcterms:description "\\(\\textbf{Degree Celsius per Second} is a unit for 'Temperature Per Time' expressed as \\(degC / s\\)."^^qudt:LatexString ;
    qudt:expression "\\(degC / s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T-1D0 ;
    qudt:hasQuantityKind quantitykind:TemperaturePerTime ;
    qudt:iec61360Code "0112/2///62720#UAA038" ;
    qudt:ucumCode "Cel.s-1"^^qudt:UCUMcs,
        "Cel/s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H14" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG_C-PER-YR a qudt:Unit ;
    rdfs:label "Degrees Celsius per year"@en ;
    dcterms:description "A rate of change of temperature expressed on the Celsius scale over a period of an average calendar year (365.25 days)."@en ;
    qudt:conversionMultiplier 0.0000000316880878140289 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T-1D0 ;
    qudt:hasQuantityKind quantitykind:TemperaturePerTime ;
    qudt:ucumCode "Cel.a-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG_F-PER-HR a qudt:Unit ;
    rdfs:label "Degree Fahrenheit per Hour"@en ;
    dcterms:description "\\(\\textbf{Degree Fahrenheit per Hour} is a unit for 'Temperature Per Time' expressed as \\(degF / h\\)."^^qudt:LatexString ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(degF / h\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T-1D0 ;
    qudt:hasQuantityKind quantitykind:TemperaturePerTime ;
    qudt:iec61360Code "0112/2///62720#UAA044" ;
    qudt:ucumCode "[degF].h-1"^^qudt:UCUMcs,
        "[degF]/h"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J23" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG_F-PER-MIN a qudt:Unit ;
    rdfs:label "Degree Fahrenheit per Minute"@en ;
    dcterms:description "\\(\\textbf{Degree Fahrenheit per Minute} is a unit for 'Temperature Per Time' expressed as \\(degF / m\\)."^^qudt:LatexString ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(degF / m\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T-1D0 ;
    qudt:hasQuantityKind quantitykind:TemperaturePerTime ;
    qudt:iec61360Code "0112/2///62720#UAA045" ;
    qudt:ucumCode "[degF].min-1"^^qudt:UCUMcs,
        "[degF]/min"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J24" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG_F-PER-SEC a qudt:Unit ;
    rdfs:label "Degree Fahrenheit per Second"@en ;
    dcterms:description "\\(\\textbf{Degree Fahrenheit per Second} is a unit for 'Temperature Per Time' expressed as \\(degF / s\\)."^^qudt:LatexString ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(degF / s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T-1D0 ;
    qudt:hasQuantityKind quantitykind:TemperaturePerTime ;
    qudt:iec61360Code "0112/2///62720#UAA046" ;
    qudt:ucumCode "[degF].s-1"^^qudt:UCUMcs,
        "[degF]/s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J25" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG_F-PER-SEC2 a qudt:Unit ;
    rdfs:label "Degree Fahrenheit per Square Second"@en ;
    dcterms:description "\\(\\textit{Degree Fahrenheit per Square Second}\\) is a C.G.S System unit for expressinh the acceleration of a temperature expressed as \\(degF / s^2\\)."^^qudt:LatexString ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(degF / s^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T-1D0 ;
    qudt:hasQuantityKind quantitykind:TemperaturePerTime ;
    qudt:plainTextDescription "'Degree Fahrenheit per Square Second' is a unit for expressing the acceleration of a temperature expressed as 'degF /s2'." ;
    qudt:ucumCode "[degF].s-2"^^qudt:UCUMcs,
        "[degF]/s2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG_R-PER-HR a qudt:Unit ;
    rdfs:label "Degree Rankine per Hour"@en ;
    dcterms:description "\\(A rate of change of temperature measured in degree Rankine in periods of one hour.\\)"^^qudt:LatexString ;
    qudt:expression "\\(degR / h\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T-1D0 ;
    qudt:hasQuantityKind quantitykind:TemperaturePerTime ;
    qudt:iec61360Code "0112/2///62720#UAA051" ;
    qudt:isScalingOf unit:DEG_R-PER-MIN ;
    qudt:ucumCode "[degR].h-1"^^qudt:UCUMcs,
        "[degR]/h"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J28" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DYN-CentiM a qudt:Unit,
        unit:Unit ;
    rdfs:label "Dyne Centimetre"@en,
        "Dyne Centimeter"@en-us,
        "Dyne Centimeter "@en-us ;
    dcterms:description "\"Dyne Centimeter\" is a C.G.S System unit for  'Torque' expressed as \\(dyn-cm\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0000001 ;
    qudt:derivedUnitOfSystem sou:CGS,
        sou:CGS-GAUSS ;
    qudt:expression "\\(dyn-cm\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Torque ;
    qudt:iec61360Code "0112/2///62720#UAA423" ;
    qudt:ucumCode "dyn.cm"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J94" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DecaL a qudt:Unit ;
    rdfs:label "Decalitre"@en,
        "Decalitre"@en-us ;
    qudt:conversionMultiplier 0.01 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:iec61360Code "0112/2///62720#UAB115" ;
    qudt:plainTextDescription "10-fold of the unit litre" ;
    qudt:ucumCode "daL"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A44" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DecaM3 a qudt:Unit ;
    rdfs:label "Cubic Decametre"@en,
        "Cubic Decameter"@en-us ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:iec61360Code "0112/2///62720#UAB179" ;
    qudt:plainTextDescription "1 000-fold of the power of the SI base unit metre by exponent 3" ;
    qudt:ucumCode "dam3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "DMA" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DeciL a qudt:Unit ;
    rdfs:label "Decilitre"@en,
        "Decilitre"@en-us ;
    qudt:conversionMultiplier 0.0001 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:iec61360Code "0112/2///62720#UAB113" ;
    qudt:plainTextDescription "0.1-fold of the unit litre" ;
    qudt:ucumCode "dL"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "DLT" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DeciM3 a qudt:Unit ;
    rdfs:label "Cubic Decimetre"@en,
        "Cubic Decimeter"@en-us ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:iec61360Code "0112/2///62720#UAA414" ;
    qudt:plainTextDescription "0.1-fold of the power of the SI base unit metre with the exponent 3" ;
    qudt:ucumCode "dm3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "DMQ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DeciN-M a qudt:Unit,
        unit:Unit ;
    rdfs:label "Decinewton Metre"@en,
        "Decinewton Meter"@en-us ;
    qudt:conversionMultiplier 0.1 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Torque ;
    qudt:iec61360Code "0112/2///62720#UAB084" ;
    qudt:plainTextDescription "0.1-fold of the product of the derived SI unit joule and the SI base unit metre" ;
    qudt:ucumCode "dN.m"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "DN" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:ERG-PER-CentiM3 a qudt:Unit ;
    rdfs:label "Erg per Cubic Centimetre"@en,
        "Erg per Cubic Centimeter"@en-us ;
    qudt:conversionMultiplier 0.1 ;
    qudt:derivedUnitOfSystem sou:CGS,
        sou:CGS-GAUSS ;
    qudt:expression "\\(erg-per-cm3\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:EnergyDensity ;
    qudt:iec61360Code "0112/2///62720#UAB146" ;
    qudt:ucumCode "erg.cm-3"^^qudt:UCUMcs,
        "erg/cm3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A60" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:ERG-SEC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Erg Second"@en ;
    qudt:conversionMultiplier 0.0000001 ;
    qudt:derivedUnitOfSystem sou:CGS,
        sou:CGS-GAUSS ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:AngularMomentum ;
    qudt:symbol "erg s" ;
    qudt:ucumCode "erg.s"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:EV-SEC a qudt:Unit ;
    rdfs:label "Electron Volt Second"@en ;
    dcterms:description "\"Electron Volt Second\" is a unit for  'Angular Momentum' expressed as \\(eV s\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00000000000000000016021765314 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:AngularMomentum ;
    qudt:symbol "eV s" ;
    qudt:ucumCode "eV.s-1"^^qudt:UCUMcs,
        "eV/s"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FBM a qudt:Unit ;
    rdfs:label "Board Foot"@en ;
    dcterms:description "The board-foot is a specialized unit of measure for the volume of lumber in the United States and Canada. It is the volume of a one-foot length of a board one foot wide and one inch thick. Board-foot can be abbreviated FBM (for 'foot, board measure'), BDFT, or BF. Thousand board-feet can be abbreviated as MFBM, MBFT or MBF. "^^rdf:HTML ;
    qudt:conversionMultiplier 0.00236 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:symbol "Bf" ;
    qudt:ucumCode "[bf_i]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FR a qudt:Unit ;
    rdfs:label "Franklin"@en ;
    dcterms:description "\"Franklin\" is a unit for  'Electric Charge' expressed as \\(Fr\\)."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Franklin"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:iec61360Code "0112/2///62720#UAB212" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Franklin?oldid=495090654"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/franklin> ;
    qudt:symbol "Fr" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:C_Stat .

unit:FT-LB_F-PER-FT2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Foot Pound per Square Foot"@en ;
    dcterms:description "\"Foot Pound per Square Foot\" is an Imperial unit for  'Energy Per Area' expressed as \\(ft-lbf/ft^{2}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 14.5939042 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(ft-lbf/ft^{2}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:EnergyPerArea ;
    qudt:ucumCode "[ft_i].[lbf_av].[sft_i]-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT-LB_F-PER-M2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Foot Pound Force per Square Metre"@en,
        "Foot Pound Force per Square Meter"@en-us ;
    dcterms:description "\"Foot Pound Force per Square Meter\" is a unit for  'Energy Per Area' expressed as \\(ft-lbf/m^{2}\\)."^^qudt:LatexString ;
    qudt:expression "\\(ft-lbf/m^{2}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:EnergyPerArea ;
    qudt:ucumCode "[ft_i].[lbf_av].m-2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT-LB_F-SEC a qudt:Unit ;
    rdfs:label "Foot Pound Force Second"@en ;
    dcterms:description "\"Foot Pound Force Second\" is a unit for  'Angular Momentum' expressed as \\(lbf / s\\)."^^qudt:LatexString ;
    qudt:expression "\\(lbf / s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:AngularMomentum ;
    qudt:ucumCode "[ft_i].[lbf_av].s"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT-PER-SEC2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Foot per Square Second"@en ;
    dcterms:description "\\(\\textit{Foot per Square Second}\\) is an Imperial unit for \\(\\textit{Linear Acceleration}\\) expressed as \\(ft/s^2\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.3048 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(ft/s^{2}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Acceleration ;
    qudt:iec61360Code "0112/2///62720#UAA452" ;
    qudt:ucumCode "[ft_i].s-2"^^qudt:UCUMcs,
        "[ft_i]/s2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A73" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT2-PER-HR a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Square Foot per Hour"@en ;
    dcterms:description "\\(\\textbf{Square Foot per Hour} is an Imperial unit for \\(\\textit{Kinematic Viscosity}\\) and  \\(\\textit{Thermal Diffusivity}\\) expressed as \\(ft^{2}/hr\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0000258064 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(ft^{2}/hr\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:AreaPerTime ;
    qudt:iec61360Code "0112/2///62720#UAB247" ;
    qudt:ucumCode "[sft_i].h-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT2-PER-SEC a qudt:Unit ;
    rdfs:label "Square Foot per Second"@en ;
    dcterms:description "\"Square Foot per Second\" is an Imperial unit for  'Kinematic Viscosity' expressed as \\(ft^{2}/s\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.09290304 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(ft^{2}/s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:AreaPerTime ;
    qudt:iec61360Code "0112/2///62720#UAA455" ;
    qudt:ucumCode "[sft_i].s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "S3" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT3-PER-MIN a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Cubic Foot per Minute"@en ;
    dcterms:description "\"Cubic Foot per Minute\" is an Imperial unit for  'Volume Per Unit Time' expressed as \\(ft^3/min\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0004719474432000001 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(ft^{3}/min\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate,
        quantitykind:VolumePerUnitTime ;
    qudt:iec61360Code "0112/2///62720#UAA461" ;
    qudt:ucumCode "[cft_i].min-1"^^qudt:UCUMcs,
        "[cft_i]/min"^^qudt:UCUMcs,
        "[ft_i]3.min-1"^^qudt:UCUMcs,
        "[ft_i]3/min"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "2L" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT3-PER-SEC a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Cubic Foot per Second"@en ;
    dcterms:description "\"Cubic Foot per Second\" is an Imperial unit for \\( \\textit{Volume Per Unit Time}\\) expressed as \\(ft^3/s\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.028316846592000004 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(ft^{3}/s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate,
        quantitykind:VolumePerUnitTime ;
    qudt:iec61360Code "0112/2///62720#UAA462" ;
    qudt:ucumCode "[cft_i].s-1"^^qudt:UCUMcs,
        "[cft_i]/s"^^qudt:UCUMcs,
        "[ft_i]3.s-1"^^qudt:UCUMcs,
        "[ft_i]3/s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "E17" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:G a qudt:Unit ;
    rdfs:label "Gravity"@en ;
    dcterms:description "\"Gravity\" is a unit for  'Linear Acceleration' expressed as \\(G\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 9.80665 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Acceleration ;
    qudt:symbol "G" ;
    qudt:ucumCode "[g]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GALILEO a qudt:Unit ;
    rdfs:label "Galileo"@en ;
    dcterms:description "The \\(\\textit{Galileo}\\) is the unit of acceleration of free fall used extensively in the science of gravimetry. The Galileo is defined as \\(1 \\textit{centimeter per square second}\\) (\\(1 cm/s^2\\)). Unfortunately, the Galileo is often denoted with the symbol Gal, not to be confused with the Gallon that also uses the same symbol."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.01 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Gal"^^xsd:anyURI ;
    qudt:derivedUnitOfSystem sou:CGS,
        sou:CGS-GAUSS ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Acceleration ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Gal?oldid=482010741"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/gal> ;
    qudt:plainTextDescription "CGS unit of acceleration called gal with the definition: 1 Gal = 1 cm/s" ;
    qudt:symbol "Gal" ;
    qudt:ucumCode "Gal"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GAUSS a qudt:Unit ;
    rdfs:label "Gauss"@en ;
    qudt:conversionMultiplier 0.0001 ;
    qudt:hasDimensionVector qkdv:A0E-1L0I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:MagneticFluxDensity ;
    qudt:iec61360Code "0112/2///62720#UAB135" ;
    qudt:plainTextDescription "CGS unit of the magnetic flux density B" ;
    qudt:ucumCode "G"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "76" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:Gs,
        unit:T_Ab .

unit:GI_UK a qudt:Unit ;
    rdfs:label "Gill (UK)"@en ;
    qudt:conversionMultiplier 0.0001420653 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:iec61360Code "0112/2///62720#UAA511" ;
    qudt:plainTextDescription "unit of the volume for fluids according to the Imperial system of units (1/32 Imperial Gallon)" ;
    qudt:ucumCode "[gil_br]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "GII" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GI_US a qudt:Unit ;
    rdfs:label "Gill (US)"@en ;
    qudt:conversionMultiplier 0.000118294125 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:iec61360Code "0112/2///62720#UAA516" ;
    qudt:plainTextDescription "unit of the volume according the Anglo-American system of units (1/32 US Gallon)" ;
    qudt:ucumCode "[gil_us]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "GIA" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GRAIN-PER-GAL a qudt:Unit,
        unit:Unit ;
    rdfs:label "Grain per Gallon"@en ;
    dcterms:description "\"Grain per Gallon\" is an Imperial unit for  'Density' expressed as \\(gr/gal\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.017118061 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(gr/gal\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Density ;
    qudt:ucumCode "[gr].[gal_br]-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GRAY a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Gray"@en ;
    dcterms:description "The SI unit of radiation dose. Radiation carries energy, and when it is absorbed by matter the matter receives this energy. The dose is the amount of energy deposited per unit of mass. One gray is defined to be the dose of one joule of energy absorbed per kilogram of matter, or 100 rad. The unit is named for the British physician L. Harold Gray (1905-1965), an authority on the use of radiation in the treatment of cancer."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Grey"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:AbsorbedDose,
        quantitykind:Kerma ;
    qudt:iec61360Code "0112/2///62720#UAA163" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Grey?oldid=494774160"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/gray> ;
    qudt:siUnitsExpression "J/kg" ;
    qudt:symbol "Gy" ;
    qudt:ucumCode "Gy"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A95" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HectoL a qudt:Unit ;
    rdfs:label "Hectolitre"@en,
        "Hectolitre"@en-us ;
    qudt:conversionMultiplier 0.1 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:iec61360Code "0112/2///62720#UAA533" ;
    qudt:plainTextDescription "100-fold of the unit litre" ;
    qudt:ucumCode "hL"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "HLT" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:IN-PER-SEC2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Inch per Square second"@en ;
    dcterms:description "\\(\\textit{Inch per Square second}\\) is an Imperial unit for \\(\\textit{Linear Acceleration}\\) expressed as \\(in/s^2\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0254 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(in/s2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Acceleration ;
    qudt:iec61360Code "0112/2///62720#UAB044" ;
    qudt:ucumCode "[in_i].s-2"^^qudt:UCUMcs,
        "[in_i]/s2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "IV" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:IN2-PER-SEC a qudt:Unit ;
    rdfs:label "Square Inch Per Second"@en ;
    qudt:conversionMultiplier 0.00064516 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:AreaPerTime ;
    qudt:iec61360Code "0112/2///62720#UAA548" ;
    qudt:plainTextDescription "power of the unit inch according to the Anglo-American and the Imperial system of units with the exponent 2 divided by the SI base unit second" ;
    qudt:ucumCode "[sin_i].s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G08" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:IN3 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Cubic Inch"@en ;
    dcterms:description "The cubic inch is a unit of measurement for volume in the Imperial units and United States customary units systems. It is the volume of a cube with each of its three sides being one inch long. The cubic inch and the cubic foot are still used as units of volume in the United States, although the common SI units of volume, the liter, milliliter, and cubic meter, are continually replacing them, especially in manufacturing and high technology. One cubic foot is equal to exactly 1728 cubic inches."^^rdf:HTML ;
    qudt:conversionMultiplier 0.000016387064 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(in^{3}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:iec61360Code "0112/2///62720#UAA549" ;
    qudt:ucumCode "[cin_i]"^^qudt:UCUMcs,
        "[in_i]3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "INQ" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:IN3-PER-MIN a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Cubic Inch per Minute"@en ;
    dcterms:description "\"Cubic Inch per Minute\" is an Imperial unit for  'Volume Per Unit Time' expressed as \\(in^{3}/min\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00000027311773333333333 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(in^{3}/min\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate,
        quantitykind:VolumePerUnitTime ;
    qudt:iec61360Code "0112/2///62720#UAA551" ;
    qudt:ucumCode "[cin_i].min-1"^^qudt:UCUMcs,
        "[cin_i]/min"^^qudt:UCUMcs,
        "[in_i]3.min-1"^^qudt:UCUMcs,
        "[in_i]3/min"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G57" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:J-PER-CentiM2 a qudt:Unit ;
    rdfs:label "Joule Per Square Centimetre"@en,
        "Joule Per Square Centimeter"@en-us ;
    qudt:conversionMultiplier 10000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:EnergyPerArea ;
    qudt:iec61360Code "0112/2///62720#UAB188" ;
    qudt:plainTextDescription "derived SI unit joule divided by the 0.0001-fold of the power of the SI base unit metre by exponent 2" ;
    qudt:ucumCode "J.cm-2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "E43" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:K-PER-HR a qudt:Unit ;
    rdfs:label "Kelvin per Hour"@en ;
    dcterms:description "\\(\\textbf{Kelvin per Hour} is a unit for 'Temperature Per Time' expressed as \\(K / h\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 3600.0 ;
    qudt:expression "\\(K / h\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T-1D0 ;
    qudt:hasQuantityKind quantitykind:TemperaturePerTime ;
    qudt:iec61360Code "0112/2///62720#UAA189" ;
    qudt:ucumCode "K.h-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F10" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:K-PER-MIN a qudt:Unit ;
    rdfs:label "Kelvin per Minute"@en ;
    dcterms:description "\\(\\textbf{Kelvin per Minute} is a unit for 'Temperature Per Time' expressed as \\(K / m\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 60.0 ;
    qudt:expression "\\(K / m\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T-1D0 ;
    qudt:hasQuantityKind quantitykind:TemperaturePerTime ;
    qudt:iec61360Code "0112/2///62720#UAA191" ;
    qudt:ucumCode "K.min-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F11" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:K-PER-SEC a qudt:Unit ;
    rdfs:label "Kelvin per Second"@en ;
    dcterms:description "\\(\\textbf{Kelvin per Second} is a unit for 'Temperature Per Time' expressed as \\(K / s\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(K / s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T-1D0 ;
    qudt:hasQuantityKind quantitykind:TemperaturePerTime ;
    qudt:iec61360Code "0112/2///62720#UAA192" ;
    qudt:ucumCode "K.s-1"^^qudt:UCUMcs,
        "K/s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F12" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KN-PER-SEC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Knot per Second"@en ;
    dcterms:description "\\(\\textit{Knot per Second}\\) is a unit for 'Linear Acceleration' expressed as \\(kt/s\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.5144444444444445 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:expression "\\(kt/s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Acceleration ;
    qudt:ucumCode "[kn_i].s-1"^^qudt:UCUMcs,
        "[kn_i]/s"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloCAL-PER-CentiM2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Kilocalorie per Square Centimetre"@en,
        "Kilocalorie per Square Centimeter"@en-us ;
    dcterms:description "\"Kilocalorie per Square Centimeter\" is a unit for  'Energy Per Area' expressed as \\(kcal/cm^{2}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0000004184 ;
    qudt:expression "\\(kcal/cm^{2}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:EnergyPerArea ;
    qudt:ucumCode "kcal.cm-2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloCAL-PER-MOL a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Kilocalorie per Mole"@en ;
    dcterms:description "The kilocalorie per mole is a derived unit of energy per Avogadro's number of particles. It is the quotient of a kilocalorie (1000 thermochemical gram calories) and a mole, mainly used in the United States. In SI units, it is equal to \\(4.184 kJ/mol\\), or \\(6.9477 \\times 10 J per molecule\\). At room temperature it is equal to 1.688 . Physical quantities measured in \\(kcal\\cdot mol\\) are usually thermodynamical quantities; mostly free energies such as: Heat of vaporization Heat of fusion</p>."^^qudt:LatexString ;
    qudt:expression "\\(kcal/mol\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A-1E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:MolarEnergy ;
    qudt:ucumCode "kcal.mol-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloCAL_IT a qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilocalorie (international Table)"@en ;
    qudt:conversionMultiplier 4186.8 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ThermalEnergy ;
    qudt:iec61360Code "0112/2///62720#UAA589" ;
    qudt:plainTextDescription "1000-fold of the unit calorie, which is used particularly for calorific values of food" ;
    qudt:ucumCode "kcal_IT"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "E14" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloCAL_Mean a qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilocalorie (mean)"@en ;
    qudt:conversionMultiplier 4190.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ThermalEnergy ;
    qudt:iec61360Code "0112/2///62720#UAA587" ;
    qudt:plainTextDescription "1000-fold of the unit calorie, which is used particularly for calorific values of food" ;
    qudt:ucumCode "kcal_m"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K51" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloCAL_TH a qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilocalorie (thermochemical)"@en ;
    qudt:conversionMultiplier 4184.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ThermalEnergy ;
    qudt:iec61360Code "0112/2///62720#UAA590" ;
    qudt:plainTextDescription "1000-fold of the unit calorie, which is used particularly for calorific values of food" ;
    qudt:ucumCode "[Cal]"^^qudt:UCUMcs,
        "kcal_th"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K53" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-CentiM2 a qudt:Unit ;
    rdfs:label "Kilogram Square Centimetre"@en,
        "Kilogram Square Centimeter"@en-us ;
    qudt:conversionMultiplier 0.0001 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MomentOfInertia ;
    qudt:iec61360Code "0112/2///62720#UAA600" ;
    qudt:plainTextDescription "product of the SI base unit kilogram and the 0 0001fold of the power of the SI base unit metre with the exponent 2" ;
    qudt:ucumCode "kg.cm2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F18" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-M2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Kilogram Square Metre"@en,
        "Kilogram Square Meter"@en-us ;
    dcterms:description "\"Kilogram Square Meter\" is a unit for  'Moment Of Inertia' expressed as \\(kg-m^2\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(kg-m2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MomentOfInertia ;
    qudt:iec61360Code "0112/2///62720#UAA622" ;
    qudt:ucumCode "kg.m2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B32" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-MilliM2 a qudt:Unit ;
    rdfs:label "Kilogram Square Millimetre"@en,
        "Kilogram Square Millimeter"@en-us ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MomentOfInertia ;
    qudt:iec61360Code "0112/2///62720#UAA627" ;
    qudt:plainTextDescription "product of the SI base kilogram and the  0.001-fold of the power of the SI base metre with the exponent 2" ;
    qudt:ucumCode "kg.mm2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F19" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-PER-M a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Kilogram per Metre"@en,
        "Kilogram per Meter"@en-us ;
    dcterms:description "Kilogram Per Meter (kg/m) is a unit in the category of Linear mass density. It is also known as kilogram/meter, kilogram/metre, kilograms per meter, kilogram per metre, kilograms per metre. This unit is commonly used in the SI unit system. Kilogram Per Meter (kg/m) has a dimension of ML-1 where M is mass, and L is length. This unit is the standard SI unit in this category. "^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(kg/m\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:BodyMassIndex,
        quantitykind:LinearDensity,
        quantitykind:MassPerLength ;
    qudt:iec61360Code "0112/2///62720#UAA616" ;
    qudt:ucumCode "kg.m-1"^^qudt:UCUMcs,
        "kg/m"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "KL" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-PER-M2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Kilogram per Square Metre"@en,
        "Kilogram per Square Meter"@en-us ;
    dcterms:description "Kilogram Per Square Meter (kg/m2) is a unit in the category of Surface density. It is also known as kilograms per square meter, kilogram per square metre, kilograms per square metre, kilogram/square meter, kilogram/square metre. This unit is commonly used in the SI unit system. Kilogram Per Square Meter (kg/m2) has a dimension of ML-2 where M is mass, and L is length. This unit is the standard SI unit in this category."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(kg/m^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassPerArea,
        quantitykind:MeanMassRange,
        quantitykind:SurfaceDensity ;
    qudt:iec61360Code "0112/2///62720#UAA617" ;
    qudt:ucumCode "kg.m-2"^^qudt:UCUMcs,
        "kg/m2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "28" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-PER-MilliM a qudt:Unit ;
    rdfs:label "Kilogram Per Millimetre"@en,
        "Kilogram Per Millimeter"@en-us ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:BodyMassIndex,
        quantitykind:LinearDensity,
        quantitykind:MassPerLength ;
    qudt:iec61360Code "0112/2///62720#UAB070" ;
    qudt:plainTextDescription "SI base unit kilogram divided by the 0.001-fold of the SI base unit metre" ;
    qudt:ucumCode "kg.mm-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "KW" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-PER-SEC2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Kilogram per Square Second"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(kg-per-sec2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:EnergyPerArea ;
    qudt:latexSymbol "\\(kg \\cdot s^2\\)"^^qudt:LatexString ;
    qudt:ucumCode "kg.s-2"^^qudt:UCUMcs,
        "kg/s2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM_F-M a qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilogram?force Metre"@en,
        "Kilogram?force Meter"@en-us ;
    qudt:conversionMultiplier 9.80665 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Torque ;
    qudt:iec61360Code "0112/2///62720#UAA634" ;
    qudt:plainTextDescription "product of the unit kilogram-force and the SI base unit metre" ;
    qudt:ucumCode "kgf.m"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B38" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM_F-PER-M a qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilogram Force Metre"@en,
        "Kilogram Force Meter"@en-us ;
    dcterms:description "\"Kilogram Force Meter\" is a unit for  'Torque' expressed as \\(kgf-m\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 9.80665 ;
    qudt:expression "\\(kgf-m\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Torque ;
    qudt:ucumCode "kgf.m"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloJ-PER-MOL a qudt:Unit ;
    rdfs:label "Kilojoule Per Mole"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A-1E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:MolarEnergy ;
    qudt:iec61360Code "0112/2///62720#UAA572" ;
    qudt:plainTextDescription "1 000-fold of the SI derived unit joule divided by the SI base unit mol" ;
    qudt:ucumCode "kJ.mol-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B44" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloL a qudt:Unit ;
    rdfs:label "Kilolitre"@en,
        "Kilolitre"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:iec61360Code "0112/2///62720#UAB114" ;
    qudt:plainTextDescription "1 000-fold of the unit litre" ;
    qudt:ucumCode "kL"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K6" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloMOL-PER-KiloGM a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Kilomol per Kilogram"@en ;
    dcterms:description "Kilomole Per Kilogram (\\(kmol/kg\\)) is a unit of Molality"^^qudt:LatexString ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(kmol/kg\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M-1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:AmountOfSubstancePerUnitMass,
        quantitykind:IonicStrength,
        quantitykind:MolalityOfSolute ;
    qudt:ucumCode "kmol.kg-1"^^qudt:UCUMcs,
        "kmol/kg"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "P47" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloN-M a qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilonewton Metre"@en,
        "Kilonewton Meter"@en-us ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Torque ;
    qudt:iec61360Code "0112/2///62720#UAA574" ;
    qudt:plainTextDescription "1 000-fold of the product of the SI derived unit newton and the SI base unit metre" ;
    qudt:ucumCode "kN.m"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B48" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloPA-M2-PER-GM a qudt:Unit ;
    rdfs:label "Kilopascal Square Metre per Gram"@en,
        "Kilopascal Square Meter per Gram"@en-us ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Acceleration ;
    qudt:iec61360Code "0112/2///62720#UAB130" ;
    qudt:plainTextDescription "sector-specific unit of the burst index as 1 000-fold of the derived unit for pressure pascal related to the substance, represented as a quotient from the 0.001-fold of the SI base unit kilogram divided by the power of the SI base unit metre by exponent 2" ;
    qudt:ucumCode "kPa.m2.g-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "33" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB-FT2 a qudt:Unit ;
    rdfs:label "Pound Mass (avoirdupois) Square Foot"@en ;
    qudt:conversionMultiplier 0.04214011 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MomentOfInertia ;
    qudt:iec61360Code "0112/2///62720#UAA671" ;
    qudt:plainTextDescription "product of the unit pound according to the avoirdupois system of units and the power of the unit foot according to the Anglo-American and the Imperial system of units with the exponent 2" ;
    qudt:ucumCode "[lb_av].[sft_i]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K65" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB-IN2 a qudt:Unit ;
    rdfs:label "Pound Mass (avoirdupois) Square Inch"@en ;
    qudt:conversionMultiplier 0.0002926397 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MomentOfInertia ;
    qudt:iec61360Code "0112/2///62720#UAA672" ;
    qudt:plainTextDescription "product of the unit pound according to the avoirdupois system of units and the power of the unit inch according to the Anglo-American and the Imperial system of units with the exponent 2" ;
    qudt:ucumCode "[lb_av].[sin_i]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F20" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB-PER-FT3 a qudt:Unit,
        unit:Unit ;
    rdfs:label "Pound per Cubic Foot"@en ;
    dcterms:description "\"Pound per Cubic Foot\" is an Imperial unit for  'Density' expressed as \\(lb/ft^{3}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 16.018463373960138 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(lb/ft^{3}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Density ;
    qudt:ucumCode "[lb_av].[cft_i]-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB-PER-GAL a qudt:Unit,
        unit:Unit ;
    rdfs:label "Pound per Gallon"@en ;
    dcterms:description "\"Pound per Gallon\" is an Imperial unit for  'Density' expressed as \\(lb/gal\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 99.7763727 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(lb/gal\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Density ;
    qudt:ucumCode "[lb_av].[gal_br]-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB-PER-GAL_UK a qudt:Unit,
        unit:Unit ;
    rdfs:label "Pound (avoirdupois) Per Gallon (UK)"@en ;
    qudt:conversionMultiplier 99.77637 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Density ;
    qudt:iec61360Code "0112/2///62720#UAA679" ;
    qudt:plainTextDescription "unit of the mass avoirdupois pound according to the avoirdupois system of units divided by the unit gallon (UK) according to the Imperial system of units" ;
    qudt:ucumCode "[lb_av].[gal_br]-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K71" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB-PER-GAL_US a qudt:Unit,
        unit:Unit ;
    rdfs:label "Pound (avoirdupois) Per Gallon (US)"@en ;
    qudt:conversionMultiplier 0.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Density ;
    qudt:iec61360Code "0112/2///62720#UAA680" ;
    qudt:plainTextDescription "unit of the mass avoirdupois pound according to the avoirdupois system divided by the unit gallon (US, liq.) according to the Anglo-American system of units" ;
    qudt:ucumCode "[lb_av].[gal_us]-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "GE" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB-PER-IN2 a qudt:Unit ;
    rdfs:label "Pound (avoirdupois) Per Square Inch"@en ;
    qudt:conversionMultiplier 0.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassPerArea,
        quantitykind:MeanMassRange,
        quantitykind:SurfaceDensity ;
    qudt:iec61360Code "0112/2///62720#UAB137" ;
    qudt:plainTextDescription "unit of the areal-related mass as avoirdupois pound according to the avoirdupois system of units related to the area square inch according to the Anglo-American and Imperial system of units" ;
    qudt:ucumCode "[lb_av].[sin_i]-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "80" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB-PER-IN3 a qudt:Unit,
        unit:Unit ;
    rdfs:label "Pound per Cubic Inch"@en ;
    dcterms:description "\"Pound per Cubic Inch\" is an Imperial unit for  'Density' expressed as \\(lb/in^{3}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 27679.904710203125 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(lb/in^{3}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Density ;
    qudt:ucumCode "[lb_av].[cin_i]-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB-PER-M3 a qudt:Unit,
        unit:Unit ;
    rdfs:label "Pound per Cubic Metre"@en,
        "Pound per Cubic Meter"@en-us ;
    dcterms:description "\"Pound per Cubic Meter\" is a unit for  'Density' expressed as \\(lb/m^{3}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.45359237 ;
    qudt:expression "\\(lb/m^{3}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Density ;
    qudt:ucumCode "[lb_av].m-3"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB-PER-YD3 a qudt:Unit,
        unit:Unit ;
    rdfs:label "Pound per Cubic Yard"@en ;
    dcterms:description "\"Pound per Cubic Yard\" is an Imperial unit for  'Density' expressed as \\(lb/yd^{3}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.5932764212577829 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(lb/yd^{3}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Density ;
    qudt:ucumCode "[lb_av].[cyd_i]-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB_F-FT a qudt:Unit,
        unit:Unit ;
    rdfs:label "Pound Force Foot"@en ;
    dcterms:description "\"Pound Force Foot\" is an Imperial unit for  'Torque' expressed as \\(lbf-ft\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.35581807 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(lbf-ft\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Torque ;
    qudt:ucumCode "[lbf_av].[ft_i]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB_F-IN a qudt:Unit,
        unit:Unit ;
    rdfs:label "Pound Force Inch"@en ;
    dcterms:description "\"Pound Force Inch\" is an Imperial unit for  'Torque' expressed as \\(lbf-in\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.112984839 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(lbf-in\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Torque ;
    qudt:ucumCode "[lbf_av].[in_i]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LM a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "lumen"@en ;
    dcterms:description "The SI unit for measuring the flux of light being produced by a light source or received by a surface. The intensity of a light source is measured in candelas. One lumen represents the total flux of light emitted, equal to the intensity in candelas multiplied by the solid angle in steradians into which the light is emitted. A full sphere has a solid angle of \\(4\\cdot\\pi\\) steradians. A light source that uniformly radiates one candela in all directions has a total luminous flux of \\(1 cd\\cdot 4 \\pi sr = 4 \\pi cd \\cdot sr \\approx 12.57 \\; \\text{lumens}\\). \"Lumen\" is a Latin word for light."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Lumen"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:hasQuantityKind quantitykind:LuminousFlux ;
    qudt:iec61360Code "0112/2///62720#UAA718" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Lumen?oldid=492885414"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/lumen> ;
    qudt:siUnitsExpression "cd.sr" ;
    qudt:symbol "lm",
        "lm"^^xsd:string ;
    qudt:ucumCode "lm"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "LUM" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M-PER-SEC2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Metre per Square Second"@en,
        "Meter per Square Second"@en-us ;
    dcterms:description "The \\(\\textit{meter per Square second}\\) is the unit of acceleration in the International System of Units (SI). As a derived unit it is composed from the SI base units of length, the metre, and the standard unit of time, the second. Its symbol is written in several forms as \\(m/s^2\\), or \\(m s^{-2}\\). As acceleration, the unit is interpreted physically as change in velocity or speed per time interval, that is, \\(\\textit{metre per second per second}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(m/s^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Acceleration ;
    qudt:iec61360Code "0112/2///62720#UAA736" ;
    qudt:ucumCode "m.s-2"^^qudt:UCUMcs,
        "m/s2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "MSK" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M2-HZ a qudt:Unit ;
    rdfs:label "Square metres Hertz"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:AreaPerTime ;
    qudt:ucumCode "m2.Hz"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M3-PER-HR a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Cubic Metre per Hour"@en,
        "Cubic Meter per Hour"@en-us ;
    dcterms:description "Cubic Meter Per Hour (m3/h) is a unit in the category of Volume flow rate. It is also known as cubic meters per hour, cubic metre per hour, cubic metres per hour, cubic meter/hour, cubic metre/hour, cubic meter/hr, cubic metre/hr, flowrate. Cubic Meter Per Hour (m3/h) has a dimension of L3T-1 where L is length, and T is time. It can be converted to the corresponding standard SI unit m3/s by multiplying its value by a factor of 0.00027777777."^^rdf:HTML ;
    qudt:allowedUnitOfSystem sou:SI ;
    qudt:conversionMultiplier 0.0002777777777777778 ;
    qudt:expression "\\(m^{3}/h\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate,
        quantitykind:VolumePerUnitTime ;
    qudt:iec61360Code "0112/2///62720#UAA763" ;
    qudt:ucumCode "m3.h-1"^^qudt:UCUMcs,
        "m3/h"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "MQH" ;
    qudt:unitOfSystem sou:SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MI3 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Cubic Mile"@en ;
    dcterms:description "A cubic mile is an imperial / U.S. customary unit of volume, used in the United States, Canada, and the United Kingdom. It is defined as the volume of a cube with sides of 1 mile in length. "^^rdf:HTML ;
    qudt:conversionMultiplier 4168181830.0 ;
    qudt:definedUnitOfSystem sou:IMPERIAL ;
    qudt:expression "\\(mi^{3}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:ucumCode "[mi_i]3"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL,
        sou:USCS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MOL a qudt:Unit ;
    rdfs:label "Mole"@en ;
    dcterms:description "The mole is a unit of measurement used in chemistry to express amounts of a chemical substance. The official definition, adopted as part of the SI system in 1971, is that one mole of a substance contains just as many elementary entities (atoms, molecules, ions, or other kinds of particles) as there are atoms in 12 grams of carbon-12 (carbon-12 is the most common atomic form of carbon, consisting of atoms having 6 protons and 6 neutrons).  This corresponds to a value of \\(6.02214179(30) \\times 1023\\) elementary entities of the substance. It is one of the base units in the International System of Units, and has the unit symbol \\(mol\\). A Mole is the SI base unit of the amount of a substance (as distinct from its mass or weight). Moles measure the actual number of atoms or molecules in an object. An earlier name is gram molecular weight, because one mole of a chemical compound is the same number of grams as the molecular weight of a molecule of that compound measured in atomic mass units."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Mole_%28unit%29"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:AmountOfSubstance,
        quantitykind:ExtentOfReaction ;
    qudt:iec61360Code "0112/2///62720#UAA882",
        "0112/2///62720#UAD716" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mole_(unit)"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/mole> ;
    qudt:symbol "mol" ;
    qudt:ucumCode "mol"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C34" ;
    qudt:unitOfSystem sou:SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MOL-PER-KiloGM a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Mol per Kilogram"@en ;
    dcterms:description "Mole Per Kilogram (\\(mol/kg\\)) is a unit of Molality"^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(mol/kg\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M-1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:AmountOfSubstancePerUnitMass,
        quantitykind:IonicStrength,
        quantitykind:MolalityOfSolute ;
    qudt:ucumCode "mol.kg-1"^^qudt:UCUMcs,
        "mol/kg"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C19" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaJ-PER-M2 a qudt:Unit ;
    rdfs:label "Megajoule Per Square Metre"@en,
        "Megajoule Per Square Meter"@en-us ;
    dcterms:description "MegaJoule Per Square Meter (\\(MegaJ/m^2\\)) is a unit in the category of Energy density."^^qudt:LatexString ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:EnergyPerArea ;
    qudt:plainTextDescription "1,000,000-fold of the SI derived unit joule divided by the power of the SI base unit metre with the exponent 2" ;
    qudt:ucumCode "MJ.m-2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaJ-PER-M3 a qudt:Unit ;
    rdfs:label "Megajoule Per Cubic Metre"@en,
        "Megajoule Per Cubic Meter"@en-us ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:EnergyDensity ;
    qudt:iec61360Code "0112/2///62720#UAA212" ;
    qudt:plainTextDescription "1,000,000-fold of the SI derived unit joule divided by the power of the SI base unit metre with the exponent 3" ;
    qudt:ucumCode "MJ.m-3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "JM" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaL a qudt:Unit ;
    rdfs:label "Megalitre"@en,
        "Megalitre"@en-us ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:iec61360Code "0112/2///62720#UAB112" ;
    qudt:plainTextDescription "1 000 000-fold of the unit litre" ;
    qudt:ucumCode "ML"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "MAL" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaN-M a qudt:Unit,
        unit:Unit ;
    rdfs:label "Meganewton Metre"@en,
        "Meganewton Meter"@en-us ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Torque ;
    qudt:iec61360Code "0112/2///62720#UAA214" ;
    qudt:plainTextDescription "1,000,000-fold of the product of the SI derived unit newton and the SI base unit metre" ;
    qudt:ucumCode "MN.m"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B74" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroG a qudt:Unit ;
    rdfs:label "Microgravity"@en ;
    dcterms:description "\"Microgravity\" is a unit for  'Linear Acceleration' expressed as \\(microG\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00000980665 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Acceleration ;
    qudt:latexSymbol "\\(\\mu G\\)"^^qudt:LatexString ;
    qudt:symbol "µG" ;
    qudt:ucumCode "u[g]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroL a qudt:Unit ;
    rdfs:label "Microlitre"@en,
        "Microlitre"@en-us ;
    qudt:conversionMultiplier 0.000000001 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:iec61360Code "0112/2///62720#UAA088" ;
    qudt:plainTextDescription "0.000001-fold of the unit litre" ;
    qudt:ucumCode "uL"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "4G" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroM3 a qudt:Unit ;
    rdfs:label "Cubic micrometres (microns)"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.18 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:ucumCode "um3"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroN-M a qudt:Unit,
        unit:Unit ;
    rdfs:label "Micronewton Metre"@en,
        "Micronewton Meter"@en-us ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Torque ;
    qudt:iec61360Code "0112/2///62720#UAA071" ;
    qudt:plainTextDescription "0.000001-fold of the product out of the derived SI newton and the SI base unit metre" ;
    qudt:ucumCode "uN.m"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B93" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliG a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Milligravity"@en ;
    dcterms:description "\"Milligravity\" is a unit for  'Linear Acceleration' expressed as \\(mG\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00980665 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Acceleration ;
    qudt:symbol "mG" ;
    qudt:ucumCode "m[g]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliGAL a qudt:Unit ;
    rdfs:label "Milligal"@en ;
    qudt:conversionMultiplier 0.00001 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Acceleration ;
    qudt:iec61360Code "0112/2///62720#UAB043" ;
    qudt:plainTextDescription "0.001-fold of the unit of acceleration called gal according to the CGS system of units" ;
    qudt:ucumCode "mGal"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C11" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliL a qudt:Unit ;
    rdfs:label "Millilitre"@en,
        "Millilitre"@en-us ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:iec61360Code "0112/2///62720#UAA844" ;
    qudt:plainTextDescription "0.001-fold of the unit litre" ;
    qudt:ucumCode "mL"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "MLT" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliM2-PER-SEC a qudt:Unit ;
    rdfs:label "Square Millimetre Per Second"@en,
        "Square Millimeter Per Second"@en-us ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:AreaPerTime ;
    qudt:iec61360Code "0112/2///62720#UAA872" ;
    qudt:plainTextDescription "0.000001-fold of the power of the SI base unit metre with the exponent 2 divided by the SI base unit second" ;
    qudt:ucumCode "mm2.s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C17" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliM3 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Cubic Millimetre"@en,
        "Cubic Millimeter"@en-us ;
    dcterms:description "A metric measure of volume or capacity equal to a cube 1 millimeter on each edge"^^rdf:HTML ;
    qudt:conversionMultiplier 0.000000001 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:expression "\\(mm^{3}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:iec61360Code "0112/2///62720#UAA873" ;
    qudt:ucumCode "mm3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "MMQ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliN-M a qudt:Unit,
        unit:Unit ;
    rdfs:label "Millinewton Metre"@en,
        "Millinewton Meter"@en-us ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Torque ;
    qudt:iec61360Code "0112/2///62720#UAA794" ;
    qudt:plainTextDescription "0.001-fold of the product of the SI derived unit newton and the SI base unit metre" ;
    qudt:ucumCode "mN.m"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D83" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:N-CentiM a qudt:Unit,
        unit:Unit ;
    rdfs:label "Newton Centimetre"@en,
        "Newton Centimeter"@en-us ;
    qudt:conversionMultiplier 0.01 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Torque ;
    qudt:iec61360Code "0112/2///62720#UAA237" ;
    qudt:plainTextDescription "product of the SI derived unit newton and the 0.01-fold of the SI base unit metre" ;
    qudt:ucumCode "N.cm"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F88" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NUM-PER-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Number per hour"@en,
        "Number per individual per hour"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.000277777777777778 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Frequency ;
    qudt:ucumCode "{#}.h-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NUM-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Counts per second"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Frequency ;
    qudt:ucumCode "{#}.s-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NUM-PER-YR a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Number per Year"@en ;
    dcterms:description "\"Number per Year\" is a unit for  'Frequency' expressed as \\(\\#/yr\\)."^^qudt:LatexString ;
    qudt:expression "\\(\\#/yr\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Frequency ;
    qudt:ucumCode "{#}.a-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OZ_F-IN a qudt:Unit,
        unit:Unit ;
    rdfs:label "Imperial Ounce Force Inch"@en ;
    dcterms:description "\"Ounce Force Inch\" is an Imperial unit for  'Torque' expressed as \\(ozf-in\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0706155243 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Torque ;
    qudt:ucumCode "[ozf_av].[in_i]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OZ_PER-GAL a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Imperial Mass Ounce per Gallon"@en ;
    dcterms:description "\"Ounce per Gallon\" is an Imperial unit for  'Density' expressed as \\(oz/gal\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 6.23602329 ;
    qudt:expression "oz/gal" ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Density ;
    qudt:ucumCode "[oz_av].[gal_br]-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OZ_PER-IN3 a qudt:Unit,
        unit:Unit ;
    rdfs:label "Imperial Mass Ounce per Cubic Inch"@en ;
    dcterms:description "\"Ounce per Cubic Inch\" is an Imperial unit for  'Density' expressed as \\(oz/in^{3}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1729.99404 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "oz/in^{3}" ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Density ;
    qudt:ucumCode "[oz_av].[cin_i]-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OZ_VOL_UK a qudt:Unit ;
    rdfs:label "Fluid Ounce (UK)"@en ;
    dcterms:description "\\(\\textit{Imperial Ounce}\\) is an Imperial unit for 'Liquid Volume' expressed as \\(oz\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0000284130625 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:iec61360Code "0112/2///62720#UAA431" ;
    qudt:plainTextDescription "unit of the volume for fluids according to the Imperial system of units" ;
    qudt:ucumCode "[foz_br]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "OZI" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-DAY a qudt:Unit,
        unit:Unit ;
    rdfs:label "Reciprocal Day"@en ;
    qudt:conversionMultiplier 0.00001157407 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Frequency ;
    qudt:iec61360Code "0112/2///62720#UAA408" ;
    qudt:plainTextDescription "reciprocal of the unit day" ;
    qudt:ucumCode "/d"^^qudt:UCUMcs,
        "d-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "E91" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-HR a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Reciprocal Hour"@en ;
    dcterms:description "A reciprocal unit of time for \\(\\textit{reciprocal hour}\\) or \"inverse hour\"."^^qudt:LatexString ;
    qudt:conversionMultiplier 360.0 ;
    qudt:expression "\\(m^{-1}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Frequency ;
    qudt:ucumCode "/h"^^qudt:UCUMcs,
        "h-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-M2-SEC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Reciprocal Square Metre Second"@en,
        "Reciprocal square metre per second"@en,
        "Reciprocal Square Meter Second"@en-us ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(m^{-2}-s^{-1}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Flux,
        quantitykind:ParticleCurrent,
        quantitykind:ParticleFluenceRate ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:ucumCode "m-2.s-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-MILLE-PER-PSI a qudt:Unit ;
    rdfs:label "Reciprocal Mille Per Psi"@en ;
    qudt:conversionMultiplier 0.0000001450377 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M-1H0T2D0 ;
    qudt:hasQuantityKind quantitykind:Compressibility,
        quantitykind:InversePressure,
        quantitykind:IsothermalCompressibility ;
    qudt:iec61360Code "0112/2///62720#UAA016" ;
    qudt:plainTextDescription "thousandth divided by the composed unit for pressure (pound-force per square inch)" ;
    qudt:uneceCommonCode "J12" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-MIN a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Reciprocal Minute"@en ;
    dcterms:description "A reciprocal unit of time for \\(\\textit{reciprocal minute}\\) or \\(\\textit{inverse minute}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 60.0 ;
    qudt:expression "\\(m^{-1}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Frequency ;
    qudt:ucumCode "/min"^^qudt:UCUMcs,
        "min-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-MO a qudt:Unit,
        unit:Unit ;
    rdfs:label "Reciprocal Month"@en ;
    qudt:conversionMultiplier 0.000000391935077 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Frequency ;
    qudt:iec61360Code "0112/2///62720#UAA881" ;
    qudt:plainTextDescription "reciprocal of the unit month" ;
    qudt:ucumCode "mo-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H11" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-MilliSEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Reciprocal millisecond"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Frequency ;
    qudt:ucumCode "ms-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-WK a qudt:Unit,
        unit:Unit ;
    rdfs:label "Reciprocal Week"@en ;
    qudt:conversionMultiplier 0.000001653439 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Frequency ;
    qudt:iec61360Code "0112/2///62720#UAA099" ;
    qudt:plainTextDescription "reciprocal of the unit week" ;
    qudt:ucumCode "wk-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H85" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-YR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Reciprocal Year"@en ;
    qudt:conversionMultiplier 0.000000031709792 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Frequency ;
    qudt:iec61360Code "0112/2///62720#UAB027" ;
    qudt:plainTextDescription "reciprocal of the unit year" ;
    qudt:ucumCode "/a"^^qudt:UCUMcs,
        "a-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H09" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PERCENT-PER-DAY a qudt:Unit,
        unit:Unit ;
    rdfs:label "Percent per day"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.0000115740740740741 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Frequency ;
    qudt:ucumCode "%.d-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PERCENT-PER-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Percent per hour"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.000277777777777778 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Frequency ;
    qudt:ucumCode "%.h-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PERCENT-PER-WK a qudt:Unit,
        unit:Unit ;
    rdfs:label "Percent per week"@en ;
    dcterms:description "A rate of change in percent over a period of 7 days"@en ;
    qudt:conversionMultiplier 0.00000165343915343915 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Frequency ;
    qudt:ucumCode "%.wk-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PINT a qudt:Unit ;
    rdfs:label "Imperial Pint"@en ;
    dcterms:description "\"Imperial Pint\" is an Imperial unit for  'Volume' expressed as \\(pint\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00056826125 ;
    qudt:definedUnitOfSystem sou:IMPERIAL ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:symbol "pi" ;
    qudt:ucumCode "[pt_br]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PINT_UK a qudt:Unit ;
    rdfs:label "Pint (UK)"@en ;
    qudt:conversionMultiplier 0.0005682613 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:iec61360Code "0112/2///62720#UAA952" ;
    qudt:plainTextDescription "unit of the volume (both for fluids and for dry measures) according to the Imperial system of units" ;
    qudt:ucumCode "[pt_br]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "PTI" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PK_UK a qudt:Unit ;
    rdfs:label "Peck (UK)"@en ;
    qudt:conversionMultiplier 0.009092181 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:iec61360Code "0112/2///62720#UAA939" ;
    qudt:plainTextDescription "unit of the volume according to the Imperial system of units" ;
    qudt:ucumCode "[pk_br]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L43" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PlanckCharge a qudt:Unit ;
    rdfs:label "Planck Charge"@en ;
    dcterms:description "In physics, the Planck charge, denoted by, is one of the base units in the system of natural units called Planck units. It is a quantity of electric charge defined in terms of fundamental physical constants. The Planck charge is defined as: coulombs, where: is the speed of light in the vacuum, is Planck's constant, is the reduced Planck constant, is the permittivity of free space is the elementary charge = (137.03599911) is the fine structure constant. The Planck charge is times greater than the elementary charge \\(e\\) carried by an electron."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00000000000000000187554587 ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Planck_units"^^xsd:anyURI ;
    qudt:latexSymbol "\\(Q_P\\)"^^qudt:LatexString ;
    qudt:unitOfSystem sou:PLANCK ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PlanckDensity a qudt:Unit,
        unit:Unit ;
    rdfs:label "Planck Density"@en ;
    dcterms:description "The Planck density is the unit of density, denoted by \\(\\rho_P\\), in the system of natural units known as Planck units. \\(1\\  \\rho_P \\ is \\approx 5.155 \\times 10^{96} kg/m^3\\). This is a unit which is very large, about equivalent to \\(10^{23}\\) solar masses squeezed into the space of a single atomic nucleus. At one unit of Planck time after the Big Bang, the mass density of the universe is thought to have been approximately one unit of Planck density."^^qudt:LatexString ;
    qudt:conversionMultiplier 5155000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Planck_density"^^xsd:anyURI ;
    qudt:derivedUnitOfSystem sou:PLANCK ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Density ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Planck_density?oldid=493642128"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PlanckFrequency a qudt:Unit,
        unit:Unit ;
    rdfs:label "Planck Frequency"@en ;
    qudt:conversionMultiplier 18548700000000000000000000000000000000000000.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Planck_angular_frequency"^^xsd:anyURI ;
    qudt:derivedUnitOfSystem sou:PLANCK ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Frequency ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Planck_angular_frequency?oldid=493641308"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PlanckVolume a qudt:Unit ;
    rdfs:label "Planck Volume"@en ;
    qudt:conversionMultiplier 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000422419 ;
    qudt:derivedUnitOfSystem sou:PLANCK ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:QT_UK a qudt:Unit ;
    rdfs:label "Quart (UK)"@en ;
    qudt:conversionMultiplier 0.0011365225 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:iec61360Code "0112/2///62720#UAA963" ;
    qudt:plainTextDescription "unit of the volume for fluids according to the Imperial system of units" ;
    qudt:ucumCode "[qt_br]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "QTI" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:RAD-PER-M a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Radian per Metre"@en,
        "Radian per Meter"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(rad/m\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:AngularWavenumber,
        quantitykind:DebyeAngularWavenumber,
        quantitykind:FermiAngularWavenumber ;
    qudt:iec61360Code "0112/2///62720#UAA967" ;
    qudt:informativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31897"^^xsd:anyURI ;
    qudt:ucumCode "rad.m-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C84" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:S a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Siemens"@en ;
    dcterms:description "\\(\\textbf{Siemens}\\) is the SI unit of electric conductance, susceptance, and admittance. The most important property of a conductor is the amount of current it will carry when a voltage is applied. Current flow is opposed by resistance in all circuits, and by also by reactance and impedance in alternating current circuits. Conductance, susceptance, and admittance are the inverses of resistance, reactance, and impedance, respectively. To measure these properties, the siemens is the reciprocal of the ohm. In other words, the conductance, susceptance, or admittance, in siemens, is simply 1 divided by the resistance, reactance or impedance, respectively, in ohms. The unit is named for the German electrical engineer Werner von Siemens (1816-1892). \\(\\  \\text{Siemens}\\equiv\\frac{\\text{A}}{\\text{V}}\\equiv\\frac{\\text{amp}}{\\text{volt}}\\equiv\\frac{\\text{F}}{\\text {s}}\\equiv\\frac{\\text{farad}}{\\text{second}}\\)"^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T3D0 ;
    qudt:hasQuantityKind quantitykind:Admittance,
        quantitykind:ElectricConductivity ;
    qudt:iec61360Code "0112/2///62720#UAA277" ;
    qudt:informativeReference "http://www.simetric.co.uk/siderived.htm"^^xsd:anyURI,
        "https://en.wikipedia.org/wiki/Siemens_(unit)"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/siemens> ;
    qudt:siUnitsExpression "A/V" ;
    qudt:symbol "S" ;
    qudt:ucumCode "S"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "SIE" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:MHO .

unit:S-PER-M a qudt:Unit,
        unit:Unit ;
    rdfs:label "Siemens Per Metre"@en,
        "Siemens Per Meter"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(s-per-m\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T3D0 ;
    qudt:hasQuantityKind quantitykind:Conductivity,
        quantitykind:ElectrolyticConductivity ;
    qudt:iec61360Code "0112/2///62720#UAA279" ;
    qudt:plainTextDescription "SI derived unit siemens divided by the SI base unit metre" ;
    qudt:ucumCode "S.m-1"^^qudt:UCUMcs,
        "S/m"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D10" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SAMPLE-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Sample per second"@en ;
    dcterms:description "The number of discrete samples of some thing per second."^^rdf:HTML ;
    qudt:expression "\\(sample-per-sec\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Frequency ;
    qudt:ucumCode "s-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SLUG-PER-FT3 a qudt:Unit,
        unit:Unit ;
    rdfs:label "Slug per Cubic Foot"@en ;
    dcterms:description "\"Slug per Cubic Foot\" is an Imperial unit for  'Density' expressed as \\(slug/ft^{3}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 515.3788206107324 ;
    qudt:definedUnitOfSystem sou:IMPERIAL ;
    qudt:expression "\\(slug/ft^{3}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Density ;
    qudt:iec61360Code "0112/2///62720#UAA981" ;
    qudt:uneceCommonCode "L65" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:STR a qudt:Unit ;
    rdfs:label "Stere"@en ;
    dcterms:description "The stere is a unit of volume in the original metric system equal to one cubic metre.  The stere is typically used for measuring large quantities of firewood or other cut wood, while the cubic meter is used for uncut wood. It is not part of the modern metric system (SI). In Dutch there's also a kuub, short for kubieke meter which is similar but different."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/St%C3%A8re"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:iec61360Code "0112/2///62720#UAA987" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Stère?oldid=393570287"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/stere> ;
    qudt:symbol "st" ;
    qudt:ucumCode "st"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G26" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:S_Stat a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Statsiemens"@en ;
    dcterms:description "The unit of conductance, admittance, and susceptance in the centimeter-gram-second electrostatic system of units."^^rdf:HTML ;
    qudt:conversionMultiplier 0.0000000000011126500561 ;
    qudt:derivedUnitOfSystem sou:CGS-ESU ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T3D0 ;
    qudt:hasQuantityKind quantitykind:ElectricConductivity ;
    qudt:informativeReference "http://www.knowledgedoor.com/2/units_and_constants_handbook/statsiemens.html"^^xsd:anyURI,
        "http://www.sizes.com/units/statmho.htm"^^xsd:anyURI,
        "http://www3.wolframalpha.com/input/?i=statsiemens"^^xsd:anyURI ;
    qudt:symbol "statS" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:MHO_Stat ;
    skos:altLabel "statmho" .

unit:Standard a qudt:Unit ;
    rdfs:label "Standard"@en ;
    qudt:conversionMultiplier 4.672 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:iec61360Code "0112/2///62720#UAB116" ;
    qudt:plainTextDescription "non SI-conform unit of the volume of readily finished wood material : 1 standard = 1,980 board feet or approximate 4.672 cubic metre" ;
    qudt:ucumCode "1980.[bf_i]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "WSD" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:TBSP a qudt:Unit ;
    rdfs:label "Tablespoon"@en ;
    dcterms:description "In the US and parts of Canada, a tablespoon is the largest type of spoon used for eating from a bowl. In the UK and most Commonwealth countries, a tablespoon is a type of large spoon usually used for serving. In countries where a tablespoon is a serving spoon, the nearest equivalent to the US tablespoon is either the dessert spoon or the soup spoon. A tablespoonful, nominally the capacity of one tablespoon, is commonly used as a measure of volume in cooking. It is abbreviated as T, tb, tbs, tbsp, tblsp, or tblspn. The capacity of ordinary tablespoons is not regulated by law and is subject to considerable variation. In most countries one level tablespoon is approximately 15 mL; in Australia it is 20 mL."^^rdf:HTML ;
    qudt:conversionMultiplier 0.0000147867656 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Tablespoon"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:iec61360Code "0112/2///62720#UAB006" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Tablespoon?oldid=494615208"^^xsd:anyURI ;
    qudt:symbol "tbsp" ;
    qudt:ucumCode "[tbs_us]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G24" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:TON_SHIPPING_US a qudt:Unit ;
    rdfs:label "Ton (US Shipping)"@en ;
    qudt:conversionMultiplier 1.1326 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:iec61360Code "0112/2///62720#UAB011" ;
    qudt:plainTextDescription "traditional unit for volume of cargo, especially in shipping" ;
    qudt:uneceCommonCode "L86" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:TON_SHORT-PER-HR a qudt:Unit ;
    rdfs:label "Short Ton per Hour"@en ;
    dcterms:description "The short Ton per Hour is a unit used to express a weight processed in a period of time."^^rdf:HTML ;
    qudt:conversionMultiplier 0.251995761 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(ton/hr\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:MassFlowRate,
        quantitykind:MassPerTime ;
    qudt:ucumCode "[ston_av].h-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:TON_US-PER-HR .

unit:TON_UK-PER-YD3 a qudt:Unit,
        unit:Unit ;
    rdfs:label "Long Ton (UK) Per Cubic Yard"@en ;
    qudt:conversionMultiplier 1328.8778292234224 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:iec61360Code "0112/2///62720#UAB018" ;
    qudt:plainTextDescription "unit of the density according the Imperial system of units" ;
    qudt:ucumCode "[lton_av].[cyd_i]-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L92" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:TON_LONG-PER-YD3 .

unit:TON_US-PER-YD3 a qudt:Unit,
        unit:Unit ;
    rdfs:label "Short Ton (US) Per Cubic Yard"@en ;
    qudt:conversionMultiplier 1186.3112117181538 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:iec61360Code "0112/2///62720#UAB020" ;
    qudt:plainTextDescription "unit of the density according to the Anglo-American system of units" ;
    qudt:ucumCode "[ston_av].[cyd_i]-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L93" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:TON_SHORT-PER-YD3 .

unit:TSP a qudt:Unit ;
    rdfs:label "Teaspoon"@en ;
    dcterms:description "A teaspoon is a unit of volume. In the United States one teaspoon as a unit of culinary measure is \\(1/3\\) tablespoon , that is, \\(\\approx 4.93 mL\\); it is exactly \\(1/6 U.S. fl. oz\\), \\(1/48 \\; cup\\), and \\(1/768 \\; U.S. liquid gallon\\) (see United States customary units for relative volumes of these other measures) and approximately \\(1/3 cubic inch\\). For nutritional labeling on food packages in the U.S., the teaspoon is defined as precisely \\(5 mL\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00000492892187 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Teaspoon"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:iec61360Code "0112/2///62720#UAB007" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Teaspoon?oldid=490940468"^^xsd:anyURI ;
    qudt:symbol "tsp" ;
    qudt:ucumCode "[tsp_us]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G25" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:TeraHZ a qudt:Unit,
        unit:Unit ;
    rdfs:label "Terahertz"@en ;
    qudt:conversionMultiplier 1000000000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Frequency ;
    qudt:iec61360Code "0112/2///62720#UAA287" ;
    qudt:plainTextDescription "1 000 000 000 000-fold of the SI derived unit hertz" ;
    qudt:ucumCode "THz"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D29" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:V-SEC-PER-M a qudt:Unit ;
    rdfs:label "Volt Second Per Metre"@en,
        "Volt Second Per Meter"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:MagneticFluxPerUnitLength,
        quantitykind:MagneticVectorPotential,
        quantitykind:ScalarMagneticPotential ;
    qudt:iec61360Code "0112/2///62720#UAA303" ;
    qudt:plainTextDescription "product of the SI derived unit volt and the SI base unit second divided by the SI base unit metre" ;
    qudt:ucumCode "V.s.m-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H45" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:W-HR-PER-M3 a qudt:Unit ;
    rdfs:label "Watthour per Cubic metre"@en,
        "Watthour per Cubic meter"@en-us ;
    dcterms:description "The watt hour per cubic meter is a unit of energy density, equal to 3,600 joule per cubic meter."^^rdf:HTML ;
    qudt:conversionMultiplier 3600.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:EnergyDensity ;
    qudt:symbol "W-hr/m3" ;
    qudt:ucumCode "W.h.m-3"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:W-SEC-PER-M2 a qudt:Unit ;
    rdfs:label "Watt seconds per square metre"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:EnergyPerArea ;
    qudt:ucumCode "W.s.m-2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:YD3 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Cubic Yard"@en ;
    dcterms:description "A cubic yard is an Imperial / U.S. customary unit of volume, used in the United States, Canada, and the UK. It is defined as the volume of a cube with sides of 1 yard in length."^^rdf:HTML ;
    qudt:conversionMultiplier 0.764554857984 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(yd^{3}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:iec61360Code "0112/2///62720#UAB035" ;
    qudt:ucumCode "[cyd_i]"^^qudt:UCUMcs,
        "[yd_i]3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "YDQ" ;
    qudt:unitOfSystem sou:IMPERIAL,
        sou:USCS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:YD3-PER-MIN a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Cubic Yard per Minute"@en ;
    dcterms:description "\"Cubic Yard per Minute\" is an Imperial unit for  'Volume Per Unit Time' expressed as \\(yd^{3}/min\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0127425809664 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(yd^{3}/min\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:VolumeFlowRate,
        quantitykind:VolumePerUnitTime ;
    qudt:iec61360Code "0112/2///62720#UAB040" ;
    qudt:ucumCode "[cyd_i].min-1"^^qudt:UCUMcs,
        "[cyd_i]/min"^^qudt:UCUMcs,
        "[yd_i]3.min-1"^^qudt:UCUMcs,
        "[yd_i]3/min"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "M15" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:failures-in-time a qudt:Unit,
        unit:Unit ;
    rdfs:label "Failures In Time"@en ;
    qudt:conversionMultiplier 0.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Frequency ;
    qudt:iec61360Code "0112/2///62720#UAB403" ;
    qudt:plainTextDescription "unit of failure rate" ;
    qudt:ucumCode "s-1{failures}"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "FIT" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

arg:class a rdf:Property ;
    rdfs:subPropertyOf sp:arg .

sp:isIRI a spin:Function ;
    rdfs:label "isIRI" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            rdfs:comment "the node being tested" ] ;
    spin:returnType xsd:boolean ;
    spin:symbol "isIRI" ;
    rdfs:comment "Checks whether a given node is a IRI node." ;
    rdfs:subClassOf spl:BooleanFunctions .

sp:isLiteral a spin:Function ;
    rdfs:label "isLiteral" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            rdfs:comment "the node being tested" ] ;
    spin:returnType xsd:boolean ;
    spin:symbol "isLiteral" ;
    rdfs:comment "Checks whether a given node is a literal." ;
    rdfs:subClassOf spl:BooleanFunctions .

spin:SelectTemplates a spin:SelectTemplate ;
    rdfs:label "Select templates" ;
    spin:abstract true ;
    rdfs:comment "Suggested abstract base class for all SelectTemplates." ;
    rdfs:subClassOf spin:Templates .

spl:PropertyPairConstraintTemplates a spl:ConstraintTemplate ;
    rdfs:label "Property pair constraint templates" ;
    spin:abstract true ;
    spin:constraint [ a spl:Argument ;
            spl:predicate arg:otherProperty ;
            spl:valueType rdf:Property ;
            rdfs:comment "The \"other\" property." ] ;
    rdfs:comment "Abstract base class for templates that take two properties as arguments and establish a relationship between them." ;
    rdfs:subClassOf spl:PropertyConstraintTemplates .

dtype:Enumeration a owl:Class ;
    rdfs:label "DTYPE Enumeration"^^xsd:string ;
    vaem:comment "A type that serves as a container for the enumerated values of an enumeration. This enables the enumeration itself to be referenceable. One need for this is in determing the default value of an enumeration , another need is in the management of sub-enumerations and composite enumerations."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/1.1/schema/dtype>,
        <http://www.linkedmodel.org/schema/dtype> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty dtype:defaultValue ],
        [ a owl:Restriction ;
            owl:allValuesFrom dtype:EnumeratedValue ;
            owl:onProperty dtype:defaultValue ],
        [ a owl:Restriction ;
            owl:allValuesFrom dtype:EnumeratedValue ;
            owl:onProperty dtype:value ],
        owl:Thing .

dtype:value a rdf:Property ;
    rdfs:label "value"^^xsd:string ;
    vaem:comment "The property \"dtype:value\" is a general property that in some cases could have scalar values and in other cases may refer to a first class concept that is a \"value object\". For this reason, the  type of this property is set as \"rdf:Property\" and the property is rangeless."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/1.1/schema/dtype>,
        <http://www.linkedmodel.org/schema/dtype> .

vaem:description a owl:DatatypeProperty ;
    rdfs:label "description"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:range xsd:string .

vaem:name a owl:DatatypeProperty ;
    rdfs:label "name"^^xsd:string ;
    dcterms:description "The property \"vaem:name\" is intended for general use. In many cases \"rdfs:label\" could be used give names to resources. In the case where compliance with a specific naming rule is needed,  \"vaem:name\" allows  a resource to carry a name that is used in more specific contexts."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:range xsd:string .

skos:Collection a owl:Class ;
    rdfs:label "Collection"@en ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    owl:disjointWith skos:Concept,
        skos:ConceptScheme ;
    skos:definition "A meaningful collection of concepts."@en ;
    skos:scopeNote "Labelled collections can be used where you would like a set of concepts to be displayed under a 'node label' in the hierarchy."@en .

skos:exactMatch a rdf:Property,
        owl:ObjectProperty,
        owl:SymmetricProperty,
        owl:TransitiveProperty ;
    rdfs:label "exact match",
        "has exact match"@en ;
    rdfs:comment "skos:exactMatch is disjoint with each of the properties skos:broadMatch and skos:relatedMatch."@en ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    rdfs:subPropertyOf skos:closeMatch ;
    skos:definition "skos:exactMatch is used to link two concepts, indicating a high degree of confidence that the concepts can be used interchangeably across a wide range of information retrieval applications. skos:exactMatch is a transitive property, and is a sub-property of skos:closeMatch."@en .

brick:Air_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Point .

brick:Air_Differential_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Differential Pressure Sensor" ;
    rdfs:subClassOf brick:Differential_Pressure_Sensor ;
    skos:definition "Measures the difference in pressure between two regions of air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Point,
        tag:Pressure,
        tag:Sensor ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Air .

brick:Air_Differential_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Differential Pressure Setpoint" ;
    rdfs:subClassOf brick:Differential_Pressure_Setpoint ;
    skos:definition "Sets the target air differential pressure between an upstream and downstream point in a air duct or conduit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Point,
        tag:Pressure,
        tag:Setpoint ;
    brick:hasQuantity brick:Differential_Pressure ;
    brick:hasSubstance brick:Air .

brick:Air_Diffuser a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Diffuser" ;
    rdfs:subClassOf brick:Terminal_Unit ;
    skos:definition "A device that is a component of the air distribution system that controls the delivery of conditioned and/or ventilating air into a room"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Diffuser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Diffuser,
        tag:Equipment .

brick:Air_Flow_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Flow Alarm" ;
    rdfs:subClassOf brick:Air_Alarm ;
    skos:definition "An alarm related to air flow."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Flow,
        tag:Point .

brick:Air_Temperature_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Temperature Alarm" ;
    rdfs:subClassOf brick:Air_Alarm,
        brick:Temperature_Alarm ;
    skos:definition "An alarm that indicates the off-normal conditions associated with the temperature of air."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Point,
        tag:Temperature .

brick:Baseboard_Radiator a owl:Class,
        sh:NodeShape ;
    rdfs:label "Baseboard Radiator" ;
    rdfs:subClassOf brick:Radiator ;
    skos:definition "Steam, hydronic, or electric heating device located at or near the floor."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Baseboard ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radiator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Baseboard,
        tag:Equipment,
        tag:Radiator .

brick:Bypass_Air a owl:Class,
        sh:NodeShape,
        brick:Bypass_Air ;
    rdfs:label "Bypass Air" ;
    rdfs:subClassOf brick:Air ;
    skos:definition "air in a bypass duct, used to relieve static pressure"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Bypass ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Bypass,
        tag:Fluid,
        tag:Gas .

brick:Bypass_Water a owl:Class,
        sh:NodeShape,
        brick:Bypass_Water ;
    rdfs:label "Bypass Water" ;
    rdfs:subClassOf brick:Water ;
    skos:definition "Water that circumvents a piece of equipment or system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Bypass ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Bypass,
        tag:Fluid,
        tag:Liquid,
        tag:Water .

brick:Chilled_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chilled Water Temperature Sensor" ;
    rdfs:subClassOf brick:Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of chilled water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Chilled_Water .

brick:Chiller a owl:Class,
        sh:NodeShape ;
    rdfs:label "Chiller" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "Refrigerating machine used to transfer heat between fluids. Chillers are either direct expansion with a compressor or absorption type."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chiller ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chiller,
        tag:Equipment .

brick:Collection_Basin_Water a owl:Class,
        sh:NodeShape,
        brick:Collection_Basin_Water ;
    rdfs:label "Collection Basin Water" ;
    rdfs:seeAlso <https://www.towercomponentsinc.com/cooling-tower-basics-misc-terms-glossary> ;
    rdfs:subClassOf brick:Water ;
    skos:definition "Water transiently collected and directed to the sump or pump suction line, typically integral with a cooling tower"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Basin ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Collection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Basin,
        tag:Collection,
        tag:Fluid,
        tag:Liquid,
        tag:Water .

brick:Cooling_Discharge_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Discharge Air Flow Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Flow_Setpoint ;
    skos:definition "Sets discharge air flow for cooling"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Discharge,
        tag:Flow,
        tag:Point,
        tag:Setpoint .

brick:Current_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Current Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Senses the amperes of electrical current passing through the sensor"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Current ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Current,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Current .

brick:Deionized_Water a owl:Class,
        sh:NodeShape,
        brick:Deionized_Water ;
    rdfs:label "Deionized Water" ;
    rdfs:subClassOf brick:Water ;
    skos:definition "Water which has been purified by removing its ions (constituting the majority of non-particulate contaminants)"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Deionized ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Deionized,
        tag:Fluid,
        tag:Liquid,
        tag:Water .

brick:Demand_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Demand Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the amount of power consumed by the use of some process; typically found by multiplying the tonnage of a unit (e.g. RTU) by the efficiency rating in kW/ton"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Demand ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Demand,
        tag:Point,
        tag:Sensor .

brick:Differential_Pressure_Load_Shed_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Differential Pressure Load Shed Status" ;
    rdfs:subClassOf brick:Load_Shed_Status,
        brick:Pressure_Status ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Load,
        tag:Point,
        tag:Pressure,
        tag:Shed,
        tag:Status .

brick:Discharge_Air_Temperature_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Temperature Alarm" ;
    rdfs:subClassOf brick:Air_Temperature_Alarm ;
    skos:definition "An alarm that indicates the off-normal conditions associated with the temperature of discharge air."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Alarm,
        tag:Discharge,
        tag:Point,
        tag:Temperature .

brick:Discharge_Air_Temperature_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Temperature Deadband Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Temperature_Setpoint,
        brick:Temperature_Deadband_Setpoint ;
    skos:definition "Sets the size of a deadband of temperature of discharge air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Deadband,
        tag:Discharge,
        tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Discharge_Air .

brick:Discharge_Air_Temperature_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Temperature Proportional Band Parameter" ;
    rdfs:subClassOf brick:Proportional_Band_Parameter,
        brick:Temperature_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Band,
        tag:Discharge,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Proportional,
        tag:Temperature .

brick:Discharge_Air_Temperature_Reset_Differential_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Temperature Reset Differential Setpoint" ;
    rdfs:subClassOf brick:Temperature_Differential_Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Differential,
        tag:Discharge,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasSubstance brick:Discharge_Air .

brick:Discharge_Chilled_Water a owl:Class,
        sh:NodeShape,
        brick:Discharge_Chilled_Water ;
    rdfs:label "Discharge Chilled Water" ;
    rdfs:subClassOf brick:Chilled_Water,
        brick:Discharge_Water ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Discharge,
        tag:Fluid,
        tag:Liquid,
        tag:Water .

brick:Discharge_Hot_Water a owl:Class,
        sh:NodeShape,
        brick:Discharge_Hot_Water ;
    rdfs:label "Discharge Hot Water" ;
    rdfs:subClassOf brick:Discharge_Water,
        brick:Hot_Water ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Discharge,
        tag:Fluid,
        tag:Hot,
        tag:Liquid,
        tag:Water .

brick:Discharge_Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Water Flow Sensor" ;
    rdfs:subClassOf brick:Water_Flow_Sensor ;
    skos:definition "Measures the rate of flow of discharge water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Discharge,
        tag:Flow,
        tag:Point,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Discharge_Water .

brick:Discharge_Water_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Water Flow Setpoint" ;
    rdfs:subClassOf brick:Water_Flow_Setpoint ;
    skos:definition "Sets the target flow rate of discharge water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Discharge,
        tag:Flow,
        tag:Point,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Discharge_Water .

brick:Duration_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Duration Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the duration of a phenomenon or event"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Duration ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Duration,
        tag:Point,
        tag:Sensor .

brick:EfficiencyShape a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:PERCENT ) ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

brick:Electric_Power_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Electric Power Sensor" ;
    rdfs:subClassOf brick:Power_Sensor ;
    skos:definition "Measures the amount of instantaneous electric power consumed"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Electric ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Power ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Electric,
        tag:Point,
        tag:Power,
        tag:Sensor ;
    brick:hasQuantity brick:Electric_Power .

brick:Electrical_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Electrical Room" ;
    rdfs:subClassOf brick:Service_Room ;
    skos:definition "A class of service rooms that house electrical equipment for a building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Electrical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Service ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Electrical,
        tag:Location,
        tag:Room,
        tag:Service,
        tag:Space .

brick:Emergency_Wash_Station a owl:Class,
        sh:NodeShape ;
    rdfs:label "Emergency Wash Station" ;
    rdfs:subClassOf brick:Safety_Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Emergency ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Station ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Wash ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Emergency,
        tag:Equipment,
        tag:Safety,
        tag:Station,
        tag:Wash .

brick:Enclosed_Office a owl:Class,
        sh:NodeShape ;
    rdfs:label "Enclosed Office" ;
    rdfs:subClassOf brick:Office ;
    skos:definition "A space for individuals to work with walls and a door"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Enclosed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Office ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Enclosed,
        tag:Location,
        tag:Office,
        tag:Room,
        tag:Space .

brick:Energy a brick:Quantity ;
    rdfs:label "Energy" .

brick:Fluid a owl:Class,
        sh:NodeShape,
        brick:Fluid ;
    rdfs:label "Fluid" ;
    rdfs:subClassOf brick:Substance ;
    skos:definition "substance, as a liquid or gas, that is capable of flowing and that changes shape when acted on by a force."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fluid .

brick:Frequency a brick:Quantity ;
    rdfs:label "Frequency" ;
    qudt:applicableUnit unit:GigaHZ,
        unit:HZ,
        unit:KiloHZ,
        unit:MegaHZ,
        unit:NUM-PER-HR,
        unit:NUM-PER-SEC,
        unit:NUM-PER-YR,
        unit:PER-DAY,
        unit:PER-HR,
        unit:PER-MIN,
        unit:PER-MO,
        unit:PER-MilliSEC,
        unit:PER-SEC,
        unit:PER-WK,
        unit:PER-YR,
        unit:PERCENT-PER-DAY,
        unit:PERCENT-PER-HR,
        unit:PERCENT-PER-WK,
        unit:PlanckFrequency,
        unit:SAMPLE-PER-SEC,
        unit:TeraHZ,
        unit:failures-in-time ;
    skos:definition "Frequency is the number of occurrences of a repeating event per unit time. The repetition of the events may be periodic (that is. the length of time between event repetitions is fixed) or aperiodic (i.e. the length of time between event repetitions varies). Therefore, we distinguish between periodic and aperiodic frequencies. In the SI system, periodic frequency is measured in hertz (Hz) or multiples of hertz, while aperiodic frequency is measured in becquerel (Bq).  In spectroscopy, ( u) is mostly used. Light passing through different media keeps its frequency, but not its wavelength or wavenumber."@en ;
    brick:hasQUDTReference quantitykind:Frequency .

brick:Gain_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Gain Parameter" ;
    rdfs:subClassOf brick:PID_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Gain ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Gain,
        tag:PID,
        tag:Parameter,
        tag:Point .

brick:GrainsOfMoisture a brick:Quantity ;
    rdfs:label "GrainsOfMoisture" ;
    qudt:applicableUnit unit:GRAIN ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Mass,
        brick:Mass ;
    skos:definition "Mass of moisture per pround of air, measured in grains of water" .

brick:HVAC_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "HVAC Valve" ;
    rdfs:subClassOf brick:HVAC_Equipment,
        brick:Valve ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:HVAC ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:HVAC,
        tag:Valve .

brick:Heating_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Valve" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "A valve that controls air temperature by modulating the amount of hot water flowing through a heating coil"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Heat,
        tag:Valve .

brick:Heating_Ventilation_Air_Conditioning_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Ventilation Air Conditioning System" ;
    rdfs:subClassOf brick:System ;
    owl:equivalentClass brick:HVAC_System ;
    skos:definition "The equipment, distribution systems and terminals that provide, either collectively or individually, the processes of heating, ventilating or air conditioning to a building or portion of a building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Conditioning ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Ventilation ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Conditioning,
        tag:Heat,
        tag:System,
        tag:Ventilation .

brick:Hot_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Water_Temperature_Setpoint ;
    skos:definition "Sets the temperature of hot water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Hot_Water .

brick:Humidity_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Humidity Parameter" ;
    rdfs:subClassOf brick:Parameter ;
    skos:definition "Parameters relevant to humidity-related systems and points"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Humidity,
        tag:Parameter,
        tag:Point .

brick:Load_Shed_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Load Shed Setpoint" ;
    rdfs:subClassOf brick:Load_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Load,
        tag:Point,
        tag:Setpoint,
        tag:Shed .

brick:Load_Shed_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Load Shed Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if a load shedding policy is in effect"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Load ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Load,
        tag:Point,
        tag:Shed,
        tag:Status .

brick:Loop a owl:Class,
        sh:NodeShape ;
    rdfs:label "Loop" ;
    rdfs:subClassOf brick:Collection ;
    skos:definition "A collection of connected equipment; part of a System"@en ;
    sh:property [ sh:or ( [ sh:class brick:Equipment ] [ sh:class brick:Point ] [ sh:class brick:Location ] ) ;
            sh:path brick:hasPart ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Collection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Loop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Collection,
        tag:Loop .

brick:Max_Cooling_Discharge_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Cooling Discharge Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Cooling_Discharge_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Discharge,
        tag:Flow,
        tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Setpoint .

brick:Max_Heating_Discharge_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Heating Discharge Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Max_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Heating_Discharge_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Flow,
        tag:Heat,
        tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Setpoint .

brick:Media_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Media Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A class of spaces related to the creation of media"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Media ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Media,
        tag:Room,
        tag:Space .

brick:Min_Cooling_Discharge_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Cooling Discharge Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Cooling_Discharge_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Cool,
        tag:Discharge,
        tag:Flow,
        tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Setpoint .

brick:Min_Heating_Discharge_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Heating Discharge Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Min_Air_Flow_Setpoint_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Heating_Discharge_Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Flow,
        tag:Heat,
        tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Setpoint .

brick:Mode_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Mode Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Controls the operating mode of a device or controller"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mode ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Mode,
        tag:Point .

brick:Occupancy a brick:Quantity ;
    rdfs:label "Occupancy" .

brick:Occupied_Discharge_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Discharge Air Flow Setpoint" ;
    rdfs:subClassOf brick:Discharge_Air_Flow_Setpoint ;
    skos:definition "Sets discharge air flow when occupied"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Flow,
        tag:Occupied,
        tag:Point,
        tag:Setpoint .

brick:Off_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Off Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if a control loop, relay or equipment is off"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Off,
        tag:Point,
        tag:Status .

brick:Office a owl:Class,
        sh:NodeShape ;
    rdfs:label "Office" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A class of rooms dedicated for work or study"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Office ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Office,
        tag:Room,
        tag:Space .

brick:Outdoor_Area a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outdoor Area" ;
    rdfs:subClassOf brick:Location ;
    skos:definition "A class of spaces that exist outside of a building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Area ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outdoor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Area,
        tag:Location,
        tag:Outdoor .

brick:Outside_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air Temperature Sensor" ;
    rdfs:subClassOf brick:Air_Temperature_Sensor ;
    skos:definition "Measures the temperature of outside air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Outside,
        tag:Point,
        tag:Sensor,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Outside_Air .

brick:Position_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Position Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the current position of a component in terms of a fraction of its full range of motion"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Position ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Position,
        tag:Sensor ;
    brick:hasQuantity brick:Position .

brick:Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Pressure Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measure the amount of force acting on a unit area"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Pressure,
        tag:Sensor ;
    brick:hasQuantity brick:Pressure .

brick:Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Pressure Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Sets pressure"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Pressure,
        tag:Setpoint ;
    brick:hasQuantity brick:Pressure .

brick:Pressure_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Pressure Status" ;
    qudt:hasQuality brick:Pressure ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates if pressure is within expected bounds"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Pressure,
        tag:Status .

brick:Radiant_Panel_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Radiant Panel Temperature Sensor" ;
    rdfs:subClassOf brick:Temperature_Sensor ;
    skos:definition "Measures the temperature of the radiant panel of the radiant heating and cooling HVAC system."@en ;
    sh:property [ sh:or ( [ sh:class brick:Radiant_Panel ] ) ;
            sh:path brick:isPointOf ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Panel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radiant ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Panel,
        tag:Point,
        tag:Radiant,
        tag:Sensor,
        tag:Temperature .

brick:Radiant_Panel_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Radiant Panel Temperature Setpoint" ;
    rdfs:subClassOf brick:Temperature_Setpoint ;
    skos:definition "Sets temperature of radiant panel."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Panel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radiant ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Panel,
        tag:Point,
        tag:Radiant,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature .

brick:Reset_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Reset Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Commands that reset a flag, property or value to its default"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Point,
        tag:Reset .

brick:Return_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint ;
    skos:definition "The target temperature for return air, often used as an approximation of zone air temperature"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Return,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Return_Air .

brick:Return_Hot_Water a owl:Class,
        sh:NodeShape,
        brick:Return_Hot_Water ;
    rdfs:label "Return Hot Water" ;
    rdfs:subClassOf brick:Hot_Water,
        brick:Return_Water ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fluid,
        tag:Hot,
        tag:Liquid,
        tag:Return,
        tag:Water .

brick:Return_Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Water Flow Sensor" ;
    rdfs:subClassOf brick:Water_Flow_Sensor ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Flow,
        tag:Point,
        tag:Return,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Return_Water .

brick:Return_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Return Water Temperature Sensor" ;
    rdfs:subClassOf brick:Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of return water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Return,
        tag:Sensor,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Return_Water .

brick:Room_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Room Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint ;
    skos:definition "Sets temperature of room air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Room,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Room_Air .

brick:Safety_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Safety System" ;
    rdfs:subClassOf brick:System ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Safety,
        tag:System .

brick:Service_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Service Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A class of spaces related to the operations of building subsystems, e.g. HVAC, electrical, IT, plumbing, etc"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Service ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Room,
        tag:Service,
        tag:Space .

brick:Shading_Equipment a owl:Class,
        sh:NodeShape ;
    rdfs:label "Shading Equipment" ;
    rdfs:subClassOf brick:Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Shade ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Shade .

brick:Speed_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Speed Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the magnitude of velocity of some form of movement"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Speed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Sensor,
        tag:Speed ;
    brick:hasQuantity brick:Speed .

brick:Static_Pressure_Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Static Pressure Proportional Band Parameter" ;
    rdfs:subClassOf brick:Proportional_Band_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Band,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Proportional,
        tag:Static .

brick:Static_Pressure_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Static Pressure Setpoint Limit" ;
    rdfs:subClassOf brick:Limit ;
    skos:definition "A parameter that places a lower or upper bound on the range of permitted values of a Static_Pressure_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Limit,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static .

brick:Step_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Step Parameter" ;
    rdfs:subClassOf brick:PID_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Step ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Parameter,
        tag:Point,
        tag:Step .

brick:Supply_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint ;
    skos:definition "Temperature setpoint for supply air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Water Flow Sensor" ;
    rdfs:subClassOf brick:Water_Flow_Sensor ;
    owl:equivalentClass brick:Discharge_Water_Flow_Sensor ;
    skos:definition "Measures the rate of flow of hot supply water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Flow,
        tag:Point,
        tag:Sensor,
        tag:Supply,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Supply_Water .

brick:TemperatureShape a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ],
        [ a sh:PropertyShape ;
            sh:in ( unit:DEG_C unit:DEG_F unit:DEG_R unit:K unit:MilliDEG_C unit:PlanckTemperature ) ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ] .

brick:Time a brick:Quantity ;
    rdfs:label "Time" ;
    qudt:applicableUnit unit:CentiPOISE-PER-BAR,
        unit:DAY,
        unit:DAY_Sidereal,
        unit:H-PER-KiloOHM,
        unit:H-PER-OHM,
        unit:HR,
        unit:HR_Sidereal,
        unit:KiloSEC,
        unit:MIN,
        unit:MIN_Sidereal,
        unit:MO,
        unit:MO_MeanGREGORIAN,
        unit:MO_MeanJulian,
        unit:MO_Synodic,
        unit:MegaYR,
        unit:MicroH-PER-KiloOHM,
        unit:MicroH-PER-OHM,
        unit:MicroSEC,
        unit:MilliH-PER-KiloOHM,
        unit:MilliH-PER-OHM,
        unit:MilliPA-SEC-PER-BAR,
        unit:MilliSEC,
        unit:NanoSEC,
        unit:PA-SEC-PER-BAR,
        unit:POISE-PER-BAR,
        unit:PicoSEC,
        unit:PlanckTime,
        unit:SEC,
        unit:SH,
        unit:WK,
        unit:YR,
        unit:YR_Common,
        unit:YR_Sidereal,
        unit:YR_TROPICAL ;
    brick:hasQUDTReference quantitykind:Time .

brick:Usage_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Usage Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the amount of some substance that is consumed or used, over some period of time"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Usage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Sensor,
        tag:Usage .

brick:Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Valve" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Valve> ;
    rdfs:subClassOf brick:Equipment ;
    skos:definition "A device that regulates, directs or controls the flow of a fluid by opening, closing or partially obstructing various passageways"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Valve .

brick:Velocity_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Velocity Pressure Sensor" ;
    rdfs:subClassOf brick:Pressure_Sensor ;
    skos:definition "Measures the difference between total pressure and static pressure"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Velocity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Velocity ;
    brick:hasQuantity brick:Velocity_Pressure .

brick:Video_Surveillance_Equipment a owl:Class,
        sh:NodeShape ;
    rdfs:label "Video Surveillance Equipment" ;
    rdfs:subClassOf brick:Security_Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Security ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Surveillance ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Video ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Security,
        tag:Surveillance,
        tag:Video .

brick:Voltage a brick:Quantity ;
    rdfs:label "Voltage" ;
    qudt:applicableUnit unit:KiloV,
        unit:MegaV,
        unit:MicroV,
        unit:MilliV,
        unit:PlanckVolt,
        unit:V,
        unit:V_Ab,
        unit:V_Stat ;
    skos:definition "Voltage, also referred to as Electric Tension, is the difference between electrical potentials of two points. For an electric field within a medium, (U_{ab} = - \\int_{r_a}^{r_b} E . {dr}), where (E) is electric field strength. For an irrotational electric field, the voltage is independent of the path between the two points (a) and (b)."@en ;
    brick:hasQUDTReference quantitykind:Voltage .

brick:Voltage_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Voltage Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures the voltage of an electrical device or object"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Voltage ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Sensor,
        tag:Voltage ;
    brick:hasQuantity brick:Voltage .

brick:Water_Differential_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Differential Temperature Sensor" ;
    rdfs:subClassOf brick:Water_Temperature_Sensor ;
    skos:definition "Measures the difference in water temperature between an upstream and downstream point in a pipe or conduit"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Differential_Temperature ;
    brick:hasSubstance brick:Water .

brick:Water_Level_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Level Alarm" ;
    rdfs:subClassOf brick:Water_Alarm ;
    skos:definition "An alarm that indicates a high or low water level e.g. in a basin"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Level ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Level,
        tag:Point,
        tag:Water .

brick:Water_Loop a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Loop" ;
    rdfs:subClassOf brick:Loop ;
    skos:definition "A collection of equipment that transport and regulate water among each other"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Loop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Loop,
        tag:Water .

brick:Water_Meter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Meter" ;
    rdfs:subClassOf brick:Meter ;
    skos:definition "A meter that measures the usage or consumption of water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Meter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Meter,
        tag:Water .

brick:Water_Pump a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Pump" ;
    rdfs:subClassOf brick:Pump ;
    skos:definition "A pump that performs work on water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pump ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Pump,
        tag:Water .

brick:Water_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water System" ;
    rdfs:subClassOf brick:Heating_Ventilation_Air_Conditioning_System ;
    skos:definition "The equipment, devices and conduits that handle the production and distribution of water in a building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:System,
        tag:Water .

brick:Zone_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Zone Air Temperature Sensor" ;
    rdfs:subClassOf brick:Air_Temperature_Sensor ;
    skos:definition "Measures the temperature of air in a zone"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Zone ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Zone_Air .

brick:ambientTemperatureOfMeasurement a owl:ObjectProperty .

brick:area a brick:EntityProperty ;
    rdfs:label "Area" ;
    rdfs:range brick:AreaShape ;
    skos:definition "Entity has 2-dimensional area" .

brick:hasExternalReference a brick:EntityProperty ;
    rdfs:domain brick:Point ;
    skos:definition "A digital reference of the entity" .

brick:hasLocation a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Has location" ;
    rdfs:range brick:Location ;
    owl:inverseOf brick:isLocationOf ;
    skos:definition "Subject is physically located in the location given by the object"@en .

brick:hasPoint a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Has point" ;
    rdfs:range brick:Point ;
    owl:inverseOf brick:isPointOf ;
    skos:definition "The subject has a source of telemetry identified by the object. In some systems the source of telemetry may be represented as a digital/analog input/output point"@en .

s223:Context a s223:Class,
        sh:NodeShape ;
    rdfs:label "Context" ;
    rdfs:comment "The Context class is used to clarify the perspective to be taken when interpreting a given property." ;
    rdfs:subClassOf s223:Concept ;
    sh:property [ a sh:PropertyShape ;
            sh:class s223:System ;
            sh:minCount 1 ;
            sh:path s223:relativeTo ] .

s223:DomainSpace a s223:Class,
        sh:NodeShape ;
    rdfs:label "Space" ;
    rdfs:comment "A DomainSpace is an atomic subdivision (or component) of a Zone and is associated with a Domain such as Lighting, Heating, etc. Physical spaces can contain Domain spaces." ;
    rdfs:subClassOf s223:Connectable ;
    sh:property [ sh:class s223:Domain ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path s223:hasDomain ],
        s223:hasPropertyShape .

s223:HeatExchanger a s223:Class,
        sh:NodeShape ;
    rdfs:label "Heat exchanger" ;
    rdfs:subClassOf s223:Device .

s223:Junction a s223:Class,
        sh:NodeShape ;
    rdfs:label "Junction" ;
    rdfs:comment "A Junction is used to join two or more Segments together. This might be where a duct splits or joins, or it might be where a Segment inside one System is joined to a Segment connecting to something outside that System." ;
    rdfs:subClassOf s223:Concept ;
    sh:property [ sh:class s223:Segment ;
            sh:message "Junction is missing one or more Segments" ;
            sh:minCount 2 ;
            sh:path s223:lnx ;
            sh:severity sh:Info ] .

s223:QuantifiableProperty a s223:Class,
        sh:NodeShape ;
    rdfs:label "Quantifiable Property" ;
    rdfs:comment "This class is for quantifiable values that describe an object (System, Device, etc.) that are typically static. That is, they are neither measured nor specified in the course of operations." ;
    rdfs:subClassOf s223:Property,
        qudt:Quantity ;
    sh:or ( [ sh:minCount 1 ;
                sh:path qudt:hasQuantityKind ] [ sh:minCount 1 ;
                sh:path qudt:unit ] ) ;
    sh:property [ sh:path qudt:unit ;
            sh:severity sh:Info ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    sh:message "{$this} uses Unit {?punit}, while Setpoint {?setpoint} uses Unit {?sunit}. Be careful." ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/validation/model> ;
                    sh:select """
SELECT $this ?setpoint ?punit ?sunit
WHERE {
$this qudt:unit ?punit .
$this s223:hasSetpoint ?setpoint .
?setpoint qudt:unit ?sunit .
?punit qudt:hasDimensionVector ?pdv .
?sunit qudt:hasDimensionVector ?sdv .
FILTER (?punit != ?sunit) .
FILTER (?pdv = ?sdv) .
}
""" ] ],
        [ sh:path qudt:unit ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    sh:message "{$this} uses Unit {?punit}, while Setpoint {?setpoint} uses Unit {?sunit}. These are non-commensurate." ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/validation/model> ;
                    sh:select """
SELECT $this ?setpoint ?punit ?sunit
WHERE {
$this qudt:unit ?punit .
$this s223:hasSetpoint ?setpoint .
?setpoint qudt:unit ?sunit .
?punit qudt:hasDimensionVector ?pdv .
?sunit qudt:hasDimensionVector ?sdv .
FILTER (?punit != ?sunit) .
FILTER (?pdv != ?sdv) .
}
""" ] ],
        [ sh:path qudt:hasQuantityKind ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    sh:message "{$this} uses QuantityKind {?pqk} with DimensionVector {?pdv}, while Setpoint {?setpoint} uses QuantityKind {?sqk} with DimensionVector {?sdv}. These are non-commensurate" ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/validation/model> ;
                    sh:select """
SELECT $this ?setpoint ?pqk ?sqk ?pdv ?sdv
WHERE {
$this qudt:hasQuantityKind ?pqk .
$this s223:hasSetpoint ?setpoint .
?setpoint qudt:hasQuantityKind ?sqk .
?pqk qudt:hasDimensionVector ?pdv .
?sqk qudt:hasDimensionVector ?sdv .
FILTER (?pqk != ?sqk) .
FILTER (?pdv != ?sdv) .
}
""" ] ],
        [ sh:class s223:Setpoint ;
            sh:path s223:hasSetpoint ],
        [ sh:datatype xsd:decimal ;
            sh:path s223:hasValue ] ;
    sh:rule [ a sh:SPARQLRule ;
            sh:construct """
CONSTRUCT {
$this qudt:hasQuantityKind ?uniqueqk
}
WHERE {
{
SELECT $this (COUNT (DISTINCT (?qk)) AS ?count)
WHERE {
FILTER (NOT EXISTS {$this qudt:hasQuantityKind ?something}) .
$this qudt:unit/qudt:hasQuantityKind ?qk .
}
GROUP BY $this
}
FILTER (?count = 1)
$this qudt:unit/qudt:hasQuantityKind ?uniqueqk .
}
""" ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/inference/model-rules> ] ;
    sh:sparql [ a sh:SPARQLConstraint ;
            rdfs:comment "Checks for consistent dimension vectors for a Property and the Unit" ;
            sh:message "Inconsistent dimensionalities among the Property's Unit and Property's Quantity Kind" ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/validation/data> ;
            sh:select """
SELECT $this ?count
WHERE {  
{ SELECT  $this (COUNT (DISTINCT ?qkdv) AS ?count)
   WHERE 
{
      {
      $this qudt:hasQuantityKind/qudt:hasDimensionVector ?qkdv .
      }
      UNION
      {
      $this qudt:unit/qudt:hasDimensionVector ?qkdv .
      }
}
 GROUP BY $this 
}
FILTER (?count > 1) .
}
""" ] .

s223:connectsAt a rdf:Property ;
    rdfs:label "connects at" ;
    s223:inverseOf s223:connectsThrough .

s223:isConnectionPointOf a rdf:Property ;
    rdfs:label "is connection point of" ;
    s223:inverseOf s223:hasConnectionPoint .

s223:isContainedIn a rdf:Property ;
    rdfs:label "is contained in" ;
    s223:inverseOf s223:contains .

enum:Water-ChilledWater a s223:EnumerationValue ;
    rdfs:label "Water-Chilled water" .

enum:Water-HotWater a s223:EnumerationValue ;
    rdfs:label "Water-Hot water" .

dcterms:contributor a rdf:Property,
        owl:AnnotationProperty ;
    rdfs:label "contributor",
        "contributor"^^xsd:string ;
    rdfs:isDefinedBy dcterms: ;
    rdfs:range xsd:string .

dcterms:rights a owl:AnnotationProperty ;
    rdfs:label "rights",
        "rights"^^xsd:string ;
    rdfs:isDefinedBy dcterms: ;
    rdfs:range xsd:string .

dcterms:subject a owl:AnnotationProperty ;
    rdfs:label "subject",
        "subject"^^xsd:string ;
    rdfs:isDefinedBy dcterms: ;
    rdfs:range xsd:string .

qudt:Aspect a qudt:AspectClass,
        sh:NodeShape ;
    rdfs:label "QUDT Aspect" ;
    rdfs:comment "An aspect is an abstract type class that defines properties that can be reused."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf owl:Thing .

qudt:BooleanEncodingType a owl:Class,
        sh:NodeShape ;
    rdfs:label "Boolean encoding type" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Encoding .

qudt:CardinalityType a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cardinality Type" ;
    dcterms:description "In mathematics, the cardinality of a set is a measure of the number of elements of the set.  For example, the set \\(A = {2, 4, 6}\\) contains 3 elements, and therefore \\(A\\) has a cardinality of 3. There are two approaches to cardinality – one which compares sets directly using bijections and injections, and another which uses cardinal numbers."^^qudt:LatexString ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Cardinal_number"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Cardinality"^^xsd:anyURI ;
    qudt:plainTextDescription "In mathematics, the cardinality of a set is a measure of the number of elements of the set.  For example, the set 'A = {2, 4, 6}' contains 3 elements, and therefore 'A' has a cardinality of 3. There are two approaches to cardinality – one which compares sets directly using bijections and injections, and another which uses cardinal numbers." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:EnumeratedValue ;
    owl:oneOf ( qudt:CT_COUNTABLY-INFINITE qudt:CT_FINITE ) .

qudt:EndianType a owl:Class,
        sh:NodeShape ;
    rdfs:label "Endian Type" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Endianness"^^xsd:anyURI ;
    qudt:plainTextDescription "In computing, endianness is the ordering used to represent some kind of data as a sequence of smaller units. Typical cases are the order in which integer values are stored as bytes in computer memory (relative to a given memory addressing scheme) and the transmission order over a network or other medium. When specifically talking about bytes, endianness is also referred to simply as byte order.  Most computer processors simply store integers as sequences of bytes, so that, conceptually, the encoded value can be obtained by simple concatenation. For an 'n-byte' integer value this allows 'n!' (n factorial) possible representations (one for each byte permutation). The two most common of them are: increasing numeric significance with increasing memory addresses, known as little-endian, and its opposite, called big-endian." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:EnumeratedValue ;
    owl:oneOf ( qudt.type:LittleEndian qudt.type:BigEndian ) .

qudt:OrderedType a owl:Class,
        sh:NodeShape ;
    rdfs:label "Ordered type" ;
    dcterms:description "Describes how a data or information structure is ordered." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:EnumeratedValue ;
    owl:oneOf ( qudt:Unordered qudt:PartiallyOrdered qudt:TotallyOrdered ) .

qudt:UnitEquivalencePropertyGroup a sh:PropertyGroup ;
    rdfs:label "Equivalent Units" ;
    sh:order 50.0 .

qudt:abbreviation a owl:DatatypeProperty ;
    rdfs:label "abbreviation" ;
    dcterms:description "An abbreviation for a unit is a short ASCII string that is used in place of the full name for the unit in contexts where non-ASCII characters would be problematic, or where using the abbreviation will enhance readability. When a power of abase unit needs to be expressed, such as squares this can be done using abbreviations rather than symbols. For example, <em>sq ft</em> means <em>square foot</em>, and <em>cu ft</em> means <em>cubic foot</em>."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:coherentUnitOfSystem a owl:DeprecatedProperty,
        owl:ObjectProperty ;
    rdfs:label "is coherent unit of system" ;
    dcterms:description "A coherent unit of measurement for a unit system is a defined unit that may be expressed as a product of powers of the system's base units with the proportionality factor of one. A system of units is coherent with respect to a system of quantities and equations if the system of units is chosen in such a way that the equations between numerical values have exactly the same form (including the numerical factors) as the corresponding equations between the quantities. For example, the 'newton' and the 'joule'. These two are, respectively, the force that causes one kilogram to be accelerated at 1 metre per second per  second, and the work done by 1 newton acting over 1 metre. Being coherent refers to this consistent use of 1. In the old c.g.s. system , with its base units the centimetre and the gram, the corresponding coherent units were the dyne and the erg, respectively the force that causes 1 gram to be accelerated at 1 centimetre per second per second, and the work done by 1 dyne acting over 1 centimetre. So \\(1 newton = 10^5\\,dyne\\), \\(1 joule = 10^7\\,erg\\), making each of the four compatible in a decimal sense within its respective other system, but not coherent therein."^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:definedUnitOfSystem ;
    owl:inverseOf qudt:hasCoherentUnit .

qudt:description a owl:AnnotationProperty ;
    rdfs:label "qudt description" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf dcterms:description .

qudt:hasCoherentUnit a owl:ObjectProperty ;
    rdfs:label "coherent unit" ;
    dcterms:description "A coherent unit of measurement for a unit system is a defined unit that may be expressed as a product of powers of the system's base units with the proportionality factor of one."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:hasDefinedUnit ;
    owl:inverseOf qudt:coherentUnitOfSystem .

qudt:hasDerivedUnit a owl:ObjectProperty ;
    rdfs:label "derived unit" ;
    dcterms:description "This property relates a system of units to a unit of measure that is defined within the system in terms of the base units for the system. That is, the derived unit is defined as a product of the base units for the system raised to some rational power."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    owl:inverseOf qudt:derivedUnitOfSystem .

qudt:hasUnit a owl:ObjectProperty ;
    rdfs:label "has unit" ;
    dcterms:description "This property relates a system of units with a unit of measure that is either a) defined by the system, or b) accepted for use by the system and is convertible to a unit of equivalent dimension that is defined by the system. Systems of units may distinguish between base and derived units. Base units are the units which measure the base quantities for the corresponding system of quantities. The base units are used to define units for all other quantities as products of powers of the base units. Such units are called derived units for the system."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    owl:inverseOf qudt:unitOfSystem .

qudt:latexDefinition a owl:AnnotationProperty ;
    rdfs:label "latex definition" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:latexSymbol a owl:DatatypeProperty ;
    rdfs:label "latex symbol" ;
    dcterms:description "The symbol is a glyph that is used to represent some concept, typically a unit or a quantity, in a compact form. For example, the symbol for an Ohm is \\(ohm\\). This contrasts with 'unit:abbreviation', which gives a short alphanumeric abbreviation for the unit, 'ohm' for Ohm."^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qudt:ucumCode a owl:AnnotationProperty ;
    rdfs:label "ucum code" ;
    dcterms:description "<p><em>ucumCode</em> associates a QUDT unit with its UCUM code (case-sensitive). </p><p>In SHACL the values are derived from specifi ucum properties using 'sh:values'.</p>"^^rdf:HTML ;
    dcterms:source <https://ucum.org/ucum.html> ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:seeAlso <https://ucum.org/ucum.html> ;
    rdfs:subPropertyOf skos:notation .

qkdv:A-1E0L0I0M1H0T0D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A-1E0L0I0M1H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance -1 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:MolarMass ;
    qudt:latexDefinition "\\(M N^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E-1L2I0M1H0T-4D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E-1L2I0M1H0T-4D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent -1 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -4 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:PowerPerElectricCharge ;
    qudt:latexDefinition "\\(L^2 M T^-4 I^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L0I0M-1H0T0D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M-1H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L0I0M-1H0T2D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M-1H0T2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 2 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L1I0M0H1T0D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L1I0M0H1T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 1 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:LengthTemperature ;
    qudt:latexSymbol "\\(L \\cdot H\\)"^^qudt:LatexString,
        "\\(L \\cdot \\Theta\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A1E0L0I0M0H1T0D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A1E0L0I0M0H1T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 1 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 1 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:TemperatureAmountOfSubstance ;
    qudt:latexDefinition "\\(\\theta N\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

quantitykind:AbsorbedDose a qudt:QuantityKind ;
    rdfs:label "Absorbed Dose"@en ;
    dcterms:description "\"Absorbed Dose\" (also known as Total Ionizing Dose, TID) is a measure of the energy deposited in a medium by ionizing radiation. It is equal to the energy deposited per unit mass of medium, and so has the unit \\(J/kg\\), which is given the special name Gray (\\(Gy\\))."^^qudt:LatexString ;
    qudt:applicableUnit unit:GRAY,
        unit:MicroGRAY,
        unit:MilliGRAY,
        unit:RAD_R ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Absorbed_dose"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Absorbed_dose"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(D = \\frac{d\\bar{\\varepsilon}}{dm}\\), where \\(d\\bar{\\varepsilon}\\) is the mean energy imparted by ionizing radiation to an element of irradiated matter with the mass \\(dm\\)."^^qudt:LatexString ;
    qudt:symbol "D" ;
    rdfs:comment "Note that the absorbed dose is not a good indicator of the likely biological effect. 1 Gy of alpha radiation would be much more biologically damaging than 1 Gy of photon radiation for example. Appropriate weighting factors can be applied reflecting the different relative biological effects to find the equivalent dose. The risk of stoctic effects due to radiation exposure can be quantified using the effective dose, which is a weighted average of the equivalent dose to each organ depending upon its radiosensitivity. When ionising radiation is used to treat cancer, the doctor will usually prescribe the radiotherapy treatment in Gy. When risk from ionising radiation is being discussed, a related unit, the Sievert is used." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:SpecificEnergy .

quantitykind:AbsorbedDoseRate a qudt:QuantityKind ;
    rdfs:label "Absorbed Dose Rate"@en ;
    qudt:applicableUnit unit:ERG-PER-GM-SEC,
        unit:GRAY-PER-SEC,
        unit:W-PER-KiloGM ;
    qudt:baseUnitDimensions "\\(L^2/T^3\\)"^^qudt:LatexString,
        "\\(m^2/s^3\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-3D0 ;
    qudt:informativeReference "http://www.answers.com/topic/absorbed-dose-rate"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\dot{D} = \\frac{dD}{dt}\\), where \\(dD\\) is the increment of absorbed dose during time interval with duration \\(dt\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\dot{D}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Absorbed Dose Rate\" is the absorbed dose of ionizing radiation imparted at a given location per unit of time (second, minute, hour, or day)." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ActivePower a qudt:QuantityKind ;
    rdfs:label "Active Power"@en ;
    dcterms:description "\\(Active Power\\) is, under periodic conditions, the mean value, taken over one period \\(T\\), of the instantaneous power \\(p\\). In complex notation, \\(P = \\mathbf{Re} \\; \\underline{S}\\), where \\(\\underline{S}\\) is \\(\\textit{complex power}\\)\"."^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloV-A,
        unit:MegaV-A,
        unit:V-A ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-11-42"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(P = \\frac{1}{T}\\int_{0}^{T} pdt\\), where \\(T\\) is the period and \\(p\\) is instantaneous power."^^qudt:LatexString ;
    qudt:symbol "P" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ComplexPower,
        quantitykind:InstantaneousPower ;
    skos:broader quantitykind:ComplexPower .

quantitykind:Compressibility a qudt:QuantityKind ;
    rdfs:label "Compressibility"@en ;
    qudt:applicableUnit unit:M2-PER-N,
        unit:PER-BAR,
        unit:PER-MILLE-PER-PSI,
        unit:PER-PA ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M-1H0T2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Compressibility"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\chi = -(\\frac{1}{V})\\frac{dV}{d\\rho}\\), where \\(V\\) is volume and \\(p\\) is pressure."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\chi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "Compressibility is a measure of the relative volume change of a fluid or solid as a response to a pressure (or mean stress) change." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectricDipoleMoment a qudt:QuantityKind ;
    rdfs:label "Electric Dipole Moment"@en ;
    qudt:applicableUnit unit:C-M,
        unit:Debye ;
    qudt:baseUnitDimensions "\\(A \\cdot m \\cdot s\\)"^^qudt:LatexString,
        "\\(I \\cdot L \\cdot T\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L1I0M0H0T1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Electric_dipole_moment"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition """\\(E_p = -p \\cdot E\\), where \\(E_p\\) is the interaction energy of the molecule with electric dipole moment \\(p\\) and an electric field with electric field strength \\(E\\).

\\(p = q(r_+ - r_i)\\), where \\(r_+\\) and \\(r_-\\) are the position vectors to carriers of electric charge \\(a\\) and \\(-q\\), respectively."""^^qudt:LatexString ;
    qudt:plainTextDescription "\"Electric Dipole Moment\" is a measure of the separation of positive and negative electrical charges in a system of (discrete or continuous) charges. It is a vector-valued quantity. If the system of charges is neutral, that is if the sum of all charges is zero, then the dipole moment of the system is independent of the choice of a reference frame; however in a non-neutral system, such as the dipole moment of a single proton, a dependence on the choice of reference point arises. In such cases it is conventional to choose the reference point to be the center of mass of the system or the center of charge, not some arbitrary origin. This convention ensures that the dipole moment is an intrinsic property of the system. The electric dipole moment of a substance within a domain is the vector sum of electric dipole moments of all electric dipoles included in the domain." ;
    qudt:symbol "p" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectricField a qudt:QuantityKind ;
    rdfs:label "Electric Field"@en ;
    qudt:applicableUnit unit:V-PER-M,
        unit:V_Ab-PER-CentiM,
        unit:V_Stat-PER-CentiM ;
    qudt:baseUnitDimensions "\\(L \\cdot M/I \\cdot T^3\\)"^^qudt:LatexString,
        "\\(kg \\cdot m/A \\cdot s^3\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Electric_field"^^xsd:anyURI ;
    qudt:expression "\\(E\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Electric_field"^^xsd:anyURI ;
    qudt:plainTextDescription "The space surrounding an electric charge or in the presence of a time-varying magnetic field has a property called an electric field. This electric field exerts a force on other electrically charged objects. In the idealized case, the force exerted between two point charges is inversely proportional to the square of the distance between them. (Coulomb's Law)." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:EnergyPerTemperature a qudt:QuantityKind ;
    rdfs:label "Energy per temperature"@en ;
    qudt:applicableUnit unit:KiloJ-PER-K ;
    qudt:baseUnitDimensions "\\(L^2 \\cdot M/\\Theta \\cdot T^2\\)"^^qudt:LatexString,
        "\\(kg \\cdot m^2/K \\cdot s^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H-1T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:FrictionCoefficient a qudt:QuantityKind ;
    rdfs:label "Friction Coefficient"@en ;
    qudt:applicableUnit unit:NUM,
        unit:UNITLESS ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Friction"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Friction"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\mu\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Friction Coefficient\" is the ratio of the force of friction between two bodies and the force pressing them together" ;
    qudt:qkdvDenominator qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:qkdvNumerator qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:url "http://wiki.answers.com/Q/What_is_the_symbol_of_friction"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:InformationFlowRate a qudt:QuantityKind ;
    rdfs:label "Information flow rate"@en ;
    qudt:applicableUnit unit:HART-PER-SEC,
        unit:SHANNON-PER-SEC ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LengthTemperature a qudt:QuantityKind ;
    rdfs:label "Length Temperature"@en ;
    qudt:applicableUnit unit:DEG_C-CentiM,
        unit:K-M,
        unit:M-K ;
    qudt:baseUnitDimensions "\\(K \\cdot m\\)"^^qudt:LatexString,
        "\\(\\Theta \\cdot L\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H1T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LuminousIntensity a qudt:QuantityKind ;
    rdfs:label "Luminous Intensity"@en ;
    qudt:applicableUnit unit:CD,
        unit:CP ;
    qudt:baseUnitDimensions "\\(J\\)"^^qudt:LatexString,
        "\\(cd\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Luminous_intensity"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I1M0H0T0D0 ;
    qudt:plainTextDescription "Luminous Intensity is a measure of the wavelength-weighted power emitted by a light source in a particular direction per unit solid angle. The weighting is determined by the luminosity function, a standardized model of the sensitivity of the human eye to different wavelengths." ;
    qudt:symbol "J" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MagneticFluxPerUnitLength a qudt:QuantityKind ;
    rdfs:label "Magnetic flux per unit length"@en ;
    qudt:applicableUnit unit:N-PER-A,
        unit:T-M,
        unit:V-SEC-PER-M ;
    qudt:baseUnitDimensions "\\(L \\cdot M/I \\cdot T^2\\)"^^qudt:LatexString,
        "\\(kg \\cdot m/A \\cdot s^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-2D0 ;
    qudt:plainTextDescription "\"Magnetic Flux per Unit Length\" is a quantity in the SI and C.G.S. Systems of Quantities." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MagneticVectorPotential a qudt:QuantityKind ;
    rdfs:label "Magnetic Vector Potential"@en ;
    qudt:applicableUnit unit:KiloWB-PER-M,
        unit:V-SEC-PER-M,
        unit:WB-PER-M,
        unit:WB-PER-MilliM ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-23"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(B = \\textbf{rot} A\\), where \\(B\\) is magnetic flux density."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Magnetic Vector Potential\" is the vector potential of the magnetic flux density. The magnetic vector potential is not unique since any irrotational vector field quantity can be added to a given magnetic vector potential without changing its rotation. Under static conditions the magnetic vector potential is often chosen so that its divergence is zero." ;
    qudt:symbol "A" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:MagneticFluxDensity .

quantitykind:MagnetomotiveForce a qudt:QuantityKind ;
    rdfs:label "Magnetomotive Force"@en ;
    dcterms:description "\\(\\textbf{Magnetomotive Force}\\)  (\\(mmf\\)) is the ability of an electric circuit to produce magnetic flux. Just as the ability of a battery to produce electric current is called its electromotive force or emf, mmf is taken as the work required to move a unit magnet pole from any point through any path which links the electric circuit back the same point in the presence of the magnetic force produced by the electric current in the circuit. \\(\\textbf{Magnetomotive Force}\\) is the scalar line integral of the magnetic field strength along a closed path."^^qudt:LatexString ;
    qudt:applicableUnit unit:A,
        unit:AT,
        unit:GI,
        unit:OERSTED-CentiM ;
    qudt:baseUnitDimensions "\\(A\\)"^^qudt:LatexString,
        "\\(I \\cdot U\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Magnetomotive_force"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-60"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(F_m = \\oint \\mathbf{H} \\cdot dr\\), where \\(\\mathbf{H}\\) is magnetic field strength and \\(r\\) is position vector along a given curve \\(C\\) from point \\(a\\) to point \\(b\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(F_m \\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:MagneticFieldStrength_H .

quantitykind:MassConcentration a qudt:QuantityKind ;
    rdfs:label "Mass Concentration"@en ;
    qudt:applicableUnit unit:KiloGM-PER-M3,
        unit:MicroGM-PER-MilliL,
        unit:NanoGM-PER-MilliL,
        unit:PicoGM-PER-MilliL ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mass_concentration_(chemistry)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\rho_B = \\frac{m_B}{V}\\), where \\(m_B\\) is the mass of substance \\(B\\) and \\(V\\) is the volume."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\rho_B\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Mass Concentration\" of substance B  is defined as the mass of a constituent  divided by the volume of the mixture ." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MolarHeatCapacity a qudt:QuantityKind ;
    rdfs:label "Molar Heat Capacity"@en ;
    qudt:applicableUnit unit:BTU_IT-PER-MOL-DEG_F,
        unit:J-PER-MOL-K,
        unit:KiloCAL-PER-MOL-DEG_C ;
    qudt:baseUnitDimensions "\\(L^2 \\cdot M/\\Theta \\cdot M \\cdot T^2\\)"^^qudt:LatexString,
        "\\(kg \\cdot m^2/K \\cdot mol \\cdot s^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A-1E0L2I0M1H-1T-2D0 ;
    qudt:informativeReference "http://chemistry.about.com/od/chemistryglossary/g/Molar-Heat-Capacity-Definition.htm"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(C_m = \\frac{C}{n}\\), where \\(C\\) is heat capacity and \\(n\\) is amount of substance."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Molar Heat Capacity\" is the amount of heat energy required to raise the temperature of 1 mole of a substance. In SI units, molar heat capacity (symbol: cn) is the amount of heat in joules required to raise 1 mole of a substance 1 Kelvin." ;
    qudt:symbol "C_m",
        "cn" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MolarMass a qudt:QuantityKind ;
    rdfs:label "Molar Mass"@en ;
    dcterms:description "In chemistry, the molar mass M is defined as the mass of a given substance (chemical element or chemical compound) divided by its amount of substance. It is a physical property of a given substance. The base SI unit for molar mass is \\(kg/mol\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:GM-PER-MOL,
        unit:KiloGM-PER-KiloMOL,
        unit:KiloGM-PER-MOL ;
    qudt:baseUnitDimensions "\\(M/M\\)"^^qudt:LatexString,
        "\\(kg/mol\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Molar_mass"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A-1E0L0I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Molar_mass"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:symbol "M" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:OrbitalAngularMomentumQuantumNumber a qudt:QuantityKind ;
    rdfs:label "Orbital Angular Momentum Quantum Number"@en ;
    dcterms:description "The \"Principal Quantum Number\" describes the electron shell, or energy level, of an atom. The value of \\(n\\) ranges from 1 to the shell containing the outermost electron of that atom."^^qudt:LatexString ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Quantum_number"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(l^2 = \\hbar^2 l(l + 1), l = 0, 1, ..., n - 1\\), where \\(l_i\\) refers to a specific particle \\(i\\)."^^qudt:LatexString ;
    qudt:symbol "l" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:QuantumNumber ;
    skos:closeMatch quantitykind:MagneticQuantumNumber,
        quantitykind:PrincipalQuantumNumber,
        quantitykind:SpinQuantumNumber .

quantitykind:ParticleFluence a qudt:QuantityKind ;
    rdfs:label "Particle Fluence"@en ;
    qudt:applicableUnit unit:NUM-PER-HA,
        unit:NUM-PER-KiloM2,
        unit:NUM-PER-M2,
        unit:PER-M2 ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Fluence"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Phi = \\frac{dN}{dA}\\), where \\(dN\\) describes the number of particles incident on a small spherical domain at a given point in space, and \\(dA\\) describes the cross-sectional area of that domain."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\Phi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Particle Fluence\" is the total number of particles that intersect a unit area in a specific time interval of interest, and has units of m–2 (number of particles per meter squared)." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Permeability a qudt:QuantityKind ;
    rdfs:label "Permeability"@en ;
    qudt:applicableUnit unit:H-PER-M,
        unit:H_Stat-PER-CentiM,
        unit:MicroH-PER-M,
        unit:NanoH-PER-M ;
    owl:sameAs quantitykind:ElectromagneticPermeability .

quantitykind:PowerArea a qudt:QuantityKind ;
    rdfs:label "Power Area"@en ;
    qudt:applicableUnit unit:HectoPA-L-PER-SEC,
        unit:HectoPA-M3-PER-SEC,
        unit:W-M2 ;
    qudt:baseUnitDimensions "\\(L^4 \\cdot M/T^3\\)"^^qudt:LatexString,
        "\\(kg \\cdot m^4/s^3\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L4I0M1H0T-3D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PowerPerElectricCharge a qudt:QuantityKind ;
    rdfs:label "Power Per Electric Charge"@en ;
    qudt:applicableUnit unit:MilliV-PER-MIN,
        unit:V-PER-MicroSEC,
        unit:V-PER-SEC ;
    qudt:baseUnitDimensions "\\(L^2 \\cdot M/I \\cdot T^4\\)"^^qudt:LatexString,
        "\\(kg \\cdot m^2/A \\cdot s^4\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-4D0 ;
    qudt:plainTextDescription "\"Power Per Electric Charge\" is the amount of energy generated by a unit of electric charge." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ReactivePower a qudt:QuantityKind ;
    rdfs:label "Reactive Power"@en ;
    dcterms:description "\"Reactive Power}, for a linear two-terminal element or two-terminal circuit, under sinusoidal conditions, is the quantity equal to the product of the apparent power \\(S\\) and the sine of the displacement angle \\(\\psi\\). The absolute value of the reactive power is equal to the non-active power. The ISO (and SI) unit for reactive power is the voltampere. The special name \\(\\textit{var}\\) and symbol \\(\\textit{var}\\) are given in IEC 60027 1."^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloV-A_Reactive,
        unit:MegaV-A_Reactive,
        unit:V-A_Reactive ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-11-44"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(Q = lm \\underline{S}\\), where \\(\\underline{S}\\) is complex power. Alternatively expressed as: \\(Q = S \\cdot \\sin  \\psi\\), where \\(\\psi\\) is the displacement angle."^^qudt:LatexString ;
    qudt:symbol "Q" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ComplexPower ;
    skos:broader quantitykind:ComplexPower .

quantitykind:RelativeHumidity a qudt:QuantityKind ;
    rdfs:label "Relative Humidity"@en ;
    dcterms:description "\\(\\textit{Relative Humidity}\\) is the ratio of the partial pressure of water vapor in an air-water mixture to the saturated vapor pressure of water at a prescribed temperature. The relative humidity of air depends not only on temperature but also on the pressure of the system of interest. \\(\\textit{Relative Humidity}\\) is also referred to as \\(\\textit{Relative Partial Pressure}\\). Relative partial pressure is often referred to as \\(RH\\) and expressed in percent."^^qudt:LatexString ;
    qudt:applicableUnit unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Relative_humidity"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\varphi = p / p_{sat}\\), where \\(p\\) is partial pressure of vapour,  \\(p_{sat}\\) is thermodynamic temperature and \\(V\\) is its partial pressure at saturation (at the same temperature). Relative partial pressure is often referred to as \\(RH\\) and expressed in percent. \\(\\textit{Relative Humidity}\\) is also referred to as \\(\\textit{Relative Partial Pressure}\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\varphi\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:AbsoluteHumidity ;
    owl:sameAs quantitykind:RelativePartialPressure ;
    skos:altLabel "RH" .

quantitykind:SecondAxialMomentOfArea a qudt:QuantityKind ;
    rdfs:label "Second Axial Moment of Area"@en ;
    qudt:applicableUnit unit:IN4,
        unit:M4,
        unit:MilliM4 ;
    qudt:baseUnitDimensions "\\(m^4\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L4I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Second_moment_of_area"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(I_a = \\int r^2_Q dA\\), where \\(r_Q\\) is the radial distance from a \\(Q-axis\\) and \\(A\\) is area."^^qudt:LatexString ;
    qudt:plainTextDescription "The moment of inertia, also called mass moment of inertia, rotational inertia, polar moment of inertia of mass, or the angular mass is a property of a distribution of mass in space that measures its resistance to rotational acceleration about an axis." ;
    qudt:symbol "I" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SpecificActivity a qudt:QuantityKind ;
    rdfs:label "Specific Activity"@en ;
    qudt:applicableUnit unit:BQ-PER-KiloGM,
        unit:MicroBQ-PER-KiloGM,
        unit:MilliBQ-PER-GM,
        unit:MilliBQ-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-1H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Specific_activity"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(a = \\frac{A}{m}\\), where \\(A\\) is the activity of a sample and \\(m\\) is its mass."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Specific Activity\" is the number of decays per unit time of a radioactive sample. The SI unit of radioactive activity is the becquerel (Bq), in honor of the scientist Henri Becquerel." ;
    qudt:symbol "a" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:SpecificHeatCapacityAtSaturation a qudt:QuantityKind ;
    rdfs:label "Specific Heat Capacity at Saturation"@en ;
    qudt:applicableUnit unit:J-PER-KiloGM-K ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T-2D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:plainTextDescription "Specific heat per constant volume." ;
    qudt:symbol "c_{sat}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:SpecificHeatCapacity,
        quantitykind:SpecificHeatCapacityAtConstantPressure,
        quantitykind:SpecificHeatCapacityAtConstantVolume .

quantitykind:SpecificImpulse a qudt:QuantityKind ;
    rdfs:label "Specific Impulse"@en ;
    dcterms:description "The impulse produced by a rocket divided by the mass \\(mp\\) of propellant consumed. Specific impulse \\({I_{sp}}\\) is a widely used measure of performance for chemical, nuclear, and electric rockets. It is usually given in seconds for both U.S. Customary and International System (SI) units.  The impulse produced by a rocket is the thrust force \\(F\\) times its duration \\(t\\) in seconds. \\(I_{sp}\\) is the thrust per unit mass flowrate, but with \\(g_o\\), is the thrust per weight flowrate. The specific impulse is given by the equation: \\(I_{sp} = \\frac{F}{\\dot{m}g_o}\\)."^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:informativeReference "http://www.grc.nasa.gov/WWW/K-12/airplane/specimp.html"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:MassFlowRate .

quantitykind:SpectralRadiantEnergyDensity a qudt:QuantityKind ;
    rdfs:label "Spectral Radiant Energy Density"@en ;
    qudt:applicableUnit unit:J-PER-M4,
        unit:KiloPA-PER-MilliM,
        unit:PA-PER-M ;
    qudt:expression "\\(M-PER-L2-T2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T-2D0 ;
    qudt:plainTextDescription "\"Spectral Radiant Energy Density\" is the spectral concentration of radiant energy density (in terms of wavelength), or the spectral radiant energy density (in terms of wave length)." ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Thrust a qudt:QuantityKind ;
    rdfs:label "Thrust"@en ;
    dcterms:description """Thrust is a reaction force described quantitatively by Newton's Second and Third Laws. When a system expels or accelerates mass in one direction the accelerated mass will cause a proportional but opposite force on that system.
The pushing or pulling force developed by an aircraft engine or a rocket engine.
The force exerted in any direction by a fluid jet or by a powered screw, as, the thrust of an antitorque rotor.
Specifically, in rocketry, \\( F\\,= m\\cdot v\\) where m is propellant mass flow and v is exhaust velocity relative to the vehicle. Also called momentum thrust."""^^qudt:LatexString ;
    qudt:applicableUnit unit:DYN,
        unit:KIP_F,
        unit:KiloGM_F,
        unit:KiloN,
        unit:KiloP,
        unit:KiloPOND,
        unit:LB_F,
        unit:MegaLB_F,
        unit:MegaN,
        unit:MicroN,
        unit:MilliN,
        unit:N,
        unit:OZ_F,
        unit:PDL,
        unit:PlanckForce,
        unit:TON_F_US ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Thrust"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:plainTextDescription "Thrust is a reaction force described quantitatively by Newton's Second and Third Laws. When a system expels or accelerates mass in one direction the accelerated mass will cause a proportional but opposite force on that system." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Force .

quantitykind:TotalLinearStoppingPower a qudt:QuantityKind ;
    rdfs:label "Total Linear Stopping Power"@en ;
    qudt:applicableUnit unit:ERG-PER-CentiM,
        unit:EV-PER-ANGSTROM,
        unit:EV-PER-M,
        unit:J-PER-M ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Stopping_power_(particle_radiation)"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(S = -\\frac{dE}{dx}\\), where \\(-dE\\) is the energy decrement in the \\(x-direction\\) along an elementary path with the length \\(dx\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Total Linear Stopping Power\" is defined as the average energy loss of the particle per unit path length." ;
    qudt:symbol "S" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:VolumetricHeatCapacity a qudt:QuantityKind ;
    rdfs:label "Volumetric Heat Capacity"@en ;
    dcterms:description "\\(\\textit{Volumetric Heat Capacity (VHC)}\\), also termed \\(\\textit{volume-specific heat capacity}\\), describes the ability of a given volume of a substance to store internal energy while undergoing a given temperature change, but without undergoing a phase transition. It is different from specific heat capacity in that the VHC is a \\(\\textit{per unit volume}\\) measure of the relationship between thermal energy and temperature of a material, while the specific heat is a \\(\\textit{per unit mass}\\) measure (or occasionally per molar quantity of the material)."^^qudt:LatexString ;
    qudt:applicableUnit unit:J-PER-M3-K,
        unit:LB_F-PER-IN2-DEG_F,
        unit:MilliBAR-PER-K ;
    qudt:baseUnitDimensions "\\(M/\\Theta \\cdot L \\cdot T^2\\)"^^qudt:LatexString,
        "\\(kg/K \\cdot m \\cdot s^2\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Volumetric_heat_capacity"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H-1T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Volumetric_heat_capacity"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

unit:BFT a qudt:Unit,
        unit:Unit ;
    rdfs:label "Beaufort"@en ;
    qudt:conversionMultiplier 0.0 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Speed ;
    qudt:iec61360Code "0112/2///62720#UAA110" ;
    qudt:plainTextDescription "unit for classification of winds according to their speed, developed by Sir Francis Beaufort as measure for the over-all behaviour of a ship's sail at different wind speeds" ;
    qudt:uneceCommonCode "M19" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BIOT a qudt:Unit,
        unit:Unit ;
    rdfs:label "Biot"@en ;
    dcterms:description "\"Biot\" is another name for the abampere (aA), which is the basic electromagnetic unit of electric current in the emu-cgs (centimeter-gram-second) system of units. It is called after a French physicist, astronomer, and mathematician Jean-Baptiste Biot. One abampere is equal to ten amperes in the SI system of units. One abampere is the current, which produces a force of 2 dyne/cm between two infinitively long parallel wires that are 1 cm apart."^^rdf:HTML ;
    qudt:conversionMultiplier 10.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Biot"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCurrent ;
    qudt:iec61360Code "0112/2///62720#UAB210" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Biot?oldid=443318821"^^xsd:anyURI,
        "http://www.translatorscafe.com/cafe/EN/units-converter/current/10-4/"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/biot> ;
    qudt:symbol "Bi",
        "Bi"^^xsd:string,
        "abA"^^xsd:string ;
    qudt:ucumCode "Bi"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:A_Ab .

unit:CASES-PER-1000I-YR a qudt:Unit ;
    rdfs:label "Cases per 1000 individuals per year"@en ;
    dcterms:description "The typical expression of morbidity rate, expressed as cases per 1000 individuals, per year."^^rdf:HTML ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Incidence ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Incidence_(epidemiology)"^^xsd:anyURI ;
    qudt:plainTextDescription "The typical expression of morbidity rate, expressed as cases per 1000 individuals, per year." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CD a qudt:Unit,
        unit:Unit ;
    rdfs:label "Candela"@en ;
    dcterms:description "\\(\\textit{Candela}\\) is a unit for  'Luminous Intensity' expressed as \\(cd\\).  The candela is the SI base unit of luminous intensity; that is, power emitted by a light source in a particular direction, weighted by the luminosity function (a standardized model of the sensitivity of the human eye to different wavelengths, also known as the luminous efficiency function). A common candle emits light with a luminous intensity of roughly one candela."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Candela"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I1M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:LuminousIntensity ;
    qudt:iec61360Code "0112/2///62720#UAA370",
        "0112/2///62720#UAD719" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Candela?oldid=484253082"^^xsd:anyURI,
        "http://www.simetric.co.uk/siderived.htm"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/candela> ;
    qudt:symbol "cd",
        "cd"^^xsd:string ;
    qudt:ucumCode "cd"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "CDL" ;
    qudt:unitOfSystem sou:SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG_R-PER-MIN a qudt:Unit ;
    rdfs:label "Degree Rankine per Minute"@en ;
    dcterms:description "\\(A rate of change of temperature measured in degree Rankine in periods of one minute\\)"^^qudt:LatexString ;
    qudt:expression "\\(degR / m\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T-1D0 ;
    qudt:hasQuantityKind quantitykind:TemperaturePerTime ;
    qudt:iec61360Code "0112/2///62720#UAA052" ;
    qudt:isScalingOf unit:DEG_R-PER-SEC ;
    qudt:ucumCode "[degR].min-1"^^qudt:UCUMcs,
        "[degR]/min"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J29" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG_R-PER-SEC a qudt:Unit ;
    rdfs:label "Degree Rankine per Second"@en ;
    dcterms:description "\\(A rate of change of temperature measured in degree Rankine in periods of one second.\\)"^^qudt:LatexString ;
    qudt:expression "\\(degR / s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T-1D0 ;
    qudt:hasQuantityKind quantitykind:TemperaturePerTime ;
    qudt:iec61360Code "0112/2///62720#UAA053" ;
    qudt:ucumCode "[degR].s-1"^^qudt:UCUMcs,
        "[degR]/s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J30" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT3 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Cubic Foot"@en ;
    dcterms:description "The cubic foot is an Imperial and US customary unit of volume, used in the United States and the United Kingdom. It is defined as the volume of a cube with sides of one foot (0.3048 m) in length. To calculate cubic feet multiply length X width X height. "^^rdf:HTML ;
    qudt:conversionMultiplier 0.028316846592 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(ft^{3}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:iec61360Code "0112/2///62720#UAA456" ;
    qudt:ucumCode "[cft_i]"^^qudt:UCUMcs,
        "[ft_i]3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "FTQ" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT3-PER-MIN-FT2 a qudt:Unit,
        unit:Unit ;
    rdfs:label "Cubic Foot Per Minute Square Foot"@en ;
    qudt:conversionMultiplier 0.00508 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Speed ;
    qudt:iec61360Code "0112/2///62720#UAB086" ;
    qudt:plainTextDescription "unit of the volume flow rate according to the Anglio-American and imperial system of units cubic foot per minute related to the transfer area according to the Anglian American and Imperial system of units square foot" ;
    qudt:ucumCode "[cft_i].min-1.[sft_i]-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "36" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FemtoGM-PER-KiloGM a qudt:Unit ;
    rdfs:label "Femtograms per kilogram"@en ;
    dcterms:description "One part per 10**18 by mass of the measurand in the matrix."@en ;
    qudt:conversionMultiplier 0.18 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:MassRatio ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:ucumCode "fg.kg-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GM-PER-GM a qudt:Unit ;
    rdfs:label "Gram Per Gram"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:description "mass ratio consisting of the 0.001-fold of the SI base unit kilogram divided by the 0.001-fold of the SI base unit kilogram."^^rdf:HTML ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:MassRatio ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:ucumCode "g.g-1"^^qudt:UCUMcs,
        "g/g"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GM-PER-KiloGM a qudt:Unit ;
    rdfs:label "Gram Per Kilogram"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:MassRatio ;
    qudt:iec61360Code "0112/2///62720#UAA481" ;
    qudt:plainTextDescription "0,001 fold of the SI base unit kilogram divided by the SI base unit kilogram" ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:ucumCode "g.kg-1"^^qudt:UCUMcs,
        "g/kg"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "GK" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GT a qudt:Unit ;
    rdfs:label "Gross Tonnage"@en ;
    dcterms:description "The formula for calculating GT is given by \\({ GT=V\\times (0.2+0.02\\times \\log _{10}(V))}\\)" ;
    qudt:conversionMultiplier 0.0 ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:informativeReference "http://www.imo.org/en/About/Conventions/ListOfConventions/Pages/International-Convention-on-Tonnage-Measurement-of-Ships.aspx"^^xsd:anyURI,
        "https://en.wikipedia.org/wiki/Gross_tonnage"^^xsd:anyURI ;
    qudt:latexDefinition "\\({ GT=V\\times (0.2+0.02\\times \\log _{10}(V))}\\) where V is measured in cubic meters."^^qudt:LatexString ;
    qudt:plainTextDescription "Gross tonnage (GT, G.T. or gt) is a nonlinear measure of a ship's overall internal volume. Gross tonnage is different from gross register tonnage. Gross tonnage is used to determine things such as a ship's manning regulations, safety rules, registration fees, and port dues, whereas the older gross register tonnage is a measure of the volume of only certain enclosed spaces." ;
    qudt:ucumCode "t{gross}"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    rdfs:seeAlso unit:RT .

unit:GigaC-PER-M3 a qudt:Unit,
        unit:Unit ;
    rdfs:label "Gigacoulomb Per Cubic Metre"@en,
        "Gigacoulomb Per Cubic Meter"@en-us ;
    qudt:conversionMultiplier 1000000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Speed ;
    qudt:iec61360Code "0112/2///62720#UAA149" ;
    qudt:plainTextDescription "1 000 000 000-fold of the SI derived unit coulomb divided by the power of the SI base unit metre with the exponent 3" ;
    qudt:ucumCode "GC.m-3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A84" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GigaHZ a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Gigahertz"@en ;
    dcterms:description "The hertz (symbol Hz) is the SI unit of frequency defined as the number of cycles per second of a periodic phenomenon. A GigaHertz is \\(10^{9} hz\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1000000000.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Hertz"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Frequency ;
    qudt:iec61360Code "0112/2///62720#UAA150" ;
    qudt:symbol "GHz",
        "GHz"^^xsd:string ;
    qudt:ucumCode "GHz"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A86" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Gs a qudt:Unit ;
    rdfs:label "Gs"@en ;
    dcterms:description "The gauss, abbreviated as \\(G\\), is the cgs unit of measurement of a magnetic field \\(B\\), which is also known as the \"magnetic flux density\" or the \"magnetic induction\".  One gauss is defined as one maxwell per square centimeter; it equals \\(10^{-4} tesla\\) (or \\(100 micro T\\)). The Gauss is identical to maxwells per square centimetre; technically defined in a three-dimensional system, it corresponds in the SI, with its extra base unit the ampere. The gauss is quite small by earthly standards, 1 Gs being only about four times Earth's flux density, but it is subdivided, with \\(1 gauss = 105 gamma\\). This unit of magnetic induction is also known as the \\(\\textit{abtesla}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0001 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Gauss_%28unit%29"^^xsd:anyURI ;
    qudt:derivedUnitOfSystem sou:CGS-EMU ;
    qudt:hasDimensionVector qkdv:A0E-1L0I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:MagneticFluxDensity ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Gauss_(unit)"^^xsd:anyURI,
        "http://www.diracdelta.co.uk/science/source/g/a/gauss/source.html"^^xsd:anyURI,
        "http://www.oxfordreference.com/view/10.1093/acref/9780198605225.001.0001/acref-9780198605225-e-526?rskey=HAbfz2"^^xsd:anyURI ;
    qudt:symbol "Gs" ;
    qudt:ucumCode "G"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:GAUSS,
        unit:T_Ab .

unit:HZ-M a qudt:Unit,
        unit:Unit ;
    rdfs:label "Hertz Metre"@en,
        "Hertz Meter"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Speed ;
    qudt:iec61360Code "0112/2///62720#UAA171" ;
    qudt:plainTextDescription "product of the SI derived unit hertz and the SI base unit metre" ;
    qudt:ucumCode "Hz.m"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H34" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:J-SEC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Joule Second"@en ;
    dcterms:description "\\(The joule-second is a unit equal to a joule multiplied by a second, used to measure action or angular momentum. The joule-second is the unit used for Planck's constant.\\)"^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Action,
        quantitykind:AngularMomentum ;
    qudt:iec61360Code "0112/2///62720#UAB151" ;
    qudt:symbol "J s" ;
    qudt:ucumCode "J.s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B18" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-M2-PER-SEC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Kilogram Square Metre Per Second"@en,
        "Kilogram Square Meter Per Second"@en-us ;
    dcterms:description "\"Kilogram Square Meter Per Second\" is a unit for  'Angular Momentum' expressed as \\(kg-m^2-s^{-1}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(kg-m2/sec\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:AngularImpulse,
        quantitykind:AngularMomentum ;
    qudt:iec61360Code "0112/2///62720#UAA623" ;
    qudt:ucumCode "kg.m2.s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B33" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-PER-KiloGM a qudt:Unit ;
    rdfs:label "Kilogram Per Kilogram"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:MassRatio ;
    qudt:iec61360Code "0112/2///62720#UAA610" ;
    qudt:plainTextDescription "SI base unit kilogram divided by the SI base unit kilogram" ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:ucumCode "kg.kg-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "3H" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloHZ a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilohertz"@en ;
    dcterms:description "\"Kilohertz\" is a C.G.S System unit for  'Frequency' expressed as \\(KHz\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Frequency ;
    qudt:iec61360Code "0112/2///62720#UAA566" ;
    qudt:symbol "kHz",
        "kHz"^^xsd:string ;
    qudt:ucumCode "kHz"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "KHZ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloHZ-M a qudt:Unit ;
    rdfs:label "Kilohertz Metre"@en,
        "Kilohertz Meter"@en-us ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:ConductionSpeed,
        quantitykind:GroupSpeedOfSound,
        quantitykind:PhaseSpeedOfSound,
        quantitykind:SoundParticleVelocity ;
    qudt:iec61360Code "0112/2///62720#UAA567" ;
    qudt:plainTextDescription "product of the 1 000-fold of the SI derived unit hertz and the SI base unit metre" ;
    qudt:ucumCode "kHz.m"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "M17" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:L a qudt:Unit ;
    rdfs:label "Litre"@en,
        "Liter"@en-us ;
    dcterms:description "The \\(litre\\) (American spelling: \\(\\textit{liter}\\); SI symbol \\(l\\) or \\(L\\)) is a non-SI metric system unit of volume equal to \\(1 \\textit{cubic decimetre}\\) (\\(dm^3\\)), 1,000 cubic centimetres (\\(cm^3\\)) or \\(1/1000 \\textit{cubic metre}\\). If the lower case \"L\" is used as the symbol, it is sometimes rendered as a cursive \"l\" to help distinguish it from the capital \"I\", although this usage has no official approval by any international bureau."^^qudt:LatexString ;
    qudt:allowedUnitOfSystem sou:SI ;
    qudt:conversionMultiplier 0.001 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Litre"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:LiquidVolume,
        quantitykind:Volume ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Litre?oldid=494846400"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/litre> ;
    qudt:symbol "L",
        "l" ;
    qudt:ucumCode "L"^^qudt:UCUMcs,
        "l"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    skos:altLabel "litre" .

unit:M2-PER-KiloGM a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Square Metre per Kilogram"@en,
        "Square Meter per Kilogram"@en-us ;
    dcterms:description "Square Meter Per Kilogram (m2/kg) is a unit in the category of Specific Area. It is also known as square meters per kilogram, square metre per kilogram, square metres per kilogram, square meter/kilogram, square metre/kilogram. This unit is commonly used in the SI unit system. Square Meter Per Kilogram (m2/kg) has a dimension of M-1L2 where M is mass, and L is length. This unit is the standard SI unit in this category."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(m^2/kg\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M-1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassAbsorptionCoefficient,
        quantitykind:MassAttenuationCoefficient,
        quantitykind:MassEnergyTransferCoefficient,
        quantitykind:MolarAbsorptionCoefficient ;
    qudt:iec61360Code "0112/2///62720#UAA750" ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:ucumCode "m2.kg-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D21" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaHZ a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Megahertz"@en ;
    dcterms:description "\"Megahertz\" is a C.G.S System unit for  'Frequency' expressed as \\(MHz\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Frequency ;
    qudt:iec61360Code "0112/2///62720#UAA209" ;
    qudt:symbol "MHz",
        "MHz"^^xsd:string ;
    qudt:ucumCode "MHz"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "MHZ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaHZ-M a qudt:Unit,
        unit:Unit ;
    rdfs:label "Megahertz Metre"@en,
        "Megahertz Meter"@en-us ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Speed ;
    qudt:iec61360Code "0112/2///62720#UAA210" ;
    qudt:plainTextDescription "product of the 1 000 000-fold of the SI derived unit hertz and the 1 000-fold of the SI base unit metre" ;
    qudt:ucumCode "MHz.m"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H39" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroGM-PER-GM a qudt:Unit ;
    rdfs:label "Micrograms per gram"@en ;
    dcterms:description "One part per 10**6 (million) by mass of the measurand in the matrix."@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:MassRatio ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:ucumCode "ug.g-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroGM-PER-KiloGM a qudt:Unit ;
    rdfs:label "Microgram Per Kilogram"@en ;
    qudt:conversionMultiplier 0.000000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:MassRatio ;
    qudt:iec61360Code "0112/2///62720#UAA083" ;
    qudt:plainTextDescription "mass ratio as 0.000000001-fold of the SI base unit kilogram divided by the SI base unit kilogram" ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:ucumCode "ug.kg-1"^^qudt:UCUMcs,
        "ug/kg"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J33" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliGM-PER-DeciL a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "milligrams per decilitre"@en,
        "milligrams per decilitre"@en-us ;
    dcterms:description "A derived unit for amount-of-substance concentration measured in mg/dL."^^rdf:HTML ;
    qudt:conversionMultiplier 0.01 ;
    qudt:expression "\\(mg/L\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:BloodGlucoseLevel_Mass,
        quantitykind:Density ;
    qudt:ucumCode "mg.dL-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliGM-PER-GM a qudt:Unit ;
    rdfs:label "Milligram Per Gram"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:MassRatio ;
    qudt:iec61360Code "0112/2///62720#UAA822" ;
    qudt:plainTextDescription "0.000001-fold of the SI base unit kilogram divided by the 0.001-fold of the SI base unit kilogram" ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:ucumCode "mg.g-1"^^qudt:UCUMcs,
        "mg/g"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H64" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliGM-PER-KiloGM a qudt:Unit ;
    rdfs:label "Milligram Per Kilogram"@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:MassRatio ;
    qudt:iec61360Code "0112/2///62720#UAA826" ;
    qudt:plainTextDescription "0.000001-fold of the SI base unit kilogram divided by the SI base unit kilogram" ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:ucumCode "mg.kg-1"^^qudt:UCUMcs,
        "mg/kg"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:N-M-PER-M2 a qudt:Unit ;
    rdfs:label "Newton Metre Per Square Metre"@en,
        "Newton Meter Per Square Meter"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:EnergyPerArea,
        quantitykind:ForcePerLength ;
    qudt:iec61360Code "0112/2///62720#UAA244" ;
    qudt:plainTextDescription "product of the SI derived unit newton and the SI base unit metre divided by the power of the SI base unit metre with the exponent 2" ;
    qudt:ucumCode "N.m.m-2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H86" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:N-M-SEC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Newton Metre Second"@en,
        "Newton Meter Second"@en-us ;
    dcterms:description "The SI derived unit of angular momentum. "^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Newton_metre"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:AngularImpulse,
        quantitykind:AngularMomentum ;
    qudt:iec61360Code "0112/2///62720#UAA245" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/SI_derived_unit"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:siUnitsExpression "N.m.sec" ;
    qudt:symbol "N-m-sec" ;
    qudt:ucumCode "N.m.s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C53" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NanoGM-PER-KiloGM a qudt:Unit ;
    rdfs:label "Nanogram Per Kilogram"@en ;
    qudt:conversionMultiplier 0.000000000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:MassRatio ;
    qudt:iec61360Code "0112/2///62720#UAA911" ;
    qudt:plainTextDescription "mass ratio consisting of the 0.000000000001-fold of the SI base unit kilogram divided by the SI base unit kilogram" ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:ucumCode "ng.kg-1"^^qudt:UCUMcs,
        "ng/kg"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L32" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OHM a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Ohm"@en ;
    dcterms:description "The \\textit{ohm} is the SI derived unit of electrical resistance, named after German physicist Georg Simon Ohm. \\(\\Omega \\equiv\\ \\frac{\\text{V}}{\\text{A}}\\ \\equiv\\ \\frac{\\text{volt}}{\\text{amp}}\\ \\equiv\\ \\frac{\\text{W}}{\\text {A}^{2}}\\ \\equiv\\ \\frac{\\text{watt}}{\\text{amp}^{2}}\\ \\equiv\\ \\frac{\\text{H}}{\\text {s}}\\ \\equiv\\ \\frac{\\text{henry}}{\\text{second}}\\)"^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Ohm"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E-2L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Impedance,
        quantitykind:ModulusOfImpedance,
        quantitykind:Reactance,
        quantitykind:Resistance ;
    qudt:iec61360Code "0112/2///62720#UAA017" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Ohm?oldid=494685555"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/ohm> ;
    qudt:siUnitsExpression "V/A" ;
    qudt:symbol "Ω" ;
    qudt:ucumCode "Ohm"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "OHM" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-K a qudt:Unit ;
    rdfs:label "Reciprocal Kelvin"@en ;
    dcterms:description "Per Kelvin Unit is a denominator unit with dimensions \\(/k\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(/K\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H-1T0D0 ;
    qudt:hasQuantityKind quantitykind:CubicExpansionCoefficient,
        quantitykind:InverseTemperature,
        quantitykind:LinearExpansionCoefficient,
        quantitykind:RelativePressureCoefficient ;
    qudt:ucumCode "K-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-PA a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Reciprocal Pascal"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Pascal"^^xsd:anyURI ;
    qudt:expression "\\(/Pa\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M-1H0T2D0 ;
    qudt:hasQuantityKind quantitykind:Compressibility,
        quantitykind:InversePressure,
        quantitykind:IsentropicCompressibility,
        quantitykind:IsothermalCompressibility ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Pascal?oldid=492989202"^^xsd:anyURI ;
    qudt:siUnitsExpression "m^2/N" ;
    qudt:ucumCode "Pa-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-SEC a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Reciprocal Second"@en ;
    dcterms:description "A reciprical unit of time for \\(\\textit{reciprocal second}\\) or \\(\\textit{inverse second}\\). The \\(\\textit{Per Second}\\) is a unit of rate."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Frequency ;
    qudt:symbol "Hz"^^xsd:string ;
    qudt:ucumCode "/s"^^qudt:UCUMcs,
        "s-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:HZ .

unit:PHOT a qudt:Unit ;
    rdfs:label "Phot"@en ;
    dcterms:description "A phot (ph) is a photometric unit of illuminance, or luminous flux through an area. It is not an SI unit, but rather is associated with the older centimetre gram second system of units.  Metric dimensions: \\(illuminance = luminous intensity \\times solid angle / length\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 10000.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Phot"^^xsd:anyURI ;
    qudt:derivedCoherentUnitOfSystem sou:CGS ;
    qudt:hasDimensionVector qkdv:A0E0L-2I1M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:LuminousFluxPerArea ;
    qudt:iec61360Code "0112/2///62720#UAB255" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Phot?oldid=477198725"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/phot> ;
    qudt:symbol "ph" ;
    qudt:ucumCode "ph"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PicoGM-PER-GM a qudt:Unit ;
    rdfs:label "Picograms per gram"@en ;
    dcterms:description "One part per 10**12 (trillion) by mass of the measurand in the matrix."@en ;
    qudt:conversionMultiplier 0.000000000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:MassRatio ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:ucumCode "pg.g-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PicoGM-PER-KiloGM a qudt:Unit ;
    rdfs:label "Picograms per kilogram"@en ;
    dcterms:description "One part per 10**15 by mass of the measurand in the matrix."@en ;
    qudt:conversionMultiplier 0.15 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:MassRatio ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:ucumCode "pg.kg-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PicoPA-PER-KiloM a qudt:Unit ;
    rdfs:label "Picopascal Per Kilometre"@en,
        "Picopascal Per Kilometer"@en-us ;
    qudt:conversionMultiplier 0.000000000000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:EnergyPerArea,
        quantitykind:ForcePerLength ;
    qudt:iec61360Code "0112/2///62720#UAA933" ;
    qudt:plainTextDescription "0.000000000001-fold of the SI derived unit pascal divided by the 1 000-fold of the SI base unit metre" ;
    qudt:ucumCode "pPa.km-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H69" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:QT_US a qudt:Unit ;
    rdfs:label "US Liquid Quart"@en ;
    dcterms:description "\"US Liquid Quart\" is a unit for  'Liquid Volume' expressed as \\(qt\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.000946353 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:LiquidVolume,
        quantitykind:Volume ;
    qudt:symbol "qt" ;
    qudt:ucumCode "[qt_us]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:RT a qudt:Unit ;
    rdfs:label "Register Ton"@en ;
    dcterms:description "The register ton is a unit of volume used for the cargo capacity of a ship, defined as 100 cubic feet (roughly 2.83 cubic metres)."^^rdf:HTML ;
    qudt:conversionMultiplier 2.8316846592 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Volume ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Tonnage#Tonnage_measurements"^^xsd:anyURI ;
    qudt:symbol "RT" ;
    qudt:ucumCode "100.[cft_i]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    rdfs:seeAlso unit:GT .

unit:TON_LONG-PER-YD3 a qudt:Unit,
        unit:Unit ;
    rdfs:label "Long Ton per Cubic Yard"@en ;
    dcterms:description "The long ton per cubic yard density measurement unit is used to measure volume in cubic yards in order to estimate weight or mass in long tons."^^rdf:HTML ;
    qudt:conversionMultiplier 1328.9391836174336 ;
    qudt:definedUnitOfSystem sou:IMPERIAL ;
    qudt:expression "\\(ton/yd^3\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Density ;
    qudt:ucumCode "[lton_av]/[cyd_i]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:TON_UK-PER-YD3 .

unit:TON_SHORT-PER-YD3 a qudt:Unit,
        unit:Unit ;
    rdfs:label "Short Ton per Cubic Yard"@en ;
    dcterms:description "The short ton per cubic yard density measurement unit is used to measure volume in cubic yards in order to estimate weight or mass in short tons."^^rdf:HTML ;
    qudt:conversionMultiplier 1186.552842515566 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(ton/yd^3\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Density ;
    qudt:ucumCode "[ston_av].[cyd_i]-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:TON_US-PER-YD3 .

unit:T_Ab a qudt:Unit ;
    rdfs:label "Abtesla"@en ;
    dcterms:description "The unit of magnetic induction in the cgs system, \\(10^{-4}\\,tesla\\). Also known as the gauss."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0001 ;
    qudt:derivedUnitOfSystem sou:CGS-EMU ;
    qudt:hasDimensionVector qkdv:A0E-1L0I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:MagneticField,
        quantitykind:MagneticFluxDensity ;
    qudt:informativeReference "http://www.diracdelta.co.uk/science/source/g/a/gauss/source.html"^^xsd:anyURI ;
    qudt:symbol "abT" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:GAUSS,
        unit:Gs .

unit:W-PER-M2-SR a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Watt per Square Metre Steradian"@en,
        "Watt per Square Meter Steradian"@en-us ;
    dcterms:description "\\(\\textbf{Watt per steradian per square metre}\\) is the SI unit of radiance (\\(W·sr^{-1}·m^{-2}\\)), while that of spectral radiance in frequency is the watt per steradian per square metre per hertz (\\(W·sr^{-1}·m^{-2}·Hz^{-1}\\)) and that of spectral radiance in wavelength is the watt per steradian per square metre, per metre (\\(W·sr^{-1}·m^{-3}\\)), commonly the watt per steradian per square metre per nanometre (\\(W·sr^{-1}·m^{-2}·nm^{-1}\\)). It has a dimension of \\(ML^{-4}T^{-3}\\) where \\(M\\) is mass, \\(L\\) is length, and \\(T\\) is time. This unit is the standard SI unit in this category."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(W/(m^2.sr)\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:PowerAreaPerSolidAngle,
        quantitykind:Radiance ;
    qudt:informativeReference "http://asd-www.larc.nasa.gov/Instrument/ceres_units.html"^^xsd:anyURI,
        "http://www.efunda.com/glossary/units/units--radiance--watt_per_square_meter_per_steradian.cfm"^^xsd:anyURI,
        "https://en.wikipedia.org/wiki/Radiance"^^xsd:anyURI ;
    qudt:ucumCode "W.m-2.sr-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

arg:property a rdf:Property ;
    rdfs:subPropertyOf sp:arg .

sp:exists a spin:Function ;
    rdfs:label "EXISTS" ;
    spin:returnType xsd:boolean ;
    spin:symbol "EXISTS" ;
    rdfs:comment "The filter function EXISTS. The graph pattern is stored in sp:elements." ;
    rdfs:subClassOf spl:BooleanFunctions .

spin:Templates a spin:Template ;
    rdfs:label "Templates" ;
    spin:abstract true ;
    rdfs:comment "Suggested abstract base class for all Templates." ;
    rdfs:subClassOf spin:Modules .

spin:_arg3 a sp:Variable ;
    sp:varName "arg3" .

spin:command a rdf:Property ;
    rdfs:label "command" ;
    rdfs:comment "Can be used to link a resource with a SPARQL query or update request (sp:Command)." ;
    rdfs:range sp:Command .

spl:defaultValue a rdf:Property ;
    rdfs:label "default value" ;
    rdfs:subPropertyOf sp:arg .

spl:predicate a rdf:Property ;
    rdfs:label "predicate" ;
    rdfs:subPropertyOf sp:arg .

vaem:CatalogEntry dcterms:description "VAEM Governed Object class is a placeholder for concepts that are fully defined by the voag:GovernedObject concept hierarchy for building a catalog of ontologies and graphs"^^xsd:string .

vaem:Dimension a owl:Class ;
    rdfs:label "Domain"^^xsd:string ;
    dcterms:description "A dimension identifies a separation of concens that serves as a way to categorize an ontology graph. In VAEM,  the notion of \"Dimension\" is partitioned into \"Aspect\", \"Discipline\", \"Domain\" and \"Viewpoint\". "^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:subClassOf owl:Thing .

vaem:Party a owl:Class ;
    rdfs:label "Party"^^xsd:string ;
    dcterms:description "A \"Party\" is a generalization for an actor that may be realized as a person, organizaiton or named role."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty vaem:id ],
        [ a owl:Restriction ;
            owl:cardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty vaem:name ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty vaem:url ],
        owl:Thing .

vaem:SchemaGraph a vaem:GraphRole ;
    rdfs:label "Schema graph"^^xsd:string ;
    vaem:filePrefix "SCHEMA"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> .

vaem:hasDimension a owl:ObjectProperty ;
    rdfs:label "has dimension"^^xsd:string ;
    dcterms:description "The property \"vaem:hasDimension\" is used categorize an ontology.  In VAEM, the property is used to characterize an ontology graph."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> .

skos:ConceptScheme a owl:Class ;
    rdfs:label "Concept Scheme"@en ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    owl:disjointWith skos:Concept ;
    skos:definition "A set of concepts, optionally including statements about semantic relationships between those concepts."@en ;
    skos:example "Thesauri, classification schemes, subject heading lists, taxonomies, 'folksonomies', and other types of controlled vocabulary are all examples of concept schemes. Concept schemes are also embedded in glossaries and terminologies."@en ;
    skos:scopeNote "A concept scheme may be defined to include concepts from different sources."@en .

skos:broader a rdf:Property,
        owl:ObjectProperty ;
    rdfs:label "has broader"@en ;
    rdfs:comment "Broader concepts are typically rendered as parents in a concept hierarchy (tree)."@en ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    rdfs:subPropertyOf skos:broaderTransitive ;
    owl:inverseOf skos:narrower ;
    skos:definition "Relates a concept to a concept that is more general in meaning."@en ;
    skos:scopeNote "By convention, skos:broader is only used to assert an immediate (i.e. direct) hierarchical link between two conceptual resources."@en .

skos:closeMatch a rdf:Property,
        owl:ObjectProperty,
        owl:SymmetricProperty ;
    rdfs:label "close match",
        "has close match"@en ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    rdfs:subPropertyOf skos:mappingRelation ;
    skos:definition "skos:closeMatch is used to link two concepts that are sufficiently similar that they can be used interchangeably in some information retrieval applications. In order to avoid the possibility of \"compound errors\" when combining mappings across more than two concept schemes, skos:closeMatch is not declared to be a transitive property."@en .

skos:mappingRelation a rdf:Property,
        owl:ObjectProperty ;
    rdfs:label "is in mapping relation with"@en ;
    rdfs:comment "These concept mapping relations mirror semantic relations, and the data model defined below is similar (with the exception of skos:exactMatch) to the data model defined for semantic relations. A distinct vocabulary is provided for concept mapping relations, to provide a convenient way to differentiate links within a concept scheme from links between concept schemes. However, this pattern of usage is not a formal requirement of the SKOS data model, and relies on informal definitions of best practice."@en ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    rdfs:subPropertyOf skos:semanticRelation ;
    skos:definition "Relates two concepts coming, by convention, from different schemes, and that have comparable meanings"@en .

skos:semanticRelation a rdf:Property,
        owl:ObjectProperty ;
    rdfs:label "is in semantic relation with"@en ;
    rdfs:domain skos:Concept ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    rdfs:range skos:Concept ;
    skos:definition "Links a concept to a concept related by meaning."@en ;
    skos:scopeNote "This property should not be used directly, but as a super-property for all properties denoting a relationship of meaning between concepts."@en .

brick:Air_Temperature_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Temperature Integral Time Parameter" ;
    rdfs:subClassOf brick:Integral_Time_Parameter,
        brick:Temperature_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Temperature,
        tag:Time .

brick:AreaShape a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:FT2 unit:M2 ) ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:minCount 1 ;
            sh:or bsh:NumericValue ;
            sh:path brick:value ] .

brick:Building_Air a owl:Class,
        sh:NodeShape,
        brick:Building_Air ;
    rdfs:label "Building Air" ;
    rdfs:subClassOf brick:Air ;
    skos:definition "air contained within a building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Building ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Building,
        tag:Fluid,
        tag:Gas .

brick:CO2_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "CO2 Sensor" ;
    rdfs:subClassOf brick:Air_Quality_Sensor ;
    skos:definition "Measures properties of CO2 in air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:CO2 ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:CO2,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:CO2_Concentration ;
    brick:hasSubstance brick:Air .

brick:CO_Concentration a brick:Quantity ;
    rdfs:label "COConcentration" ;
    qudt:applicableUnit unit:PPB,
        unit:PPM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:DimensionlessRatio,
        brick:Air_Quality ;
    skos:definition "The concentration of carbon monoxide in a medium" .

brick:CO_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "CO Sensor" ;
    rdfs:subClassOf brick:Air_Quality_Sensor ;
    skos:definition "Measures properties of CO"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:CO ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:CO,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:CO_Concentration ;
    brick:hasSubstance brick:Air .

brick:Condenser_Water a owl:Class,
        sh:NodeShape,
        brick:Condenser_Water ;
    rdfs:label "Condenser Water" ;
    rdfs:subClassOf brick:Water ;
    skos:definition "Water used used to remove heat through condensation"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:Fluid,
        tag:Liquid,
        tag:Water .

brick:Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Deadband Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Sets the size of a deadband"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Deadband,
        tag:Point,
        tag:Setpoint .

brick:Demand_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Demand Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Sets the rate required for a process"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Demand ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Demand,
        tag:Point,
        tag:Setpoint .

brick:Differential_Pressure_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Differential Pressure Deadband Setpoint" ;
    rdfs:subClassOf brick:Deadband_Setpoint,
        brick:Differential_Pressure_Setpoint ;
    skos:definition "Sets the size of a deadband of differential pressure"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Deadband,
        tag:Differential,
        tag:Point,
        tag:Pressure,
        tag:Setpoint ;
    brick:hasQuantity brick:Differential_Pressure .

brick:Differential_Pressure_Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Differential Pressure Integral Time Parameter" ;
    rdfs:subClassOf brick:Integral_Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Time .

brick:Differential_Pressure_Proportional_Band a owl:Class,
        sh:NodeShape ;
    rdfs:label "Differential Pressure Proportional Band" ;
    rdfs:subClassOf brick:Proportional_Band_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Band,
        tag:Differential,
        tag:PID,
        tag:Point,
        tag:Pressure,
        tag:Proportional .

brick:Differential_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Differential Pressure Sensor" ;
    rdfs:subClassOf brick:Pressure_Sensor ;
    skos:definition "Measures the difference between two applied pressures"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Point,
        tag:Pressure,
        tag:Sensor ;
    brick:hasQuantity brick:Differential_Pressure .

brick:Differential_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Differential Pressure Setpoint" ;
    rdfs:subClassOf brick:Pressure_Setpoint ;
    skos:definition "Sets differential pressure"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Point,
        tag:Pressure,
        tag:Setpoint ;
    brick:hasQuantity brick:Differential_Pressure .

brick:Differential_Pressure_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Differential Pressure Setpoint Limit" ;
    rdfs:subClassOf brick:Limit ;
    skos:definition "A parameter that places a lower or upper bound on the range of permitted values of a Differential_Pressure_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Differential ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Differential,
        tag:Limit,
        tag:Parameter,
        tag:Point,
        tag:Pressure,
        tag:Setpoint .

brick:Direction a brick:Quantity ;
    rdfs:label "Direction" .

brick:Electric_Current a brick:Quantity ;
    rdfs:label "Electric Current" ;
    qudt:applicableUnit unit:A,
        unit:A_Ab,
        unit:A_Stat,
        unit:BIOT,
        unit:KiloA,
        unit:MegaA,
        unit:MicroA,
        unit:MilliA,
        unit:NanoA,
        unit:PicoA,
        unit:PlanckCurrent ;
    brick:hasQUDTReference quantitykind:ElectricCurrent .

brick:Entering_Water a owl:Class,
        sh:NodeShape,
        brick:Entering_Water ;
    rdfs:label "Entering Water" ;
    rdfs:subClassOf brick:Water ;
    skos:definition "Water that is entering a piece of equipment or system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Entering ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Entering,
        tag:Fluid,
        tag:Liquid,
        tag:Water .

brick:Floor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Floor" ;
    rdfs:subClassOf brick:Location ;
    owl:equivalentClass brick:Storey ;
    skos:definition "A level, typically representing a horizontal aggregation of spaces that are vertically bound. (referring to IFC)"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Floor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Floor,
        tag:Location .

brick:Heat_Exchanger a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heat Exchanger" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    owl:equivalentClass brick:HX ;
    skos:definition "A heat exchanger is a piece of equipment built for efficient heat transfer from one medium to another. The media may be separated by a solid wall to prevent mixing or they may be in direct contact (BEDES)"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exchanger ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Exchanger,
        tag:Heat .

brick:Hot_Water_Supply_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water Supply Temperature Sensor" ;
    rdfs:subClassOf brick:Water_Temperature_Sensor ;
    skos:definition "Measures the temperature of water supplied by a hot water system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:Point,
        tag:Sensor,
        tag:Supply,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Supply_Hot_Water .

brick:Hot_Water_System a owl:Class,
        sh:NodeShape ;
    rdfs:label "Hot Water System" ;
    rdfs:subClassOf brick:Water_System ;
    skos:definition "The equipment, devices and conduits that handle the production and distribution of hot water in a building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Hot,
        tag:System,
        tag:Water .

brick:Laboratory a owl:Class,
        sh:NodeShape ;
    rdfs:label "Laboratory" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "facility acceptable to the local, national, or international recognized authority having jurisdiction and which provides uniform testing and examination procedures and standards for meeting design, manufacturing, and factory testing requirements."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Laboratory ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Laboratory,
        tag:Location,
        tag:Room .

brick:Level a brick:Quantity ;
    rdfs:label "Level" ;
    qudt:applicableUnit unit:CentiM,
        unit:DeciM,
        unit:FT,
        unit:IN,
        unit:KiloM,
        unit:M,
        unit:MicroM,
        unit:MilliM,
        unit:YD ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Length ;
    skos:definition "Amount of substance in a container; typically measured in height" .

brick:Luminance a brick:Quantity ;
    rdfs:label "Luminance" ;
    qudt:applicableUnit unit:CD,
        unit:CD-PER-IN2,
        unit:CD-PER-M2,
        unit:CP,
        unit:FT-LA,
        unit:LA,
        unit:LM,
        unit:STILB ;
    brick:hasQUDTReference quantitykind:Luminance .

brick:Max_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Air_Flow_Setpoint_Limit,
        brick:Max_Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point,
        tag:Setpoint .

brick:PID_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "PID Parameter" ;
    rdfs:subClassOf brick:Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:PID,
        tag:Parameter,
        tag:Point .

brick:Particulate_Matter_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Particulate Matter Sensor" ;
    rdfs:subClassOf brick:Air_Quality_Sensor ;
    skos:definition "Detects pollutants in the ambient air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Matter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Particulate ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Matter,
        tag:Particulate,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Air_Quality ;
    brick:hasSubstance brick:Air .

brick:Power a brick:Quantity ;
    rdfs:label "Power" ;
    qudt:applicableUnit unit:BAR-L-PER-SEC,
        unit:BAR-M3-PER-SEC,
        unit:BTU_IT,
        unit:BTU_IT-PER-HR,
        unit:BTU_IT-PER-SEC,
        unit:ERG-PER-SEC,
        unit:FT-LB_F-PER-HR,
        unit:FT-LB_F-PER-MIN,
        unit:FT-LB_F-PER-SEC,
        unit:GigaW,
        unit:HP,
        unit:HP-PER-M,
        unit:HP-PER-V,
        unit:HP_Boiler,
        unit:HP_Brake,
        unit:HP_Electric,
        unit:HP_Metric,
        unit:J-PER-HR,
        unit:J-PER-SEC,
        unit:KiloCAL-PER-MIN,
        unit:KiloCAL-PER-SEC,
        unit:KiloV-A,
        unit:KiloV-A_Reactive,
        unit:KiloW,
        unit:MegaJ-PER-SEC,
        unit:MegaPA-L-PER-SEC,
        unit:MegaPA-M3-PER-SEC,
        unit:MegaV-A,
        unit:MegaV-A_Reactive,
        unit:MegaW,
        unit:MicroW,
        unit:MilliBAR-L-PER-SEC,
        unit:MilliBAR-M3-PER-SEC,
        unit:MilliW,
        unit:NanoW,
        unit:PA-L-PER-SEC,
        unit:PA-M3-PER-SEC,
        unit:PSI-IN3-PER-SEC,
        unit:PSI-M3-PER-SEC,
        unit:PSI-YD3-PER-SEC,
        unit:PicoW,
        unit:PlanckPower,
        unit:TON_FG,
        unit:TeraW,
        unit:V-A,
        unit:V-A_Reactive,
        unit:W ;
    skos:definition "Power is the rate at which work is performed or energy is transmitted, or the amount of energy required or expended for a given unit of time. As a rate of change of work done or the energy of a subsystem, power is: (P = W/t), where (P) is power, (W) is work and {t} is time."@en ;
    brick:hasQUDTReference quantitykind:Power .

brick:PowerShape a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:in ( unit:BAR-L-PER-SEC unit:BAR-M3-PER-SEC unit:BTU_IT-PER-HR unit:BTU_IT-PER-SEC unit:ERG-PER-SEC unit:FT-LB_F-PER-HR unit:FT-LB_F-PER-MIN unit:FT-LB_F-PER-SEC unit:GigaW unit:HP unit:HP-PER-M unit:HP-PER-V unit:HP_Boiler unit:HP_Brake unit:HP_Electric unit:HP_Metric unit:J-PER-HR unit:J-PER-SEC unit:KiloCAL-PER-MIN unit:KiloCAL-PER-SEC unit:KiloW unit:MegaJ-PER-SEC unit:MegaPA-L-PER-SEC unit:MegaPA-M3-PER-SEC unit:MegaW unit:MicroW unit:MilliBAR-L-PER-SEC unit:MilliBAR-M3-PER-SEC unit:MilliW unit:NanoW unit:PA-L-PER-SEC unit:PA-M3-PER-SEC unit:PSI-IN3-PER-SEC unit:PSI-M3-PER-SEC unit:PSI-YD3-PER-SEC unit:PicoW unit:PlanckPower unit:TON_FG unit:TeraW unit:W unit:BTU_IT unit:KiloV-A unit:MegaV-A unit:KiloV-A_Reactive unit:V-A_Reactive unit:MegaV-A_Reactive unit:V-A ) ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:path brick:ratedCurrentOutput ],
        [ a sh:PropertyShape ;
            skos:definition "The ambient temperature at which the power input was measured" ;
            sh:class brick:TemperatureShape ;
            sh:path brick:ambientTemperatureOfMeasurement ],
        [ a sh:PropertyShape ;
            sh:path brick:ratedCurrentInput ],
        [ a sh:PropertyShape ;
            sh:path brick:ratedVoltageInput ],
        [ a sh:PropertyShape ;
            sh:path brick:ratedVoltageOutput ] .

brick:Radiator a owl:Class,
        sh:NodeShape ;
    rdfs:label "Radiator" ;
    rdfs:subClassOf brick:Terminal_Unit ;
    skos:definition "Heat exchangers designed to transfer thermal energy from one medium to another"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radiator ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Radiator .

brick:Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Reset Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Setpoints used in reset strategies"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Reset,
        tag:Setpoint .

brick:Return_Condenser_Water a owl:Class,
        sh:NodeShape,
        brick:Return_Condenser_Water ;
    rdfs:label "Return Condenser Water" ;
    rdfs:subClassOf brick:Condenser_Water ;
    skos:definition "In a condenser water loop, this is water being brought away from the condenser side of a heat-rejection device (e.g. chiller). It is the 'warm' side."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:Fluid,
        tag:Liquid,
        tag:Return,
        tag:Water .

brick:Safety_Equipment a owl:Class,
        sh:NodeShape ;
    rdfs:label "Safety Equipment" ;
    rdfs:subClassOf brick:Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Safety .

brick:Security_Equipment a owl:Class,
        sh:NodeShape ;
    rdfs:label "Security Equipment" ;
    rdfs:subClassOf brick:Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Security ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Security .

brick:Solid a owl:Class,
        sh:NodeShape,
        brick:Solid ;
    rdfs:label "Solid" ;
    rdfs:subClassOf brick:Substance ;
    skos:definition "one of the three states or phases of matter characterized by stability of dimensions, relative incompressibility, and molecular motion held to limited oscillation."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Solid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Solid .

brick:Supply_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Air Flow Setpoint" ;
    rdfs:subClassOf brick:Air_Flow_Setpoint ;
    owl:equivalentClass brick:Discharge_Air_Flow_Setpoint ;
    skos:definition "Sets supply air flow rate"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Point,
        tag:Setpoint,
        tag:Supply ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Supply_Air .

brick:Supply_Chilled_Water a owl:Class,
        sh:NodeShape,
        brick:Supply_Chilled_Water ;
    rdfs:label "Supply Chilled Water" ;
    rdfs:subClassOf brick:Chilled_Water,
        brick:Supply_Water ;
    owl:equivalentClass brick:Discharge_Chilled_Water ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Fluid,
        tag:Liquid,
        tag:Supply,
        tag:Water .

brick:Supply_Condenser_Water a owl:Class,
        sh:NodeShape,
        brick:Supply_Condenser_Water ;
    rdfs:label "Supply Condenser Water" ;
    rdfs:subClassOf brick:Condenser_Water ;
    skos:definition "In a condenser water loop, this is water being brought to the condenser side of a heat-rejection device (e.g. chiller). It is the 'cold' side."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Condenser ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Condenser,
        tag:Fluid,
        tag:Liquid,
        tag:Supply,
        tag:Water .

brick:System_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "System Status" ;
    rdfs:subClassOf brick:Status ;
    skos:definition "Indicates properties of the activity of a system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Status,
        tag:System .

brick:Telecom_Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Telecom Room" ;
    rdfs:subClassOf brick:Room ;
    skos:definition "A class of spaces used to support telecommuncations and IT equipment"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Telecom ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Room,
        tag:Space,
        tag:Telecom .

brick:Temperature_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Temperature Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "An alarm that indicates the off-normal conditions associated with temperature."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Point,
        tag:Temperature .

brick:Temperature_High_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Temperature High Reset Setpoint" ;
    rdfs:subClassOf brick:Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:High ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:High,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature .

brick:Temperature_Low_Reset_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Temperature Low Reset Setpoint" ;
    rdfs:subClassOf brick:Reset_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Low ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Reset ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Low,
        tag:Point,
        tag:Reset,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature .

brick:VFD a owl:Class,
        sh:NodeShape ;
    rdfs:label "VFD" ;
    rdfs:seeAlso <https://xp20.ashrae.org/terminology/index.php?term=vfd&submit=Search> ;
    rdfs:subClassOf brick:Motor ;
    skos:definition "Electronic device that varies its output frequency to vary the rotating speed of a motor, given a fixed input frequency. Used with fans or pumps to vary the flow in the system as a function of a maintained pressure."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:VFD ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:VFD .

brick:Vertical_Space a owl:Class,
        sh:NodeShape ;
    rdfs:label "Vertical Space" ;
    rdfs:subClassOf brick:Space ;
    skos:definition "A class of spaces used to connect multiple floors or levels.."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Vertical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Space,
        tag:Vertical .

brick:Zone a owl:Class,
        sh:NodeShape ;
    rdfs:label "Zone" ;
    rdfs:subClassOf brick:Location ;
    skos:definition "(1) a separately controlled heated or cooled space. (2) one occupied space or several occupied spaces with similar occupancy category, occupant density, zone air distribution effectiveness, and zone primary airflow per unit area. (3) space or group of spaces within a building for which the heating, cooling, or lighting requirements are sufficiently similar that desired conditions can be maintained throughout by a single controlling device."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Zone .

brick:feeds a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Feeds" ;
    owl:inverseOf brick:isFedBy ;
    skos:definition "The subject is upstream of the object in the context of some sequential process; some media is passed between them"@en .

brick:isPointOf a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Is point of" ;
    rdfs:domain brick:Point ;
    owl:inverseOf brick:hasPoint ;
    skos:definition "The subject is a source of telemetry related to the object. In some systems the source of telemetry may be represented as a digital/analog input/output point"@en .

brick:ratedCurrentInput a owl:ObjectProperty,
        brick:EntityProperty ;
    rdfs:range brick:CurrentShape ;
    skos:definition "The nominal rated current input of the entity" .

brick:ratedCurrentOutput a owl:ObjectProperty,
        brick:EntityProperty ;
    rdfs:range brick:CurrentShape ;
    skos:definition "The nominal rated current output of the entity" .

brick:ratedVoltageInput a owl:ObjectProperty,
        brick:EntityProperty ;
    rdfs:range brick:VoltageShape ;
    skos:definition "The nominal rated voltage input of the entity" .

brick:ratedVoltageOutput a owl:ObjectProperty,
        brick:EntityProperty ;
    rdfs:range brick:VoltageShape ;
    skos:definition "The nominal rated voltage output of the entity" .

tag:AED a brick:Tag ;
    rdfs:label "AED" .

tag:AHU a brick:Tag ;
    rdfs:label "AHU" .

tag:Access a brick:Tag ;
    rdfs:label "Access" .

tag:Adjust a brick:Tag ;
    rdfs:label "Adjust" .

tag:Aid a brick:Tag ;
    rdfs:label "Aid" .

tag:Automatic a brick:Tag ;
    rdfs:label "Automatic" .

tag:Bulb a brick:Tag ;
    rdfs:label "Bulb" .

tag:CRAC a brick:Tag ;
    rdfs:label "CRAC" .

tag:Camera a brick:Tag ;
    rdfs:label "Camera" .

tag:Ceiling a brick:Tag ;
    rdfs:label "Ceiling" .

tag:Close a brick:Tag ;
    rdfs:label "Close" .

tag:Collector a brick:Tag ;
    rdfs:label "Collector" .

tag:Computer a brick:Tag ;
    rdfs:label "Computer" .

tag:Concentration a brick:Tag ;
    rdfs:label "Concentration" .

tag:Conditioning a brick:Tag ;
    rdfs:label "Conditioning" .

tag:Conductivity a brick:Tag ;
    rdfs:label "Conductivity" .

tag:Core a brick:Tag ;
    rdfs:label "Core" .

tag:Cycle a brick:Tag ;
    rdfs:label "Cycle" .

tag:Defibrillator a brick:Tag ;
    rdfs:label "Defibrillator" .

tag:Deionised a brick:Tag ;
    rdfs:label "Deionised" .

tag:Deionized a brick:Tag ;
    rdfs:label "Deionized" .

tag:Delay a brick:Tag ;
    rdfs:label "Delay" .

tag:Derivative a brick:Tag ;
    rdfs:label "Derivative" .

tag:Detector a brick:Tag ;
    rdfs:label "Detector" .

tag:Direct a brick:Tag ;
    rdfs:label "Direct" .

tag:Drive a brick:Tag ;
    rdfs:label "Drive" .

tag:Duct a brick:Tag ;
    rdfs:label "Duct" .

tag:Duration a brick:Tag ;
    rdfs:label "Duration" .

tag:Economizer a brick:Tag ;
    rdfs:label "Economizer" .

tag:Entrance a brick:Tag ;
    rdfs:label "Entrance" .

tag:Expansion a brick:Tag ;
    rdfs:label "Expansion" .

tag:Fequency a brick:Tag ;
    rdfs:label "Fequency" .

tag:Food a brick:Tag ;
    rdfs:label "Food" .

tag:Freeze a brick:Tag ;
    rdfs:label "Freeze" .

tag:Frost a brick:Tag ;
    rdfs:label "Frost" .

tag:Fume a brick:Tag ;
    rdfs:label "Fume" .

tag:Furniture a brick:Tag ;
    rdfs:label "Furniture" .

tag:Hail a brick:Tag ;
    rdfs:label "Hail" .

tag:Handler a brick:Tag ;
    rdfs:label "Handler" .

tag:Heating a brick:Tag ;
    rdfs:label "Heating" .

tag:Hood a brick:Tag ;
    rdfs:label "Hood" .

tag:Humidifier a brick:Tag ;
    rdfs:label "Humidifier" .

tag:Ice a brick:Tag ;
    rdfs:label "Ice" .

tag:Inside a brick:Tag ;
    rdfs:label "Inside" .

tag:Intake a brick:Tag ;
    rdfs:label "Intake" .

tag:Isolation a brick:Tag ;
    rdfs:label "Isolation" .

tag:Lag a brick:Tag ;
    rdfs:label "Lag" .

tag:Lounge a brick:Tag ;
    rdfs:label "Lounge" .

tag:Luminaire a brick:Tag ;
    rdfs:label "Luminaire" .

tag:Maintenance a brick:Tag ;
    rdfs:label "Maintenance" .

tag:Mechanical a brick:Tag ;
    rdfs:label "Mechanical" .

tag:NVR a brick:Tag ;
    rdfs:label "NVR" .

tag:Oil a brick:Tag ;
    rdfs:label "Oil" .

tag:Operating a brick:Tag ;
    rdfs:label "Operating" .

tag:Override a brick:Tag ;
    rdfs:label "Override" .

tag:PM1 a brick:Tag ;
    rdfs:label "PM1" .

tag:PM10 a brick:Tag ;
    rdfs:label "PM10" .

tag:PM2.5 a brick:Tag ;
    rdfs:label "PM2.5" .

tag:Photovoltaic a brick:Tag ;
    rdfs:label "Photovoltaic" .

tag:Pre a brick:Tag ;
    rdfs:label "Pre" .

tag:Rain a brick:Tag ;
    rdfs:label "Rain" .

tag:Relief a brick:Tag ;
    rdfs:label "Relief" .

tag:Rooftop a brick:Tag ;
    rdfs:label "Rooftop" .

tag:Shower a brick:Tag ;
    rdfs:label "Shower" .

tag:Stage a brick:Tag ;
    rdfs:label "Stage" .

tag:TVOC a brick:Tag ;
    rdfs:label "TVOC" .

tag:Tank a brick:Tag ;
    rdfs:label "Tank" .

tag:Torque a brick:Tag ;
    rdfs:label "Torque" .

tag:Tower a brick:Tag ;
    rdfs:label "Tower" .

tag:Transformer a brick:Tag ;
    rdfs:label "Transformer" .

tag:Wet a brick:Tag ;
    rdfs:label "Wet" .

tag:Wheel a brick:Tag ;
    rdfs:label "Wheel" .

tag:Wind a brick:Tag ;
    rdfs:label "Wind" .

s223:SymmetricProperty a s223:Class,
        sh:NodeShape ;
    rdfs:label "Symmetric property" ;
    rdfs:subClassOf rdf:Property .

s223:ZoneConnectionPoint a s223:Class,
        sh:NodeShape ;
    rdfs:label "ZoneConnectionPoint" ;
    rdfs:comment "This is analogous to a ConnectionPoint, but for a Zone rather than a Device." ;
    rdfs:subClassOf s223:Concept ;
    sh:property [ sh:maxCount 1 ;
            sh:name "ConnectionPoint direction" ;
            sh:or ( [ sh:hasValue s223:Inlet ] [ sh:hasValue s223:Outlet ] [ sh:hasValue s223:Bidirectional ] ) ;
            sh:path s223:hasDirection ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or ( [ sh:class s223:ConnectionPoint ] [ sh:class s223:ZoneConnectionPoint ] [ sh:class s223:Junction ] ) ;
            sh:path s223:mapsTo ],
        [ sh:or ( [ sh:class s223:ZoneConnectionPoint ] [ sh:class s223:ConnectionPoint ] ) ;
            sh:path s223:zoneConnected ] .

s223:connectsThrough a rdf:Property ;
    rdfs:label "connects through" ;
    s223:inverseOf s223:connectsAt ;
    rdfs:domain s223:ConnectionPoint ;
    rdfs:range s223:Connection .

s223:hasMeasurementLocation a rdf:Property ;
    rdfs:label "has measurement location" .

s223:hasRole a rdf:Property ;
    rdfs:label "has role" .

s223:hasSubstance a rdf:Property ;
    rdfs:label "Substance" .

<http://data.ashrae.org/standard223/1.0/model/core> a owl:Ontology ;
    spin:imports <http://topbraid.org/spin/owlrl-all> ;
    owl:imports <http://data.ashrae.org/standard223/1.0/extensions/settings>,
        <http://data.ashrae.org/standard223/1.0/vocab/enumeration>,
        <http://qudt.org/2.1/vocab/unit>,
        sh:,
        sosa:,
        <https://brickschema.org/schema/1.3/Brick> ;
    owl:versionInfo "Created with TopBraid Composer" .

dcterms:abstract a owl:AnnotationProperty ;
    rdfs:label "abstract",
        "abstract"^^xsd:string ;
    rdfs:isDefinedBy dcterms: ;
    rdfs:range xsd:string .

dcterms:creator a rdf:Property,
        owl:AnnotationProperty ;
    rdfs:label "creator",
        "creator"^^xsd:string ;
    rdfs:isDefinedBy dcterms:,
        <http://qudt.org/2.1/schema/qudt>,
        <http://qudt.org/schema/qudt> ;
    rdfs:range xsd:string .

qudt:Datatype a owl:Class,
        sh:NodeShape ;
    rdfs:label "QUDT Datatype" ;
    dcterms:description "A data type is a definition of a set of values (for example, \"all integers between 0 and 10\"), and the allowable operations on those values; the meaning of the data; and the way values of that type can be stored. Some types are primitive - built-in to the language, with no visible internal structure - e.g. Boolean; others are composite - constructed from one or more other types (of either kind) - e.g. lists, arrays, structures, unions. Object-oriented programming extends this with classes which encapsulate both the structure of a type and the operations that can be performed on it. Some languages provide strong typing, others allow implicit type conversion and/or explicit type conversion." ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Data_type"^^xsd:anyURI,
        "http://foldoc.org/data+type"^^xsd:anyURI,
        "http://www.princeton.edu/~achaney/tmve/wiki100k/docs/Data_type.html"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Concept ;
    sh:property qudt:Datatype-qudt_ansiSQLName,
        qudt:Datatype-qudt_basis,
        qudt:Datatype-qudt_bounded,
        qudt:Datatype-qudt_cName,
        qudt:Datatype-qudt_cardinality,
        qudt:Datatype-qudt_id,
        qudt:Datatype-qudt_javaName,
        qudt:Datatype-qudt_jsName,
        qudt:Datatype-qudt_matlabName,
        qudt:Datatype-qudt_microsoftSQLServerName,
        qudt:Datatype-qudt_mySQLName,
        qudt:Datatype-qudt_odbcName,
        qudt:Datatype-qudt_oleDBName,
        qudt:Datatype-qudt_oracleSQLName,
        qudt:Datatype-qudt_orderedType,
        qudt:Datatype-qudt_protocolBuffersName,
        qudt:Datatype-qudt_pythonName,
        qudt:Datatype-qudt_vbName .

qudt:IntegerEncodingType a owl:Class,
        sh:NodeShape ;
    rdfs:label "Integer Encoding" ;
    dcterms:description "The encoding scheme for integer types" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Encoding .

qudt:LogarithmicUnit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Logarithmic Unit" ;
    rdfs:comment "Logarithmic units are abstract mathematical units that can be used to express any quantities (physical or mathematical) that are defined on a logarithmic scale, that is, as being proportional to the value of a logarithm function. Examples of logarithmic units include common units of information and entropy, such as the bit, and the byte, as well as units of relative signal strength magnitude such as the decibel."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:DimensionlessUnit .

qudt:Scale a owl:Class,
        sh:NodeShape ;
    rdfs:label "Scale" ;
    rdfs:comment "Scales (also called \"scales of measurement\" or \"levels of measurement\")  are expressions that typically refer to the theory of scale types."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Concept ;
    sh:property qudt:Scale-qudt_dataStructure,
        qudt:Scale-qudt_permissibleMaths,
        qudt:Scale-qudt_permissibleTransformation,
        qudt:Scale-qudt_scaleType .

qudt:Verifiable a qudt:AspectClass,
        sh:NodeShape ;
    rdfs:label "Verifiable" ;
    rdfs:comment "An aspect class that holds properties that provide external knowledge and specifications of a given resource." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Aspect ;
    sh:property qudt:Verifiable-qudt_dbpediaMatch,
        qudt:Verifiable-qudt_informativeReference,
        qudt:Verifiable-qudt_isoNormativeReference,
        qudt:Verifiable-qudt_normativeReference .

qudt:hasDefinedUnit a owl:ObjectProperty ;
    rdfs:label "defined unit" ;
    dcterms:description "This property relates a unit system with a unit of measure that is defined by the system."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:hasUnit .

qudt:symbol a owl:DatatypeProperty ;
    rdfs:label "symbol" ;
    dcterms:description "The symbol is a glyph that is used to represent some concept, typically a unit or a quantity, in a compact form. For example, the symbol for an Ohm is \\(ohm\\). This contrasts with 'unit:abbreviation', which gives a short alphanumeric abbreviation for the unit, 'ohm' for Ohm."^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subPropertyOf qudt:literal .

qudt:unitOfSystem a owl:ObjectProperty ;
    rdfs:label "is unit of system" ;
    dcterms:description "This property relates a unit of measure with a system of units that either a) defines the unit or b) allows the unit to be used within the system."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    owl:inverseOf qudt:hasUnit .

qkdv:A-1E0L2I0M1H-1T-2D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A-1E0L2I0M1H-1T-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance -1 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature -1 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:MolarHeatCapacity ;
    qudt:latexDefinition "\\(L^2 M T^-2 Θ^-1 N^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-1I0M-1H1T3D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-1I0M-1H1T3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 1 ;
    qudt:dimensionExponentForTime 3 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:ThermalResistivity ;
    qudt:latexDefinition "\\(L^{-1} M^{-1} T^3 \\Theta\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-2I0M1H0T-2D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-2I0M1H0T-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:SpectralRadiantEnergyDensity ;
    qudt:latexDefinition "\\(L^-2 M T^-2\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L0I0M1H1T0D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M1H1T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 1 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:MassTemperature ;
    qudt:latexDefinition "\\(M Θ\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L2I0M-1H0T0D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L2I0M-1H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L3I0M-1H0T0D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L3I0M-1H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 3 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:SpecificVolume ;
    qudt:latexDefinition "\\(L^3 M^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L3I0M1H0T-2D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L3I0M1H0T-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 3 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:LengthEnergy,
        quantitykind:ThermalEnergyLength ;
    qudt:latexDefinition "\\(L^3 M T^-2\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L4I0M0H0T0D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L4I0M0H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 4 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:SecondAxialMomentOfArea ;
    qudt:latexDefinition "\\(L^4\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L4I0M1H0T-3D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L4I0M1H0T-3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 4 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -3 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:PowerArea ;
    qudt:latexDefinition "\\(L^4 M T^-3\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

quantitykind:AngularAcceleration a qudt:QuantityKind ;
    rdfs:label "Angular Acceleration"@en ;
    dcterms:description "Angular acceleration is the rate of change of angular velocity over time. Measurement of the change made in the rate of change of an angle that a spinning object undergoes per unit time. It is a vector quantity.  Also called Rotational acceleration. In SI units, it is measured in radians per second squared (\\(rad/s^2\\)), and is usually denoted by the Greek letter alpha."^^qudt:LatexString ;
    qudt:applicableUnit unit:DEG-PER-SEC2,
        unit:RAD-PER-SEC2,
        unit:REV-PER-SEC2 ;
    qudt:baseCGSUnitDimensions "U/T^2" ;
    qudt:baseSIUnitDimensions "\\(/s^2\\)"^^qudt:LatexString ;
    qudt:baseUnitDimensions "\\(U/T^2\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Angular_acceleration"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-2D0 ;
    qudt:qkdvDenominator qkdv:A0E0L1I0M0H0T2D0 ;
    qudt:qkdvNumerator qkdv:A0E0L1I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:InverseSquareTime .

quantitykind:AreaTime a qudt:QuantityKind ;
    rdfs:label "Area Time"@en ;
    qudt:applicableUnit unit:CentiM2-MIN,
        unit:CentiM2-SEC,
        unit:HR-FT2,
        unit:SEC-FT2 ;
    qudt:baseUnitDimensions "\\(L^2 \\cdot T\\)"^^qudt:LatexString,
        "\\(m^2 \\cdot s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectromagneticPermeability a qudt:QuantityKind ;
    rdfs:label "Permeability"@en ;
    dcterms:description "\"Permeability} is the degree of magnetization of a material that responds linearly to an applied magnetic field. In general permeability is a tensor-valued quantity. The definition given applies to an isotropic medium. For an anisotropic medium permeability is a second order tensor. In electromagnetism, permeability is the measure of the ability of a material to support the formation of a magnetic field within itself. In other words, it is the degree of magnetization that a material obtains in response to an applied magnetic field. Magnetic permeability is typically represented by the Greek letter \\(\\mu\\). The term was coined in September, 1885 by Oliver Heaviside. The reciprocal of magnetic permeability is \\textit{Magnetic Reluctivity\"."^^qudt:LatexString ;
    qudt:applicableUnit unit:H-PER-M,
        unit:H_Stat-PER-CentiM ;
    qudt:baseUnitDimensions "\\(L \\cdot M/I^2 \\cdot T^2\\)"^^qudt:LatexString,
        "\\(kg \\cdot m/A^2 \\cdot s^2\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Permeability"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E-2L1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Permeability_(electromagnetism)"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mu = \\frac{B}{H}\\),  where \\(B\\) is magnetic flux density,  and \\(H\\) is magnetic field strength."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\mu\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso constant:ElectromagneticPermeabilityOfVacuum,
        constant:MagneticConstant,
        quantitykind:MagneticFieldStrength_H,
        quantitykind:MagneticFluxDensity .

quantitykind:Incidence a qudt:QuantityKind ;
    rdfs:label "Incidence" ;
    qudt:applicableUnit unit:CASES-PER-1000I-YR ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Incidence_(epidemiology)"^^xsd:anyURI ;
    qudt:plainTextDescription "In epidemiology, incidence is a measure of the probability of occurrence of a given medical condition in a population within a specified period of time." ;
    qudt:qkdvDenominator qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:qkdvNumerator qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Frequency .

quantitykind:IonicStrength a qudt:QuantityKind ;
    rdfs:label "Ionic Strength"@en ;
    qudt:applicableUnit unit:CentiMOL-PER-KiloGM,
        unit:KiloMOL-PER-KiloGM,
        unit:MOL-PER-KiloGM,
        unit:MilliMOL-PER-GM,
        unit:MilliMOL-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M-1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Ionic_strength"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(I = \\frac{1}{2} \\sum z_i^2 b_i\\), where the summation is carried out over all ions with charge number \\(z_i\\) and molality \\(m_i\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Ionic Strength\" of a solution is a measure of the concentration of ions in that solution." ;
    qudt:symbol "I" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LuminousFluxPerArea a qudt:QuantityKind ;
    rdfs:label "Luminous Flux per Area"@en ;
    dcterms:description "In photometry, illuminance is the total luminous flux incident on a surface, per unit area. It is a measure of how much the incident light illuminates the surface, wavelength-weighted by the luminosity function to correlate with human brightness perception. Similarly, luminous emittance is the luminous flux per unit area emitted from a surface. In SI derived units these are measured in \\(lux (lx)\\) or \\(lumens per square metre\\) (\\(cd \\cdot m^{-2}\\)). In the CGS system, the unit of illuminance is the \\(phot\\), which is equal to \\(10,000 lux\\). The \\(foot-candle\\) is a non-metric unit of illuminance that is used in photography."^^qudt:LatexString ;
    qudt:applicableUnit unit:FC,
        unit:LUX,
        unit:PHOT ;
    qudt:baseUnitDimensions "\\(J \\cdot U/L^2\\)"^^qudt:LatexString,
        "\\(cd/m^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-2I1M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Illuminance"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MagneticQuantumNumber a qudt:QuantityKind ;
    rdfs:label "Magnetic Quantum Number"@en ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Quantum_number"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Magnetic Quantum Number\" describes the specific orbital (or \"cloud\") within that subshell, and yields the projection of the orbital angular momentum along a specified axis." ;
    qudt:symbol "m" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:QuantumNumber ;
    skos:closeMatch quantitykind:OrbitalAngularMomentumQuantumNumber,
        quantitykind:PrincipalQuantumNumber,
        quantitykind:SpinQuantumNumber .

quantitykind:MassAttenuationCoefficient a qudt:QuantityKind ;
    rdfs:label "Mass Attenuation Coefficient"@en ;
    qudt:applicableUnit unit:M2-PER-GM,
        unit:M2-PER-GM_DRY,
        unit:M2-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M-1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mass_attenuation_coefficient"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mu_m = \\frac{\\mu}{\\rho}\\), where \\(\\mu\\) is the linear attenuation coefficient and \\(\\rho\\) is the mass density of the medium."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\mu_m\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Mass Attenuation Coefficient\" is a measurement of how strongly a chemical species or substance absorbs or scatters light at a given wavelength, per unit mass." ;
    qudt:systemDerivedQuantityKind qudt:SOQ_SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Mass_attenuation_coefficient> .

quantitykind:MassTemperature a qudt:QuantityKind ;
    rdfs:label "Mass Temperature"@en ;
    qudt:applicableUnit unit:GM-PER-DEG_C,
        unit:KiloGM-K,
        unit:LB-DEG_F,
        unit:LB-DEG_R ;
    qudt:baseUnitDimensions "\\(K \\cdot kg\\)"^^qudt:LatexString,
        "\\(\\Theta \\cdot M\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H1T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MolarEnergy a qudt:QuantityKind ;
    rdfs:label "Molar Energy"@en ;
    dcterms:description "\"Molar Energy\" is the total energy contained by a thermodynamic system. The unit is \\(J/mol\\), also expressed as \\(joule/mole\\),  or \\(joules per mole\\). This unit is commonly used in the SI unit system. The quantity has the dimension of \\(M \\cdot L^2 \\cdot  T^{-2} \\cdot N^{-1}\\) where \\(M\\) is mass, \\(L\\) is length, \\(T\\) is time, and \\(N\\) is amount of substance."^^qudt:LatexString ;
    qudt:applicableUnit unit:J-PER-MOL,
        unit:KiloCAL-PER-MOL,
        unit:KiloJ-PER-MOL ;
    qudt:baseUnitDimensions "\\(L^2 \\cdot M/N \\cdot T^2\\)"^^qudt:LatexString,
        "\\(kg \\cdot m^2/mol \\cdot s^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A-1E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.efunda.com/glossary/units/units-molar_energy-joule_per_mole.cfm"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(U_m = \\frac{U}{n}\\), where \\(U\\) is internal energy and \\(n\\) is amount of substance."^^qudt:LatexString ;
    qudt:symbol "U_M" ;
    vaem:todo "dimensions are wrong" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MolarFlowRate a qudt:QuantityKind ;
    rdfs:label "Molar Flow Rate"@en ;
    qudt:applicableUnit unit:KiloMOL-PER-MIN,
        unit:KiloMOL-PER-SEC,
        unit:MOL-PER-HR,
        unit:MOL-PER-MIN,
        unit:MOL-PER-SEC ;
    qudt:baseUnitDimensions "\\(mol sec^{-1}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "https://www.sciencedirect.com/topics/engineering/molar-flow-rate"^^xsd:anyURI ;
    qudt:plainTextDescription "Molar Flow Rate is a measure of the amount of substance (the number of molecules) that passes through a given area perpendicular to the flow in a given time. Typically this area is constrained, for example a section through a pipe, but it could also apply to an open flow." ;
    qudt:symbol "q_V" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PressureCoefficient a qudt:QuantityKind ;
    rdfs:label "Pressure Coefficient"@en ;
    qudt:applicableUnit unit:BAR-PER-K,
        unit:HectoPA-PER-K,
        unit:KiloPA-PER-K,
        unit:MegaPA-PER-K,
        unit:PA-PER-K ;
    qudt:expression "\\(pres-coef\\)"^^qudt:LatexString ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\beta = \\left (\\frac{\\partial p}{\\partial T} \\right )_V\\), where \\(p\\) is \\(pressure\\),  \\(T\\) is thermodynamic temperature and \\(V\\) is volume."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\beta\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PrincipalQuantumNumber a qudt:QuantityKind ;
    rdfs:label "Principal Quantum Number"@en ;
    dcterms:description "The \"Principal Quantum Number\" describes the electron shell, or energy level, of an atom. The value of \\(n\\) ranges from 1 to the shell containing the outermost electron of that atom."^^qudt:LatexString ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Quantum_number"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:symbol "n" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:QuantumNumber ;
    skos:closeMatch quantitykind:MagneticQuantumNumber,
        quantitykind:OrbitalAngularMomentumQuantumNumber,
        quantitykind:SpinQuantumNumber .

quantitykind:SpecificHeatCapacityAtConstantPressure a qudt:QuantityKind ;
    rdfs:label "Specific heat capacity at constant pressure"@en ;
    qudt:applicableUnit unit:J-PER-KiloGM-K,
        unit:J-PER-KiloGM-K-PA ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T-2D0 ;
    qudt:plainTextDescription "Specific heat at a constant pressure." ;
    qudt:symbol "c_p" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:SpecificHeatCapacity,
        quantitykind:SpecificHeatCapacityAtConstantVolume,
        quantitykind:SpecificHeatCapacityAtSaturation .

quantitykind:SpecificHeatCapacityAtConstantVolume a qudt:QuantityKind ;
    rdfs:label "Specific heat capacity at constant volume"@en ;
    qudt:applicableUnit unit:J-PER-KiloGM-K,
        unit:J-PER-KiloGM-K-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T-2D0 ;
    qudt:plainTextDescription "Specific heat per constant volume." ;
    qudt:symbol "c_v" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:SpecificHeatCapacity,
        quantitykind:SpecificHeatCapacityAtConstantPressure,
        quantitykind:SpecificHeatCapacityAtSaturation .

quantitykind:SpecificVolume a qudt:QuantityKind ;
    rdfs:label "Specific Volume"@en ;
    dcterms:description "\"Specific Volume\" (\\(\\nu\\)) is the volume occupied by a unit of mass of a material. It is equal to the inverse of density."^^qudt:LatexString ;
    qudt:applicableUnit unit:DeciL-PER-GM,
        unit:L-PER-KiloGM,
        unit:M3-PER-KiloGM,
        unit:MilliL-PER-KiloGM ;
    qudt:baseUnitDimensions "\\(L^3/M\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M-1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Specific_volume"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(sv = \\frac{1}{\\rho}\\), where \\(\\rho\\) is mass density."^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Density .

quantitykind:ThermalResistivity a qudt:QuantityKind ;
    rdfs:label "Thermal Resistivity"@en ;
    dcterms:description "The reciprocal of thermal conductivity is thermal resistivity, measured in \\(kelvin-metres\\) per watt (\\(K \\cdot m/W\\))."^^qudt:LatexString ;
    qudt:applicableUnit unit:DEG_F-HR,
        unit:FT2-PER-BTU_IT-IN,
        unit:K-M-PER-W,
        unit:M-K-PER-W ;
    qudt:baseUnitDimensions "\\(K \\cdot s^3/kg \\cdot m\\)"^^qudt:LatexString,
        "\\(\\Theta \\cdot T^3/L \\cdot M\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M-1H1T3D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

unit:A-PER-CentiM a qudt:Unit ;
    rdfs:label "Ampere Per Centimetre"@en,
        "Ampere Per Centimeter"@en-us ;
    qudt:conversionMultiplier 100.0 ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:LinearElectricCurrentDensity,
        quantitykind:MagneticFieldStrength_H ;
    qudt:iec61360Code "0112/2///62720#UAB073" ;
    qudt:plainTextDescription "SI base unit ampere divided by the 0.01-fold of the SI base unit metre" ;
    qudt:ucumCode "A.cm-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A2" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:A-PER-MilliM a qudt:Unit ;
    rdfs:label "Ampere Per Millimetre"@en,
        "Ampere Per Millimeter"@en-us ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:LinearElectricCurrentDensity,
        quantitykind:MagneticFieldStrength_H ;
    qudt:iec61360Code "0112/2///62720#UAB072" ;
    qudt:plainTextDescription "SI base unit ampere divided by the 0.001-fold of the SI base unit metre" ;
    qudt:ucumCode "A.mm-1"^^qudt:UCUMcs,
        "A/mm"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A3" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:C-PER-CentiM2 a qudt:Unit ;
    rdfs:label "Coulomb Per Square Centimetre"@en,
        "Coulomb Per Square Centimeter"@en-us ;
    qudt:conversionMultiplier 10000.0 ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricChargePerArea ;
    qudt:iec61360Code "0112/2///62720#UAB101" ;
    qudt:plainTextDescription "derived SI unit coulomb divided by the 0.0001-fold of the power of the SI base unit metre by exponent 2" ;
    qudt:ucumCode "C.cm-2"^^qudt:UCUMcs,
        "C/cm2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A33" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:C-PER-MilliM2 a qudt:Unit ;
    rdfs:label "Coulomb Per Square Millimetre"@en,
        "Coulomb Per Square Millimeter"@en-us ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricChargePerArea ;
    qudt:iec61360Code "0112/2///62720#UAB100" ;
    qudt:plainTextDescription "derived SI unit coulomb divided by the 0.000 001-fold of the power of the SI base unit metre by exponent 2" ;
    qudt:ucumCode "C.mm-2"^^qudt:UCUMcs,
        "C/mm2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A35" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:C_Ab-PER-CentiM2 a qudt:Unit ;
    rdfs:label "Abcoulomb per Square Centimetre"@en,
        "Abcoulomb per Square Centimeter"@en-us ;
    dcterms:description """Abcoulomb Per Square Centimeter is a unit in the category of Electric charge surface density. It is also known as abcoulombs per square centimeter, abcoulomb per square centimetre, abcoulombs per square centimetre, abcoulomb/square centimeter,abcoulomb/square centimetre. This unit is commonly used in the cgs unit system.
Abcoulomb Per Square Centimeter (abcoulomb/cm2) has a dimension of \\(L_2TI\\).  where L is length, T is time, and I is electric current. It can be converted to the corresponding standard SI unit \\(C/m^2\\) by multiplying its value by a factor of 100,000."""^^qudt:LatexString ;
    qudt:conversionMultiplier 100000.0 ;
    qudt:derivedUnitOfSystem sou:CGS-EMU ;
    qudt:expression "\\(abc-per-cm2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricChargePerArea ;
    qudt:informativeReference "http://www.efunda.com/glossary/units/units--electric_charge_surface_density--abcoulomb_per_square_centimeter.cfm"^^xsd:anyURI ;
    qudt:latexDefinition "\\(abcoulomb/cm^2\\)"^^qudt:LatexString ;
    qudt:ucumCode "10.C.cm-2"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:C_Stat-PER-CentiM2 a qudt:Unit ;
    rdfs:label "Statcoulomb per Square Centimetre"@en,
        "Statcoulomb per Square Centimeter"@en-us ;
    dcterms:description "\\(\\textbf{Statcoulomb per Square Centimeter}\\) is a unit of measure for electric flux density and electric polarization. One Statcoulomb per Square Centimeter is \\(2.15\\times 10^9 \\, coulomb\\,per\\,square\\,inch\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00000333564 ;
    qudt:derivedUnitOfSystem sou:CGS-ESU ;
    qudt:expression "\\(statc-per-cm2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricChargePerArea ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Da a qudt:Unit,
        unit:Unit ;
    rdfs:label "Dalton"@en ;
    dcterms:description "The unified atomic mass unit (symbol: \\(\\mu\\)) or dalton (symbol: Da) is a unit that is used for indicating mass on an atomic or molecular scale. It is defined as one twelfth of the rest mass of an unbound atom of carbon-12 in its nuclear and electronic ground state, and has a value of \\(1.660538782(83) \\times 10^{-27} kg\\). One \\(Da\\) is approximately equal to the mass of one proton or one neutron. The CIPM have categorised it as a \"non-SI unit whose values in SI units must be obtained experimentally\"."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00000000000000000000000000166053878283 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Dalton"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MolecularMass ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Atomic_mass_unit"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Dalton?oldid=495038954"^^xsd:anyURI ;
    qudt:symbol "Da",
        "Da"^^xsd:string,
        "u"^^xsd:string,
        "μ"^^xsd:string ;
    qudt:ucumCode "u"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:AMU,
        unit:U ;
    skos:altLabel "atomic-mass-unit" .

unit:FC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Foot Candle"@en ;
    dcterms:description "\"Foot Candle\" is a unit for  'Luminous Flux Per Area' expressed as \\(fc\\)."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Foot-candle"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-2I1M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:LuminousFluxPerArea ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Foot-candle?oldid=475579268"^^xsd:anyURI ;
    qudt:symbol "fc",
        "fc"^^xsd:string ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HZ a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Hertz"@en ;
    dcterms:description "The hertz (symbol Hz) is the SI unit of frequency defined as the number of cycles per second of a periodic phenomenon. One of its most common uses is the description of the sine wave, particularly those used in radio and audio applications, such as the frequency of musical tones. The word \"hertz\" is named for Heinrich Rudolf Hertz, who was the first to conclusively prove the existence of electromagnetic waves."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Hertz"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Frequency ;
    qudt:iec61360Code "0112/2///62720#UAA170" ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/hertz> ;
    qudt:symbol "Hz",
        "Hz"^^xsd:string ;
    qudt:ucumCode "Hz"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "HTZ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:PER-SEC .

unit:J-PER-KiloGM-K a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Joule per Kilogram Kelvin"@en,
        "Joules per kilogram per Kelvin"@en ;
    dcterms:description "Specific heat capacity - The heat required to raise unit mass of a substance by unit temperature interval under specified conditions, such as constant pressure: usually measured in joules per kelvin per kilogram. Symbol \\(c_p\\) (for constant pressure) Also called specific heat."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(J-per-kgK\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T-2D0 ;
    qudt:hasQuantityKind quantitykind:SpecificEntropy,
        quantitykind:SpecificHeatCapacity,
        quantitykind:SpecificHeatCapacityAtConstantPressure,
        quantitykind:SpecificHeatCapacityAtConstantVolume,
        quantitykind:SpecificHeatCapacityAtSaturation ;
    qudt:iec61360Code "0112/2///62720#UAA176" ;
    qudt:latexSymbol "\\(J/(kg \\cdot K)\\)"^^qudt:LatexString ;
    qudt:ucumCode "J.kg-1.K-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B11" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:J-PER-M2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Joule per Square Metre"@en,
        "Joule per Square Meter"@en-us ;
    dcterms:description "Joule Per Square Meter (\\(J/m^2\\)) is a unit in the category of Energy density. It is also known as joules per square meter, joule per square metre, joule/square meter, joule/square metre. This unit is commonly used in the SI unit system."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(J/m^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:EnergyFluence,
        quantitykind:EnergyPerArea,
        quantitykind:RadiantFluence ;
    qudt:iec61360Code "0112/2///62720#UAA179" ;
    qudt:ucumCode "J.m-2"^^qudt:UCUMcs,
        "J/m2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B13" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:J-PER-MOL a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Joule per Mole"@en ;
    dcterms:description "The joule per mole (symbol: \\(J\\cdot mol^{-1}\\)) is an SI derived unit of energy per amount of material. Energy is measured in joules, and the amount of material is measured in moles. Physical quantities measured in \\(J\\cdot mol^{-1}\\)) usually describe quantities of energy transferred during phase transformations or chemical reactions. Division by the number of moles facilitates comparison between processes involving different quantities of material and between similar processes involving different types of materials. The meaning of such a quantity is always context-dependent and, particularly for chemical reactions, is dependent on the (possibly arbitrary) definition of a 'mole' for a particular process."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(J/mol\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A-1E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ChemicalAffinity,
        quantitykind:ElectricPolarizability,
        quantitykind:MolarEnergy ;
    qudt:iec61360Code "0112/2///62720#UAA183" ;
    qudt:ucumCode "J.mol-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B15" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloA-PER-M a qudt:Unit ;
    rdfs:label "Kiloampere Per Metre"@en,
        "Kiloampere Per Meter"@en-us ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:LinearElectricCurrentDensity,
        quantitykind:MagneticFieldStrength_H ;
    qudt:iec61360Code "0112/2///62720#UAA558" ;
    qudt:plainTextDescription "1 000-fold of the SI base unit ampere divided by the SI base unit metre" ;
    qudt:ucumCode "kA.m-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B24" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloV-A_Reactive a qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilovolt Ampere Reactive"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:ReactivePower ;
    qudt:iec61360Code "0112/2///62720#UAA648" ;
    qudt:plainTextDescription "1 000-fold of the unit var" ;
    qudt:ucumCode "kV.A{reactive}"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "KVR" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LUX a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Lux"@en ;
    dcterms:description "The SI unit for measuring the illumination (illuminance) of a surface. One lux is defined as an illumination of one lumen per square meter or 0.0001 phot. In considering the various light units, it's useful to think about light originating at a point and shining upon a surface. The intensity of the light source is measured in candelas; the total light flux in transit is measured in lumens (1 lumen = 1 candelau00b7steradian); and the amount of light received per unit of surface area is measured in lux (1 lux = 1 lumen/square meter). One lux is equal to approximately 0.09290 foot candle."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Lux"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E0L-2I1M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:LuminousFluxPerArea ;
    qudt:iec61360Code "0112/2///62720#UAA723" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Lux?oldid=494700274"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/lux> ;
    qudt:siUnitsExpression "lm/m^2" ;
    qudt:symbol "lx",
        "lx"^^xsd:string ;
    qudt:ucumCode "lx"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "LUX" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M3 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Cubic Metre"@en,
        "Cubic Meter"@en-us ;
    dcterms:description "The SI unit of volume, equal to 1.0e6 cm3, 1000 liters, 35.3147 ft3, or 1.30795 yd3. A cubic meter holds about 264.17 U.S. liquid gallons or 219.99 British Imperial gallons."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Cubic_metre"^^xsd:anyURI ;
    qudt:expression "\\(m^{3}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:SectionModulus,
        quantitykind:Volume ;
    qudt:iec61360Code "0112/2///62720#UAA757" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Cubic_metre?oldid=490956678"^^xsd:anyURI ;
    qudt:ucumCode "m3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "MTQ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaC-PER-M2 a qudt:Unit ;
    rdfs:label "Megacoulomb Per Square Metre"@en,
        "Megacoulomb Per Square Meter"@en-us ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricChargePerArea ;
    qudt:iec61360Code "0112/2///62720#UAA207" ;
    qudt:plainTextDescription "1 000 000-fold of the SI derived unit coulomb divided by the power of the SI base unit metre with the exponent 2" ;
    qudt:ucumCode "MC.m-2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B70" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaV-A_Reactive a qudt:Unit,
        unit:Unit ;
    rdfs:label "Megavolt Ampere Reactive"@en ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:ReactivePower ;
    qudt:iec61360Code "0112/2///62720#UAB199" ;
    qudt:plainTextDescription "1 000 000-fold of the unit volt ampere reactive" ;
    qudt:ucumCode "MV.A{reactive)"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "MAR" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroC-PER-M2 a qudt:Unit ;
    rdfs:label "Microcoulomb Per Square Metre"@en,
        "Microcoulomb Per Square Meter"@en-us ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricChargePerArea ;
    qudt:iec61360Code "0112/2///62720#UAA060" ;
    qudt:plainTextDescription "0.000001-fold of the SI derived unit coulomb divided by the power of the SI base unit metre with the exponent 2" ;
    qudt:ucumCode "uC.m-2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B88" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroGM-PER-M3 a qudt:Unit ;
    rdfs:label "Microgram Per Cubic Metre"@en,
        "Microgram Per Cubic Meter"@en-us ;
    qudt:conversionMultiplier 0.000000001 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:MassDensity ;
    qudt:iec61360Code "0112/2///62720#UAA085" ;
    qudt:plainTextDescription "0.000000001-fold of the SI base unit kilogram divided by the power of the SI base unit metre with the exponent 3" ;
    qudt:ucumCode "ug.m-3"^^qudt:UCUMcs,
        "ug/m3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "GQ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliA-PER-IN a qudt:Unit ;
    rdfs:label "Milliampere Per Inch"@en ;
    qudt:conversionMultiplier 0.03937008 ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:LinearElectricCurrentDensity,
        quantitykind:MagneticFieldStrength_H ;
    qudt:iec61360Code "0112/2///62720#UAA778" ;
    qudt:plainTextDescription "0.001-fold of the SI base unit ampere divided by the unit inch according to the Anglo-American and the Imperial system of units" ;
    qudt:ucumCode "mA.[in_i]-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F08" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliA-PER-MilliM a qudt:Unit ;
    rdfs:label "Milliampere Per Millimetre"@en,
        "Milliampere Per Millimeter"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:LinearElectricCurrentDensity,
        quantitykind:MagneticFieldStrength_H ;
    qudt:iec61360Code "0112/2///62720#UAA781" ;
    qudt:plainTextDescription "0.001-fold of the SI base unit ampere  divided by the 0.001-fold of the SI base unit metre" ;
    qudt:ucumCode "mA.mm-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F76" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliC-PER-M2 a qudt:Unit ;
    rdfs:label "Millicoulomb Per Square Metre"@en,
        "Millicoulomb Per Square Meter"@en-us ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricChargePerArea ;
    qudt:iec61360Code "0112/2///62720#UAA784" ;
    qudt:plainTextDescription "0.001-fold of the SI derived unit coulomb divided by the power of the SI base unit metre with the exponent 2" ;
    qudt:ucumCode "mC.m-2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D89" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PlanckFrequency_Ang a qudt:Unit ;
    rdfs:label "Planck Angular Frequency"@en ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Planck_angular_frequency"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:AngularVelocity ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:REV-PER-HR a qudt:Unit ;
    rdfs:label "Revolution per Hour"@en ;
    dcterms:description "\"Revolution per Hour\" is a unit for  'Angular Velocity' expressed as \\(rev/h\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00174532925 ;
    qudt:expression "\\(rev/h\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:AngularVelocity ;
    qudt:ucumCode "{#}.h-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:REV-PER-MIN a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Revolution per Minute"@en ;
    dcterms:description "\"Revolution per Minute\" is a unit for  'Angular Velocity' expressed as \\(rev/min\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.104719755 ;
    qudt:expression "\\(rev/min\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:AngularVelocity ;
    qudt:iec61360Code "0112/2///62720#UAB231" ;
    qudt:ucumCode "{#}.min-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:REV-PER-SEC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Revolution per Second"@en ;
    dcterms:description "\"Revolution per Second\" is a unit for  'Angular Velocity' expressed as \\(rev/s\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 6.28318531 ;
    qudt:expression "\\(rev/s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:AngularVelocity ;
    qudt:ucumCode "{#}.s-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:V-A_Reactive a qudt:Unit,
        unit:Unit ;
    rdfs:label "Volt Ampere Reactive"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:ReactivePower ;
    qudt:iec61360Code "0112/2///62720#UAB023" ;
    qudt:plainTextDescription "unit with special name for reactive power" ;
    qudt:ucumCode "V.A{reactive}"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D44" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:W-PER-M2-K a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Watt per Square Metre Kelvin"@en,
        "Watt per Square Meter Kelvin"@en-us ;
    dcterms:description "\\(\\textbf{Watt Per Square Meter Per Kelvin }(\\(W m^{-2} K^{-1}\\)) is a unit in the category of Thermal heat transfer coefficient. It is also known as watt/square meter-kelvin. This unit is commonly used in the SI unit system. Watt Per Square Meter Per Kelvin (\\(W m^{-2} K^{-1}\\)) has a dimension of \\(MT^{-1}Q^{-1}\\) where \\(M\\) is mass, \\(T\\) is time, and \\(Q\\) is temperature. This unit is the standard SI unit in this category."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(W/(m^{2}-K)\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H-1T-3D0 ;
    qudt:hasQuantityKind quantitykind:CoefficientOfHeatTransfer,
        quantitykind:CombinedNonEvaporativeHeatTransferCoefficient,
        quantitykind:SurfaceCoefficientOfHeatTransfer ;
    qudt:iec61360Code "0112/2///62720#UAA311" ;
    qudt:ucumCode "W.m-2.K-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D55" ;
    qudt:unitOfSystem sou:SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

sp:lt a spin:Function ;
    rdfs:label "lt" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "the second operand" ],
        [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "the first operand" ] ;
    spin:returnType xsd:boolean ;
    spin:symbol "<" ;
    rdfs:comment "Returns true if ?arg1 < ?arg2." ;
    rdfs:subClassOf spl:BooleanFunctions .

spin:ConstructTemplates a spin:ConstructTemplate ;
    rdfs:label "Construct templates" ;
    spin:abstract true ;
    rdfs:comment "Suggested abstract base class for all ConstructTemplates." ;
    rdfs:subClassOf spin:Templates .

spin:MagicProperties a spin:MagicProperty ;
    rdfs:label "Magic properties" ;
    spin:abstract true ;
    rdfs:comment "An abstract superclass that can be used to group all spin:MagicProperty instances under a single parent class." ;
    rdfs:subClassOf spin:Functions ;
    rdfs:subPropertyOf spin:systemProperty .

spin:violationValue a rdf:Property ;
    rdfs:label "violation value" ;
    rdfs:comment "An optional attribute of ConstraintViolations to point at a specific RDF node that caused the violation. Should be accessible from the root via the violationPath." ;
    rdfs:domain spin:ConstraintViolation ;
    rdfs:subPropertyOf spin:systemProperty .

spl:objectCount a spin:Function ;
    rdfs:label "objectCount" ;
    spin:body [ a sp:Select ;
            sp:resultVariables ( [ sp:expression [ a sp:Count ;
                                sp:expression [ sp:varName "object" ] ] ;
                        sp:varName "result" ] ) ;
            sp:where ( [ sp:object [ sp:varName "object" ] ;
                        sp:predicate spin:_arg2 ;
                        sp:subject spin:_arg1 ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Resource ;
            rdfs:comment "the subject to get the number of objects of" ],
        [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType rdf:Property ;
            rdfs:comment "the property to get the number of values of" ] ;
    spin:returnType xsd:integer ;
    rdfs:comment "Gets the number of values of a given property (?arg2) at a given subject (?arg1). The result is the number of matches of (?arg1, ?arg2, ?object)." ;
    rdfs:subClassOf spl:OntologyFunctions .

dtype:CodeList a owl:Class ;
    rdfs:label "Codelist"^^xsd:string ;
    vaem:comment "A codelist is a controlled vocabulary of terms that are used to represent permissible values of a variable in information systems. The representaiton of codes in \"dtype\" has been influenced by CCTS and UBL."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/1.1/schema/dtype>,
        <http://www.linkedmodel.org/schema/dtype> ;
    rdfs:subClassOf dtype:Enumeration .

vaem:VocabularyGraph a vaem:GraphRole ;
    rdfs:label "Vocabulary graph"^^xsd:string ;
    dcterms:description "An RDF/OWL Graph that is a controlled set of instances."^^xsd:string ;
    vaem:filePrefix "VOCAB"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> .

sh:Literal a sh:NodeKind ;
    rdfs:label "Literal"@en ;
    rdfs:comment "The node kind of all literals."@en ;
    rdfs:isDefinedBy sh: .

brick:Building a owl:Class,
        sh:NodeShape ;
    rdfs:label "Building" ;
    rdfs:subClassOf brick:Location ;
    skos:definition "An independent unit of the built environment with a characteristic spatial structure, intended to serve at least one function or user activity [ISO 12006-2:2013]"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Building ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Building,
        tag:Location .

brick:Building_Meter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Building Meter" ;
    rdfs:subClassOf brick:Meter ;
    skos:definition "A meter that measures usage or consumption of some media for a whole building"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Building ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Meter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Building,
        tag:Equipment,
        tag:Meter .

brick:CO2_Concentration a brick:Quantity ;
    rdfs:label "CO2Concentration" ;
    qudt:applicableUnit unit:PPB,
        unit:PPM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:DimensionlessRatio,
        brick:Air_Quality ;
    skos:definition "The concentration of carbon dioxide in a medium" .

brick:Dewpoint_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Dewpoint Sensor" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Dew_point> ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Senses the dewpoint temperature . Dew point is the temperature to which air must be cooled to become saturated with water vapor"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Dewpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Dewpoint,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Dewpoint .

brick:Disable_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Disable Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Commands that disable functionality"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Disable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Disable,
        tag:Point .

brick:Discharge_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Flow Setpoint" ;
    rdfs:subClassOf brick:Air_Flow_Setpoint ;
    skos:definition "Sets discharge air flow"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Flow,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Discharge_Air .

brick:Enthalpy a brick:Quantity ;
    rdfs:label "Enthalpy" ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MilliJ,
        unit:N-M,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    skos:definition "(also known as heat content), thermodynamic quantity equal to the sum of the internal energy of a system plus the product of the pressure volume work done on the system. H = E + pv, where H = enthalpy or total heat content, E = internal energy of the system, p = pressure, and v = volume. (Compare to [[specific enthalpy]].)",
        "(also known as heat content), thermodynamic quantity equal to the sum of the internal energy of a system plus the product of the pressure volume work done on the system. H = E + pv, where H = enthalpy or total heat content, E = internal energy of the system, p = pressure, and v = volume. (Compare to [[specific enthalpy]].)"@en ;
    brick:hasQUDTReference quantitykind:Enthalpy .

brick:Filter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Filter" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "Device to remove gases from a mixture of gases or to remove solid material from a fluid"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Filter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Filter .

brick:Leaving_Water a owl:Class,
        sh:NodeShape,
        brick:Leaving_Water ;
    rdfs:label "Leaving Water" ;
    rdfs:subClassOf brick:Water ;
    skos:definition "Water that is leaving a piece of equipment or system"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Leaving ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fluid,
        tag:Leaving,
        tag:Liquid,
        tag:Water .

brick:Meter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Meter" ;
    rdfs:subClassOf brick:Equipment ;
    skos:definition "A device that measure usage or consumption of some media --- typically a form energy or power."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Meter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Meter .

brick:Min_Air_Flow_Setpoint_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Air Flow Setpoint Limit" ;
    rdfs:subClassOf brick:Air_Flow_Setpoint_Limit,
        brick:Min_Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Air_Flow_Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point,
        tag:Setpoint .

brick:Occupied_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Occupied Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Occupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Occupied,
        tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Air .

brick:On_Off_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "On Off Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "An On/Off Command controls or reports the binary status of a control loop, relay or equipment activity"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:On ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Off,
        tag:On,
        tag:Point .

brick:Outside_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Outside Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint ;
    skos:definition "Sets temperature of outside air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Outside,
        tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Outside_Air .

brick:PV_Panel a owl:Class,
        sh:NodeShape ;
    rdfs:label "PV Panel" ;
    rdfs:seeAlso <https://encyclopedia2.thefreedictionary.com/pv+module> ;
    rdfs:subClassOf brick:Equipment ;
    skos:definition "An integrated assembly of interconnected photovoltaic cells designed to deliver a selected level of working voltage and current at its output terminals packaged for protection against environment degradation and suited for incorporation in photovoltaic power systems."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PV ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Panel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Solar ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:PV,
        tag:Panel,
        tag:Solar .

brick:Speed a brick:Quantity ;
    rdfs:label "Speed" ;
    qudt:applicableUnit unit:BFT,
        unit:DEG-PER-HR,
        unit:DEG-PER-MIN,
        unit:DEG-PER-SEC,
        unit:FT-PER-HR,
        unit:FT-PER-SEC,
        unit:FT3-PER-MIN-FT2,
        unit:GigaC-PER-M3,
        unit:GigaHZ-M,
        unit:HZ-M,
        unit:KiloM-PER-HR,
        unit:KiloM-PER-SEC,
        unit:M-PER-HR,
        unit:M-PER-SEC,
        unit:MI-PER-HR,
        unit:MI-PER-SEC,
        unit:MegaHZ-M,
        unit:RAD-PER-HR,
        unit:RAD-PER-MIN,
        unit:RAD-PER-SEC ;
    brick:hasQUDTReference quantitykind:Speed .

brick:Static_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Static Pressure Sensor" ;
    rdfs:subClassOf brick:Pressure_Sensor ;
    skos:definition "Measures resistance to airflow in a heating and cooling system's components and duct work"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Pressure,
        tag:Sensor,
        tag:Static .

brick:Temperature_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Temperature Deadband Setpoint" ;
    rdfs:subClassOf brick:Deadband_Setpoint,
        brick:Temperature_Setpoint ;
    skos:definition "Sets the size of a deadband of temperature"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Deadband ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Deadband,
        tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature .

brick:Velocity_Pressure a brick:Quantity ;
    rdfs:label "Velocity Pressure" ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CM_H2O,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PlanckPressure,
        unit:TORR ;
    skos:broader brick:Pressure ;
    skos:definition "Dynamic Pressure (indicated with q, or Q, and sometimes called velocity pressure) is the quantity defined by: (q = 1/2 * ρ v^{2}), where (using SI units),  (q) is dynamic pressure in (pascals), (ρ) is fluid density in (kg/m^{3}) (for example, density of air) and (v ) is fluid velocity in (m/s)."@en ;
    brick:hasQUDTReference quantitykind:DynamicPressure,
        brick:Dynamic_Pressure .

brick:Water_Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Alarm" ;
    rdfs:subClassOf brick:Alarm ;
    skos:definition "Alarm that indicates an undesirable event with a pipe, container, or equipment carrying water e.g. water leak"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Point,
        tag:Water .

brick:Water_Valve a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Valve" ;
    rdfs:subClassOf brick:Valve ;
    skos:definition "A valve that modulates the flow of water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Valve ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Valve,
        tag:Water .

brick:Zone_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Zone Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint ;
    skos:definition "Sets temperature of zone air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Zone ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Zone_Air .

brick:isPartOf a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Is part of" ;
    owl:inverseOf brick:hasPart .

s223:Sensor a s223:Class,
        sh:NodeShape ;
    rdfs:label "Sensor" ;
    rdfs:comment "A Sensor produces an ObservableProperty (which may or may not be quantifiable. For example, it might just sense an alarm state, or occupancy. But usually it will produce a number, in which case it is associated with a QuantifiableObservableProperty)." ;
    rdfs:subClassOf s223:Device ;
    sh:message "A non-differential Sensor must have exactly 1 measurement location" ;
    sh:or ( [ sh:property [ sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path s223:hasMeasurementLocation ] ] [ sh:property [ sh:hasValue s223:DifferentialSensor ;
                        sh:path ( rdf:type [ sh:zeroOrMorePath rdfs:subClassOf ] ) ] ] [ sh:property [ sh:hasValue s223:VirtualSensor ;
                        sh:path ( rdf:type [ sh:zeroOrMorePath rdfs:subClassOf ] ) ] ] ) ;
    sh:property [ sh:or ( [ sh:class s223:Device ] [ sh:class s223:Connection ] [ sh:class s223:Segment ] [ sh:class s223:ConnectionPoint ] [ sh:class s223:DomainSpace ] ) ;
            sh:path s223:hasMeasurementLocation ],
        [ sh:class s223:ObservableProperty ;
            sh:maxCount 1 ;
            sh:path s223:observesProperty ] ;
    sh:rule [ a sh:SPARQLRule ;
            sh:construct """
CONSTRUCT {$this s223:hasMeasurementLocation ?singleMeasurementLocation .}
WHERE {
{
SELECT ?prop (COUNT (DISTINCT ?measurementLocation) AS ?count) $this
WHERE {
FILTER (NOT EXISTS {$this s223:hasMeasurementLocation ?anything}) .
FILTER (NOT EXISTS {$this a/rdfs:subClassOf* s223:DifferentialSensor}) .
FILTER (NOT EXISTS {$this a/rdfs:subClassOf* s223:VirtualSensor}) .
$this s223:observesProperty ?prop .
?measurementLocation s223:hasProperty ?prop .
}
GROUP BY ?prop $this
}
FILTER (?count = 1) .
?singleMeasurementLocation s223:hasProperty ?prop .
}
""" ;
            sh:name "InferredMeasurementLocation" ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/inference/data-rules> ] .

s223:SystemConnectionPoint a s223:Class,
        sh:NodeShape ;
    rdfs:label "SystemConnectionPoint" ;
    rdfs:comment "This is analogous to a ConnectionPoint, but for a System rather than a Device." ;
    rdfs:subClassOf s223:Concept ;
    sh:property [ sh:name "Test SCP1" ;
            sh:path s223:mapsTo ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    rdfs:comment """Ensure that every SystemConnectionPoint maps to a target that is associated with the same System as that associated with the SystemConnectionPoint.
The test depends on the class of the target - one of ConnectionPoint, Junction, or a SystemConnectionPoint of a contained subSystem.""" ;
                    sh:message "{$this} is associated with {?system}, but it mapsTo a target associated with {?targetSystem}" ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/validation/model> ;
                    sh:select """
SELECT $this ?system ?targetSystem
WHERE {
$this ^s223:hasSystemConnectionPoint ?system .
$this s223:mapsTo ?target .
{
?class rdfs:subClassOf* s223:ConnectionPoint .
?target a ?class .
?target s223:isConnectionPointOf/^s223:contains ?targetSystem .
}
UNION
{
?target a s223:Junction .
?target ^s223:contains ?targetSystem .
}
UNION
{
?target a s223:SystemConnectionPoint .
?target ^s223:hasSystemConnectionPoint/^s223:contains ?targetSystem .
}
FILTER (?system != ?targetSystem ) .
}
""" ] ],
        [ sh:deactivated true ;
            sh:message "This SystemConnectionPoint must be associated (systemConnected) with at least one other SystemConnectionPoint." ;
            sh:minCount 1 ;
            sh:path s223:systemConnected ;
            sh:severity sh:Info ],
        [ sh:maxCount 1 ;
            sh:name "ConnectionPoint direction" ;
            sh:or ( [ sh:hasValue s223:Inlet ] [ sh:hasValue s223:Outlet ] [ sh:hasValue s223:Bidirectional ] ) ;
            sh:path s223:hasDirection ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:or ( [ sh:class s223:ConnectionPoint ] [ sh:class s223:SystemConnectionPoint ] [ sh:class s223:Junction ] ) ;
            sh:path s223:mapsTo ],
        [ sh:or ( [ sh:class s223:SystemConnectionPoint ] [ sh:class s223:ConnectionPoint ] ) ;
            sh:path s223:systemConnected ] ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "If a SystemConnectionPoint instance has a value of s223:Bidirectional for property hasDirection, then declare it as an instance of BidirectionalSystemConnectionPoint." ;
            sh:condition [ sh:property [ sh:hasValue s223:Bidirectional ;
                            sh:path s223:hasDirection ] ] ;
            sh:object s223:BidirectionalSystemConnectionPoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            rdfs:comment "If a SystemConnectionPoint instance has a value of s223:Inlet for property hasDirection, then declare it as an instance of InletSystemConnectionPoint." ;
            sh:condition [ sh:property [ sh:hasValue s223:Inlet ;
                            sh:path s223:hasDirection ] ] ;
            sh:object s223:InletSystemConnectionPoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            rdfs:comment "If a SystemConnectionPoint instance has a value of s223:Outlet for property hasDirection, then declare it as an instance of OutletSystemConnectionPoint." ;
            sh:condition [ sh:property [ sh:hasValue s223:Outlet ;
                            sh:path s223:hasDirection ] ] ;
            sh:object s223:OutletSystemConnectionPoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

s223:hasPropertyShape a sh:PropertyShape ;
    rdfs:label "has Property Shape" ;
    sh:class s223:Property ;
    sh:path s223:hasProperty .

<http://data.ashrae.org/standard223/1.0/validation/model> a owl:Ontology ;
    owl:imports <http://data.ashrae.org/standard223/1.0/model/all>,
        sh: ;
    owl:versionInfo "Created with TopBraid Composer" ;
    sh:declare [ sh:namespace "http://data.ashrae.org/standard223#"^^xsd:anyURI ;
            sh:prefix "s223" ],
        [ sh:namespace "http://www.w3.org/2000/01/rdf-schema#"^^xsd:anyURI ;
            sh:prefix "rdfs" ] .

enum:Substance-Air a s223:EnumerationValue ;
    rdfs:label "Substance-Air" .

qudt:TransformType a owl:Class ;
    rdfs:label "Transform type" ;
    rdfs:isDefinedBy <http://qudt.org/2.0/schema/qudt/mathematics>,
        qudt:mathematics ;
    rdfs:subClassOf qudt:EnumeratedValue ;
    skos:prefLabel "Transform type" .

qudt:unit a owl:ObjectProperty ;
    rdfs:label "unit" ;
    dcterms:description "A reference to the unit of measure of a quantity (variable or constant) of interest."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    owl:inverseOf qudt:unitFor .

qkdv:A-1E0L3I0M0H0T0D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A-1E0L3I0M0H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance -1 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 3 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:MolarVolume ;
    qudt:latexDefinition "\\(L^3 N^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L0I0M-1H0T-1D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M-1H0T-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L1I0M1H0T0D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L1I0M1H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:LengthMass ;
    qudt:latexDefinition "\\(L M\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

quantitykind:ActivityConcentration a qudt:QuantityKind ;
    rdfs:label "Activity Concentration"@en ;
    qudt:applicableUnit unit:BQ-PER-L,
        unit:BQ-PER-M3,
        unit:MicroBQ-PER-L,
        unit:MilliBQ-PER-L,
        unit:NanoBQ-PER-L ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T-1D0 ;
    qudt:informativeReference "http://www.euronuclear.org/info/encyclopedia/activityconcentration.htm"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "\\(c_A = \\frac{A}{V}\\), where \\(A\\) is the activity of a sample and \\(V\\) is its volume."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Activity Concentration\", also known as volume activity, and activity density, is ." ;
    qudt:symbol "c_A" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:AmountOfSubstance a qudt:QuantityKind ;
    rdfs:label "Amount of Substance"@en ;
    dcterms:description "\"Amount of Substance\" is a standards-defined quantity that measures the size of an ensemble of elementary entities, such as atoms, molecules, electrons, and other particles. It is sometimes referred to as chemical amount. The International System of Units (SI) defines the amount of substance to be proportional to the number of elementary entities present. The SI unit for amount of substance is \\(mole\\). It has the unit symbol \\(mol\\). The mole is defined as the amount of substance that contains an equal number of elementary entities as there are atoms in 0.012kg of the isotope carbon-12. This number is called Avogadro's number and has the value \\(6.02214179(30) \\times 10^{23}\\). The only other unit of amount of substance in current use is the \\(pound-mole\\) with the symbol \\(lb-mol\\), which is sometimes used in chemical engineering in the United States. One \\(pound-mole\\) is exactly \\(453.59237 mol\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:IU,
        unit:KiloMOL,
        unit:MOL,
        unit:MicroMOL,
        unit:MilliMOL ;
    qudt:baseUnitDimensions "\\(M\\)"^^qudt:LatexString,
        "\\(mol\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Amount_of_substance"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Amount_of_substance"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:symbol "n" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:DoseEquivalent a qudt:QuantityKind ;
    rdfs:label "Dose Equivalent"@en ;
    dcterms:description "\"Dose Equivalent} (former), or \\textit{Equivalent Absorbed Radiation Dose}, usually shortened to \\textit{Equivalent Dose\", is a computed average measure of the radiation absorbed by a fixed mass of biological tissue, that attempts to account for the different biological damage potential of different types of ionizing radiation. The equivalent dose to a tissue is found by multiplying the absorbed dose, in gray, by a dimensionless \"quality factor\" \\(Q\\), dependent upon radiation type, and by another dimensionless factor \\(N\\), dependent on all other pertinent factors. N depends upon the part of the body irradiated, the time and volume over which the dose was spread, even the species of the subject."^^qudt:LatexString ;
    qudt:applicableUnit unit:MicroSV,
        unit:MicroSV-PER-HR,
        unit:MilliR_man,
        unit:MilliSV,
        unit:REM,
        unit:SV ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Equivalent_dose"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Equivalent_dose"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition "At the point of interest in tissue, \\(H = DQ\\), where \\(D\\) is the absorbed dose and \\(Q\\) is the quality factor at that point."^^qudt:LatexString ;
    qudt:symbol "H" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:SpecificEnergy .

quantitykind:ElectricChargeDensity a qudt:QuantityKind ;
    rdfs:label "Electric Charge Density"@en ;
    qudt:applicableUnit unit:C-PER-M3,
        unit:MegaC-PER-M3,
        unit:MicroC-PER-M3 ;
    qudt:expression "\\(charge-density\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L-3I0M0H0T1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Charge_density"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI,
        "http://www.maxwells-equations.com/pho/charge-density.php"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\rho = \\frac{dQ}{dV}\\), where \\(Q\\) is electric charge and \\(V\\) is Volume."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\rho\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "In electromagnetism, charge density is a measure of electric charge per unit volume of space, in one, two or three dimensions. More specifically: the linear, surface, or volume charge density is the amount of electric charge per unit length, surface area, or volume, respectively." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricChargeSurfaceDensity .

quantitykind:ElectricChargeVolumeDensity a qudt:QuantityKind ;
    rdfs:label "Electric Charge Volume Density"@en ;
    dcterms:description "In electromagnetism, charge density is a measure of electric charge per unit volume of space, in one, two or three dimensions. More specifically: the linear, surface, or volume charge density is the amount of electric charge per unit length, surface area, or volume, respectively. The respective SI units are \\(C \\cdot m^{-1}\\), \\(C \\cdot m^{-2}\\) or \\(C \\cdot m^{-3}\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:C-PER-CentiM3,
        unit:C-PER-M3,
        unit:C-PER-MilliM3,
        unit:KiloC-PER-M3,
        unit:MilliC-PER-M3 ;
    qudt:baseUnitDimensions "\\(A \\cdot s/m^3\\)"^^qudt:LatexString,
        "\\(I \\cdot T/L^3\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L-3I0M0H0T1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Charge_density"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\rho\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectricFluxDensity a qudt:QuantityKind ;
    rdfs:label "Electric Flux Density"@en ;
    dcterms:description "\\(\\textbf{Electric Flux Density}\\), also referred to as \\(\\textit{Electric Displacement}\\), is related to electric charge density by the following equation: \\(\\text{div} \\; D = \\rho\\), where \\(\\text{div}\\) denotes the divergence."^^qudt:LatexString ;
    qudt:applicableUnit unit:C-PER-CentiM2,
        unit:C-PER-M2,
        unit:C-PER-MilliM2,
        unit:C_Ab-PER-CentiM2,
        unit:C_Stat-PER-CentiM2,
        unit:KiloC-PER-M2,
        unit:MegaC-PER-M2,
        unit:MicroC-PER-M2,
        unit:MilliC-PER-M2 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Electric_flux"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T1D0 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mathbf{D}  = \\epsilon_0 E + P\\), where \\(\\epsilon_0\\) is the electric constant, \\(\\mathbf{E} \\) is electric field strength, and \\(P\\) is electric polarization."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\mathbf{D}\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:ElectricDisplacement ;
    skos:broader quantitykind:ElectricChargePerArea .

quantitykind:HeatCapacity a qudt:QuantityKind ;
    rdfs:label "Heat Capacity"@en ;
    dcterms:description "\"Heat Capacity\" (usually denoted by a capital \\(C\\), often with subscripts), or thermal capacity, is the measurable physical quantity that characterizes the amount of heat required to change a substance's temperature by a given amount. In the International System of Units (SI), heat capacity is expressed in units of joule(s) (J) per kelvin (K)."^^qudt:LatexString ;
    qudt:applicableUnit unit:BTU_IT-PER-DEG_F,
        unit:BTU_IT-PER-DEG_R,
        unit:EV-PER-K,
        unit:J-PER-K,
        unit:MegaJ-PER-K ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H-1T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Heat_capacity"^^xsd:anyURI ;
    qudt:latexDefinition "\\(C = dQ/dT\\), where \\(Q\\) is amount of heat and \\(T\\) is thermodynamic temperature."^^qudt:LatexString ;
    qudt:symbol "C_P" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:EnergyPerTemperature .

quantitykind:InternalEnergy a qudt:QuantityKind ;
    rdfs:label "Internal Energy"@en ;
    qudt:abbreviation "int-energy" ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Internal_energy"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.citizendium.org/wiki/Internal_energy"^^xsd:anyURI ;
    qudt:latexDefinition "For a closed thermodynamic system, \\(\\Delta U = Q + W\\), where \\(Q\\) is amount of heat transferred to the system and \\(W\\) is work done on the system provided that no chemical reactions occur."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Internal Energy\" is simply its energy. \"internal\" refers to the fact that some energy contributions are not considered. For instance, when the total system is in uniform motion, it has kinetic energy. This overall kinetic energy is never seen as part of the internal energy; one could call it external energy. Or, if the system is at constant non-zero height above the surface the Earth, it has constant potential energy in the gravitational field of the Earth. Gravitational energy is only taken into account when it plays a role in the phenomenon of interest, for instance in a colloidal suspension, where the gravitation influences the up- downward motion of the small particles comprising the colloid. In all other cases, gravitational energy is assumed not to contribute to the internal energy; one may call it again external energy." ;
    qudt:symbol "U" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Energy,
        quantitykind:Enthalpy,
        quantitykind:GibbsEnergy,
        quantitykind:HelmholtzEnergy ;
    owl:sameAs quantitykind:ThermodynamicEnergy ;
    skos:broader quantitykind:Energy .

quantitykind:InversePressure a qudt:QuantityKind ;
    rdfs:label "Inverse Pressure"@en ;
    qudt:applicableUnit unit:PER-BAR,
        unit:PER-MILLE-PER-PSI,
        unit:PER-PA,
        unit:PER-PSI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M-1H0T2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:IsothermalCompressibility .

quantitykind:LengthMass a qudt:QuantityKind ;
    rdfs:label "Length Mass"@en ;
    qudt:applicableUnit unit:GM-MilliM,
        unit:LB-IN,
        unit:M-KiloGM,
        unit:OZ-FT,
        unit:OZ-IN ;
    qudt:baseUnitDimensions "\\(L \\cdot M\\)"^^qudt:LatexString,
        "\\(kg \\cdot m\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LinearMomentum a qudt:QuantityKind ;
    rdfs:label "Linear Momentum"@en ;
    dcterms:description "Linear momentum is the quantity obtained by multiplying the mass of a body by its linear velocity. The momentum of a continuous medium is given by the integral of the velocity over the mass of the medium or by the product of the total mass of the medium and the velocity of the center of gravity of the medium.The SI unit for linear momentum is meter-kilogram per second (\\(m-kg/s\\))."^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloGM-M-PER-SEC,
        unit:MegaEV-PER-SpeedOfLight,
        unit:N-M-SEC-PER-M,
        unit:N-SEC,
        unit:PlanckMomentum ;
    qudt:baseUnitDimensions "\\(L \\cdot M/T\\)"^^qudt:LatexString,
        "\\(kg \\cdot m/s\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Momentum"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-1D0 ;
    qudt:latexDefinition "p = m\\upsilon"^^qudt:LatexString ;
    qudt:symbol "p" ;
    qudt:url "http://en.wikipedia.org/wiki/Momentum"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:Momentum .

quantitykind:MolarVolume a qudt:QuantityKind ;
    rdfs:label "Molar Volume"@en ;
    dcterms:description "The molar volume, symbol \\(V_m\\), is the volume occupied by one mole of a substance (chemical element or chemical compound) at a given temperature and pressure. It is equal to the molar mass (\\(M\\)) divided by the mass density (\\(\\rho\\)). It has the SI unit cubic metres per mole (\\(m^{1}/mol\\)). For ideal gases, the molar volume is given by the ideal gas equation: this is a good approximation for many common gases at standard temperature and pressure. For crystalline solids, the molar volume can be measured by X-ray crystallography."^^qudt:LatexString ;
    qudt:applicableUnit unit:CentiM3-PER-MOL,
        unit:DeciM3-PER-MOL,
        unit:L-PER-MOL,
        unit:L-PER-MicroMOL,
        unit:M3-PER-MOL ;
    qudt:baseUnitDimensions "\\(L^3/M\\)"^^qudt:LatexString,
        "\\(m^3/mol\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Molar_volume"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A-1E0L3I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Molar_volume"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(V_m = \\frac{V}{n}\\), where \\(V\\) is volume and \\(n\\) is amount of substance."^^qudt:LatexString ;
    qudt:symbol "V_m" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PlanckFunction a qudt:QuantityKind ;
    rdfs:label "Planck Function"@en ;
    dcterms:description "The \\(\\textit{Planck function}\\) is used to compute the radiance emitted from objects that radiate like a perfect \"Black Body\". The inverse of the \\(\\textit{Planck Function}\\) is used to find the \\(\\textit{Brightness Temperature}\\) of an object. The precise formula for the Planck Function depends on whether the radiance is determined on a \\(\\textit{per unit wavelength}\\) or a \\(\\textit{per unit frequency}\\). In the ISO System of Quantities, \\(\\textit{Planck Function}\\) is defined by the formula: \\(Y = -G/T\\), where \\(G\\) is Gibbs Energy and \\(T\\) is thermodynamic temperature."^^qudt:LatexString ;
    qudt:expression "\\(B_{\\nu}(T)\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/19680008986_1968008986.pdf"^^xsd:anyURI,
        "http://pds-atmospheres.nmsu.edu/education_and_outreach/encyclopedia/planck_function.htm"^^xsd:anyURI,
        "http://www.star.nesdis.noaa.gov/smcd/spb/calibration/planck.html"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition """The Planck function, \\(B_{\\tilde{\\nu}}(T)\\), is given by:
\\(B_{\\nu}(T) = \\frac{2h c^2\\tilde{\\nu}^3}{e^{hc / k \\tilde{\\nu} T}-1}\\)
where, \\(\\tilde{\\nu}\\) is wavelength, \\(h\\) is Planck's Constant, \\(k\\) is Boltzman's Constant, \\(c\\) is the speed of light in a vacuum, \\(T\\) is thermodynamic temperature."""^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:MassieuFunction,
        quantitykind:SpecificEnergy,
        quantitykind:SpecificEnthalpy,
        quantitykind:SpecificGibbsEnergy,
        quantitykind:SpecificHelmholtzEnergy,
        quantitykind:SpecificInternalEnergy .

quantitykind:SpinQuantumNumber a qudt:QuantityKind ;
    rdfs:label "Spin Quantum Number"@en ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Quantum_number"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(s^2 = \\hbar^2 s(s + 1)\\), where \\(s\\) is the spin quantum number and \\(\\hbar\\) is the Planck constant."^^qudt:LatexString ;
    qudt:plainTextDescription "The \"Spin Quantum Number\"  describes the spin (intrinsic angular momentum) of the electron within that orbital, and gives the projection of the spin angular momentum S along the specified axis" ;
    qudt:symbol "s" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:QuantumNumber ;
    skos:closeMatch quantitykind:MagneticQuantumNumber,
        quantitykind:OrbitalAngularMomentumQuantumNumber,
        quantitykind:PrincipalQuantumNumber .

unit:A-PER-M a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Ampere per Metre"@en,
        "Ampere per Meter"@en-us ;
    dcterms:description " is the SI unit of magnetic field strength. One ampere per meter is equal to \\(\\pi/250\\) oersteds (\\(12.566\\, 371\\,millioersteds\\)) in CGS units. The ampere per meter is also the SI unit of \"magnetization\" in the sense of magnetic dipole moment per unit volume; in this context \\(1 A/m = 0.001\\,emu\\,per\\,cubic\\,centimeter\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(A/m\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Coercivity,
        quantitykind:LinearElectricCurrentDensity,
        quantitykind:MagneticFieldStrength_H ;
    qudt:iec61360Code "0112/2///62720#UAA104" ;
    qudt:ucumCode "A.m-1"^^qudt:UCUMcs,
        "A/m"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "AE" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CentiPOISE-PER-BAR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Centipoise Per Bar"@en ;
    qudt:conversionMultiplier 0.00000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:iec61360Code "0112/2///62720#UAA358" ;
    qudt:plainTextDescription "0.01-fold of the CGS unit of the dynamic viscosity poise divided by the unit of the pressure bar" ;
    qudt:ucumCode "cP.bar-1"^^qudt:UCUMcs,
        "cP/bar"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J74" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DAY a qudt:Unit,
        unit:Unit ;
    rdfs:label "Day"@en ;
    dcterms:description "Mean solar day"^^rdf:HTML ;
    qudt:allowedUnitOfSystem sou:SI ;
    qudt:conversionMultiplier 86400.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Day"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:iec61360Code "0112/2///62720#UAA407" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Day?oldid=494970012"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/day> ;
    qudt:symbol "d",
        "d"^^xsd:string ;
    qudt:ucumCode "d"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "DAY" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:H-PER-KiloOHM a qudt:Unit,
        unit:Unit ;
    rdfs:label "Henry Per Kiloohm"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:iec61360Code "0112/2///62720#UAA167" ;
    qudt:plainTextDescription "SI derived unit henry divided by the 1 000-fold of the SI derived unit ohm" ;
    qudt:ucumCode "H.kOhm-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H03" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:H-PER-OHM a qudt:Unit,
        unit:Unit ;
    rdfs:label "Henry Per Ohm"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:iec61360Code "0112/2///62720#UAA166" ;
    qudt:plainTextDescription "SI derived unit henry divided by the SI derived unit ohm" ;
    qudt:ucumCode "H.Ohm-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H04" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Hour"@en ;
    dcterms:description "The hour (common symbol: h or hr) is a unit of measurement of time. In modern usage, an hour comprises 60 minutes, or 3,600 seconds. It is approximately 1/24 of a mean solar day. An hour in the Universal Coordinated Time (UTC) time standard can include a negative or positive leap second, and may therefore have a duration of 3,599 or 3,601 seconds for adjustment purposes. Although it is not a standard defined by the International System of Units, the hour is a unit accepted for use with SI, represented by the symbol h."^^rdf:HTML ;
    qudt:allowedUnitOfSystem sou:SI ;
    qudt:conversionMultiplier 3600.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Hour"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:iec61360Code "0112/2///62720#UAA525" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Hour?oldid=495040268"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/hour> ;
    qudt:symbol "h",
        "h"^^xsd:string ;
    qudt:ucumCode "h"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K42" ;
    qudt:unitOfSystem sou:SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:J-PER-M3 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Joule per Cubic Metre"@en,
        "Joule per Cubic Meter"@en-us ;
    dcterms:description "\\(\\textit{Joule Per Cubic Meter}\\) (\\(J/m^{3}\\)) is a unit in the category of Energy density. It is also known as joules per cubic meter, joule per cubic metre, joules per cubic metre, joule/cubic meter, joule/cubic metre. This unit is commonly used in the SI unit system.  It has a dimension of \\(ML^{-1}T^{-2}\\) where \\(M\\) is mass, \\(L\\) is length, and \\(T\\) is time. This unit is the standard SI unit in this category."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(j-per-m3\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ElectromagneticEnergyDensity,
        quantitykind:EnergyDensity,
        quantitykind:RadiantEnergyDensity,
        quantitykind:VolumicElectromagneticEnergy ;
    qudt:iec61360Code "0112/2///62720#UAA180" ;
    qudt:ucumCode "J.m-3"^^qudt:UCUMcs,
        "J/m3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B8" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloC-PER-M2 a qudt:Unit ;
    rdfs:label "Kilocoulomb Per Square Metre"@en,
        "Kilocoulomb Per Square Meter"@en-us ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricChargePerArea,
        quantitykind:ElectricPolarization ;
    qudt:iec61360Code "0112/2///62720#UAA564" ;
    qudt:plainTextDescription "1 000-fold of the SI derived unit coulomb divided by the power of the SI base unit metre with the exponent 2" ;
    qudt:ucumCode "kC.m-2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B28" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloSEC a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "kilosecond"@en ;
    dcterms:description "\"Killosecond\" is an Imperial unit for  'Time' expressed as \\(ks\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Millisecond"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:iec61360Code "0112/2///62720#UAA647" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Millisecond?oldid=495102042"^^xsd:anyURI ;
    qudt:isScalingOf unit:SEC ;
    qudt:prefix prefix:Kilo ;
    qudt:symbol "ks",
        "ks"^^xsd:string ;
    qudt:ucumCode "ks"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B52" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M2-PER-SEC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Square Metre per Second"@en,
        "Square Meter per Second"@en-us ;
    dcterms:description "\\(Square Metres per second is the SI derived unit of angular momentum, defined by distance or displacement in metres multiplied by distance again in metres and divided by time in seconds. The unit is written in symbols as m2/s or m2u00b7s-1 or m2s-1. It may be better understood when phrased as \"metres per second times metres\", i.e. the momentum of an object with respect to a position.\\)"^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(m^{2} s^{-1}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:AreaPerTime,
        quantitykind:DiffusionCoefficient,
        quantitykind:NeutronDiffusionCoefficient,
        quantitykind:ThermalDiffusionRatioCoefficient ;
    qudt:iec61360Code "0112/2///62720#UAA752" ;
    qudt:ucumCode "m2.s-1"^^qudt:UCUMcs,
        "m2/s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "S4" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M3-PER-SEC a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Cubic Metre per Second"@en,
        "Cubic Meter per Second"@en-us ;
    dcterms:description "A cubic metre per second (\\(m^{3}s^{-1}, m^{3}/s\\)), cumecs or cubic meter per second in American English) is a derived SI unit of flow rate equal to that of a stere or cube with sides of one metre ( u0303 39.37 in) in length exchanged or moving each second. It is popularly used for water flow, especially in rivers and streams, and fractions for HVAC values measuring air flow."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(m^{3}/s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:RecombinationCoefficient,
        quantitykind:SoundVolumeVelocity,
        quantitykind:VolumeFlowRate,
        quantitykind:VolumePerUnitTime ;
    qudt:iec61360Code "0112/2///62720#UAA772" ;
    qudt:ucumCode "m3.s-1"^^qudt:UCUMcs,
        "m3/s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "MQS" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MIN a qudt:Unit,
        unit:Unit ;
    rdfs:label "Minute"@en ;
    dcterms:description "A minute is a unit of measurement of time. The minute is a unit of time equal to 1/60 (the first sexagesimal fraction of an hour or 60 seconds. In the UTC time scale, a minute on rare occasions has 59 or 61 seconds; see leap second. The minute is not an SI unit; however, it is accepted for use with SI units. The SI symbol for minute or minutes is min (for time measurement) or the prime symbol after a number, e.g. 5' (for angle measurement, even if it is informally used for time)."^^rdf:HTML ;
    qudt:allowedUnitOfSystem sou:SI ;
    qudt:conversionMultiplier 60.0 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:iec61360Code "0112/2///62720#UAA842" ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/minute-Time> ;
    qudt:symbol "min",
        "min"^^xsd:string ;
    qudt:ucumCode "min"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "MIN" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MIN_Sidereal a qudt:Unit,
        unit:Unit ;
    rdfs:label "Sidereal Minute"@en ;
    dcterms:description "Sidereal time is a time-keeping system astronomers use to keep track of the direction to point their telescopes to view a given star in the night sky. A mean sidereal day is about \\(23 h 56 m 4.1 s\\) in length. However, due to variations in the rotation rate of the Earth, the rate of an ideal sidereal clock deviates from any simple multiple of a civil clock. In practice, the difference is kept track of by the difference UTC-UT1, which is measured by radio telescopes and kept on file and available to the public at the IERS and at the United States Naval Observatory. A Sidereal Minute is \\(1/60^{th}\\) of a Sidereal Hour, which is \\(1/24^{th}\\) of a Sidereal Day."^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Sidereal_time"^^xsd:anyURI ;
    qudt:isScalingOf unit:HR_Sidereal ;
    qudt:symbol "min",
        "min"^^xsd:string ;
    qudt:ucumCode "min"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MO_MeanGREGORIAN a qudt:Unit,
        unit:Unit ;
    rdfs:label "Mean Gregorian Month"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:informativeReference "http://aurora.regenstrief.org/~ucum/ucum.html#iso1000"^^xsd:anyURI ;
    qudt:ucumCode "mo_g"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MO_MeanJulian a qudt:Unit,
        unit:Unit ;
    rdfs:label "Mean Julian Month"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:informativeReference "http://aurora.regenstrief.org/~ucum/ucum.html#iso1000"^^xsd:anyURI ;
    qudt:ucumCode "mo_j"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaYR a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Million Years"@en ;
    qudt:conversionMultiplier 31557600000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:informativeReference "https://en.wiktionary.org/wiki/megayear"^^xsd:anyURI ;
    qudt:isScalingOf unit:YR ;
    qudt:plainTextDescription "1,000,000-fold of the derived unit year." ;
    qudt:prefix prefix:Mega ;
    qudt:symbol "Myr",
        "Myr"^^xsd:string ;
    qudt:ucumCode "Ma"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    skos:altLabel "Ma",
        "Mega Year"@en,
        "megannum"@la .

unit:MicroH-PER-KiloOHM a qudt:Unit,
        unit:Unit ;
    rdfs:label "Microhenry Per Kiloohm"@en ;
    qudt:conversionMultiplier 0.000000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:iec61360Code "0112/2///62720#UAA068" ;
    qudt:plainTextDescription "0.000001-fold of the SI derived unit henry divided by the 1,000-fold of the SI derived unit ohm" ;
    qudt:ucumCode "uH.kOhm-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G98" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroH-PER-OHM a qudt:Unit,
        unit:Unit ;
    rdfs:label "Microhenry Per Ohm"@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:iec61360Code "0112/2///62720#UAA067" ;
    qudt:plainTextDescription "0.000001-fold of the SI derived unit henry divided by the SI derived unit ohm" ;
    qudt:ucumCode "uH.Ohm-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G99" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroSEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "microsecond"@en ;
    dcterms:description "\"Microsecond\" is a unit for  'Time' expressed as \\(microsec\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:iec61360Code "0112/2///62720#UAA095" ;
    qudt:isScalingOf unit:SEC ;
    qudt:prefix prefix:Micro ;
    qudt:symbol "μs",
        "μs"^^xsd:string ;
    qudt:ucumCode "us"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B98" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliDEG_C a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Millidegree Celsius"@en ;
    dcterms:description "\\(Millidegree Celsius is a scaled unit of measurement for temperature.\\)"^^qudt:LatexString ;
    qudt:conversionMultiplier 0.001 ;
    qudt:conversionOffset 273.15 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Celsius"^^xsd:anyURI ;
    qudt:guidance "<p>See NIST section <a href=\"http://physics.nist.gov/Pubs/SP811/sec04.html#4.2.1.1\">SP811 section 4.2.1.1</a></p>"^^rdf:HTML,
        "<p>See NIST section <a href=\"http://physics.nist.gov/Pubs/SP811/sec06.html#6.2.8\">SP811 section 6.2.8</a></p>"^^rdf:HTML ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:hasQuantityKind quantitykind:Temperature ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Celsius?oldid=494152178"^^xsd:anyURI ;
    qudt:isScalingOf unit:DEG_C ;
    qudt:latexDefinition "millieDegree Celsius"^^qudt:LatexString ;
    qudt:ucumCode "mCel"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliH-PER-KiloOHM a qudt:Unit,
        unit:Unit ;
    rdfs:label "Millihenry Per Kiloohm"@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:iec61360Code "0112/2///62720#UAA791" ;
    qudt:plainTextDescription "0.001-fold of the SI derived unit henry divided by the 1 000-fold of the SI derived unit ohm" ;
    qudt:ucumCode "mH.kOhm-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H05" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliH-PER-OHM a qudt:Unit,
        unit:Unit ;
    rdfs:label "Millihenry Per Ohm"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:iec61360Code "0112/2///62720#UAA790" ;
    qudt:plainTextDescription "0.001-fold of the SI derived unit henry divided by the SI derived unit ohm" ;
    qudt:ucumCode "mH.Ohm-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H06" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliPA-SEC-PER-BAR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Millipascal Second Per Bar"@en ;
    qudt:conversionMultiplier 0.00000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:iec61360Code "0112/2///62720#UAA799" ;
    qudt:plainTextDescription "0.001-fold of the product of the SI derived unit pascal and the SI base unit second divided by the unit of the pressure bar" ;
    qudt:ucumCode "mPa.s.bar-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L16" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliSEC a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "millisecond"@en ;
    dcterms:description "\"Millisecond\" is an Imperial unit for 'Time' expressed as \\(ms\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.001 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Millisecond"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:iec61360Code "0112/2///62720#UAA899" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Millisecond?oldid=495102042"^^xsd:anyURI ;
    qudt:isScalingOf unit:SEC ;
    qudt:prefix prefix:Milli ;
    qudt:symbol "ms",
        "ms"^^xsd:string ;
    qudt:ucumCode "ms"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C26" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NanoSEC a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "nanosecond"@en ;
    dcterms:description "A nanosecond is a SI unit of time equal to one billionth of a second (10-9 or 1/1,000,000,000 s). One nanosecond is to one second as one second is to 31.69 years. The word nanosecond is formed by the prefix nano and the unit second."^^rdf:HTML ;
    qudt:conversionMultiplier 0.000000001 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Nanosecond"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:iec61360Code "0112/2///62720#UAA913" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Nanosecond?oldid=919778950"^^xsd:anyURI ;
    qudt:isScalingOf unit:SEC ;
    qudt:prefix prefix:Nano ;
    qudt:symbol "ns",
        "ns"^^xsd:string ;
    qudt:ucumCode "ns"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C47" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PA-SEC-PER-BAR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Pascal Second Per Bar"@en ;
    qudt:conversionMultiplier 0.00001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:iec61360Code "0112/2///62720#UAA267" ;
    qudt:plainTextDescription "product out of the SI derived unit pascal and the SI base unit second divided by the unit bar" ;
    qudt:ucumCode "Pa.s.bar-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H07" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:POISE-PER-BAR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Poise Per Bar"@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:iec61360Code "0112/2///62720#UAA257" ;
    qudt:plainTextDescription "CGS unit poise divided by the unit bar" ;
    qudt:ucumCode "P.bar-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F06" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PicoSEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Picosecond"@en ;
    qudt:conversionMultiplier 0.000000000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:iec61360Code "0112/2///62720#UAA950" ;
    qudt:plainTextDescription "0.000000000001-fold of the SI base unit second" ;
    qudt:ucumCode "ps"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H70" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SH a qudt:Unit,
        unit:Unit ;
    rdfs:label "Shake"@en ;
    dcterms:description "A shake is an informal unit of time equal to 10 nanoseconds. It has applications in nuclear physics, helping to conveniently express the timing of various events in a nuclear explosion. The typical time required for one step in the chain reaction (i.e. the typical time for each neutron to cause a fission event which releases more neutrons) is of order 1 shake, and the chain reaction is typically complete by 50 to 100 shakes."^^rdf:HTML ;
    qudt:conversionMultiplier 0.00000001 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Shake"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:iec61360Code "0112/2///62720#UAB226" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Shake?oldid=494796779"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/shake> ;
    qudt:symbol "Sh",
        "Sh"^^xsd:string ;
    qudt:ucumCode "10.ns"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:WK a qudt:Unit,
        unit:Unit ;
    rdfs:label "Week"@en ;
    dcterms:description "Mean solar week"^^rdf:HTML ;
    qudt:conversionMultiplier 604800.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Week"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:iec61360Code "0112/2///62720#UAB024" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Week?oldid=493867029"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/week> ;
    qudt:symbol "wk",
        "wk"^^xsd:string ;
    qudt:ucumCode "wk"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "WEE" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:YR_Common a qudt:Unit,
        unit:Unit ;
    rdfs:label "Common Year"@en ;
    qudt:conversionMultiplier 31536000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:iec61360Code "0112/2///62720#UAB025" ;
    qudt:plainTextDescription "31,536,000-fold of the SI base unit second according a common year with 365 days" ;
    qudt:uneceCommonCode "L95" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:YR_Sidereal a qudt:Unit,
        unit:Unit ;
    rdfs:label "Sidereal Year"@en ;
    dcterms:description "A sidereal year is the time taken for Sun to return to the same position with respect to the stars of the celestial sphere."^^rdf:HTML ;
    qudt:conversionMultiplier 31558149.7632 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:iec61360Code "0112/2///62720#UAB028" ;
    qudt:symbol "yr",
        "yr"^^xsd:string ;
    qudt:uneceCommonCode "L96" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

sp:gt a spin:Function ;
    rdfs:label "gt" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "the first operand" ],
        [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType rdfs:Literal ;
            rdfs:comment "the second operand" ] ;
    spin:returnType xsd:boolean ;
    spin:symbol ">" ;
    rdfs:comment "Returns true if ?arg1 > arg2." ;
    rdfs:subClassOf spl:BooleanFunctions .

sp:ne a spin:Function ;
    rdfs:label "ne" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            rdfs:comment "the second operand" ],
        [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            rdfs:comment "the first operand" ] ;
    spin:returnType xsd:boolean ;
    spin:symbol "!=" ;
    rdfs:comment "Returns true if ?arg1 != ?arg2." ;
    rdfs:subClassOf spl:BooleanFunctions .

spin:body a rdf:Property ;
    rdfs:label "body" ;
    rdfs:comment "The body of a Function or Template. This points to a Query instance. For Functions, this is limited to either ASK or SELECT type queries. If the body is the ASK function then the return value is xsd:boolean. Otherwise, the SELECT query must have a single return variable. The first binding of this SELECT query will be returned as result of the function call." ;
    rdfs:range sp:Command ;
    rdfs:subPropertyOf spin:systemProperty .

spin:constraint a rdf:Property ;
    rdfs:label "constraint" ;
    rdfs:comment "Links a class with constraints on its instances. The values of this property are \"axioms\" expressed as CONSTRUCT or ASK queries where the variable ?this refers to the instances of the surrounding class. ASK queries must evaluate to false for each member of this class - returning true means that the instance ?this violates the constraint. CONSTRUCT queries must create instances of spin:ConstraintViolation to provide details on the reason for the violation." ;
    rdfs:domain rdfs:Class ;
    rdfs:subPropertyOf spin:query .

dtype:EnumeratedValue a owl:Class ;
    rdfs:label "DTYPE Enumerated value"^^xsd:string ;
    dc:description "The base class for datatypes that have values that are restriced to a set of literals or tokens. The members of the restriction may themselve be restriced by facets that apply to scalar data types."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/1.1/schema/dtype>,
        <http://www.linkedmodel.org/schema/dtype> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty vaem:description ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty dtype:position ],
        [ a owl:Restriction ;
            owl:minCardinality "0"^^xsd:nonNegativeInteger ;
            owl:onProperty vaem:url ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty dtype:order ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty dtype:code ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty vaem:name ],
        [ a owl:Restriction ;
            owl:cardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty dtype:value ],
        owl:Thing .

vaem:QUDT a vaem:Party ;
    rdfs:label "QUDT" ;
    dcterms:description "QUDT is a non-profit organization that governs the QUDT ontologies."^^rdf:HTML ;
    vaem:graphName "qudt.org" ;
    vaem:website "http:/www.qudt.org"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

skos:note a rdf:Property,
        owl:AnnotationProperty ;
    rdfs:label "note"@en ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    skos:definition "A general note, for any purpose."@en ;
    skos:scopeNote "This property may be used directly, or as a super-property for more specific note types."@en .

brick:Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Flow Setpoint" ;
    rdfs:subClassOf brick:Flow_Setpoint ;
    skos:definition "Sets air flow"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Air .

brick:Common_Space a owl:Class,
        sh:NodeShape ;
    rdfs:label "Common Space" ;
    rdfs:subClassOf brick:Space ;
    skos:definition "A class of spaces that are used by multiple people at the same time"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Common ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Common,
        tag:Location,
        tag:Space .

brick:CurrentShape a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path brick:ratedVoltageInput ],
        [ a sh:PropertyShape ;
            sh:path brick:ratedVoltageOutput ],
        [ a sh:PropertyShape ;
            sh:in [ rdf:rest () ] ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            skos:definition "The ambient temperature at which the power input was measured" ;
            sh:class brick:TemperatureShape ;
            sh:path brick:ambientTemperatureOfMeasurement ] .

brick:Damper a owl:Class,
        sh:NodeShape ;
    rdfs:label "Damper" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "Element inserted into an air-distribution system or element of an air-distribution system permitting modification of the air resistance of the system and consequently changing the airflow rate or shutting off the airflow."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Damper ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Damper,
        tag:Equipment .

brick:Differential_Temperature a brick:Quantity ;
    rdfs:label "Differential Temperature" ;
    qudt:applicableUnit unit:DEG_C,
        unit:DEG_F,
        unit:DEG_R,
        unit:K,
        unit:MilliDEG_C,
        unit:PlanckTemperature ;
    qudt:isDeltaQuantity true ;
    skos:broader brick:Temperature ;
    brick:hasQUDTReference quantitykind:Temperature .

brick:Discharge_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Discharge Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint ;
    skos:definition "Sets temperature of discharge air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Discharge_Air .

brick:Electric_Power a brick:Quantity ;
    rdfs:label "Electric Power" ;
    qudt:applicableUnit unit:BAR-L-PER-SEC,
        unit:BAR-M3-PER-SEC,
        unit:BTU_IT-PER-HR,
        unit:BTU_IT-PER-SEC,
        unit:ERG-PER-SEC,
        unit:FT-LB_F-PER-HR,
        unit:FT-LB_F-PER-MIN,
        unit:FT-LB_F-PER-SEC,
        unit:GigaW,
        unit:HP,
        unit:HP-PER-M,
        unit:HP-PER-V,
        unit:HP_Boiler,
        unit:HP_Brake,
        unit:HP_Electric,
        unit:HP_Metric,
        unit:J-PER-HR,
        unit:J-PER-SEC,
        unit:KiloCAL-PER-MIN,
        unit:KiloCAL-PER-SEC,
        unit:KiloV-A,
        unit:KiloV-A_Reactive,
        unit:KiloW,
        unit:MegaJ-PER-SEC,
        unit:MegaPA-L-PER-SEC,
        unit:MegaPA-M3-PER-SEC,
        unit:MegaV-A,
        unit:MegaV-A_Reactive,
        unit:MegaW,
        unit:MicroW,
        unit:MilliBAR-L-PER-SEC,
        unit:MilliBAR-M3-PER-SEC,
        unit:MilliW,
        unit:NanoW,
        unit:PA-L-PER-SEC,
        unit:PA-M3-PER-SEC,
        unit:PSI-IN3-PER-SEC,
        unit:PSI-M3-PER-SEC,
        unit:PSI-YD3-PER-SEC,
        unit:PicoW,
        unit:PlanckPower,
        unit:TON_FG,
        unit:TeraW,
        unit:V-A,
        unit:V-A_Reactive,
        unit:W ;
    skos:broader brick:Power ;
    skos:definition "Electric Power is the rate at which electrical energy is transferred by an electric circuit. In the simple case of direct current circuits, electric power can be calculated as the product of the potential difference in the circuit (V) and the amount of current flowing in the circuit (I): (P = VI), where (P) is the power, (V) is the potential difference, and (I) is the current. However, in general electric power is calculated by taking the integral of the vector cross-product of the electrical and magnetic fields over a specified area."@en ;
    brick:hasQUDTReference quantitykind:ElectricPower .

brick:Fire_Safety_Equipment a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fire Safety Equipment" ;
    rdfs:subClassOf brick:Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fire ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Safety ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Fire,
        tag:Safety .

brick:Gas a owl:Class,
        sh:NodeShape,
        brick:Gas ;
    rdfs:label "Gas" ;
    rdfs:subClassOf brick:Fluid ;
    skos:definition "state of matter in which substances exist in the form of nonaggregated molecules and which, within acceptable limits of accuracy, satisfy the ideal gas laws; usually a highly superheated vapor. See [[state]]."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fluid,
        tag:Gas .

brick:Integral_Time_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Integral Time Parameter" ;
    rdfs:subClassOf brick:Time_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Integral ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Time ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Integral,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Time .

brick:Liquid a owl:Class,
        sh:NodeShape,
        brick:Liquid ;
    rdfs:label "Liquid" ;
    rdfs:subClassOf brick:Fluid ;
    skos:definition "state of matter intermediate between crystalline substances and gases in which the volume of a substance, but not the shape, remains relatively constant."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fluid,
        tag:Liquid .

brick:Mixed_Air a owl:Class,
        sh:NodeShape,
        brick:Mixed_Air ;
    rdfs:label "Mixed Air" ;
    rdfs:subClassOf brick:Air ;
    skos:definition "(1) air that contains two or more streams of air. (2) combined outdoor air and recirculated air."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Mixed ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Fluid,
        tag:Gas,
        tag:Mixed .

brick:Return_Water a owl:Class,
        sh:NodeShape,
        brick:Return_Water ;
    rdfs:label "Return Water" ;
    rdfs:subClassOf brick:Water ;
    skos:definition "The water is a system after it is used in a heat transfer cycle"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fluid,
        tag:Liquid,
        tag:Return,
        tag:Water .

brick:Start_Stop_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Start Stop Status" ;
    rdfs:subClassOf brick:On_Off_Status ;
    skos:definition "Indicates the active/inactive status of a control loop (but not equipment activities or relays -- use On/Off for this purpose)"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Start ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Stop ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Start,
        tag:Status,
        tag:Stop .

brick:Supply_Hot_Water a owl:Class,
        sh:NodeShape,
        brick:Supply_Hot_Water ;
    rdfs:label "Supply Hot Water" ;
    rdfs:subClassOf brick:Hot_Water,
        brick:Supply_Water ;
    owl:equivalentClass brick:Discharge_Hot_Water ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fluid,
        tag:Hot,
        tag:Liquid,
        tag:Supply,
        tag:Water .

brick:Supply_Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Supply Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Water_Temperature_Setpoint ;
    skos:definition "Sets temperature of supply water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Setpoint,
        tag:Supply,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Supply_Water .

brick:Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Temperature Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "Measures temperature: the physical property of matter that quantitatively expresses the common notions of hot and cold"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Sensor,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature .

brick:VoltageShape a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            skos:definition "The ambient temperature at which the power input was measured" ;
            sh:class brick:TemperatureShape ;
            sh:path brick:ambientTemperatureOfMeasurement ],
        [ a sh:PropertyShape ;
            sh:path brick:ratedCurrentInput ],
        [ a sh:PropertyShape ;
            sh:in ( unit:KiloV unit:MegaV unit:MicroV unit:MilliV unit:V_Ab unit:V unit:V_Stat unit:PlanckVolt ) ;
            sh:minCount 1 ;
            sh:path brick:hasUnit ],
        [ a sh:PropertyShape ;
            sh:path brick:ratedCurrentOutput ] .

brick:Zone_Air a owl:Class,
        sh:NodeShape,
        brick:Zone_Air ;
    rdfs:label "Zone Air" ;
    rdfs:subClassOf brick:Air ;
    skos:definition "air inside a defined zone (e.g., corridors)."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Zone ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Fluid,
        tag:Gas,
        tag:Zone .

tag:Angle a brick:Tag ;
    rdfs:label "Angle" .

tag:Array a brick:Tag ;
    rdfs:label "Array" .

tag:Beam a brick:Tag ;
    rdfs:label "Beam" .

tag:Chiller a brick:Tag ;
    rdfs:label "Chiller" .

tag:Elevator a brick:Tag ;
    rdfs:label "Elevator" .

tag:Embedded a brick:Tag ;
    rdfs:label "Embedded" .

tag:Failure a brick:Tag ;
    rdfs:label "Failure" .

tag:Frame a brick:Tag ;
    rdfs:label "Frame" .

tag:Frequency a brick:Tag ;
    rdfs:label "Frequency" .

tag:Fresh a brick:Tag ;
    rdfs:label "Fresh" .

tag:Generator a brick:Tag ;
    rdfs:label "Generator" .

tag:Grains a brick:Tag ;
    rdfs:label "Grains" .

tag:Heater a brick:Tag ;
    rdfs:label "Heater" .

tag:Illuminance a brick:Tag ;
    rdfs:label "Illuminance" .

tag:Imbalance a brick:Tag ;
    rdfs:label "Imbalance" .

tag:Intercom a brick:Tag ;
    rdfs:label "Intercom" .

tag:Lead a brick:Tag ;
    rdfs:label "Lead" .

tag:Leak a brick:Tag ;
    rdfs:label "Leak" .

tag:Lighting a brick:Tag ;
    rdfs:label "Lighting" .

tag:Lobby a brick:Tag ;
    rdfs:label "Lobby" .

tag:Makeup a brick:Tag ;
    rdfs:label "Makeup" .

tag:Open a brick:Tag ;
    rdfs:label "Open" .

tag:Overridden a brick:Tag ;
    rdfs:label "Overridden" .

tag:Parking a brick:Tag ;
    rdfs:label "Parking" .

tag:Reheat a brick:Tag ;
    rdfs:label "Reheat" .

tag:Riser a brick:Tag ;
    rdfs:label "Riser" .

tag:Surveillance a brick:Tag ;
    rdfs:label "Surveillance" .

tag:Tint a brick:Tag ;
    rdfs:label "Tint" .

tag:Tolerance a brick:Tag ;
    rdfs:label "Tolerance" .

tag:Variable a brick:Tag ;
    rdfs:label "Variable" .

tag:Ventilation a brick:Tag ;
    rdfs:label "Ventilation" .

tag:Volume a brick:Tag ;
    rdfs:label "Volume" .

s223:Property a s223:Class,
        sh:NodeShape ;
    rdfs:label "Property" ;
    rdfs:comment """An attribute, quality, or characteristic of a feature of interest.

The Property class is the parent of all 6 variations of a property, which are:
ActuatableProperty - such as the setting of a switch
ObservableProperty - such as the state of an alarm detector
NonQuantifiableProperty - such as the color of a device
QuantifiableProperty - such as a maximum power rating
QuantifiableActuatableProperty - such as a numerical setpoint
QuantifiableObservableProperty - such as a temperature reading

A QuantifiableProperty (or subClass thereof) must always be associated with a Unit and a QuantityKind, either explicitly from the Property, or through the associated Value. If the Unit is defined, the SHACL reasoner (if invoked) will figure out and assert the QuantityKind (the most general version).""" ;
    rdfs:subClassOf s223:Concept ;
    sh:property [ sh:path s223:hasValue ] ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:class s223:ExternalSource ;
                        sh:description "Used to provide a pointer of any kind to a data source containing a simple value. Either s223:hasExternalDataSource or s223:hasSimpleValue is populated, but not both." ;
                        sh:minCount 1 ;
                        sh:path s223:hasExternalDataSource ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:minCount 1 ;
                        sh:path s223:hasValue ] ] [ sh:and ( [ sh:property [ a sh:PropertyShape ;
                                    sh:maxCount 0 ;
                                    sh:path s223:hasExternalDataSource ] ] [ sh:property [ a sh:PropertyShape ;
                                    sh:maxCount 0 ;
                                    sh:path s223:hasValue ] ] ) ] ) .

s223:cnx a s223:SymmetricProperty ;
    rdfs:label "cnx" ;
    rdfs:comment "The cnx property is a symmetric property used to associate adjacent entities in an HVAC circuit (comprised of Device-ConnectionPoint-Connection-ConnectionPoint-Device sequences)" .

s223:hasDomain a rdf:Property ;
    rdfs:label "has domain" .

s223:hasValue a rdf:Property ;
    rdfs:label "hasValue" ;
    s223:inverseOf s223:isValueOf .

dcterms:created a rdf:Property,
        owl:AnnotationProperty ;
    rdfs:label "created",
        "created"^^xsd:string ;
    rdfs:isDefinedBy dcterms: ;
    rdfs:range xsd:date .

dcterms:description a rdf:Property,
        owl:AnnotationProperty ;
    rdfs:label "description",
        "description"^^xsd:string ;
    rdfs:isDefinedBy dcterms: ;
    rdfs:range xsd:string .

dcterms:modified a rdf:Property,
        owl:AnnotationProperty ;
    rdfs:label "modified",
        "modified"^^xsd:string ;
    rdfs:isDefinedBy dcterms: ;
    rdfs:range xsd:date .

dcterms:title a owl:AnnotationProperty ;
    rdfs:label "title",
        "title"^^xsd:string ;
    rdfs:isDefinedBy dcterms: ;
    rdfs:range xsd:string .

qudt:applicableUnit a owl:ObjectProperty ;
    rdfs:label "applicable unit" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt>,
        <http://qudt.org/2.1/schema/shacl/overlay/qudt> .

qudt:baseUnitDimensions a owl:DatatypeProperty ;
    rdfs:label "base unit dimensions" ;
    dcterms:description "\"qudt:baseUnitDimensions\" is a string datatype property expressing the dimensions of a unit, or quantity, as a vector over the base units."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qkdv:A0E-2L1I0M1H0T-2D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E-2L1I0M1H0T-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent -2 ;
    qudt:dimensionExponentForLength 1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:ElectromagneticPermeability ;
    qudt:latexDefinition "\\(L M T^-2 I^-2\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-3I0M1H0T-1D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-3I0M1H0T-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -3 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L0I0M-1H1T3D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M-1H1T3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 1 ;
    qudt:dimensionExponentForTime 3 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:ThermalInsulance ;
    qudt:latexDefinition "\\(M^-1 T^3 Θ\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L0I0M0H0T-2D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M0H0T-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:AngularAcceleration ;
    qudt:latexDefinition "\\(U T^-2\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L2I0M0H0T-3D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L2I0M0H0T-3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -3 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:AbsorbedDoseRate ;
    qudt:latexDefinition "\\(L^2 T^-3\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E1L2I0M0H0T0D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E1L2I0M0H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 1 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:MagneticDipoleMoment ;
    qudt:latexDefinition "\\(L^2 I\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

quantitykind:Enthalpy a qudt:QuantityKind ;
    rdfs:label "Enthalpy"@en ;
    dcterms:description "In thermodynamics, \\(\\textit{enthalpy}\\) is the sum of the internal energy \\(U\\) and the product of pressure \\(p\\) and volume \\(V\\) of a system. The characteristic function (also known as thermodynamic potential) \\(\\textit{enthalpy}\\) used to be called \\(\\textit{heat content}\\), which is why it is conventionally indicated by \\(H\\). The specific enthalpy of a working mass is a property of that mass used in thermodynamics, defined as \\(h=u+p \\cdot v\\),  where \\(u\\) is the specific internal energy, \\(p\\) is the pressure, and \\(v\\) is specific volume. In other words, \\(h = H / m\\) where \\(m\\) is the mass of the system. The SI unit for \\(\\textit{Specific Enthalpy}\\) is \\(\\textit{joules per kilogram}\\)"^^qudt:LatexString ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Enthalpy"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.citizendium.org/wiki/Enthalpy"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Enthalpy"^^xsd:anyURI ;
    qudt:latexDefinition "\\(H = U + pV\\), where \\(U\\) is internal energy, \\(p\\) is pressure and \\(V\\) is volume."^^qudt:LatexString ;
    qudt:normativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:symbol "H" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:InternalEnergy ;
    skos:broader quantitykind:Energy .

quantitykind:Impedance a qudt:QuantityKind ;
    rdfs:label "Impedance"@en ;
    qudt:applicableUnit unit:OHM ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Electrical_impedance"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E-2L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Electrical_impedance"^^xsd:anyURI,
        "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-12-43"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\underline{Z} = \\underline{U} / \\underline{I}\\), where \\(\\underline{U}\\) is the voltage phasor and \\(\\underline{I}\\) is the electric current phasor."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\underline{Z}\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Impedance\" is the measure of the opposition that a circuit presents to the passage of a current when a voltage is applied. In quantitative terms, it is the complex ratio of the voltage to the current in an alternating current (AC) circuit. Impedance extends the concept of resistance to AC circuits, and possesses both magnitude and phase, unlike resistance, which has only magnitude. When a circuit is driven with direct current (DC), there is no distinction between impedance and resistance; the latter can be thought of as impedance with zero phase angle." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricCurrentPhasor,
        quantitykind:VoltagePhasor .

quantitykind:LinearElectricCurrentDensity a qudt:QuantityKind ;
    rdfs:label "Linear Electric Current Density"@en ;
    dcterms:description "\"Linear Electric Linear Current Density\" is the electric current per unit length. Electric current, \\(I\\), through a curve \\(C\\) is defined as \\(I = \\int_C J _s \\times e_n\\), where \\(e_n\\) is a unit vector perpendicular to the surface and line vector element, and \\(dr\\) is the differential of position vector \\(r\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:A-PER-CentiM,
        unit:A-PER-M,
        unit:A-PER-MilliM,
        unit:KiloA-PER-M,
        unit:MilliA-PER-IN,
        unit:MilliA-PER-MilliM ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://www.asknumbers.com/ElectricalConversion.aspx"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(J_s = \\rho_A v\\), where \\(\\rho_A\\) is surface density of electric charge and \\(v\\) is velocity."^^qudt:LatexString ;
    qudt:symbol "J_s" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricChargeSurfaceDensity,
        quantitykind:ElectricCurrentDensity .

quantitykind:Luminance a qudt:QuantityKind ;
    rdfs:label "Luminance"@en ;
    qudt:applicableUnit unit:CD-PER-IN2,
        unit:CD-PER-M2,
        unit:FT-LA,
        unit:LA,
        unit:STILB ;
    qudt:baseUnitDimensions "\\(J/L^2\\)"^^qudt:LatexString,
        "\\(cd/m^2\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Luminance"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-2I1M0H0T0D0 ;
    qudt:latexDefinition "\\(L_v = \\frac{dI_v}{dA}\\), where \\(dI_v\\) is the luminous intensity of an element of the surface with the area \\(dA\\) of the orthogonal projection of this element on a plane perpendicular to the given direction."^^qudt:LatexString ;
    qudt:plainTextDescription "Luminance is a photometric measure of the luminous intensity per unit area of light travelling in a given direction. It describes the amount of light that passes through or is emitted from a particular area, and falls within a given solid angle." ;
    qudt:symbol "L_v" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:exactMatch <http://en.wikipedia.org/wiki/Luminance> .

quantitykind:MagneticDipoleMoment a qudt:QuantityKind ;
    rdfs:label "Magnetic Dipole Moment"@en ;
    dcterms:description "\"Magnetic Dipole Moment\" is the magnetic moment of a system is a measure of the magnitude and the direction of its magnetism. Magnetic moment usually refers to its Magnetic Dipole Moment, and quantifies the contribution of the system's internal magnetism to the external dipolar magnetic field produced by the system (that is, the component of the external magnetic field that is inversely proportional to the cube of the distance to the observer). The Magnetic Dipole Moment is a vector-valued quantity. For a particle or nucleus, vector quantity causing an increment \\(\\Delta W = -\\mu \\cdot B\\) to its energy \\(W\\) in an external magnetic field with magnetic flux density \\(B\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:A-M2,
        unit:A-M2-PER-J-SEC,
        unit:EV-PER-T,
        unit:J-PER-T,
        unit:N-M2-PER-A,
        unit:WB-M ;
    qudt:baseUnitDimensions "\\(A \\cdot m^2\\)"^^qudt:LatexString,
        "\\(I \\cdot L^2\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Magnetic_moment"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E1L2I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Magnetic_moment"^^xsd:anyURI,
        "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-55"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI,
        "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition """\\(E_m = -m \\cdot B\\), where \\(E_m\\) is the interaction energy of the molecule with magnetic diploe moment \\(m\\) and a magnetic field with magnetic flux density \\(B\\)

or,

\\(J_m = \\mu_0 M\\) where \\(\\mu_0\\) is the magnetic constant and \\(M\\) is Magnetization."""^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\mu\\)"^^qudt:LatexString ;
    qudt:symbol "J_m" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MassieuFunction a qudt:QuantityKind ;
    rdfs:label "Massieu Function"@en ;
    dcterms:description "The Massieu function, \\(\\Psi\\), is defined as: \\(\\Psi = \\Psi (X_1, \\dots , X_i, Y_{i+1}, \\dots , Y_r  )\\),  where for every system with degree of freedom \\(r\\) one may choose \\(r\\) variables, e.g. , to define a coordinate system, where \\(X\\) and \\(Y\\) are extensive and intensive variables, respectively, and where at least one extensive variable must be within this set in order to define the size of the system. The \\((r + 1)^{th}\\) variable,\\(\\Psi\\) , is then called the Massieu function."^^qudt:LatexString ;
    qudt:applicableUnit unit:J-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Massieu_function"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(J = -A/T\\), where \\(A\\) is Helmholtz energy and \\(T\\) is thermodynamic temperature."^^qudt:LatexString ;
    qudt:symbol "J" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:PlanckFunction,
        quantitykind:SpecificEnergy,
        quantitykind:SpecificEnthalpy,
        quantitykind:SpecificGibbsEnergy,
        quantitykind:SpecificHelmholtzEnergy,
        quantitykind:SpecificInternalEnergy .

quantitykind:QuantumNumber a qudt:QuantityKind ;
    rdfs:label "Quantum Number"@en ;
    qudt:applicableUnit unit:NUM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Quantum_number"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:plainTextDescription "The \"Quantum Number\" describes values of conserved quantities in the dynamics of the quantum system. Perhaps the most peculiar aspect of quantum mechanics is the quantization of observable quantities, since quantum numbers are discrete sets of integers or half-integers." ;
    qudt:symbol "n" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Dimensionless .

quantitykind:SpecificEnthalpy a qudt:QuantityKind ;
    rdfs:label "Specific Enthalpy"@en ;
    dcterms:description "\\(\\textit{Specific Enthalpy}\\) is enthalpy per mass of substance involved. Specific enthalpy is denoted by a lower case h, with dimension of energy per mass (SI unit: joule/kg). In thermodynamics, \\(\\textit{enthalpy}\\) is the sum of the internal energy U and the product of pressure p and volume V of a system: \\(H = U + pV\\).  The internal energy U and the work term pV have dimension of energy, in SI units this is joule; the extensive (linear in size) quantity H has the same dimension."^^qudt:LatexString ;
    qudt:applicableUnit unit:J-PER-KiloGM ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Entropy"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:informativeReference "http://en.citizendium.org/wiki/Enthalpy"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(h = H/m\\), where \\(H\\) is enthalpy and \\(m\\) is mass."^^qudt:LatexString ;
    qudt:symbol "h" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Enthalpy,
        quantitykind:MassieuFunction,
        quantitykind:PlanckFunction,
        quantitykind:SpecificEnergy,
        quantitykind:SpecificGibbsEnergy,
        quantitykind:SpecificHelmholtzEnergy,
        quantitykind:SpecificInternalEnergy .

quantitykind:SpecificGibbsEnergy a qudt:QuantityKind ;
    rdfs:label "Specific Gibbs Energy"@en ;
    qudt:applicableUnit unit:J-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:informativeReference "http://en.citizendium.org/wiki/Enthalpy"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(g = G/m\\), where \\(G\\) is Gibbs energy and \\(m\\) is mass."^^qudt:LatexString ;
    qudt:plainTextDescription "Energy has corresponding intensive (size-independent) properties for pure materials. A corresponding intensive property is \"Specific Gibbs Energy}, which is \\textit{Gibbs Energy} per mass of substance involved. \\textit{Specific Gibbs Energy\" is denoted by a lower case g, with dimension of energy per mass (SI unit: joule/kg)." ;
    qudt:symbol "g" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:MassieuFunction,
        quantitykind:PlanckFunction,
        quantitykind:SpecificEnergy,
        quantitykind:SpecificEnthalpy,
        quantitykind:SpecificHelmholtzEnergy,
        quantitykind:SpecificInternalEnergy .

quantitykind:SpecificHelmholtzEnergy a qudt:QuantityKind ;
    rdfs:label "Specific Helmholtz Energy"@en ;
    dcterms:description "Energy has corresponding intensive (size-independent) properties for pure materials. A corresponding intensive property is \\(\\textit{Specific Helmholtz Energy}\\), which is \\(\\textit{Helmholz Energy}\\) per mass of substance involved.\\( \\textit{Specific Helmholz Energy}\\) is denoted by a lower case u, with dimension of energy per mass (SI unit: joule/kg)."^^qudt:LatexString ;
    qudt:applicableUnit unit:J-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:informativeReference "http://en.citizendium.org/wiki/Enthalpy"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(a = A/m\\), where \\(A\\) is Helmholtz energy and \\(m\\) is mass."^^qudt:LatexString ;
    qudt:symbol "a" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:MassieuFunction,
        quantitykind:PlanckFunction,
        quantitykind:SpecificEnergy,
        quantitykind:SpecificEnthalpy,
        quantitykind:SpecificGibbsEnergy,
        quantitykind:SpecificInternalEnergy .

quantitykind:SpecificInternalEnergy a qudt:QuantityKind ;
    rdfs:label "Specific Internal Energy"@en ;
    qudt:applicableUnit unit:J-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:informativeReference "http://en.citizendium.org/wiki/Enthalpy"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:latexDefinition "\\(u = U/m\\), where \\(U\\) is thermodynamic energy and \\(m\\) is mass."^^qudt:LatexString ;
    qudt:plainTextDescription "Energy has corresponding intensive (size-independent) properties for pure materials. A corresponding intensive property is specific internal energy, which is energy per mass of substance involved. Specific internal energy is denoted by a lower case u, with dimension of energy per mass (SI unit: joule/kg)." ;
    qudt:symbol "u" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:InternalEnergy,
        quantitykind:MassieuFunction,
        quantitykind:PlanckFunction,
        quantitykind:SpecificEnergy,
        quantitykind:SpecificEnthalpy,
        quantitykind:SpecificGibbsEnergy,
        quantitykind:SpecificHelmholtzEnergy .

quantitykind:VolumeThermalExpansion a qudt:QuantityKind ;
    rdfs:label "Volume Thermal Expansion"@en ;
    qudt:applicableUnit unit:CentiM3-PER-K,
        unit:FT3-PER-DEG_F,
        unit:L-PER-K,
        unit:M3-PER-K,
        unit:MilliL-PER-K,
        unit:YD3-PER-DEG_F ;
    qudt:baseUnitDimensions "\\(L^3/\\Theta\\)"^^qudt:LatexString,
        "\\(m^3/K\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H-1T0D0 ;
    qudt:plainTextDescription """When the temperature of a substance changes, the energy that is stored in the intermolecular bonds between atoms changes. When the stored energy increases, so does the length of the molecular bonds. As a result, solids typically expand in response to heating and contract on cooling; this dimensional response to temperature change is expressed by its coefficient of thermal expansion.

Different coefficients of thermal expansion can be defined for a substance depending on whether the expansion is measured by:

    * linear thermal expansion
    * area thermal expansion
    * volumetric thermal expansion

These characteristics are closely related. The volumetric thermal expansion coefficient can be defined for both liquids and solids. The linear thermal expansion can only be defined for solids, and is common in engineering applications.

Some substances expand when cooled, such as freezing water, so they have negative thermal expansion coefficients. [Wikipedia]""" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

unit:C-PER-M2 a qudt:Unit ;
    rdfs:label "Coulomb per Square Metre"@en,
        "Coulomb per Square Meter"@en-us ;
    dcterms:description "Coulomb Per Square Meter (\\(C/m^2\\)) is a unit in the category of Electric charge surface density. It is also known as coulombs per square meter, coulomb per square metre, coulombs per square metre, coulomb/square meter, coulomb/square metre. This unit is commonly used in the SI unit system. Coulomb Per Square Meter (C/m2) has a dimension of \\(L^{-2}TI\\) where L is length, T is time, and I is electric current. This unit is the standard SI unit in this category. "^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(C/m^{2}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricChargePerArea,
        quantitykind:ElectricChargeSurfaceDensity,
        quantitykind:ElectricPolarization ;
    qudt:iec61360Code "0112/2///62720#UAA134" ;
    qudt:ucumCode "C.m-2"^^qudt:UCUMcs,
        "C/m2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A34" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DAY_Sidereal a qudt:Unit,
        unit:Unit ;
    rdfs:label "Sidereal Day"@en ;
    dcterms:description "The length of time which passes between a given fixed star in the sky crossing a given projected meridian (line of longitude). The sidereal day is \\(23 h 56 m 4.1 s\\), slightly shorter than the solar day because the Earth 's orbital motion about the Sun  means the Earth  has to rotate slightly more than one turn with respect to the \"fixed\" stars in order to reach the same Earth-Sun orientation. Another way of thinking about the difference is that it amounts to \\(1/365.2425^{th}\\) of a day per day, since even if the Earth  did not spin on its axis at all, the Sun  would appear to make one rotation around the Earth  as the Earth  completed a single orbit (which takes one year)."^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:iec61360Code "0112/2///62720#UAA412" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Sidereal_time"^^xsd:anyURI,
        "http://scienceworld.wolfram.com/astronomy/SiderealDay.html"^^xsd:anyURI ;
    qudt:symbol "d",
        "d"^^xsd:string ;
    qudt:ucumCode "d"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "DMT" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG-PER-HR a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Degree per Hour"@en ;
    dcterms:description "\"Degree per Hour\" is an Imperial unit for  'Angular Velocity' expressed as \\(deg/h\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00000484813681 ;
    qudt:expression "\\(deg/h\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:AngularVelocity ;
    qudt:ucumCode "deg.h-1"^^qudt:UCUMcs,
        "deg/h"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG-PER-MIN a qudt:Unit ;
    rdfs:label "Degree per Minute"@en ;
    dcterms:description "A unit of measure for the rate of change of plane angle, \\(d\\omega / dt\\),  in durations of one minute.The vector \\(\\omega\\) is directed along the axis of rotation in the direction for which the rotation is clockwise."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.000290888209 ;
    qudt:expression "\\(deg-per-min\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:AngularVelocity ;
    qudt:ucumCode "deg.min-1"^^qudt:UCUMcs,
        "deg/min"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG-PER-SEC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Degree per Second"@en ;
    dcterms:description "\"Degree per Second\" is an Imperial unit for  'Angular Velocity' expressed as \\(deg/s\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0174532925 ;
    qudt:expression "\\(deg/s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:AngularVelocity ;
    qudt:iec61360Code "0112/2///62720#UAA026" ;
    qudt:ucumCode "deg.s-1"^^qudt:UCUMcs,
        "deg/s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "E96" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DeciB a qudt:DimensionlessUnit,
        qudt:LogarithmicUnit,
        qudt:Unit ;
    rdfs:label "Decibel"@en ;
    dcterms:description "A customary logarithmic measure most commonly used (in various ways) for measuring sound.Sound is measured on a logarithmic scale. Informally, if one sound is \\(1\\,bel\\) (10 decibels) \"louder\" than another, this means the louder sound is 10 times louder than the fainter one. A difference of 20 decibels corresponds to an increase of 10 x 10 or 100 times in intensity. The beginning of the scale, 0 decibels, can be set in different ways, depending on exactly the aspect of sound being measured. For sound intensity (the power of the sound waves per unit of area) \\(0\\,decibel\\) is equal to \\(1\\,picoWatts\\,per\\,Metre\\,Squared\\). This corresponds approximately to the faintest sound that can be detected by a person who has good hearing. For sound pressure (the pressure exerted by the sound waves) 0 decibels equals \\(20\\,micropascals\\,RMS\\), and for sound power \\(0\\,decibels\\) sometimes equals \\(1\\,picoWatt\\). In all cases, one decibel equals \\(\\approx\\,0.115129\\,neper\\)."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Decibel"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:RF-Power,
        quantitykind:SignalStrength,
        quantitykind:SoundExposureLevel,
        quantitykind:SoundPowerLevel,
        quantitykind:SoundPressureLevel,
        quantitykind:SoundReductionIndex ;
    qudt:iec61360Code "0112/2///62720#UAA409" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Decibel?oldid=495380648"^^xsd:anyURI ;
    qudt:symbol "dB" ;
    qudt:ucumCode "dB"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "2N" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HR_Sidereal a qudt:Unit,
        unit:Unit ;
    rdfs:label "Sidereal Hour"@en ;
    dcterms:description "Sidereal time is a time-keeping system astronomers use to keep track of the direction to point their telescopes to view a given star in the night sky. A mean sidereal day is about 23 h 56 m 4.1 s in length. However, due to variations in the rotation rate of the Earth, the rate of an ideal sidereal clock deviates from any simple multiple of a civil clock. In practice, the difference is kept track of by the difference UTC-UT1, which is measured by radio telescopes and kept on file and available to the public at the IERS and at the United States Naval Observatory. A Sidereal Hour is \\(1/24^{th}\\) of a Sidereal Day. A mean sidereal day is 23 hours, 56 minutes, 4.0916 seconds (23.9344699 hours or 0.99726958 mean solar days), the time it takes Earth to make one rotation relative to the vernal equinox. (Due to nutation, an actual sidereal day is not quite so constant.) The vernal equinox itself precesses slowly westward relative to the fixed stars, completing one revolution in about 26,000 years, so the misnamed sidereal day (\"sidereal\" is derived from the Latin sidus meaning \"star\") is 0.0084 seconds shorter than Earth's period of rotation relative to the fixed stars."^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Sidereal_time"^^xsd:anyURI ;
    qudt:isScalingOf unit:DAY_Sidereal ;
    qudt:symbol "hr",
        "hr"^^xsd:string ;
    qudt:ucumCode "h"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:J-PER-KiloGM a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Joule per Kilogram"@en ;
    dcterms:description "Joule Per Kilogram} (\\(J/kg\\)) is a unit in the category of Thermal heat capacity. It is also known as \\textit{joule/kilogram}, \\textit{joules per kilogram}. This unit is commonly used in the SI unit system. The unit has a dimension of \\(L2T^{-2}\\) where \\(L\\) is length, and \\(T\\) is time. This unit is the standard SI unit in this category."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(J/kg\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:MassieuFunction,
        quantitykind:SpecificEnergy,
        quantitykind:SpecificEnthalpy,
        quantitykind:SpecificGibbsEnergy,
        quantitykind:SpecificHelmholtzEnergy,
        quantitykind:SpecificInternalEnergy ;
    qudt:iec61360Code "0112/2///62720#UAA175" ;
    qudt:ucumCode "J.kg-1"^^qudt:UCUMcs,
        "J/kg"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J2" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-PER-M3 a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilogram per Cubic Metre"@en,
        "kilogram per cubic metre"@en,
        "Kilogram per Cubic Meter"@en-us,
        "kilogram per cubic meter"@en-us ;
    dcterms:description "Kilogram per cubic metre is an SI derived unit of density, defined by mass in kilograms divided by volume in cubic metres. The official SI symbolic abbreviation is \\(kg \\cdot m^{-3}\\), or equivalently either \\(kg/m^3\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:expression "\\(kg/m^3\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Density,
        quantitykind:MassConcentration,
        quantitykind:MassConcentrationOfWater,
        quantitykind:MassConcentrationOfWaterVapour,
        quantitykind:MassDensity ;
    qudt:iec61360Code "0112/2///62720#UAA619" ;
    qudt:plainTextDescription "Kilogram per cubic metre is an SI derived unit of density, defined by mass in kilograms divided by volume in cubic metres. The official SI symbolic abbreviation is kg . m^-3, or equivalently either kg/m^3." ;
    qudt:ucumCode "kg.m-3"^^qudt:UCUMcs,
        "kg/m3"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "KMQ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloV a qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilovolt"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:EnergyPerElectricCharge ;
    qudt:iec61360Code "0112/2///62720#UAA580" ;
    qudt:plainTextDescription "1 000-fold of the SI derived unit volt" ;
    qudt:ucumCode "kV"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "KVT" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MO_Synodic a qudt:Unit,
        unit:Unit ;
    rdfs:label "Synodic month"@en ;
    dcterms:description "A unit of time corresponding approximately to one cycle of the moon's phases, or about 30 days or 4 weeks and calculated as 29.53059 days."^^rdf:HTML ;
    qudt:exactMatch unit:MO ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:informativeReference "http://www.thefreedictionary.com/Synodal+month"^^xsd:anyURI ;
    qudt:symbol "mo"^^xsd:string ;
    qudt:ucumCode "mo_s"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:MO .

unit:MegaV a qudt:Unit,
        unit:Unit ;
    rdfs:label "Megavolt"@en ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:EnergyPerElectricCharge ;
    qudt:iec61360Code "0112/2///62720#UAA221" ;
    qudt:plainTextDescription "1,000,000-fold of the derived unit volt" ;
    qudt:ucumCode "MV"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B78" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroV a qudt:Unit,
        unit:Unit ;
    rdfs:label "Microvolt"@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:EnergyPerElectricCharge ;
    qudt:iec61360Code "0112/2///62720#UAA078" ;
    qudt:plainTextDescription "0.000001-fold of the SI derived unit volt" ;
    qudt:ucumCode "uV"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D82" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliV a qudt:Unit,
        unit:Unit ;
    rdfs:label "Millivolt"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:EnergyPerElectricCharge ;
    qudt:iec61360Code "0112/2///62720#UAA804" ;
    qudt:plainTextDescription "0,001-fold of the SI derived unit volt" ;
    qudt:ucumCode "mV"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "2Z" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:N-M a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Newton Metre"@en,
        "Newton Meter"@en-us ;
    dcterms:description "\"Torque\" is the tendency of a force to cause a rotation, is the product of the force and the distance from the center of rotation to the point where the force is applied. Torque has the same units as work or energy, but it is a different physical concept. To stress the difference, scientists measure torque in newton meters rather than in joules, the SI unit of work. One newton meter is approximately 0.737562 pound foot."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Newton_metre"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:MomentOfForce,
        quantitykind:Torque ;
    qudt:iec61360Code "0112/2///62720#UAA239" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Newton_metre?oldid=493923333"^^xsd:anyURI ;
    qudt:siUnitsExpression "N.m" ;
    qudt:symbol "J"^^xsd:string,
        "N m",
        "N m"^^xsd:string ;
    qudt:ucumCode "N.m"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "NU" ;
    qudt:unitOfSystem sou:SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:J .

unit:PlanckTime a qudt:Unit,
        unit:Unit ;
    rdfs:label "Planck Time"@en ;
    dcterms:description "In physics, the Planck time, denoted by \\(t_P\\), is the unit of time in the system of natural units known as Planck units. It is the time required for light to travel, in a vacuum, a distance of 1 Planck length. The unit is named after Max Planck, who was the first to propose it. \\( \\\\ t_P \\equiv  \\sqrt{\\frac{\\hbar G}{c^5}} \\approx 5.39106(32) \\times 10^{-44} s\\) where, \\(c\\) is the speed of light in a vacuum, \\(\\hbar\\) is the reduced Planck's constant (defined as \\(\\hbar = \\frac{h}{2 \\pi}\\) and \\(G\\) is the gravitational constant. The two digits between parentheses denote the standard error of the estimated value."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0000000000000000000000000000000000000000000539124 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Planck_time"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Planck_time?oldid=495362103"^^xsd:anyURI,
        "https://en.wikipedia.org/wiki/Planck_units"^^xsd:anyURI ;
    qudt:latexSymbol "\\(t_P\\)"^^qudt:LatexString ;
    qudt:unitOfSystem sou:PLANCK ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PlanckVolt a qudt:Unit,
        unit:Unit ;
    rdfs:label "Planck Volt"@en ;
    qudt:conversionMultiplier 1042950000000000000000000000.0 ;
    qudt:derivedUnitOfSystem sou:PLANCK ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:EnergyPerElectricCharge ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:RAD-PER-HR a qudt:Unit ;
    rdfs:label "Radian per Hour"@en ;
    dcterms:description "\"Radian per Hour\" is a unit for  'Angular Velocity' expressed as \\(rad/h\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 3600.0 ;
    qudt:expression "\\(rad/h\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:AngularVelocity ;
    qudt:ucumCode "rad.h-1"^^qudt:UCUMcs,
        "rad/h"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:RAD-PER-MIN a qudt:Unit ;
    rdfs:label "Radian per Minute"@en ;
    dcterms:description "Radian Per Minute (rad/min) is a unit in the category of Angular velocity. It is also known as radians per minute, radian/minute. Radian Per Minute (rad/min) has a dimension of aT-1 where T is time. It can be converted to the corresponding standard SI unit rad/s by multiplying its value by a factor of 0.0166666666667. "^^rdf:HTML ;
    qudt:allowedUnitOfSystem sou:SI ;
    qudt:conversionMultiplier 60.0 ;
    qudt:expression "\\(rad/m\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:AngularVelocity ;
    qudt:ucumCode "rad.min-1"^^qudt:UCUMcs,
        "rad/min"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:RAD-PER-SEC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "radian per second"@en ;
    dcterms:description "\"Radian per Second\" is the SI unit of rotational speed (angular velocity), and, also the unit of angular frequency. The radian per second is defined as the change in the orientation of an object, in radians, every second."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(rad/s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:AngularVelocity ;
    qudt:iec61360Code "0112/2///62720#UAA968" ;
    qudt:ucumCode "rad.s-1"^^qudt:UCUMcs,
        "rad/s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "2A" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:V a qudt:Unit,
        unit:Unit ;
    rdfs:label "Volt"@en ;
    dcterms:description "\\(\\textit{Volt} is the SI unit of electric potential. Separating electric charges creates potential energy, which can be measured in energy units such as joules. Electric potential is defined as the amount of potential energy present per unit of charge. Electric potential is measured in volts, with one volt representing a potential of one joule per coulomb of charge. The name of the unit honors the Italian scientist Count Alessandro Volta (1745-1827), the inventor of the first battery.  The volt also may be expressed with a variety of other units. For example, a volt is also equal to one watt per ampere (W/A) and one joule per ampere per second (J/A/s).\\)"^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Volt"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:EnergyPerElectricCharge ;
    qudt:iec61360Code "0112/2///62720#UAA296" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Volt?oldid=494812083"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\text{V}\\ \\equiv\\ \\text{volt}\\ \\equiv\\ \\frac{\\text{J}}{\\text{C}}\\ \\equiv\\ \\frac{\\text{joule}}{\\text{coulomb}}\\ \\equiv\\ \\frac{\\text{W.s}}{\\text{C}}\\ \\equiv\\ \\frac{\\text{watt.second}}{\\text{coulomb}}\\ \\equiv\\ \\frac{\\text{W}}{\\text{A}}\\ \\equiv\\ \\frac{\\text{watt}}{\\text{amp}}\\)"^^qudt:LatexString ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/volt> ;
    qudt:siUnitsExpression "W/A" ;
    qudt:symbol "V",
        "V"^^xsd:string ;
    qudt:ucumCode "V"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "VLT" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:V_Ab a qudt:Unit,
        unit:Unit ;
    rdfs:label "Abvolt"@en ;
    dcterms:description "A unit of electrical potential equal to one hundred millionth of a volt (\\(10^{-8}\\,volts\\)), used in the centimeter-gram-second (CGS) system of units. One abV is the potential difference that exists between two points when the work done to transfer one abcoulomb of charge between them equals: \\(1\\,erg\\cdot\\,1\\,abV\\,=\\,10\\,nV\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00000001 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Abvolt"^^xsd:anyURI ;
    qudt:derivedUnitOfSystem sou:CGS-EMU ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:EnergyPerElectricCharge ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Abvolt?oldid=477198646"^^xsd:anyURI,
        "http://www.lexic.us/definition-of/abvolt"^^xsd:anyURI,
        "http://www.oxfordreference.com/view/10.1093/acref/9780198605225.001.0001/acref-9780198605225-e-27"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/abvolt> ;
    qudt:symbol "abV",
        "abV"^^xsd:string ;
    qudt:ucumCode "10.nV"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:V_Stat a qudt:Unit,
        unit:Unit ;
    rdfs:label "Statvolt"@en ;
    dcterms:description "\"statvolt\" is a unit of voltage and electrical potential used in the cgs system of units. The conversion to the SI system is \\(1 statvolt = 299.792458 volts\\). The conversion factor 299.792458 is simply the numerical value of the speed of light in m/s divided by 106. The statvolt is also defined in the cgs system as \\(1 erg / esu\\). It is a useful unit for electromagnetism because one statvolt per centimetre is equal in magnitude to one gauss. Thus, for example, an electric field of one statvolt/cm has the same energy density as a magnetic field of one gauss. Likewise, a plane wave propagating in a vacuum has perpendicular electric and magnetic fields such that for every gauss of magnetic field intensity there is one statvolt/cm of electric field intensity. The abvolt is another option for a unit of voltage in the cgs system."^^qudt:LatexString ;
    qudt:conversionMultiplier 299.792458 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Statvolt"^^xsd:anyURI ;
    qudt:derivedUnitOfSystem sou:CGS-ESU ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:EnergyPerElectricCharge ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Statvolt"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Statvolt?oldid=491769750"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/statvolt> ;
    qudt:symbol "statV",
        "statV"^^xsd:string ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:YR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Year"@en ;
    dcterms:description "A year is any of the various periods equated with one passage of Earth about the Sun, and hence of roughly 365 days. The familiar calendar has a mixture of 365- and 366-day years, reflecting the fact that the time for one complete passage takes about 365¼ days; the precise value for this figure depends on the manner of defining the year."^^rdf:HTML ;
    qudt:conversionMultiplier 31557600.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:iec61360Code "0112/2///62720#UAB026" ;
    qudt:informativeReference "http://www.oxfordreference.com/view/10.1093/acref/9780198605225.001.0001/acref-9780198605225-e-1533?rskey=b94Fd6"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/year> ;
    qudt:symbol "a",
        "a"^^xsd:string ;
    qudt:ucumCode "a"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "ANN" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:YR_TROPICAL a qudt:Unit,
        unit:Unit ;
    rdfs:label "Tropical Year"@en ;
    dcterms:description "<p>A tropical year (also known as a solar year), for general purposes, is the length of time that the Sun takes to return to the same position in the cycle of seasons, as seen from Earth; for example, the time from vernal equinox to vernal equinox, or from summer solstice to summer solstice. Because of the precession of the equinoxes, the seasonal cycle does not remain exactly synchronised with the position of the Earth in its orbit around the Sun. As a consequence, the tropical year is about 20 minutes shorter than the time it takes Earth to complete one full orbit around the Sun as measured with respect to the fixed stars. Since antiquity, astronomers have progressively refined the definition of the tropical year, and currently define it as the time required for the mean Sun's tropical longitude (longitudinal position along the ecliptic relative to its position at the vernal equinox) to increase by 360 degrees (that is, to complete one full seasonal circuit).</p>"^^rdf:HTML ;
    qudt:conversionMultiplier 31556925.216 ;
    qudt:exactMatch unit:YR_TROPICAL ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:iec61360Code "0112/2///62720#UAB029" ;
    qudt:symbol "a_{t}",
        "a_{t}"^^xsd:string ;
    qudt:ucumCode "a_t"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D42" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    skos:altLabel "solar year" .

spl:Attribute a spin:ConstructTemplate ;
    rdfs:label "Attribute" ;
    spin:body [ a sp:Construct ;
            sp:templates ( [ sp:object spin:ConstraintViolation ;
                        sp:predicate rdf:type ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b853 ] [ sp:object spin:_this ;
                        sp:predicate spin:violationRoot ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b853 ] [ sp:object [ sp:varName "predicate" ] ;
                        sp:predicate spin:violationPath ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b853 ] ) ;
            sp:where ( [ a sp:Filter ;
                        sp:expression [ a sp:or ;
                                sp:arg1 [ a sp:or ;
                                        sp:arg1 [ a sp:and ;
                                                sp:arg1 [ a sp:bound ;
                                                        sp:arg1 [ sp:varName "minCount" ] ] ;
                                                sp:arg2 [ a sp:lt ;
                                                        sp:arg1 [ a spl:objectCount ;
                                                                sp:arg1 spin:_this ;
                                                                sp:arg2 [ sp:varName "predicate" ] ] ;
                                                        sp:arg2 [ sp:varName "minCount" ] ] ] ;
                                        sp:arg2 [ a sp:and ;
                                                sp:arg1 [ a sp:bound ;
                                                        sp:arg1 [ sp:varName "maxCount" ] ] ;
                                                sp:arg2 [ a sp:gt ;
                                                        sp:arg1 [ a spl:objectCount ;
                                                                sp:arg1 spin:_this ;
                                                                sp:arg2 [ sp:varName "predicate" ] ] ;
                                                        sp:arg2 [ sp:varName "maxCount" ] ] ] ] ;
                                sp:arg2 [ a sp:exists ;
                                        sp:elements ( ( [ a sp:Filter ;
                                                        sp:expression [ a sp:bound ;
                                                                sp:arg1 [ sp:varName "valueType" ] ] ] ) [ sp:object [ sp:varName "value" ] ;
                                                    sp:predicate [ sp:varName "predicate" ] ;
                                                    sp:subject spin:_this ] [ a sp:Filter ;
                                                    sp:expression [ a sp:not ;
                                                            sp:arg1 [ a spl:instanceOf ;
                                                                    sp:arg1 [ sp:varName "value" ] ;
                                                                    sp:arg2 [ sp:varName "valueType" ] ] ] ] ) ] ] ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:optional true ;
            spl:predicate spl:valueType ;
            spl:valueType rdfs:Class ;
            rdfs:comment "the type that all values of the property must have" ],
        [ a spl:Argument ;
            spl:predicate spl:predicate ;
            spl:valueType rdf:Property ;
            rdfs:comment "the RDF property holding the attribute value" ],
        [ a spl:Argument ;
            spl:optional true ;
            spl:predicate spl:maxCount ;
            spl:valueType xsd:integer ;
            rdfs:comment "the maximum number of values permitted for the property" ],
        [ a spl:Argument ;
            spl:optional true ;
            spl:predicate spl:minCount ;
            spl:valueType xsd:integer ;
            rdfs:comment "the minimum number of values permitted for the property" ],
        [ a spl:Argument ;
            spl:optional true ;
            spl:predicate spl:defaultValue ;
            rdfs:comment "the default value of the attribute" ],
        [ a spl:Argument ;
            spl:optional true ;
            spl:predicate rdfs:comment ;
            spl:valueType xsd:string ;
            rdfs:comment "a comment describing the meaning of this attribute" ] ;
    spin:labelTemplate "Attribute {?predicate} : {?valueType} [{?minCount},{?maxCount}]" ;
    rdfs:comment """Defines an "attribute" of a class. Attribute definitions bundle common modeling patterns known from object-oriented languages like UML. Each attribute can have min and max cardinality, a value type and a default value. The attribute links a class with one RDF property. This template should be used as spin:constraints on a class to make sure that classes meet the expected cardinalities and valueType constraints.
If a model wants to use spl:defaultValue, then it should instantiate the spl:ConstructDefaultValues as a spin:constructor at some root class, such as rdfs:Resource.""" ;
    rdfs:subClassOf spin:ConstructTemplates .

spl:MiscFunctions a spin:Function ;
    rdfs:label "Misc functions" ;
    spin:abstract true ;
    rdfs:comment "A collection of functions that are difficult to categorize." ;
    rdfs:subClassOf spin:Functions .

sh:IRI a sh:NodeKind ;
    rdfs:label "IRI"@en ;
    rdfs:comment "The node kind of all IRIs."@en ;
    rdfs:isDefinedBy sh: .

sh:Info a sh:Severity ;
    rdfs:label "Info"@en ;
    rdfs:comment "The severity for an informational validation result."@en ;
    rdfs:isDefinedBy sh: .

brick:Cooling_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Cooling Temperature Setpoint" ;
    rdfs:subClassOf brick:Temperature_Setpoint ;
    skos:definition "Sets temperature for cooling"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Cool ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Cool,
        tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature .

brick:Dewpoint a brick:Quantity ;
    rdfs:label "Dewpoint" ;
    qudt:applicableUnit unit:DEG_C,
        unit:DEG_F,
        unit:DEG_R,
        unit:K,
        unit:MilliDEG_C,
        unit:PlanckTemperature ;
    brick:hasQUDTReference quantitykind:DewPointTemperature .

brick:Effective_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Effective Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Effective ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Effective,
        tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Air .

brick:On_Off_Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "On Off Status" ;
    rdfs:subClassOf brick:Off_Status,
        brick:On_Status,
        brick:Status ;
    skos:definition "Indicates the on/off status of a control loop, relay or equipment"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Off ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:On ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Off,
        tag:On,
        tag:Point,
        tag:Status .

brick:Proportional_Band_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Proportional Band Parameter" ;
    rdfs:subClassOf brick:PID_Parameter ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Band ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:PID ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Proportional ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Band,
        tag:PID,
        tag:Parameter,
        tag:Point,
        tag:Proportional .

brick:Radiant_Panel a owl:Class,
        sh:NodeShape ;
    rdfs:label "Radiant Panel" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Radiant_heating_and_cooling> ;
    rdfs:subClassOf brick:Terminal_Unit ;
    skos:definition "A temperature-controlled surface that provides fifty percent (50%) or more of the design heat transfer by thermal radiation."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Panel ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Radiant ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Panel,
        tag:Radiant .

brick:Relative_Humidity_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Relative Humidity Sensor" ;
    rdfs:subClassOf brick:Humidity_Sensor ;
    skos:definition "Measures the present state of absolute humidity relative to a maximum humidity given the same temperature"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Relative ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Humidity,
        tag:Point,
        tag:Relative,
        tag:Sensor ;
    brick:hasQuantity brick:Relative_Humidity ;
    brick:hasSubstance brick:Air .

brick:Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Temperature Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Sets temperature"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature .

brick:Unoccupied_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unoccupied Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Air_Temperature_Setpoint ;
    skos:definition "Sets temperature of air when unoccupied"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unoccupied ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Unoccupied .

brick:Water_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Flow Setpoint" ;
    rdfs:subClassOf brick:Flow_Setpoint ;
    skos:definition "Sets the target flow rate of water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Flow,
        tag:Point,
        tag:Setpoint,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Water .

s223:Bidirectional a s223:Direction ;
    rdfs:label "Bidirectional" ;
    rdfs:comment "One of a set of terms used to describe the direction of flow of ConnectionPoint instances." .

s223:Connectable a s223:Class,
        sh:NodeShape ;
    rdfs:label "Connectable" ;
    s223:abstract true ;
    rdfs:comment "Connectable is an abstract class that represents a thing (a Device, DomainSpace or PhysicalSpace) that can be connected via ConnectionPoints and Connections." ;
    rdfs:subClassOf s223:Concept ;
    sh:property [ sh:class s223:Connectable ;
            sh:name "SymmetricConnectableToConnectableShape" ;
            sh:path s223:connected ],
        [ sh:class s223:Connection ;
            sh:name "DeviceToConnectionShape" ;
            sh:path s223:connectedThrough ],
        [ sh:class s223:Connectable ;
            sh:name "ConnectableToConnectableShape" ;
            sh:path s223:connectedTo ],
        [ sh:class s223:ConnectionPoint ;
            sh:name "DeviceToConnectionPointShape" ;
            sh:path s223:hasConnectionPoint ] ;
    sh:rule [ a sh:SPARQLRule ;
            sh:construct """
CONSTRUCT {$this s223:connectedFrom ?device .}
WHERE {
$this s223:hasConnectionPoint ?cp .
?cp s223:hasDirection s223:Inlet .
?cp s223:connectsThrough/s223:connectsFrom ?device .
}
""" ;
            sh:name "InferredDeviceToUpstreamDeviceProperty" ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/inference/model-rules> ],
        [ a sh:TripleRule ;
            sh:name "InferredDeviceToConnectionProperty" ;
            sh:object [ sh:path ( s223:hasConnectionPoint s223:connectsThrough ) ] ;
            sh:predicate s223:connectedThrough ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:name "InferredDeviceToConnectionProperty" ;
            sh:object [ sh:path ( s223:hasConnectionPoint s223:connectsThrough ) ] ;
            sh:predicate s223:connectedThrough ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:name "InferredDeviceToDevicePropertyfromconnectedFrom" ;
            sh:object [ sh:path s223:connectedFrom ] ;
            sh:predicate s223:connected ;
            sh:subject sh:this ],
        [ a sh:SPARQLRule ;
            sh:construct """
CONSTRUCT {$this s223:connectedTo ?device .}
WHERE {
$this s223:hasConnectionPoint ?cp .
?cp s223:hasDirection s223:Outlet .
?cp s223:connectsThrough/s223:connectsTo ?device .
}
""" ;
            sh:name "InferredDeviceToDownstreamDeviceProperty" ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/inference/model-rules> ],
        [ a sh:TripleRule ;
            sh:name "InferredDeviceToDevicePropertyfromconnectedTo" ;
            sh:object [ sh:path s223:connectedTo ] ;
            sh:predicate s223:connected ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:name "InferredDeviceToConnectionPointCnxProperty" ;
            sh:object [ sh:path s223:hasConnectionPoint ] ;
            sh:predicate s223:cnx ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:name "InferredDeviceToConnectionPointCnxPropertyFromInverse" ;
            sh:object [ sh:path [ sh:inversePath s223:isConnectionPointOf ] ] ;
            sh:predicate s223:cnx ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:name "InferredDeviceToConnectionPointProperty" ;
            sh:object [ sh:path s223:cnx ] ;
            sh:predicate s223:hasConnectionPoint ;
            sh:subject sh:this ] .

<http://data.ashrae.org/standard223/1.0/model/all> a owl:Ontology ;
    owl:imports <http://data.ashrae.org/standard223/1.0/model/core>,
        <http://data.ashrae.org/standard223/1.0/model/device>,
        <http://data.ashrae.org/standard223/1.0/model/system>,
        <http://data.ashrae.org/standard223/1.0/vocab/domain>,
        <http://data.ashrae.org/standard223/1.0/vocab/enumeration>,
        <http://data.ashrae.org/standard223/1.0/vocab/role> ;
    owl:versionInfo "Created with TopBraid Composer" .

qudt:BinaryPrefix a owl:Class,
        sh:NodeShape ;
    rdfs:label "Binary Prefix" ;
    rdfs:comment "A <em>Binary Prefix</em> is a prefix for multiples of units in data processing, data transmission, and digital information, notably the bit and the byte, to indicate multiplication by a power of 2." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Prefix .

qudt:Encoding a owl:Class,
        sh:NodeShape ;
    rdfs:label "Encoding" ;
    dcterms:description "An encoding is a rule or algorithm that is used to convert data from a native, or unspecified form into a specific form that satisfies the encoding rules. Examples of encodings include character encodings, such as UTF-8." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Concept ;
    sh:property qudt:Encoding-qudt_bits,
        qudt:Encoding-qudt_bytes .

qudt:dimensionExponent a owl:DatatypeProperty ;
    rdfs:label "dimension exponent" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> .

qkdv:A-1E0L2I0M1H0T-2D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A-1E0L2I0M1H0T-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance -1 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:MolarEnergy ;
    qudt:latexDefinition "\\(L^2 M T^-2 N^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E-1L2I0M1H0T-2D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E-1L2I0M1H0T-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent -1 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:MagneticFlux ;
    qudt:latexDefinition "\\(L^2 M T^-2 I^-1\\)"^^qudt:LatexString ;
    qudt:latexSymbol "\\(m^2 \\cdot kg \\cdot s^{-2} \\cdot  A^{-1}\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-2I0M0H0T0D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-2I0M0H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L1I0M0H-1T0D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L1I0M0H-1T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature -1 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:LinearThermalExpansion ;
    qudt:latexDefinition "\\(L .H^{-1}\\)"^^qudt:LatexString ;
    qudt:latexSymbol "\\(L .\\Theta^{-1}\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L2I0M0H0T1D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L2I0M0H0T1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:AreaTime ;
    qudt:latexDefinition "\\(L^2 T\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L2I0M1H0T0D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L2I0M1H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:MomentOfInertia ;
    qudt:latexDefinition "\\(L^2 M\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L3I0M0H-1T0D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L3I0M0H-1T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 3 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature -1 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:VolumeThermalExpansion ;
    qudt:latexDefinition "\\(L^3 Θ^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

quantitykind:DryVolume a qudt:QuantityKind ;
    rdfs:label "Dry Volume"@en ;
    dcterms:description "Dry measures are units of volume used to measure bulk commodities which are not gas or liquid. They are typically used in agriculture, agronomy, and commodity markets to measure grain, dried beans, and dried and fresh fruit; formerly also salt pork and fish. They are also used in fishing for clams, crabs, etc. and formerly for many other substances (for example coal, cement, lime) which were typically shipped and delivered in a standardized container such as a barrel.  In the original metric system, the unit of dry volume was the stere, but this is not part of the modern metric system; the liter and the cubic meter (\\(m^{3}\\)) are now used. However, the stere is still widely used for firewood."^^qudt:LatexString ;
    qudt:applicableUnit unit:BBL_US_DRY,
        unit:BU_UK,
        unit:BU_US,
        unit:CORD,
        unit:GAL_US_DRY,
        unit:PINT_US_DRY,
        unit:PK_US_DRY,
        unit:QT_US_DRY ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Dry_measure"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Volume .

quantitykind:ElectricConductivity a qudt:QuantityKind ;
    rdfs:label "Electric Conductivity"@en ;
    dcterms:description "\"Electric Conductivity} or \\textit{Specific Conductance\" is a measure of a material's ability to conduct an electric current. When an electrical potential difference is placed across a conductor, its movable charges flow, giving rise to an electric current. The conductivity \\(\\sigma\\) is defined as the ratio of the electric current density \\(J\\) to the electric field \\(E\\): \\(J = \\sigma E\\). In isotropic materials, conductivity is scalar-valued, however in general, conductivity is a tensor-valued quantity."^^qudt:LatexString ;
    qudt:applicableUnit unit:A_Ab-CentiM2,
        unit:MHO,
        unit:MHO_Stat,
        unit:MicroMHO,
        unit:MicroS,
        unit:S,
        unit:S_Ab,
        unit:S_Stat ;
    qudt:baseUnitDimensions "\\(A^2 \\cdot s^3/kg \\cdot m^2\\)"^^qudt:LatexString,
        "\\(I^2 \\cdot T^3/L^2 \\cdot M\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T3D0 ;
    qudt:latexSymbol "\\(\\sigma\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ForcePerAreaTime a qudt:QuantityKind ;
    rdfs:label "Force Per Area Time"@en ;
    qudt:applicableUnit unit:DeciBAR-PER-YR,
        unit:HectoPA-PER-HR,
        unit:LB_F-PER-IN2-SEC,
        unit:PA-PER-HR,
        unit:PA-PER-MIN,
        unit:PA-PER-SEC,
        unit:W-PER-M3 ;
    qudt:baseUnitDimensions "\\(M/L \\cdot T^3\\)"^^qudt:LatexString,
        "\\(kg/m \\cdot s^3\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-3D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:InformationEntropy a qudt:QuantityKind ;
    rdfs:label "Information Entropy"@en ;
    qudt:applicableUnit unit:BAN,
        unit:BIT,
        unit:BYTE,
        unit:ERLANG,
        unit:HART,
        unit:NAT,
        unit:NAT-PER-SEC,
        unit:SHANNON ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://simple.wikipedia.org/wiki/Information_entropy"^^xsd:anyURI ;
    qudt:plainTextDescription "Information Entropy is a concept from information theory. It tells how much information there is in an event. In general, the more uncertain or random the event is, the more information it will contain. The concept of information entropy was created by a mathematician. He was named Claude Elwood Shannon. It has applications in many areas, including lossless data compression, statistical inference, cryptography and recently in other disciplines as biology, physics or machine learning." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Dimensionless .

quantitykind:LinearThermalExpansion a qudt:QuantityKind ;
    rdfs:label "Linear Thermal Expansion"@en ;
    qudt:applicableUnit unit:CentiM-PER-K,
        unit:FT-PER-DEG_F,
        unit:IN-PER-DEG_F,
        unit:M-PER-K,
        unit:MicroM-PER-K,
        unit:MilliM-PER-K,
        unit:YD-PER-DEG_F ;
    qudt:baseUnitDimensions "\\(L/\\Theta\\)"^^qudt:LatexString,
        "\\(m/K\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H-1T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/linear_thermal_expansion"^^xsd:anyURI ;
    qudt:plainTextDescription "When the temperature of a substance changes, the energy that is stored in the intermolecular bonds between atoms changes. When the stored energy increases, so does the length of the molecular bonds. As a result, solids typically expand in response to heating and contract on cooling; this dimensional response to temperature change is expressed by its coefficient of thermal expansion. Different coefficients of thermal expansion can be defined for a substance depending on whether the expansion is measured by: linear thermal expansion, area thermal expansion, or volumetric thermal expansion." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MassPerTime a qudt:QuantityKind ;
    rdfs:label "Mass per Time"@en ;
    qudt:applicableUnit unit:KiloGM-PER-HR,
        unit:KiloGM-PER-SEC,
        unit:LB-PER-HR,
        unit:LB-PER-MIN,
        unit:N-SEC-PER-M,
        unit:NanoGM-PER-DAY,
        unit:SLUG-PER-SEC,
        unit:TON_SHORT-PER-HR ;
    qudt:baseUnitDimensions "\\(M/T\\)"^^qudt:LatexString,
        "\\(kg/s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MomentOfInertia a qudt:QuantityKind ;
    rdfs:label "Moment of Inertia"@en ;
    qudt:applicableUnit unit:KiloGM-CentiM2,
        unit:KiloGM-M2,
        unit:KiloGM-MilliM2,
        unit:LB-FT2,
        unit:LB-IN2 ;
    qudt:baseUnitDimensions "\\(L^2 \\cdot M\\)"^^qudt:LatexString,
        "\\(kg \\cdot m^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Moment_of_inertia"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(I_Q = \\int r^2_Q dm\\), where \\(r_Q\\) is the radial distance from a \\(Q-axis\\) and \\(m\\) is mass."^^qudt:LatexString ;
    qudt:plainTextDescription "The rotational inertia or resistance to change in direction or speed of rotation about a defined axis." ;
    qudt:symbol "I" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:altLabel "MOI" .

quantitykind:PressureRatio a qudt:QuantityKind ;
    rdfs:label "Pressure Ratio"@en ;
    qudt:applicableUnit unit:BAR-PER-BAR,
        unit:HectoPA-PER-BAR,
        unit:KiloPA-PER-BAR,
        unit:MegaPA-PER-BAR,
        unit:MilliBAR-PER-BAR,
        unit:PA-PER-BAR,
        unit:PERCENT_RH,
        unit:PSI-PER-PSI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:qkdvDenominator qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:qkdvNumerator qkdv:A0E0L-1I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

quantitykind:ThermalInsulance a qudt:QuantityKind ;
    rdfs:label "Thermal Insulance"@en ;
    dcterms:description "\\(\\textit{Thermal Insulance}\\) is the reduction of heat transfer (the transfer of thermal energy between objects of differing temperature) between objects in thermal contact or in range of radiative influence. In building technology, this quantity is often called \\(\\textit{Thermal Resistance}\\), with the symbol \\(R\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:CLO,
        unit:DEG_F-HR-FT2-PER-BTU_IT,
        unit:DEG_F-HR-FT2-PER-BTU_TH,
        unit:FT2-HR-DEG_F-PER-BTU_IT,
        unit:M2-HR-DEG_C-PER-KiloCAL_IT,
        unit:M2-K-PER-W ;
    qudt:baseUnitDimensions "\\(K \\cdot s^3/kg\\)"^^qudt:LatexString,
        "\\(\\Theta \\cdot T^3/M\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M-1H1T3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Thermal_insulation"^^xsd:anyURI ;
    qudt:latexDefinition "\\(M = 1/K\\), where \\(K\\) is \"Coefficient of Heat Transfer\""^^qudt:LatexString ;
    qudt:symbol "M" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:CoefficientOfHeatTransfer .

quantitykind:ThermodynamicTemperature a qudt:QuantityKind ;
    rdfs:label "Thermodynamic Temperature"@en ;
    qudt:applicableUnit unit:DEG_R,
        unit:K,
        unit:PlanckTemperature ;
    qudt:baseUnitDimensions "\\(K\\)"^^qudt:LatexString,
        "\\(\\Theta\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/page/Thermodynamic_temperature"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:latexSymbol "\\(\\Theta\\)"^^qudt:LatexString ;
    qudt:plainTextDescription """Thermodynamic temperature is the absolute measure of temperature and is one of the principal parameters of thermodynamics.
Temperature is a physical property of matter that quantitatively expresses the common notions of hot and cold.
In thermodynamics, in a system of which the entropy is considered as an independent externally controlled variable, absolute, or thermodynamic temperature is defined as the derivative of the internal energy with respect to the entropy. This is a base quantity in the International System of Quantities, ISQ, on which the International System of Units, SI, is based.""" ;
    qudt:symbol "T" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Temperature ;
    skos:broader quantitykind:Temperature .

unit:BAR-L-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Bar Litre Per Second"@en,
        "Bar Liter Per Second"@en-us ;
    qudt:conversionMultiplier 100.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:iec61360Code "0112/2///62720#UAA326" ;
    qudt:plainTextDescription "product of the unit bar and the unit litre divided by the SI base unit second" ;
    qudt:ucumCode "bar.L.s-1"^^qudt:UCUMcs,
        "bar.L/s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F91" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BAR-M3-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Bar Cubic Metre Per Second"@en,
        "Bar Cubic Meter Per Second"@en-us ;
    qudt:conversionMultiplier 100.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:iec61360Code "0112/2///62720#UAA814" ;
    qudt:plainTextDescription "product out of the 0.001-fold of the unit bar and the power of the SI base unit metre with the exponent 3 divided by the SI base unit second" ;
    qudt:ucumCode "bar.m3.s-1"^^qudt:UCUMcs,
        "bar.m3/s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F96" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CentiM-PER-HR a qudt:Unit ;
    rdfs:label "Centimetre Per Hour"@en,
        "Centimeter Per Hour"@en-us ;
    qudt:conversionMultiplier 0.000002777778 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Velocity ;
    qudt:iec61360Code "0112/2///62720#UAA378" ;
    qudt:plainTextDescription "0,01-fold of the SI base unit metre divided by the unit hour" ;
    qudt:ucumCode "cm.h-1"^^qudt:UCUMcs,
        "cm/h"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H49" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CentiM-PER-KiloYR a qudt:Unit ;
    rdfs:label "Centimetres per thousand years"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.000000000000316880878140289 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Velocity ;
    qudt:ucumCode "cm.ka-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CentiM-PER-SEC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "centimetre per second"@en,
        "centimeter per second"@en-us ;
    dcterms:description "\"Centimeter per Second\" is a C.G.S System unit for  'Linear Velocity' expressed as \\(cm/s\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.01 ;
    qudt:derivedUnitOfSystem sou:CGS,
        sou:CGS-GAUSS ;
    qudt:expression "\\(cm/s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Velocity ;
    qudt:iec61360Code "0112/2///62720#UAA379" ;
    qudt:latexDefinition "\\(cm/s\\)"^^qudt:LatexString ;
    qudt:ucumCode "cm.s-1"^^qudt:UCUMcs,
        "cm/s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "2M" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG_R a qudt:Unit,
        unit:Unit ;
    rdfs:label "Degree Rankine"@en ;
    dcterms:description "Rankine is a thermodynamic (absolute) temperature scale. The symbol for degrees Rankine is \\(^\\circ R\\) or \\(^\\circ Ra\\) if necessary to distinguish it from the Rømer and Réaumur scales). Zero on both the Kelvin and Rankine scales is absolute zero, but the Rankine degree is defined as equal to one degree Fahrenheit, rather than the one degree Celsius used by the Kelvin scale. A temperature of \\(-459.67 ^\\circ F\\) is exactly equal to \\(0 ^\\circ R\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.5555555555555556 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:hasQuantityKind quantitykind:Temperature,
        quantitykind:ThermodynamicTemperature ;
    qudt:iec61360Code "0112/2///62720#UAA050" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Rankine_scale"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/degreeRankine> ;
    qudt:symbol "°R",
        "°R"^^xsd:string,
        "°Ra",
        "°Ra"^^xsd:string ;
    qudt:ucumCode "[degR]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A48" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:ERG-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Erg per Second"@en ;
    dcterms:description "\"Erg per Second\" is a C.G.S System unit for  'Power' expressed as \\(erg/s\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0000001 ;
    qudt:derivedUnitOfSystem sou:CGS,
        sou:CGS-GAUSS ;
    qudt:expression "\\(erg/s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:iec61360Code "0112/2///62720#UAA430" ;
    qudt:latexDefinition "\\(g\\cdot cm^{2}/s^{3}\\)"^^qudt:LatexString ;
    qudt:ucumCode "erg.s-1"^^qudt:UCUMcs,
        "erg/s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A63" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT-LB_F-PER-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Foot Pound Force per Hour"@en ;
    dcterms:description "\"Foot Pound Force per Hour\" is an Imperial unit for  'Power' expressed as \\(ft-lbf/hr\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00376616129 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(ft-lbf/hr\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:ucumCode "[ft_i].[lbf_av].h-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT-LB_F-PER-MIN a qudt:Unit,
        unit:Unit ;
    rdfs:label "Foot Pound Force per Minute"@en ;
    dcterms:description "\"Foot Pound Force per Minute\" is an Imperial unit for  'Power' expressed as \\(ft-lbf/min\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0225969678 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(ft-lbf/min\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:ucumCode "[ft_i].[lbf_av].min-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT-LB_F-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Foot Pound Force per Second"@en ;
    dcterms:description "\"Foot Pound Force per Second\" is an Imperial unit for  'Power' expressed as \\(ft-lbf/s\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.35581807 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(ft-lbf/s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:ucumCode "[ft_i].[lbf_av].s-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT-PER-MIN a qudt:Unit ;
    rdfs:label "Foot per Minute"@en ;
    dcterms:description "\"Foot per Minute\" is an Imperial unit for  'Linear Velocity' expressed as \\(ft/min\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00508 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(ft/min\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Velocity ;
    qudt:iec61360Code "0112/2///62720#UAA448" ;
    qudt:ucumCode "[ft_i].min-1"^^qudt:UCUMcs,
        "[ft_i]/min"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "FR" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GigaW a qudt:Unit,
        unit:Unit ;
    rdfs:label "Gigawatt"@en ;
    qudt:conversionMultiplier 1000000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:iec61360Code "0112/2///62720#UAA154" ;
    qudt:plainTextDescription "1 000 000 000-fold of the SI derived unit watt" ;
    qudt:ucumCode "GW"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A90" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HP a qudt:Unit,
        unit:Unit ;
    rdfs:label "Horsepower"@en ;
    dcterms:description "550 foot-pound force per second"^^rdf:HTML ;
    qudt:conversionMultiplier 745.6999 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Horsepower"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Horsepower?oldid=495510329"^^xsd:anyURI ;
    qudt:symbol "HP",
        "HP"^^xsd:string ;
    qudt:ucumCode "[HP]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HP-PER-M a qudt:Unit,
        unit:Unit ;
    rdfs:label "Horsepower Metric"@en ;
    dcterms:description "\"Horsepower Metric\" is a unit for  'Power' expressed as \\(hp/m\\)."^^qudt:LatexString ;
    qudt:expression "\\(hp/m\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:ucumCode "[HP].m-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HP-PER-V a qudt:Unit,
        unit:Unit ;
    rdfs:label "Horsepower Electric"@en ;
    dcterms:description "\"Horsepower Electric\" is a unit for  'Power' expressed as \\(hp/V\\)."^^qudt:LatexString ;
    qudt:expression "\\(hp/V\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:ucumCode "[HP].V-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HP_Boiler a qudt:Unit,
        unit:Unit ;
    rdfs:label "Boiler Horsepower"@en ;
    dcterms:description "\"Boiler Horsepower\" is a unit for  'Power' expressed as \\(hp_boiler\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 9809.5 ;
    qudt:expression "\\(boiler_hp\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HP_Brake a qudt:Unit,
        unit:Unit ;
    rdfs:label "Horsepower (brake)"@en ;
    qudt:conversionMultiplier 9809.5 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:iec61360Code "0112/2///62720#UAA536" ;
    qudt:plainTextDescription "unit of the power according to the Imperial system of units" ;
    qudt:uneceCommonCode "K42" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HP_Electric a qudt:Unit,
        unit:Unit ;
    rdfs:label "Horsepower (electric)"@en ;
    qudt:conversionMultiplier 746.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:iec61360Code "0112/2///62720#UAA537" ;
    qudt:plainTextDescription "unit of the power according to the Anglo-American system of units" ;
    qudt:uneceCommonCode "K43" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HP_Metric a qudt:Unit,
        unit:Unit ;
    rdfs:label "Horsepower (metric)"@en ;
    qudt:conversionMultiplier 735.4988 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:iec61360Code "0112/2///62720#UAA534" ;
    qudt:plainTextDescription "unit of the mechanical power according to the Anglo-American system of units" ;
    qudt:uneceCommonCode "HJ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:J-PER-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Joule Per Hour"@en ;
    qudt:conversionMultiplier 3600.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:plainTextDescription "SI derived unit joule divided by the 3600 times the SI base unit second" ;
    qudt:ucumCode "J.h-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:J-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Joule Per Second"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:plainTextDescription "SI derived unit joule divided by the SI base unit second" ;
    qudt:ucumCode "J.s-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloM-PER-DAY a qudt:Unit ;
    rdfs:label "Kilometres per day"@en ;
    dcterms:description "A change in location of a distance of one thousand metres in an elapsed time of one day (86400 seconds)."@en ;
    qudt:conversionMultiplier 0.0115740740740741 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Velocity ;
    qudt:ucumCode "km.d-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M-PER-MIN a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Metre per Minute"@en,
        "Meter per Minute"@en-us ;
    dcterms:description "Meter Per Minute (m/min) is a unit in the category of Velocity. It is also known as meter/minute, meters per minute, metre per minute, metres per minute. Meter Per Minute (m/min) has a dimension of LT-1 where L is length, and T is time. It can be converted to the corresponding standard SI unit m/s by multiplying its value by a factor of 0.016666666666"^^rdf:HTML ;
    qudt:conversionMultiplier 0.0166666667 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:expression "\\(m/min\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Velocity ;
    qudt:iec61360Code "0112/2///62720#UAA732" ;
    qudt:ucumCode "m.min-1"^^qudt:UCUMcs,
        "m/min"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "2X" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M-PER-YR a qudt:Unit ;
    rdfs:label "Metres per year"@en ;
    dcterms:description "A rate of change of SI standard unit length over a period of an average calendar year (365.25 days)."@en ;
    qudt:conversionMultiplier 0.0000000316880878140289 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Velocity ;
    qudt:ucumCode "m.a-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MI-PER-MIN a qudt:Unit ;
    rdfs:label "Mile per Minute"@en ;
    dcterms:description "Miles per minute is an imperial unit of speed expressing the number of statute miles covered in one minute."^^rdf:HTML ;
    qudt:conversionMultiplier 26.8224 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(mi/min\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Velocity ;
    qudt:iec61360Code "0112/2///62720#UAB229" ;
    qudt:ucumCode "[mi_i].min-1"^^qudt:UCUMcs,
        "[mi_i]/min"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MI_N-PER-MIN a qudt:Unit ;
    rdfs:label "Nautical Mile per Minute"@en ;
    dcterms:description """The SI derived unit for speed is the meter/second.
1 meter/second is equal to 0.0323974082073 nautical mile per minute. """^^rdf:HTML ;
    qudt:expression "\\(nmi/min\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Velocity ;
    qudt:ucumCode "[nmi_i].min-1"^^qudt:UCUMcs,
        "[nmi_i]/min"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MO a qudt:Unit,
        unit:Unit ;
    rdfs:label "Month"@en ;
    dcterms:description "A unit of time corresponding approximately to one cycle of the moon's phases, or about 30 days or 4 weeks. Also known as the 'Synodic Month' and calculated as 29.53059 days."^^rdf:HTML ;
    qudt:conversionMultiplier 2551442.976 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Month"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Time ;
    qudt:iec61360Code "0112/2///62720#UAA880" ;
    qudt:informativeReference "http://www.thefreedictionary.com/Synodal+month"^^xsd:anyURI,
        "https://en.wikipedia.org/wiki/Month"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/month> ;
    qudt:symbol "mo",
        "mo"^^xsd:string ;
    qudt:ucumCode "mo"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "MON" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:MO_Synodic .

unit:MegaJ-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Megajoule Per Second"@en ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:iec61360Code "0112/2///62720#UAB177" ;
    qudt:plainTextDescription "quotient of the 1,000,000-fold of the derived SI unit joule divided by the SI base unit second" ;
    qudt:ucumCode "MJ.s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D78" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaPA-L-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Megapascal Litre Per Second"@en,
        "Megapascal Liter Per Second"@en-us ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:iec61360Code "0112/2///62720#UAA218" ;
    qudt:plainTextDescription "product out of the 1,000,000-fold of the SI derived unit pascal and the unit litre divided by the SI base unit second" ;
    qudt:ucumCode "MPa.L.s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F97" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaPA-M3-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Megapascal Cubic Metre Per Second"@en,
        "Megapascal Cubic Meter Per Second"@en-us ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:iec61360Code "0112/2///62720#UAA219" ;
    qudt:plainTextDescription "product out of the 1,000,000-fold of the SI derived unit pascal and the power of the SI base unit metre with the exponent 3 divided by the SI base unit second" ;
    qudt:ucumCode "MPa.m3.s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F98" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroW a qudt:Unit,
        unit:Unit ;
    rdfs:label "Microwatt"@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:iec61360Code "0112/2///62720#UAA080" ;
    qudt:plainTextDescription "0.000001-fold of the SI derived unit watt" ;
    qudt:ucumCode "uW"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D80" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliBAR-L-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Millibar Litre Per Second"@en,
        "Millibar Liter Per Second"@en-us ;
    qudt:conversionMultiplier 0.1 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:iec61360Code "0112/2///62720#UAA813" ;
    qudt:plainTextDescription "product out of the 0.001-fold of the unit bar and the unit litre divided by the SI base unit second" ;
    qudt:ucumCode "mbar.L.s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F95" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliBAR-M3-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Millibar Cubic Metre Per Second"@en,
        "Millibar Cubic Meter Per Second"@en-us ;
    qudt:conversionMultiplier 100.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:iec61360Code "0112/2///62720#UAA327" ;
    qudt:plainTextDescription "product of the unit bar and the power of the SI base unit metre with the exponent 3 divided by the SI base unit second" ;
    qudt:ucumCode "mbar.m3.s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F92" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliM-PER-DAY a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "millimetres per day"@en,
        "millimeters per day"@en-us ;
    qudt:conversionMultiplier 0.0000000115741 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Velocity ;
    qudt:informativeReference "https://www.wmo.int/pages/prog/www/IMOP/CIMO-Guide.html"^^xsd:anyURI ;
    qudt:plainTextDescription "A measure of change in depth over time for a specific area, typically used to express precipitation intensity or evaporation (the amount of liquid water evaporated per unit of time from the area)" ;
    qudt:symbol "mm/d" ;
    qudt:ucumCode "mm.d-1"^^qudt:UCUMcs,
        "mm/d"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliM-PER-HR a qudt:Unit ;
    rdfs:label "Millimetre Per Hour"@en,
        "Millimeter Per Hour"@en-us ;
    qudt:conversionMultiplier 0.0000002777778 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Velocity ;
    qudt:iec61360Code "0112/2///62720#UAA866" ;
    qudt:plainTextDescription "0001-fold of the SI base unit metre divided by the unit hour" ;
    qudt:ucumCode "mm.h-1"^^qudt:UCUMcs,
        "mm/h"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H67" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliM-PER-MIN a qudt:Unit ;
    rdfs:label "Millimetre Per Minute"@en,
        "Millimeter Per Minute"@en-us ;
    qudt:conversionMultiplier 0.00001666667 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Velocity ;
    qudt:iec61360Code "0112/2///62720#UAB378" ;
    qudt:plainTextDescription "0.001-fold of the SI base unit metre divided by the unit minute" ;
    qudt:ucumCode "mm.min-1"^^qudt:UCUMcs,
        "mm/min"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H81" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliM-PER-SEC a qudt:Unit ;
    rdfs:label "Millimetre Per Second"@en,
        "Millimeter Per Second"@en-us ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Velocity ;
    qudt:iec61360Code "0112/2///62720#UAA867" ;
    qudt:plainTextDescription "0.001-fold of the SI base unit metre divided by the SI base unit second" ;
    qudt:ucumCode "mm.s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C16" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliM-PER-YR a qudt:Unit ;
    rdfs:label "Millimetre Per Year"@en,
        "Millimeter Per Year"@en-us ;
    qudt:conversionMultiplier 0.00000000000171 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Velocity ;
    qudt:iec61360Code "0112/2///62720#UAA868" ;
    qudt:plainTextDescription "0.001-fold of the SI base unit metre divided by the unit year" ;
    qudt:ucumCode "mm.a-1"^^qudt:UCUMcs,
        "mm/a"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H66" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NanoW a qudt:Unit,
        unit:Unit ;
    rdfs:label "Nanowatt"@en ;
    qudt:conversionMultiplier 0.000000001 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:iec61360Code "0112/2///62720#UAA910" ;
    qudt:plainTextDescription "0.000000001-fold of the SI derived unit watt" ;
    qudt:ucumCode "nW"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C49" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PA-L-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Pascal Litre Per Second"@en,
        "Pascal Liter Per Second"@en-us ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:iec61360Code "0112/2///62720#UAA261" ;
    qudt:plainTextDescription "product out of the SI derived unit pascal and the unit litre divided by the SI base unit second" ;
    qudt:ucumCode "Pa.L.s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F99" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PA-M3-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Pascal Cubic Metre Per Second"@en,
        "Pascal Cubic Meter Per Second"@en-us ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:iec61360Code "0112/2///62720#UAA264" ;
    qudt:plainTextDescription "product out of the SI derived unit pascal and the power of the SI base unit metre with the exponent 3 divided by the SI base unit second" ;
    qudt:ucumCode "Pa.m3.s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "G01" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PSI-IN3-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Psi Cubic Inch Per Second"@en ;
    qudt:conversionMultiplier 0.1129848 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:iec61360Code "0112/2///62720#UAA703" ;
    qudt:plainTextDescription "product of the composed unit for pressure (pound-force per square inch) and the composed unit for volume flow (cubic inch per second)" ;
    qudt:ucumCode "[psi].[cin_i].s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K87" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PSI-M3-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "PSI Cubic Metre Per Second"@en,
        "PSI Cubic Meter Per Second"@en-us ;
    qudt:conversionMultiplier 6894.757 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:iec61360Code "0112/2///62720#UAA705" ;
    qudt:plainTextDescription "product of the composed unit for pressure (pound-force per square inch) and the composed unit for volume flow (cubic metre per second)" ;
    qudt:ucumCode "[psi].m3.s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K89" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PSI-YD3-PER-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Psi Cubic Yard Per Second"@en ;
    qudt:conversionMultiplier 5271.42 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:iec61360Code "0112/2///62720#UAA706" ;
    qudt:plainTextDescription "product of the composed unit for pressure (pound-force per square inch) and the square inch) and the composed unit for volume flow (cubic yard per second)" ;
    qudt:ucumCode "[psi].[cyd_i].s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K90" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PicoW a qudt:Unit,
        unit:Unit ;
    rdfs:label "Picowatt"@en ;
    qudt:conversionMultiplier 0.000000000001 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:iec61360Code "0112/2///62720#UAA935" ;
    qudt:plainTextDescription "0.000000000001-fold of the SI derived unit watt" ;
    qudt:ucumCode "pW"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C75" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PlanckPower a qudt:Unit,
        unit:Unit ;
    rdfs:label "Planck Power"@en ;
    dcterms:description "The Planck energy divided by the Planck time is the Planck power \\(P_p \\), equal to about \\(3.62831 \\times 10^{52} W\\). This is an extremely large unit; even gamma-ray bursts, the most luminous phenomena known, have output on the order of \\(1 \\times 10^{45} W\\), less than one ten-millionth of the Planck power."^^qudt:LatexString ;
    qudt:conversionMultiplier 36283100000000000000000000000000000000000000000000000.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Planck_power"^^xsd:anyURI ;
    qudt:derivedUnitOfSystem sou:PLANCK ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Planck_power?oldid=493642483"^^xsd:anyURI ;
    qudt:latexDefinition "\\(P_p = {\\frac{ c^5}{G}}\\), where \\(c\\) is the speed of light in a vacuum, and \\(G\\) is the gravitational constant."^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:TeraW a qudt:Unit,
        unit:Unit ;
    rdfs:label "Terawatt"@en ;
    qudt:conversionMultiplier 1000000000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:iec61360Code "0112/2///62720#UAA289" ;
    qudt:plainTextDescription "1,000,000,000,000-fold of the SI derived unit watt" ;
    qudt:ucumCode "TW"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D31" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

sp:arg3 a rdf:Property ;
    rdfs:label "arg3" ;
    rdfs:comment "The third argument of a function call." ;
    rdfs:subPropertyOf sp:arg .

sp:eq a spin:Function ;
    rdfs:label "eq" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType xsd:boolean ;
            rdfs:comment "the first value to compare" ],
        [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType xsd:boolean ;
            rdfs:comment "the second value to compare" ] ;
    spin:returnType xsd:boolean ;
    spin:symbol "=" ;
    rdfs:comment "Returns true if both arguments are equal." ;
    rdfs:subClassOf spl:BooleanFunctions .

sp:not a spin:Function ;
    rdfs:label "not" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType xsd:boolean ;
            rdfs:comment "the operand to negate" ] ;
    spin:returnType xsd:boolean ;
    spin:symbol "!" ;
    rdfs:comment "Returns the boolean negation of the argument." ;
    rdfs:subClassOf spl:BooleanFunctions .

skos:Concept a owl:Class ;
    rdfs:label "Concept"@en ;
    rdfs:isDefinedBy <http://www.w3.org/2004/02/skos/core> ;
    skos:definition "An idea or notion; a unit of thought."@en .

brick:Air_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Flow Sensor" ;
    rdfs:subClassOf brick:Flow_Sensor ;
    skos:definition "Measures the rate of flow of air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Flow,
        tag:Point,
        tag:Sensor ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Air .

brick:Air_Quality_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Quality Sensor" ;
    rdfs:subClassOf brick:Sensor ;
    skos:definition "A sensor which provides a measure of air quality"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Quality ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Quality,
        tag:Sensor .

brick:Heating_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Heating Temperature Setpoint" ;
    rdfs:subClassOf brick:Temperature_Setpoint ;
    skos:definition "Sets temperature for heating"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Heat ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Heat,
        tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature .

brick:Position a brick:Quantity ;
    rdfs:label "Position" ;
    qudt:applicableUnit unit:PERCENT ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <https://brickschema.org/schema/Brick> ;
    skos:broader quantitykind:Dimensionless ;
    skos:definition "The fraction of the full range of motion",
        "The fraction of the full range of motion"@en .

brick:Pressure a brick:Quantity ;
    rdfs:label "Pressure" ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CM_H2O,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PlanckPressure,
        unit:TORR ;
    brick:hasQUDTReference quantitykind:Pressure .

brick:Relative_Humidity a brick:Quantity ;
    rdfs:label "Relative Humidity" ;
    qudt:applicableUnit unit:UNITLESS ;
    skos:broader brick:Humidity ;
    skos:definition "Relative Humidity} is the ratio of the partial pressure of water vapor in an air-water mixture to the saturated vapor pressure of water at a prescribed temperature. The relative humidity of air depends not only on temperature but also on the pressure of the system of interest. Relative Humidity is also referred to as \\text{Relative Partial Pressure. Relative partial pressure is often referred to as (RH) and expressed in percent."@en ;
    brick:hasQUDTReference quantitykind:RelativeHumidity .

brick:Static_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Static Pressure Setpoint" ;
    rdfs:subClassOf brick:Pressure_Setpoint ;
    skos:definition "Sets static pressure"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Pressure ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Static ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Pressure,
        tag:Setpoint,
        tag:Static ;
    brick:hasQuantity brick:Static_Pressure .

brick:Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Flow Sensor" ;
    rdfs:subClassOf brick:Flow_Sensor ;
    skos:definition "Measures the rate of flow of water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Flow ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Flow,
        tag:Point,
        tag:Sensor,
        tag:Water ;
    brick:hasQuantity brick:Flow ;
    brick:hasSubstance brick:Water .

tag:Area a brick:Tag ;
    rdfs:label "Area" .

tag:Baseboard a brick:Tag ;
    rdfs:label "Baseboard" .

tag:Battery a brick:Tag ;
    rdfs:label "Battery" .

tag:Diffuser a brick:Tag ;
    rdfs:label "Diffuser" .

tag:Enclosed a brick:Tag ;
    rdfs:label "Enclosed" .

tag:Face a brick:Tag ;
    rdfs:label "Face" .

tag:Fault a brick:Tag ;
    rdfs:label "Fault" .

tag:Fixed a brick:Tag ;
    rdfs:label "Fixed" .

tag:Floor a brick:Tag ;
    rdfs:label "Floor" .

tag:HVAC a brick:Tag ;
    rdfs:label "HVAC" .

tag:Interface a brick:Tag ;
    rdfs:label "Interface" .

tag:Loss a brick:Tag ;
    rdfs:label "Loss" .

tag:Luminance a brick:Tag ;
    rdfs:label "Luminance" .

tag:Manual a brick:Tag ;
    rdfs:label "Manual" .

tag:Natural a brick:Tag ;
    rdfs:label "Natural" .

tag:Occupancy a brick:Tag ;
    rdfs:label "Occupancy" .

tag:PV a brick:Tag ;
    rdfs:label "PV" .

tag:Radiant a brick:Tag ;
    rdfs:label "Radiant" .

tag:Run a brick:Tag ;
    rdfs:label "Run" .

tag:Smoke a brick:Tag ;
    rdfs:label "Smoke" .

tag:Solid a brick:Tag ;
    rdfs:label "Solid" .

tag:Switch a brick:Tag ;
    rdfs:label "Switch" .

tag:Underfloor a brick:Tag ;
    rdfs:label "Underfloor" .

tag:Wash a brick:Tag ;
    rdfs:label "Wash" .

s223:Connection a s223:Class,
        sh:NodeShape ;
    rdfs:label "Connection" ;
    rdfs:comment """A Connection usually corresponds to a physical pipe or duct or even a circuit, used to convey some Substance (Air, Water, Electricity).
All Connections have 2 or more ConnectionPoints that are followed by either a Device, DomainSpace or a PhysicalSpace.
A Connection may contain branches or intersections. These are modeled using Segment and Junction.""" ;
    rdfs:subClassOf s223:Concept ;
    sh:property [ sh:class s223:ConnectionPoint ;
            sh:path s223:connectsAt ],
        [ sh:class s223:Connectable ;
            sh:name "ConnectionToUpstreamConnectableShape" ;
            sh:path s223:connectsFrom ],
        [ sh:class s223:Connectable ;
            sh:name "ConnectionToDownstreamConnectableShape" ;
            sh:path s223:connectsTo ],
        [ sh:class s223:Role ;
            sh:path s223:hasRole ],
        [ sh:maxCount 1 ;
            sh:name "Connection substance" ;
            sh:or ( [ sh:hasValue enum:Substance-Air ] [ sh:hasValue enum:Water-ChilledWater ] [ sh:hasValue enum:Water-HotWater ] ) ;
            sh:path s223:hasSubstance ],
        [ sh:class s223:Device ;
            sh:path s223:returnsTo ],
        [ sh:class s223:Device ;
            sh:path s223:suppliesTo ],
        s223:hasContextualRoleShape,
        s223:hasPropertyShape ;
    sh:rule [ a sh:SPARQLRule ;
            sh:construct """
CONSTRUCT {$this s223:connectsFrom ?device .}
WHERE {
$this s223:connectsAt ?cp .
?cp s223:hasDirection s223:Outlet .
?cp s223:isConnectionPointOf ?device .
}
""" ;
            sh:name "InferredConnectionToUpstreamDeviceProperty" ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/inference/model-rules> ],
        [ a sh:SPARQLRule ;
            sh:construct """
CONSTRUCT {$this s223:connectsTo ?device .}
WHERE {
$this s223:connectsAt ?cp .
?cp s223:hasDirection s223:Inlet .
?cp s223:isConnectionPointOf ?device .
}
""" ;
            sh:name "InferredConnectionToDownstreamDeviceProperty" ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/inference/model-rules> ],
        [ a sh:SPARQLRule ;
            sh:construct """
CONSTRUCT {$this s223:returnsTo ?device .}
WHERE {
$this s223:hasRole role:Return .
$this s223:connectsTo ?device .
}
""" ;
            sh:name "InferredReturnsToProperty" ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/inference/model-rules> ],
        [ a sh:SPARQLRule ;
            sh:construct """
CONSTRUCT {$this s223:suppliesTo ?device .}
WHERE {
$this s223:hasRole role:Supply .
$this s223:connectsTo ?device .
}
""" ;
            sh:name "InferredSuppliesToProperty" ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/inference/model-rules> ],
        [ a sh:TripleRule ;
            rdfs:comment "InferredConnectionToConnectionPointBaseProperty" ;
            sh:object [ sh:path s223:connectsAt ] ;
            sh:predicate s223:cnx ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            rdfs:comment "InferredConnectionToConnectionPointBasePropertyFromInverse" ;
            sh:object [ sh:path [ sh:inversePath s223:connectsThrough ] ] ;
            sh:predicate s223:cnx ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            rdfs:comment "InferredConnectionToConnectionPointProperty" ;
            sh:object [ sh:path s223:cnx ] ;
            sh:predicate s223:connectsAt ;
            sh:subject sh:this ] .

s223:System a s223:Class,
        sh:NodeShape ;
    rdfs:label "System" ;
    rdfs:comment """A System is a logical grouping of Devices for some functional or system reason, such as a "chilled water system, or HVAC system"
A System is distinguished from a Device by the fact that you typically have to install and configure a System, while you might just install and use a Device.""" ;
    rdfs:subClassOf s223:Concept,
        brick:System ;
    sh:property [ a sh:PropertyShape ;
            sh:minCount 0 ;
            sh:name "system contains shape" ;
            sh:or ( [ sh:class s223:Device ] [ sh:class s223:System ] [ sh:class s223:Junction ] ) ;
            sh:path s223:contains ],
        [ sh:class s223:Role ;
            sh:path s223:hasRole ],
        [ sh:class s223:SystemConnectionPoint ;
            sh:name "SystemtoSystemConnectionPointShape" ;
            sh:path s223:hasSystemConnectionPoint ],
        [ sh:class s223:Zone ;
            sh:path s223:serves ],
        s223:hasContextualRoleShape,
        s223:hasPropertyShape ;
    sh:rule [ a sh:SPARQLRule ;
            sh:construct """
CONSTRUCT {$this s223:contains ?sub .}
WHERE {
  {
$this s223:hasSubSystem ?sub .
}
UNION
{
  $this s223:hasDevice ?sub .
}
UNION
{
  $this s223:hasJunction ?sub .
}
}
""" ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/inference/model-rules> ],
        [ a sh:SPARQLRule ;
            sh:construct """
CONSTRUCT {$this s223:hasDevice ?sub .}
WHERE {
$this s223:contains ?sub .
?device rdfs:subClassOf* s223:Device .
?sub a ?device .
}
""" ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/inference/model-rules> ],
        [ a sh:SPARQLRule ;
            sh:construct """
CONSTRUCT {$this s223:hasJunction ?sub .}
WHERE {
$this s223:contains ?sub .
?sub a s223:Junction .
}
""" ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/inference/model-rules> ],
        [ a sh:SPARQLRule ;
            sh:construct """
CONSTRUCT {$this s223:hasSubSystem ?sub .}
WHERE {
$this s223:contains ?sub .
?system rdfs:subClassOf* s223:System .
?sub a ?system .
}
""" ;
            sh:prefixes <http://data.ashrae.org/standard223/1.0/inference/model-rules> ] .

qudt:LatexString a rdfs:Datatype,
        sh:NodeShape ;
    rdfs:label "Latex String" ;
    rdfs:comment "A type of string in which some characters may be wrapped with '\\(' and '\\) characters for LaTeX rendering." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf xsd:string .

qudt:NumericUnionList a rdf:List ;
    rdfs:label "Numeric Union List" ;
    rdf:first [ sh:datatype xsd:string ] ;
    rdf:rest ( [ sh:datatype xsd:nonNegativeInteger ] [ sh:datatype xsd:positiveInteger ] [ sh:datatype xsd:integer ] [ sh:datatype xsd:int ] [ sh:datatype xsd:float ] [ sh:datatype xsd:double ] [ sh:datatype xsd:decimal ] ) ;
    rdfs:comment "An rdf:List that can be used in property constraints as value for sh:or to indicate that all values of a property must be either xsd:integer, xsd:float, xsd:double or xsd:decimal." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/shacl/overlay/qudt> .

qkdv:A0E-1L1I0M1H0T-2D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E-1L1I0M1H0T-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent -1 ;
    qudt:dimensionExponentForLength 1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:MagneticFluxPerUnitLength ;
    qudt:latexDefinition "\\(L M T^-2 I^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E-2L2I0M1H0T-2D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E-2L2I0M1H0T-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent -2 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:Inductance ;
    qudt:latexDefinition "\\(L^2 M T^-2 I^-2\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-1I0M1H-1T-2D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-1I0M1H-1T-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature -1 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:VolumetricHeatCapacity ;
    qudt:latexSymbol "\\(M / (L \\cdot T^2 H)\\)"^^qudt:LatexString,
        "\\(M / (L \\cdot T^2 \\Theta)\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L1I0M1H0T-1D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L1I0M1H0T-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:LinearMomentum ;
    qudt:latexDefinition "\\(L M T^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E1L-3I0M0H0T1D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E1L-3I0M0H0T1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 1 ;
    qudt:dimensionExponentForLength -3 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:ElectricChargeVolumeDensity ;
    qudt:latexDefinition "\\(L^-3 T I\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E2L-2I0M-1H0T4D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E2L-2I0M-1H0T4D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 2 ;
    qudt:dimensionExponentForLength -2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 4 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:Capacitance ;
    qudt:latexDefinition "\\(L^-2 M^-1 T^4 I^2\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E2L-3I0M-1H0T4D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E2L-3I0M-1H0T4D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 2 ;
    qudt:dimensionExponentForLength -3 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 4 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:Permittivity ;
    qudt:latexDefinition "\\(L^-3 M^-1 T^4 I^2\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

quantitykind:Activity a qudt:QuantityKind ;
    rdfs:label "Activity"@en ;
    dcterms:description "\"Activity\" is the number of decays per unit time of a radioactive sample, the term used to characterise the number of nuclei which disintegrate in a radioactive substance per unit time. Activity is usually measured in Becquerels (\\(Bq\\)), where 1 \\(Bq\\) is 1 disintegration per second, in honor of the scientist Henri Becquerel."^^qudt:LatexString ;
    qudt:applicableUnit unit:BQ,
        unit:Ci,
        unit:GigaBQ,
        unit:KiloBQ,
        unit:KiloCi,
        unit:MegaBQ,
        unit:MicroBQ,
        unit:MicroCi,
        unit:MilliCi ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Radioactive_decay"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mass_number"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Radioactive_decay"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Radioactive_decay#Radioactive_decay_rates"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31895"^^xsd:anyURI ;
    qudt:latexDefinition """\\(A = Z + N\\), where \\(Z\\) is the atomic number and \\(N\\) is the neutron number.

Variation \\(dN\\) of spontaneous number of nuclei \\(N\\) in a particular energy state, in a sample of radionuclide, due to spontaneous nuclear transitions from this state during an infinitesimal time interval, divided by its duration \\(dt\\), thus \\(A = -\\frac{dN}{dt}\\)."""^^qudt:LatexString ;
    qudt:symbol "A" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:StochasticProcess .

quantitykind:Capacitance a qudt:QuantityKind ;
    rdfs:label "Capacitance"@en ;
    qudt:applicableUnit unit:AttoFARAD,
        unit:FARAD,
        unit:FARAD_Ab,
        unit:FARAD_Stat,
        unit:MicroFARAD,
        unit:MilliFARAD,
        unit:NanoFARAD,
        unit:PicoFARAD ;
    qudt:baseUnitDimensions "\\(A^2 \\cdot s^4/kg \\cdot m^2\\)"^^qudt:LatexString,
        "\\(I^2 \\cdot T^4/L^2 \\cdot M\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Capacitance"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E2L-2I0M-1H0T4D0 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexDefinition "\\(C = Q/U\\), where \\(Q\\) is electric charge and \\(V\\) is voltage."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Capacitance\" is the ability of a body to hold an electrical charge; it is quantified as the amount of electric charge stored for a given electric potential. Capacitance is a scalar-valued quantity." ;
    qudt:symbol "C" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ComplexPower a qudt:QuantityKind ;
    rdfs:label "Complex Power"@en ;
    dcterms:description "\"Complex Power\", under sinusoidal conditions, is the product of the phasor \\(U\\) representing the voltage between the terminals of a linear two-terminal element or two-terminal circuit and the complex conjugate of the phasor \\(I\\) representing the electric current in the element or circuit."^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloV-A,
        unit:MegaV-A,
        unit:V-A ;
    qudt:expression "\\(complex-power\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-11-39"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\underline{S} = \\underline{U}\\underline{I^*}\\), where \\(\\underline{U}\\) is voltage phasor and \\(\\underline{I^*}\\) is the complex conjugate of the current phasor."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\underline{S}\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricCurrentPhasor,
        quantitykind:VoltagePhasor ;
    skos:broader quantitykind:ElectricPower .

quantitykind:EnergyDensity a qudt:QuantityKind ;
    rdfs:label "Energy Density"@en ;
    qudt:applicableUnit unit:BTU_IT-PER-FT3,
        unit:BTU_TH-PER-FT3,
        unit:ERG-PER-CentiM3,
        unit:J-PER-M3,
        unit:MegaJ-PER-M3,
        unit:W-HR-PER-M3 ;
    qudt:baseISOUnitDimensions "\\(m^{-1} \\cdot kg \\cdot s^{-2}\\)" ;
    qudt:baseImperialUnitDimensions "\\(ft^{-1} \\cdot lb \\cdot s^{-2}\\)"^^qudt:LatexString ;
    qudt:baseSIUnitDimensions "\\(m^{-1} \\cdot kg \\cdot s^{-2}\\)"^^qudt:LatexString ;
    qudt:baseUSCustomaryUnitDimensions "\\(L^{-1} \\cdot M \\cdot T^{-2}\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Energy_density"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Energy_density"^^xsd:anyURI ;
    qudt:plainTextDescription "Energy density is defined as energy per unit volume. The SI unit for energy density is the joule per cubic meter." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Inductance a qudt:QuantityKind ;
    rdfs:label "Inductance"@en ;
    qudt:applicableUnit unit:H,
        unit:H_Ab,
        unit:H_Stat,
        unit:MicroH,
        unit:MilliH,
        unit:NanoH,
        unit:PicoH ;
    qudt:baseUnitDimensions "\\(L^2 \\cdot M/I^2 \\cdot T^2\\)"^^qudt:LatexString,
        "\\(kg \\cdot m^2/A^2 \\cdot s^2\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Inductance"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E-2L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-12-19"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(L =\\frac{\\Psi}{I}\\), where \\(I\\) is an electric current in a thin conducting loop, and \\(\\Psi\\) is the linked flux caused by that electric current."^^qudt:LatexString ;
    qudt:plainTextDescription "\"Inductance\" is an electromagentic quantity that characterizes a circuit's resistance to any change of electric current; a change in the electric current through induces an opposing electromotive force (EMF). Quantitatively, inductance is proportional to the magnetic flux per unit of electric current." ;
    qudt:symbol "L" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:MutualInductance .

quantitykind:InverseVolume a qudt:QuantityKind ;
    rdfs:label "Inverse Volume"@en ;
    qudt:applicableUnit unit:PER-CentiM3,
        unit:PER-FT3,
        unit:PER-IN3,
        unit:PER-L,
        unit:PER-M3,
        unit:PER-MilliM3,
        unit:PER-YD3 ;
    qudt:baseUnitDimensions "\\(/m^3\\)"^^qudt:LatexString ;
    qudt:hasDimension qudt:DIM_SI-m-3 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MagneticFlux a qudt:QuantityKind ;
    rdfs:label "Magnetic Flux"@en ;
    qudt:applicableUnit unit:KiloLB_F-FT-PER-A,
        unit:MX,
        unit:MilliWB,
        unit:N-M-PER-A,
        unit:UnitPole,
        unit:V_Ab-SEC,
        unit:WB ;
    qudt:baseUnitDimensions "\\(L^2 \\cdot M/I \\cdot T^2\\)"^^qudt:LatexString,
        "\\(kg \\cdot m^2/A \\cdot s^2\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Magnetic_flux"^^xsd:anyURI ;
    qudt:expression "\\(magnetic-flux\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI,
        "http://www.oxfordreference.com/view/10.1093/acref/9780199233991.001.0001/acref-9780199233991-e-1800"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\Phi = \\int_S B \\cdot e_n d A\\), over a surface \\(S\\), where \\(B\\) is magnetic flux density and \\(e_n dA\\) is the vector surface element."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\Phi\\)"^^qudt:LatexString,
        "\\(\\phi\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Magnetic Flux\" is the product of the average magnetic field times the perpendicular area that it penetrates." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:VolumePerUnitTime a qudt:QuantityKind ;
    rdfs:label "Volume per Unit Time"@en ;
    qudt:applicableUnit unit:FT3-PER-MIN,
        unit:FT3-PER-SEC,
        unit:GAL_US-PER-DAY,
        unit:GAL_US-PER-MIN,
        unit:IN3-PER-MIN,
        unit:M3-PER-HR,
        unit:M3-PER-SEC,
        unit:YD3-PER-MIN ;
    qudt:baseUnitDimensions "\\(L^3/T\\)"^^qudt:LatexString,
        "\\(m^3/s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:VolumeFlowRate .

unit:BTU_IT-PER-SEC a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "BTU per Second"@en ;
    dcterms:description "\\({\\bf BTU \\, per \\, Second}\\) is an Imperial unit for 'Heat Flow Rate' expressed as \\(Btu/s\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1055.05585262 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(Btu/s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:HeatFlowRate,
        quantitykind:Power ;
    qudt:informativeReference "http://www.simetric.co.uk/sibtu.htm"^^xsd:anyURI ;
    qudt:ucumCode "[Btu_IT].s-1"^^qudt:UCUMcs,
        "[Btu_IT]/s"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:IN-PER-SEC a qudt:Unit ;
    rdfs:label "Inch per Second"@en ;
    dcterms:description "The inch per second is a unit of speed or velocity. It expresses the distance in inches (in) traveled or displaced, divided by time in seconds (s, or sec). The equivalent SI unit is the metre per second. Abbreviations include in/s, in/sec, ips, and less frequently in s."^^rdf:HTML ;
    qudt:conversionMultiplier 0.0254 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(in-per-sec\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:PropellantBurnRate,
        quantitykind:Velocity ;
    qudt:iec61360Code "0112/2///62720#UAA542" ;
    qudt:ucumCode "[in_i].s-1"^^qudt:UCUMcs,
        "[in_i]/s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "IU" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloCAL-PER-MIN a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilocalorie Per Minute"@en ;
    dcterms:description "\\(\\textbf{Kilocalorie per Minute} is a unit for \\textit{Heat Flow Rate} and \\textit{Power} expressed as \\(kcal/min\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 69.7333333 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:expression "\\(kcal/min\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:HeatFlowRate,
        quantitykind:Power ;
    qudt:ucumCode "kcal.min-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloCAL-PER-SEC a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilocalorie Per Second"@en ;
    dcterms:description "\\(\\textbf{Kilocalorie per Second} is a unit for \\textit{Heat Flow Rate} and \\textit{Power} expressed as \\(kcal/s\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 4184.0 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:expression "\\(kcal/s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:HeatFlowRate,
        quantitykind:Power ;
    qudt:ucumCode "kcal.s-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MI_N-PER-HR a qudt:Unit ;
    rdfs:label "Nautical Mile per Hour"@en ;
    dcterms:description "The knot is a unit of speed equal to one nautical mile (1.852 km) per hour, approximately 1.151 mph. The abbreviation kn is preferred by the International Hydrographic Organization (IHO), which includes every major seafaring nation; but the abbreviations kt (singular) and kts (plural) are also widely used conflicting with the SI symbol for kilotonne which is also \"kt\". The knot is a non-SI unit accepted for use with the International System of Units (SI). Worldwide, the knot is used in meteorology, and in maritime and air navigation-for example, a vessel travelling at 1 knot along a meridian travels one minute of geographic latitude in one hour. "^^rdf:HTML ;
    qudt:exactMatch unit:KN ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Velocity ;
    qudt:ucumCode "[nmi_i].h-1"^^qudt:UCUMcs,
        "[nmi_i]/h"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:KN .

unit:NUM-PER-L a qudt:Unit ;
    rdfs:label "Number per litre"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:NumberDensity ;
    qudt:ucumCode "{#}.L-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NUM-PER-M3 a qudt:Unit ;
    rdfs:label "Number per cubic metre"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:NumberDensity ;
    qudt:ucumCode "{#}.m-3"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NUM-PER-MicroL a qudt:Unit ;
    rdfs:label "Number per microlitre"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 1000000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:NumberDensity ;
    qudt:ucumCode "{#}.uL-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NUM-PER-NanoL a qudt:Unit ;
    rdfs:label "Number per nanolitre"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 2147483647.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:NumberDensity ;
    qudt:ucumCode "{#}.nL-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PlanckTemperature a qudt:Unit,
        unit:Unit ;
    rdfs:label "PlanckTemperature"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:hasQuantityKind quantitykind:Temperature,
        quantitykind:ThermodynamicTemperature ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Planck_units"^^xsd:anyURI ;
    qudt:unitOfSystem sou:PLANCK ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

sp:notExists a spin:Function ;
    rdfs:label "NOT EXISTS" ;
    spin:returnType xsd:boolean ;
    spin:symbol "NOT EXISTS" ;
    rdfs:comment "The filter function NOT EXISTS. The graph pattern is stored in sp:elements." ;
    rdfs:subClassOf spl:BooleanFunctions .

spl:DateFunctions a spin:Function ;
    rdfs:label "Date functions" ;
    spin:abstract true ;
    rdfs:comment "A collection of functions that operate on date/time literals." ;
    rdfs:subClassOf spin:Functions .

spl:PropertyConstraintTemplates a spl:ConstraintTemplate ;
    rdfs:label "Property constraint templates" ;
    spin:abstract true ;
    spin:constraint [ a spl:Argument ;
            spl:predicate arg:property ;
            spl:valueType rdf:Property ;
            rdfs:comment "The property being constrained." ] ;
    rdfs:comment "Abstract superclass of constraint templates that constrain exactly one property." ;
    rdfs:subClassOf spl:ConstraintTemplates .

brick:AHU a owl:Class,
        sh:NodeShape ;
    rdfs:label "AHU" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "Assembly consisting of sections containing a fan or fans and other necessary equipment to perform one or more of the following functions: circulating, filtration, heating, cooling, heat recovery, humidifying, dehumidifying, and mixing of air. Is usually connected to an air-distribution system."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:AHU ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:AHU,
        tag:Equipment .

brick:Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Temperature Sensor" ;
    rdfs:subClassOf brick:Temperature_Sensor ;
    skos:definition "Measures the temperature of air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Sensor,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Air .

brick:Discharge_Water a owl:Class,
        sh:NodeShape,
        brick:Discharge_Water ;
    rdfs:label "Discharge Water" ;
    rdfs:subClassOf brick:Water ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Discharge,
        tag:Fluid,
        tag:Liquid,
        tag:Water .

brick:Electrical_Equipment a owl:Class,
        sh:NodeShape ;
    rdfs:label "Electrical Equipment" ;
    rdfs:subClassOf brick:Equipment ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Electrical ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Electrical,
        tag:Equipment .

brick:Entity a owl:Class .

brick:Max_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Max Limit" ;
    rdfs:subClassOf brick:Limit ;
    skos:definition "A parameter that places an upper bound on the range of permitted values of a Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Max ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Limit,
        tag:Max,
        tag:Parameter,
        tag:Point .

brick:Supply_Water a owl:Class,
        sh:NodeShape,
        brick:Supply_Water ;
    rdfs:label "Supply Water" ;
    rdfs:subClassOf brick:Water ;
    owl:equivalentClass brick:Discharge_Water ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fluid,
        tag:Liquid,
        tag:Supply,
        tag:Water .

s223:contains a rdf:Property ;
    rdfs:label "contains" ;
    s223:inverseOf s223:isContainedIn .

s223:hasProperty a rdf:Property ;
    rdfs:label "has Property" .

qkdv:A0E0L-2I0M0H0T-1D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-2I0M0H0T-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:latexDefinition "\\(L^-2 T-1 Q\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-3I0M0H0T-1D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-3I0M0H0T-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -3 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime "-1"^^dtype:numericUnion ;
    qudt:dimensionlessExponent 0 ;
    qudt:latexDefinition "\\(L^-3T^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L1I0M-1H0T2D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L1I0M-1H0T2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:InversePressure ;
    qudt:latexDefinition "\\(L T^2 M^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E1L0I0M-1H0T1D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E1L0I0M-1H0T1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 1 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:ElectricChargePerMass ;
    qudt:latexDefinition "\\(M^-1 T I\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A1E0L-2I0M0H0T-1D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A1E0L-2I0M0H0T-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 1 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

quantitykind:AmountOfSubstancePerUnitMass a qudt:QuantityKind ;
    rdfs:label "Amount of Substance per Unit Mass"@en ;
    qudt:applicableUnit unit:CentiMOL-PER-KiloGM,
        unit:FemtoMOL-PER-KiloGM,
        unit:KiloMOL-PER-KiloGM,
        unit:MOL-PER-KiloGM,
        unit:MicroMOL-PER-KiloGM,
        unit:MilliMOL-PER-GM,
        unit:MilliMOL-PER-KiloGM,
        unit:NanoMOL-PER-KiloGM,
        unit:PicoMOL-PER-KiloGM ;
    qudt:baseUnitDimensions "\\(N/M\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A1E0L0I0M-1H0T0D0 ;
    vaem:todo "fix the numerator and denominator dimensions" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Concentration .

quantitykind:AngularMomentum a qudt:QuantityKind ;
    rdfs:label "Angular Momentum"@en ;
    qudt:applicableUnit unit:ERG-SEC,
        unit:EV-SEC,
        unit:FT-LB_F-SEC,
        unit:J-SEC,
        unit:KiloGM-M2-PER-SEC,
        unit:N-M-SEC ;
    qudt:baseUnitDimensions "\\(L^2 \\cdot M/T\\)"^^qudt:LatexString,
        "\\(kg \\cdot m^2/s\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Angular_momentum"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Angular_momentum"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(L = I\\omega\\), where \\(I\\) is the moment of inertia, and \\(\\omega\\) is the angular velocity."^^qudt:LatexString ;
    qudt:plainTextDescription "Angular Momentum of an object rotating about some reference point is the measure of the extent to which the object will continue to rotate about that point unless acted upon by an external torque. In particular, if a point mass rotates about an axis, then the angular momentum with respect to a point on the axis is related to the mass of the object, the velocity and the distance of the mass to the axis. While the motion associated with linear momentum has no absolute frame of reference, the rotation associated with angular momentum is sometimes spoken of as being measured relative to the fixed stars.  \\textit{Angular Momentum}, \\textit{Moment of Momentum}, or \\textit{Rotational Momentum\", is a vector quantity that represents the product of a body's rotational inertia and rotational velocity about a particular axis." ;
    qudt:symbol "L" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:AngularImpulse .

quantitykind:CoefficientOfHeatTransfer a qudt:QuantityKind ;
    rdfs:label "Coefficient of heat transfer"@en ;
    qudt:applicableSIUnit unit:W-PER-M2-K ;
    qudt:applicableUnit unit:BTU_IT-PER-FT2-HR-DEG_F,
        unit:BTU_IT-PER-FT2-SEC-DEG_F,
        unit:BTU_IT-PER-HR-FT2-DEG_R,
        unit:BTU_IT-PER-SEC-FT2-DEG_R,
        unit:CAL_IT-PER-SEC-CentiM2-K,
        unit:CAL_TH-PER-SEC-CentiM2-K,
        unit:W-PER-M2-K ;
    qudt:baseUnitDimensions "\\(M/\\Theta \\cdot T^3\\)"^^qudt:LatexString,
        "\\(kg/K \\cdot s^3\\)"^^qudt:LatexString ;
    qudt:expression "\\(heat-xfer-coeff\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H-1T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Heat_transfer_coefficient"^^xsd:anyURI ;
    qudt:latexDefinition """"Coefficient of Heat Transfer", in thermodynamics and in mechanical and chemical engineering, is used in calculating the heat transfer, typically by convection or phase transition between a fluid and a solid. The heat transfer coefficient is the proportionality coefficient between the heat flux, that is heat flow per unit area, \\(q/A\\), and the thermodynamic driving force for the flow of heat (that is, the temperature difference, \\( \\bigtriangleup T \\)).  Areic heat flow rate divided by thermodynamic temperature difference. In building technology, the \\(\\textit{Coefficient of Heat Transfer}\\), is often called \\(\\textit{thermal transmittance}\\), with the symbol \\(U\\). \\(\\textit{Coefficient of Heat Transfer}\\), has SI units in watts per squared meter kelvin: \\(W/(m^2 \\cdot K)\\) .

\\(K = \\frac{\\varphi}{T}\\), where \\(\\varphi\\) is areic heat flow rate and \\(T\\) is thermodynamic temperature difference."""^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\kappa\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Coefficient of Heat Transfer\", in thermodynamics and in mechanical and chemical engineering, is used in calculating the heat transfer, typically by convection or phase transition between a fluid and a solid. The heat transfer coefficient is the proportionality coefficient between the heat flux, that is heat flow per unit area, q/A, and the thermodynamic driving force for the flow of heat (that is, the temperature difference, (Delta T).  Areic heat flow rate divided by thermodynamic temperature difference. In building technology, the \"Coefficient of Heat Transfer\", is often called \"thermal transmittance}\" with the symbol \"U\". It has SI units in watts per squared meter kelvin." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ElectricChargePerMass a qudt:QuantityKind ;
    rdfs:label "Electric Charge Per Mass"@en ;
    dcterms:description "\"Electric Charge Per Mass\" is the charge associated with a specific mass of a substance. In the SI and ISO systems this is \\(1 kg\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:C-PER-KiloGM,
        unit:HZ-PER-T,
        unit:KiloR,
        unit:MegaHZ-PER-T,
        unit:MilliC-PER-KiloGM,
        unit:MilliR,
        unit:PER-T-SEC,
        unit:R ;
    qudt:baseUnitDimensions "\\(A \\cdot s/kg\\)"^^qudt:LatexString,
        "\\(I \\cdot T/M\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M-1H0T1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:LiquidVolume a qudt:QuantityKind ;
    rdfs:label "Liquid Volume"@en ;
    qudt:applicableUnit unit:CUP,
        unit:CUP_US,
        unit:CentiL,
        unit:GAL_IMP,
        unit:GAL_UK,
        unit:GAL_US,
        unit:L,
        unit:OZ_VOL_US,
        unit:PINT_US,
        unit:QT_US ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:informativeReference "http://www.ehow.com/facts_6371078_liquid-volume_.html"^^xsd:anyURI ;
    qudt:plainTextDescription "Liquid volume is the volume of a given amount of liquid, that is, the amount of space a liquid takes up. There are a number of different units used to measure liquid volume, but most of them fall under either the metric system of measurement or the Imperial system of measurement." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Volume .

quantitykind:MassPerAreaTime a qudt:QuantityKind ;
    rdfs:label "Mass per Area Time"@en ;
    dcterms:description "In Physics and Engineering, mass flux is the rate of mass flow per unit area. The common symbols are \\(j\\), \\(J\\), \\(\\phi\\), or \\(\\Phi\\)  (Greek lower or capital Phi), sometimes with subscript \\(m\\) to indicate mass is the flowing quantity.  Its SI units are \\( kg s^{-1} m^{-2}\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:DYN-SEC-PER-CentiM3,
        unit:GM-PER-M2-DAY,
        unit:GM_Carbon-PER-M2-DAY,
        unit:GM_Nitrogen-PER-M2-DAY,
        unit:KiloGM-PER-M2-SEC,
        unit:KiloGM-PER-SEC-M2,
        unit:MilliGM-PER-M2-DAY,
        unit:MilliGM-PER-M2-HR,
        unit:MilliGM-PER-M2-SEC ;
    qudt:baseUnitDimensions "\\(M/L^2 \\cdot T\\)"^^qudt:LatexString,
        "\\(kg/m^2 \\cdot s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mass_flux"^^xsd:anyURI ;
    qudt:latexSymbol "\\(j_m = \\lim\\limits_{A \\rightarrow 0}\\frac{I_m}{A}\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Permittivity a qudt:QuantityKind ;
    rdfs:label "Permittivity"@en ;
    qudt:applicableUnit unit:FARAD-PER-KiloM,
        unit:FARAD-PER-M,
        unit:FARAD_Ab-PER-CentiM,
        unit:MicroFARAD-PER-KiloM,
        unit:MicroFARAD-PER-M,
        unit:NanoFARAD-PER-M,
        unit:PERMITTIVITY_REL,
        unit:PicoFARAD-PER-M ;
    qudt:baseUnitDimensions "\\(A^2 \\cdot s^4/kg \\cdot m^3\\)"^^qudt:LatexString,
        "\\(I^2 \\cdot T^4/L^3 \\cdot M\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Permittivity"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T4D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Permittivity?oldid=494094133"^^xsd:anyURI,
        "http://maxwells-equations.com/materials/permittivity.php"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\epsilon = \\frac{D}{E}\\), where \\(D\\) is electric flux density and \\(E\\) is electric field strength."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\epsilon\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Permittivity\" is a physical quantity that describes how an electric field affects, and is affected by a dielectric medium, and is determined by the ability of a material to polarize in response to the field, and thereby reduce the total electric field inside the material.  Permittivity is often a scalar valued quantity, however in the general case it is tensor-valued." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:VolumeFraction a qudt:QuantityKind ;
    rdfs:label "Volume Fraction"@en ;
    qudt:applicableUnit unit:CentiM3-PER-M3,
        unit:DeciM3-PER-M3,
        unit:L-PER-L,
        unit:M3-PER-M3,
        unit:MicroL-PER-L,
        unit:MicroM3-PER-M3,
        unit:MicroM3-PER-MilliL,
        unit:MilliL-PER-L,
        unit:MilliL-PER-M3,
        unit:MilliM3-PER-M3 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Volume_fraction"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\varphi_B = \\frac{x_B V_{m,B}^*}{\\sum x_i V_{m,i}^*}\\), where \\(V_{m,i}^*\\) is the molar volume of the pure substances \\(i\\) at the same temperature and pressure, \\(x_i\\) denotes the amount-of-substance fraction of substance \\(i\\), and \\(\\sum\\) denotes summation over all substances \\(i\\)."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\varphi_B\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Volume Fraction\" is the volume of a constituent divided by the volume of all constituents of the mixture prior to mixing. Volume fraction is also called volume concentration in ideal solutions where the volumes of the constituents are additive (the volume of the solution is equal to the sum of the volumes of its ingredients)." ;
    qudt:qkdvDenominator qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:qkdvNumerator qkdv:A0E0L3I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:DimensionlessRatio .

unit:BTU_IT-PER-HR a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "BTU per Hour"@en ;
    dcterms:description "The British thermal unit (BTU or Btu) is a traditional unit of energy equal to about 1 055.05585 joules. It is approximately the amount of energy needed to heat 1 pound (0.454 kg) of water from \\(39 \\,^{\\circ}{\\rm F}\\) (\\(3.9 \\,^{\\circ}{\\rm C}\\)) to \\(40 \\,^{\\circ}{\\rm F}\\) (\\(4.4 \\,^{\\circ}{\\rm C}\\)). The unit is most often used in the power, steam generation, heating and air conditioning industries. In scientific contexts the BTU has largely been replaced by the SI unit of energy, the joule, though it may be used as a measure of agricultural energy production (BTU/kg)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.29307107 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(Btu/hr\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:HeatFlowRate,
        quantitykind:Power ;
    qudt:informativeReference "http://www.simetric.co.uk/sibtu.htm"^^xsd:anyURI ;
    qudt:ucumCode "[Btu_IT].h-1"^^qudt:UCUMcs,
        "[Btu_IT]/h"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_IT-PER-HR-FT2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "BTU per Hour Square Foot"@en ;
    dcterms:description "\\(\\textit{BTU per Hour Square Foot}\\) is an Imperial unit for  'Power Per Area' expressed as \\(Btu/(hr-ft^2)\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 3.15459075 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(Btu/(hr-ft^{2})\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:PowerPerArea ;
    qudt:ucumCode "[Btu_IT].h-1.[ft_i]-2"^^qudt:UCUMcs,
        "[Btu_IT]/(h.[ft_i]2)"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_IT-PER-SEC-FT2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "BTU per Second Square Foot"@en ;
    dcterms:description "\\(\\textit{BTU per Second Square Foot}\\) is an Imperial unit for  'Power Per Area' expressed as \\(Btu/(s\\cdot ft^2)\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 11356.5267 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(Btu/(s-ft^{2})\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:PowerPerArea ;
    qudt:ucumCode "[Btu_IT].s-1.[ft_i]-2"^^qudt:UCUMcs,
        "[Btu_IT]/(s.[ft_i]2)"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG_F a qudt:Unit,
        unit:Unit ;
    rdfs:label "Degree Fahrenheit"@en ;
    dcterms:description "\\(\\textbf{Degree Fahrenheit} is an Imperial unit for 'Thermodynamic Temperature' expressed as \\(\\,^{\\circ}{\\rm F}\\)"^^qudt:LatexString ;
    qudt:conversionMultiplier 0.5555555555555556 ;
    qudt:conversionOffset 459.669607 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(degF\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:hasQuantityKind quantitykind:Temperature ;
    qudt:iec61360Code "0112/2///62720#UAA039" ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/degreeFahrenheit> ;
    qudt:ucumCode "[degF]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "FAH" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:ERG-PER-CentiM2-SEC a qudt:Unit ;
    rdfs:label "Erg per Square Centimetre Second"@en,
        "Erg per Square Centimeter Second"@en-us ;
    dcterms:description "\"Erg per Square Centimeter Second\" is a C.G.S System unit for  'Power Per Area' expressed as \\(erg/(cm^{2}-s)\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.001 ;
    qudt:derivedUnitOfSystem sou:CGS,
        sou:CGS-GAUSS ;
    qudt:expression "\\(erg/(cm^{2}-s)\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:PowerPerArea ;
    qudt:iec61360Code "0112/2///62720#UAB055" ;
    qudt:ucumCode "erg.cm-2.s-1"^^qudt:UCUMcs,
        "erg/(cm2.s)"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A65" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT-LB_F-PER-FT2-SEC a qudt:Unit ;
    rdfs:label "Foot Pound Force per Square Foot Second"@en ;
    dcterms:description "\"Foot Pound Force per Square Foot Second\" is an Imperial unit for  'Power Per Area' expressed as \\(ft \\cdot lbf/(ft^2 \\cdot s)\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 14.5939042 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(ft-lbf/ft^2s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:PowerPerArea ;
    qudt:latexSymbol "\\(ft \\cdot lbf/(ft^2 \\cdot s)\\)"^^qudt:LatexString ;
    qudt:ucumCode "[ft_i].[lbf_av].[sft_i]-1.s-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT-PER-HR a qudt:Unit ;
    rdfs:label "Foot per Hour"@en ;
    dcterms:description "\"Foot per Hour\" is an Imperial unit for  'Linear Velocity' expressed as \\(ft/hr\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00008466666666666667 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(ft/hr\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Velocity ;
    qudt:iec61360Code "0112/2///62720#UAA442" ;
    qudt:ucumCode "[ft_i].h-1"^^qudt:UCUMcs,
        "[ft_i]/h"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K14" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT-PER-SEC a qudt:Unit ;
    rdfs:label "Foot per Second"@en ;
    dcterms:description "\\(\\textit{foot per second}\\) (plural \\(\\textit{feet per second}\\)) is a unit of both speed (scalar) and velocity (vector quantity, which includes direction). It expresses the distance in feet (\\(ft\\)) traveled or displaced, divided by the time in seconds (\\(s\\), or \\(sec\\)). The corresponding unit in the International System of Units (SI) is the \\(\\textit{metre per second}\\). Abbreviations include \\(ft/s\\), \\(ft/sec\\) and \\(fps\\), and the rarely used scientific notation \\(ft\\,s\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.3048 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Foot_per_second"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(ft/s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Velocity ;
    qudt:iec61360Code "0112/2///62720#UAA449" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Foot_per_second?oldid=491316573"^^xsd:anyURI ;
    qudt:ucumCode "[ft_i].s-1"^^qudt:UCUMcs,
        "[ft_i]/s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "FS" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KN a qudt:Unit ;
    rdfs:label "Knot"@en ;
    dcterms:description "The knot (pronounced 'not') is a unit of speed equal to one nautical mile (1.852 km) per hour, approximately 1.151 mph. The abbreviation \\(kn\\) is preferred by the International Hydrographic Organization (IHO), which includes every major sea-faring nation; however, the abbreviations kt (singular) and kts (plural) are also widely used. However, use of the abbreviation kt for knot conflicts with the SI symbol for kilotonne. The knot is a non-SI unit accepted for use with the International System of Units (SI). Worldwide, the knot is used in meteorology, and in maritime and air navigation - for example, a vessel travelling at 1 knot along a meridian travels one minute of geographic latitude in one hour. Etymologically, the term knot derives from counting the number of knots in the line that unspooled from the reel of a chip log in a specific time."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.5144444444444445 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Knot"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Velocity ;
    qudt:iec61360Code "0112/2///62720#UAB110" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Knot?oldid=495066194"^^xsd:anyURI ;
    qudt:symbol "kn" ;
    qudt:ucumCode "[kn_i]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "KNT" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:MI_N-PER-HR ;
    skos:altLabel "kt",
        "kts" .

unit:KiloCAL-PER-CentiM2-MIN a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Kilocalorie per Square Centimetre Minute"@en,
        "Kilocalorie per Square Centimeter Minute"@en-us ;
    dcterms:description "\"Kilocalorie per Square Centimeter Minute\" is a unit for  'Power Per Area' expressed as \\(kcal/(cm^{2}-min)\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0000697333333 ;
    qudt:expression "\\(kcal/(cm^{2}-min)\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:PowerPerArea ;
    qudt:ucumCode "kcal.cm-2.min-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloCAL-PER-CentiM2-SEC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Kilocalorie per Square Centimetre Second"@en,
        "Kilocalorie per Square Centimeter Second"@en-us ;
    dcterms:description "\"Kilocalorie per Square Centimeter Second\" is a unit for  'Power Per Area' expressed as \\(kcal/(cm^{2}-s)\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0000004184 ;
    qudt:expression "\\(kcal/(cm^{2}-s)\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:PowerPerArea ;
    qudt:ucumCode "kcal.cm-2.s-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloM-PER-HR a qudt:Unit ;
    rdfs:label "Kilometre per Hour"@en,
        "Kilometer per Hour"@en-us ;
    dcterms:description "\"Kilometer per Hour\" is a C.G.S System unit for  'Linear Velocity' expressed as \\(km/hr\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.2777777777777778 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Kilometres_per_hour"^^xsd:anyURI ;
    qudt:expression "\\(km/hr\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Velocity ;
    qudt:iec61360Code "0112/2///62720#UAA638" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Kilometres_per_hour?oldid=487674812"^^xsd:anyURI ;
    qudt:ucumCode "km.h-1"^^qudt:UCUMcs,
        "km/h"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "KMH" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloM-PER-SEC a qudt:Unit ;
    rdfs:label "Kilometre per Second"@en,
        "Kilometer per Second"@en-us ;
    dcterms:description "\"Kilometer per Second\" is a C.G.S System unit for  'Linear Velocity' expressed as \\(km/s\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:expression "\\(km/s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Velocity ;
    qudt:iec61360Code "0112/2///62720#UAB392" ;
    qudt:ucumCode "km.s-1"^^qudt:UCUMcs,
        "km/s"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloV-A a qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilovolt Ampere"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:ComplexPower ;
    qudt:iec61360Code "0112/2///62720#UAA581" ;
    qudt:plainTextDescription "1 000-fold of the product of the SI derived unit volt and the SI base unit ampere" ;
    qudt:ucumCode "kV.A"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "KVA" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M-PER-HR a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Metre per Hour"@en,
        "Meter per Hour"@en-us ;
    dcterms:description "Metre per hour is a metric unit of both speed (scalar) and velocity (Vector (geometry)). Its symbol is m/h or mu00b7h-1 (not to be confused with the imperial unit symbol mph. By definition, an object travelling at a speed of 1 m/h for an hour would move 1 metre."^^rdf:HTML ;
    qudt:conversionMultiplier 0.000277777778 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:expression "\\(m/h\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Velocity ;
    qudt:iec61360Code "0112/2///62720#UAB328" ;
    qudt:ucumCode "m.h-1"^^qudt:UCUMcs,
        "m/h"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MI-PER-HR a qudt:Unit ;
    rdfs:label "Mile per Hour"@en ;
    dcterms:description "Miles per hour is an imperial unit of speed expressing the number of statute miles covered in one hour. It is currently the standard unit used for speed limits, and to express speeds generally, on roads in the United Kingdom and the United States. A common abbreviation is mph or MPH."^^rdf:HTML ;
    qudt:conversionMultiplier 0.44704 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Miles_per_hour"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(mi/hr\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:Velocity ;
    qudt:iec61360Code "0112/2///62720#UAB111" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Miles_per_hour?oldid=482840548"^^xsd:anyURI ;
    qudt:ucumCode "[mi_i].h-1"^^qudt:UCUMcs,
        "[mi_i]/h"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "HM" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaV-A a qudt:Unit,
        unit:Unit ;
    rdfs:label "Megavolt Ampere"@en ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:ComplexPower ;
    qudt:iec61360Code "0112/2///62720#UAA222" ;
    qudt:plainTextDescription "1,000,000-fold of the product of the SI derived unit volt and the SI base unit ampere" ;
    qudt:ucumCode "MV.A"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "MVA" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroW-PER-M2 a qudt:Unit ;
    rdfs:label "Microwatt Per Square Metre"@en,
        "Microwatt Per Square Meter"@en-us ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:PowerPerArea ;
    qudt:iec61360Code "0112/2///62720#UAA081" ;
    qudt:plainTextDescription "0.000001-fold of the SI derived unit watt divided by the power of the SI base unit metre with the exponent 2" ;
    qudt:ucumCode "uW.m-2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D85" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliW-PER-M2 a qudt:Unit ;
    rdfs:label "Milliwatt Per Square Metre"@en,
        "Milliwatt Per Square Meter"@en-us ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:PowerPerArea ;
    qudt:iec61360Code "0112/2///62720#UAA808" ;
    qudt:plainTextDescription "0.001-fold of the SI derived unit weber divided by the power of the SI base unit metre with the exponent 2" ;
    qudt:ucumCode "mW.m-2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C32" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-M3 a qudt:Unit ;
    rdfs:label "Reciprocal Cubic Metre"@en,
        "Reciprocal Cubic Meter"@en-us ;
    dcterms:description "\"Per Cubic Meter\" is a denominator unit with dimensions \\(/m^3\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(/m^3\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:InverseVolume,
        quantitykind:NumberDensity ;
    qudt:ucumCode "/m3"^^qudt:UCUMcs,
        "m-3"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PSI-L-PER-SEC a qudt:Unit ;
    rdfs:label "Psi Litre Per Second"@en,
        "Psi Liter Per Second"@en-us ;
    qudt:conversionMultiplier 6.894757 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:PowerPerArea ;
    qudt:iec61360Code "0112/2///62720#UAA704" ;
    qudt:plainTextDescription "product of the composed unit for pressure (pound-force per square inch) and the composed unit for volume flow (litre per second)" ;
    qudt:ucumCode "[psi].L.s-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K88" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PicoW-PER-M2 a qudt:Unit ;
    rdfs:label "Picowatt Per Square Metre"@en,
        "Picowatt Per Square Meter"@en-us ;
    qudt:conversionMultiplier 0.000000000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:PowerPerArea ;
    qudt:iec61360Code "0112/2///62720#UAA936" ;
    qudt:plainTextDescription "0.000000000001-fold of the SI derived unit watt divided by the power of the SI base unit metre with the exponent 2" ;
    qudt:ucumCode "pW.m-2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C76" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:TON_FG a qudt:Unit,
        unit:Unit ;
    rdfs:label "Ton of Refrigeration"@en ;
    dcterms:description "12000 btu per hour</p>"^^rdf:HTML ;
    qudt:conversionMultiplier 3516.853 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Ton_of_refrigeration"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:expression "\\(t/fg\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:HeatFlowRate,
        quantitykind:Power ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Ton_of_refrigeration?oldid=494342824"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/tonOfRefrigeration> ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

vaem:GraphMetaData a owl:Class ;
    rdfs:label "Graph Metadata"^^xsd:string ;
    dcterms:description "\"vaem:GraphMetaData\" defines basic metadata for the registration and publishing of a graph.  For specificaiton of governance the vocabulary \"VOAG\" may be used."^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:seeAlso <http://voag.linkedmodel.org/vocab/voag> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:allValuesFrom vaem:GraphRole ;
            owl:onProperty vaem:hasGraphRole ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty vaem:latestPublishedVersion ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty vaem:previousPublishedVersion ],
        [ a owl:Restriction ;
            owl:allValuesFrom vaem:Party ;
            owl:onProperty vaem:hasSteward ],
        [ a owl:Restriction ;
            owl:allValuesFrom vaem:Discipline ;
            owl:onProperty vaem:hasDiscipline ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty vaem:namespace ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty vaem:namespacePrefix ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty vaem:hasLicenseType ],
        [ a owl:Restriction ;
            owl:allValuesFrom vaem:Viewpoint ;
            owl:onProperty vaem:hasViewpoint ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty vaem:rdfxmlFileURL ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty vaem:owner ],
        [ a owl:Restriction ;
            owl:allValuesFrom vaem:Domain ;
            owl:onProperty vaem:hasDomain ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty vaem:hasMetadata ],
        [ a owl:Restriction ;
            owl:allValuesFrom vaem:Party ;
            owl:onProperty vaem:hasOwner ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty vaem:intent ],
        [ a owl:Restriction ;
            owl:allValuesFrom xsd:string ;
            owl:onProperty vaem:description ],
        [ a owl:Restriction ;
            owl:allValuesFrom vaem:Aspect ;
            owl:onProperty vaem:hasAspect ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty vaem:specificity ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty vaem:turtleFileURL ],
        [ a owl:Restriction ;
            owl:allValuesFrom vaem:GraphMetaData ;
            owl:onProperty vaem:hasMetadata ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty vaem:revision ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty vaem:hasIdentifier ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty vaem:hasSteward ],
        [ a owl:Restriction ;
            owl:cardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty vaem:name ],
        owl:Thing .

brick:Min_Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Min Limit" ;
    rdfs:subClassOf brick:Limit ;
    skos:definition "A parameter that places a lower bound on the range of permitted values of a Setpoint."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Min ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Limit,
        tag:Min,
        tag:Parameter,
        tag:Point .

brick:Space a owl:Class,
        sh:NodeShape ;
    rdfs:label "Space" ;
    rdfs:subClassOf brick:Location ;
    skos:definition "A part of the physical world or a virtual world whose 3D spatial extent is bounded actually or theoretically, and provides for certain functions within the zone it is contained in."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Space ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Space .

brick:Substance a owl:Class ;
    rdfs:label "Substance" ;
    rdfs:subClassOf sosa:FeatureOfInterest,
        brick:Measurable .

brick:Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Temperature Sensor" ;
    rdfs:subClassOf brick:Temperature_Sensor ;
    skos:definition "Measures the temperature of water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Sensor,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Water .

tag:Basin a brick:Tag ;
    rdfs:label "Basin" .

tag:Boiler a brick:Tag ;
    rdfs:label "Boiler" .

tag:Detection a brick:Tag ;
    rdfs:label "Detection" .

tag:Direction a brick:Tag ;
    rdfs:label "Direction" .

tag:Entering a brick:Tag ;
    rdfs:label "Entering" .

tag:Exchanger a brick:Tag ;
    rdfs:label "Exchanger" .

tag:Laboratory a brick:Tag ;
    rdfs:label "Laboratory" .

tag:Media a brick:Tag ;
    rdfs:label "Media" .

tag:Outdoor a brick:Tag ;
    rdfs:label "Outdoor" .

tag:Output a brick:Tag ;
    rdfs:label "Output" .

tag:Preheat a brick:Tag ;
    rdfs:label "Preheat" .

tag:Stack a brick:Tag ;
    rdfs:label "Stack" .

tag:Surface a brick:Tag ;
    rdfs:label "Surface" .

tag:Usage a brick:Tag ;
    rdfs:label "Usage" .

tag:VFD a brick:Tag ;
    rdfs:label "VFD" .

tag:Velocity a brick:Tag ;
    rdfs:label "Velocity" .

tag:Vertical a brick:Tag ;
    rdfs:label "Vertical" .

tag:Video a brick:Tag ;
    rdfs:label "Video" .

s223:hasConnectionPoint a rdf:Property ;
    rdfs:label "has connection point" ;
    s223:inverseOf s223:isConnectionPointOf .

qudt:EnumeratedValue a owl:Class,
        sh:NodeShape ;
    rdfs:label "Enumerated Value" ;
    dcterms:description """<p>This class is for all enumerated and/or coded values.  For example, it contains the dimension objects that are the basis elements in some abstract vector space associated with a quantity kind system. Another use is for the base dimensions for quantity systems. Each quantity kind system that defines a base set has a corresponding ordered enumeration whose elements are the dimension objects for the base quantity kinds. The order of the dimensions in the enumeration determines the canonical order of the basis elements in the corresponding abstract vector space.</p>

<p>An enumeration is a set of literals from which a single value is selected. Each literal can have a tag as an integer within a standard encoding appropriate to the range of integer values. Consistency of enumeration types will allow them, and the enumerated values, to be referred to unambiguously either through symbolic name or encoding. Enumerated values are also controlled vocabularies and as such need to be standardized. Without this consistency enumeration literals can be stated differently and result in  data conflicts and misinterpretations.</p>

<p>The tags are a set of positive whole numbers, not necessarily contiguous and having no numerical significance, each corresponding to the associated literal identifier. An order attribute can also be given on the enumeration elements. An enumeration can itself be a member of an enumeration. This allows enumerations to be enumerated in a selection. Enumerations are also subclasses of Scalar Datatype. This allows them to be used as the reference of a datatype specification.</p>"""^^rdf:HTML ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Enumeration"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Datatype,
        dtype:EnumeratedValue ;
    sh:property qudt:EnumeratedValue-qudt_abbreviation,
        qudt:EnumeratedValue-qudt_description,
        qudt:EnumeratedValue-qudt_symbol .

qudt:HTMLOrStringOrLangStringOrLatexString a rdf:List ;
    rdfs:label "HTML or string or langString or LatexString" ;
    rdf:first [ sh:datatype rdf:HTML ] ;
    rdf:rest ( [ sh:datatype xsd:string ] [ sh:datatype rdf:langString ] [ sh:datatype qudt:LatexString ] ) ;
    rdfs:comment "Defines an rdf:List that can be used in property constraints as value for sh:or to indicate that all values of a property must be either rdf:HTML, xsd:string or rdf:langString, or a qudt:LatexString" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/shacl/overlay/qudt> .

qudt:QuantityKindDimensionVector a owl:Class,
        sh:NodeShape ;
    rdfs:label "Quantity Kind Dimension Vector" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Dimensional_analysis"^^xsd:anyURI,
        "http://web.mit.edu/2.25/www/pdf/DA_unified.pdf"^^xsd:anyURI ;
    rdfs:comment """<p class="lm-para">A  <em>Quantity Kind Dimension Vector</em> describes the dimensionality of a quantity kind in the context of a system of units. In the SI system of units, the dimensions of a quantity kind are expressed as a product of the basic physical dimensions mass (\\(M\\)), length (\\(L\\)), time (\\(T\\)) current (\\(I\\)), amount of substance (\\(N\\)), luminous intensity (\\(J\\)) and absolute temperature (\\(\\theta\\)) as \\(dim \\, Q = L^{\\alpha} \\, M^{\\beta} \\, T^{\\gamma} \\, I ^{\\delta} \\, \\theta ^{\\epsilon} \\, N^{\\eta} \\, J ^{\\nu}\\).</p>

<p class="lm-para">The rational powers of the dimensional exponents, \\(\\alpha, \\, \\beta, \\, \\gamma, \\, \\delta, \\, \\epsilon, \\, \\eta, \\, \\nu\\), are positive, negative, or zero.</p>

<p class="lm-para">For example, the dimension of the physical quantity kind \\(\\it{speed}\\) is \\(\\boxed{length/time}\\), \\(L/T\\) or \\(LT^{-1}\\), and the dimension of the physical quantity kind force is \\(\\boxed{mass \\times acceleration}\\) or \\(\\boxed{mass \\times (length/time)/time}\\), \\(ML/T^2\\) or \\(MLT^{-2}\\) respectively.</p>"""^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Concept ;
    sh:property qudt:QuantityKindDimensionVector-qudt_baseUnitDimensions,
        qudt:QuantityKindDimensionVector-qudt_dimensionExponentForAmountOfSubstance,
        qudt:QuantityKindDimensionVector-qudt_dimensionExponentForElectricCurrent,
        qudt:QuantityKindDimensionVector-qudt_dimensionExponentForLength,
        qudt:QuantityKindDimensionVector-qudt_dimensionExponentForLuminousIntensity,
        qudt:QuantityKindDimensionVector-qudt_dimensionExponentForMass,
        qudt:QuantityKindDimensionVector-qudt_dimensionExponentForThermodynamicTemperature,
        qudt:QuantityKindDimensionVector-qudt_dimensionExponentForTime,
        qudt:QuantityKindDimensionVector-qudt_dimensionlessExponent,
        qudt:QuantityKindDimensionVector-qudt_latexDefinition .

qkdv:A0E-1L0I0M1H0T-2D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E-1L0I0M1H0T-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent -1 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:MagneticFluxDensity ;
    qudt:latexDefinition "\\(M T^-2 I^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E1L-2I0M0H0T0D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E1L-2I0M0H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 1 ;
    qudt:dimensionExponentForLength -2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:ElectricCurrentDensity ;
    qudt:latexDefinition "\\(L^-2 I\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A1E0L-3I0M0H0T-1D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A1E0L-3I0M0H0T-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 1 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -3 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A1E0L0I0M0H0T-1D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A1E0L0I0M0H0T-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 1 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:CatalyticActivity ;
    qudt:latexDefinition "\\(T^-1 N\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

quantitykind:AreaPerTime a qudt:QuantityKind ;
    rdfs:label "Area per Time"@en ;
    qudt:applicableUnit unit:CentiM2-PER-SEC,
        unit:FT2-PER-HR,
        unit:FT2-PER-SEC,
        unit:IN2-PER-SEC,
        unit:M2-HZ,
        unit:M2-PER-SEC,
        unit:MilliM2-PER-SEC ;
    qudt:baseImperialUnitDimensions "\\(ft^2/s\\)"^^qudt:LatexString ;
    qudt:baseSIUnitDimensions "\\(m^2/s\\)"^^qudt:LatexString ;
    qudt:baseUSCustomaryUnitDimensions "\\(L^2/T\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:InverseLength a qudt:QuantityKind ;
    rdfs:label "Inverse Length"@en ;
    dcterms:description "Reciprocal length or inverse length is a measurement used in several branches of science and mathematics. As the reciprocal of length, common units used for this measurement include the reciprocal metre or inverse metre (\\(m^{-1}\\)), the reciprocal centimetre or inverse centimetre (\\(cm^{-1}\\)), and, in optics, the dioptre."^^qudt:LatexString ;
    qudt:applicableUnit unit:DPI,
        unit:KY,
        unit:PER-ANGSTROM,
        unit:PER-CentiM,
        unit:PER-M ;
    qudt:baseUnitDimensions "\\(/L\\)"^^qudt:LatexString,
        "\\(/m\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Reciprocal_length"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

unit:AC a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Acre"@en ;
    dcterms:description "The acre is a unit of area in a number of different systems, including the imperial and U.S. customary systems. Its international symbol is ac. The most commonly used acres today are the international acre and, in the United States, the survey acre. The most common use of the acre is to measure tracts of land. One international acre is equal to 4046.8564224 square metres."^^rdf:HTML ;
    qudt:conversionMultiplier 4046.8564224 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Acre"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Area ;
    qudt:iec61360Code "0112/2///62720#UAA320" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Acre?oldid=495387342"^^xsd:anyURI ;
    qudt:symbol "acre" ;
    qudt:ucumCode "[acr_br]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "ACR" ;
    qudt:unitOfSystem sou:IMPERIAL,
        sou:USCS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    skos:altLabel "acre" .

unit:ARE a qudt:Unit ;
    rdfs:label "are"@en ;
    dcterms:description "An 'are' is a unit of area equal to 0.02471 acre and 100 centare."^^rdf:HTML ;
    qudt:conversionMultiplier 100.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Area ;
    qudt:iec61360Code "0112/2///62720#UAB048" ;
    qudt:informativeReference "http://www.anidatech.com/units.html"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/are> ;
    qudt:symbol "a" ;
    qudt:ucumCode "ar"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "ARE" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BARN a qudt:Unit ;
    rdfs:label "Barn"@en ;
    dcterms:description "A barn (symbol b) is a unit of area. Originally used in nuclear physics for expressing the cross sectional area of nuclei and nuclear reactions, today it is used in all fields of high energy physics to express the cross sections of any scattering process, and is best understood as a measure of the probability of interaction between small particles. A barn is defined as \\(10^{28} m^2 (100 fm^2)\\) and is approximately the cross sectional area of a uranium nucleus. The barn is also the unit of area used in nuclear quadrupole resonance and nuclear magnetic resonance to quantify the interaction of a nucleus with an electric field gradient. While the barn is not an SI unit, it is accepted for use with the SI due to its continued use in particle physics."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.018 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Barn"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Area ;
    qudt:iec61360Code "0112/2///62720#UAB297" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Barn?oldid=492907677"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Barn_(unit)"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/barn> ;
    qudt:symbol "b" ;
    qudt:ucumCode "b"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A14" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CentiM2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Square Centimetre"@en,
        "Square Centimeter"@en-us ;
    dcterms:description "A unit of area equal to that of a square, of sides 1cm"^^rdf:HTML ;
    qudt:allowedUnitOfSystem sou:SI ;
    qudt:conversionMultiplier 0.0001 ;
    qudt:derivedUnitOfSystem sou:CGS,
        sou:CGS-GAUSS ;
    qudt:expression "\\(sqcm\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Area ;
    qudt:iec61360Code "0112/2///62720#UAA384" ;
    qudt:ucumCode "cm2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "CMK" ;
    qudt:unitOfSystem sou:CGS,
        sou:SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG_C a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Degree Celsius"@en ;
    dcterms:description "\\(\\textit{Celsius}\\), also known as centigrade, is a scale and unit of measurement for temperature. It can refer to a specific temperature on the Celsius scale as well as a unit to indicate a temperature interval, a difference between two temperatures or an uncertainty. This definition fixes the magnitude of both the degree Celsius and the kelvin as precisely 1 part in 273.16 (approximately 0.00366) of the difference between absolute zero and the triple point of water. Thus, it sets the magnitude of one degree Celsius and that of one kelvin as exactly the same. Additionally, it establishes the difference between the two scales' null points as being precisely \\(273.15\\,^{\\circ}{\\rm C}\\).</p>"^^qudt:LatexString ;
    qudt:allowedUnitOfSystem sou:SI ;
    qudt:conversionMultiplier 1.0 ;
    qudt:conversionOffset 273.15 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Celsius"^^xsd:anyURI ;
    qudt:expression "\\(degC\\)"^^qudt:LatexString ;
    qudt:guidance "<p>See NIST section <a href=\"http://physics.nist.gov/Pubs/SP811/sec04.html#4.2.1.1\">SP811 section 4.2.1.1</a></p>"^^rdf:HTML,
        "<p>See NIST section <a href=\"http://physics.nist.gov/Pubs/SP811/sec06.html#6.2.8\">SP811 section 6.2.8</a></p>"^^rdf:HTML ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:hasQuantityKind quantitykind:Temperature ;
    qudt:iec61360Code "0112/2///62720#UAA033" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Celsius?oldid=494152178"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\,^{\\circ}{\\rm C}\\)"^^qudt:LatexString ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/degreeCelsius> ;
    qudt:ucumCode "Cel"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "CEL" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    skos:altLabel "degree-centigrade" .

unit:DecaARE a qudt:Unit ;
    rdfs:label "Decare"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Area ;
    qudt:iec61360Code "0112/2///62720#UAB049" ;
    qudt:plainTextDescription "unit of the area which is mainly common in the agriculture and forestry: 1 da = 10 a" ;
    qudt:ucumCode "daar"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "DAA" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DeciM2 a qudt:Unit ;
    rdfs:label "Square Decimetre"@en,
        "Square Decimeter"@en-us ;
    qudt:conversionMultiplier 0.01 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Area ;
    qudt:iec61360Code "0112/2///62720#UAA413" ;
    qudt:plainTextDescription "0.1-fold of the power of the SI base unit metre with the exponent 2" ;
    qudt:ucumCode "dm2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "DMK" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HA a qudt:Unit ;
    rdfs:label "Hectare"@en ;
    dcterms:description "The customary metric unit of land area, equal to 100 ares. One hectare is a square hectometer, that is, the area of a square 100 meters on each side: exactly 10 000 square meters or approximately 107 639.1 square feet, 11 959.9 square yards, or 2.471 054 acres."^^rdf:HTML ;
    qudt:allowedUnitOfSystem sou:SI ;
    qudt:conversionMultiplier 10000.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Hectare"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Area ;
    qudt:iec61360Code "0112/2///62720#UAA532" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Hectare?oldid=494256954"^^xsd:anyURI ;
    qudt:symbol "ha" ;
    qudt:ucumCode "har"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "HAR" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:IN2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Square Inch"@en ;
    dcterms:description "A square inch is a unit of area, equal to the area of a square with sides of one inch. The following symbols are used to denote square inches: square in, sq inches, sq inch, sq in inches/-2, inch/-2, in/-2, inches^2, \\(inch^2\\), \\(in^2\\), \\(inches^2\\), \\(inch^2\\), \\(in^2\\) or in some cases \\(\"^2\\). The square inch is a common unit of measurement in the United States and the United Kingdom."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00064516 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(in^{2}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Area ;
    qudt:iec61360Code "0112/2///62720#UAA547" ;
    qudt:ucumCode "[in_i]2"^^qudt:UCUMcs,
        "[sin_i]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "INK" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:J-PER-CentiM2-DAY a qudt:Unit ;
    rdfs:label "Joules per square centimetre per day"@en ;
    dcterms:description "Radiant energy per 10^-4 SI unit area over a period of one day."@en ;
    qudt:conversionMultiplier 0.115740740740741 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:PowerPerArea,
        quantitykind:Radiosity ;
    qudt:ucumCode "J.cm-2.d-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloW a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilowatt"@en ;
    dcterms:description "\\(The kilowatt is a derived unit of power in the International System of Units (SI),  The unit, defined as 1,000 joule per second, measures the rate of energy conversion or transfer.\\)"^^qudt:LatexString ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Watt"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:iec61360Code "0112/2///62720#UAA583" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Watt?oldid=494906356"^^xsd:anyURI ;
    qudt:symbol "kW",
        "kW"^^xsd:string ;
    qudt:ucumCode "kW"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "KWT" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MI2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Square Mile"@en ;
    dcterms:description "The square mile (abbreviated as sq mi and sometimes as mi) is an imperial and US unit of measure for an area equal to the area of a square of one statute mile. It should not be confused with miles square, which refers to the number of miles on each side squared. For instance, 20 miles square (20 × 20 miles) is equal to 400 square miles. One square mile is equivalent to: 4,014,489,600 square inches 27,878,400 square feet, 3,097,600 square yards, 640 acres, 258.9988110336 hectares, 2560 roods, 25,899,881,103.36 square centimetres, 2,589,988.110336 square metres, 2.589988110336 square kilometres When applied to a portion of the earth's surface, which is curved rather than flat, 'square mile' is an informal synonym for section."^^rdf:HTML ;
    qudt:conversionMultiplier 2589988.11 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(square-mile\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Area ;
    qudt:iec61360Code "0112/2///62720#UAB050" ;
    qudt:ucumCode "[mi_i]2"^^qudt:UCUMcs,
        "[mi_us]2"^^qudt:UCUMcs,
        "[smi_us]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "MIK" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MIL_Circ a qudt:Unit ;
    rdfs:label "Circular Mil"@en ;
    dcterms:description "A circular mil is a unit of area, equal to the area of a circle with a diameter of one mil (one thousandth of an inch). It is a convenient unit for referring to the area of a wire with a circular cross section, because the area in circular mils can be calculated without reference to pi (\\(\\pi\\)). The area in circular mils, A, of a circle with a diameter of d mils, is given by the formula: Electricians in Canada and the United States are familiar with the circular mil because the National Electrical Code (NEC) uses the circular mil to define wire sizes larger than 0000 AWG. In many NEC publications and uses, large wires may be expressed in thousands of circular mils, which is abbreviated in two different ways: MCM or kcmil. For example, one common wire size used in the NEC has a cross-section of 250,000 circular mils, written as 250 kcmil or 250 MCM, which is the first size larger than 0000 AWG used within the NEC. "^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Area ;
    qudt:iec61360Code "0112/2///62720#UAB207" ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/circularMil> ;
    qudt:symbol "cmil" ;
    qudt:ucumCode "[cml_i]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MIN_Angle a qudt:Unit,
        unit:Unit ;
    rdfs:label "Minute Angle"@en ;
    qudt:conversionMultiplier 0.0002908882 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Angle ;
    qudt:iec61360Code "0112/2///62720#UAA097" ;
    qudt:symbol "'",
        "'"^^xsd:string ;
    qudt:ucumCode "'"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D61" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:ARCMIN .

unit:MegaW a qudt:Unit,
        unit:Unit ;
    rdfs:label "MegaW"@en ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:ucumCode "MW"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroM2 a qudt:Unit ;
    rdfs:label "Square Micrometre"@en,
        "Square Micrometer"@en-us ;
    qudt:conversionMultiplier 0.000000000001 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Area ;
    qudt:iec61360Code "0112/2///62720#UAA092" ;
    qudt:plainTextDescription "0.000000000001-fold of the power of the SI base unit metre with the exponent 2" ;
    qudt:ucumCode "um2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H30" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliM2 a qudt:Unit ;
    rdfs:label "Square Millimetre"@en,
        "Square Millimeter"@en-us ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Area ;
    qudt:iec61360Code "0112/2///62720#UAA871" ;
    qudt:plainTextDescription "0.000001-fold of the power of the SI base unit metre with the exponent 2" ;
    qudt:ucumCode "mm2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "MMK" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliW a qudt:Unit,
        unit:Unit ;
    rdfs:label "MilliW"@en ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:ucumCode "mW"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PER-M a qudt:Unit ;
    rdfs:label "Reciprocal Metre"@en,
        "Reciprocal Meter"@en-us ;
    dcterms:description "Per Meter Unit is a a denominator unit with dimensions \\(/m\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(per-meter\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:AngularReciprocalLatticeVector,
        quantitykind:AttenuationCoefficient,
        quantitykind:CurvatureFromRadius,
        quantitykind:InverseLength,
        quantitykind:LinearAbsorptionCoefficient,
        quantitykind:LinearAttenuationCoefficient,
        quantitykind:LinearIonization,
        quantitykind:PhaseCoefficient,
        quantitykind:PropagationCoefficient ;
    qudt:ucumCode "/m"^^qudt:UCUMcs,
        "m-1"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PlanckArea a qudt:Unit ;
    rdfs:label "Planck Area"@en ;
    qudt:conversionMultiplier 0.000000000000000000000000000000000000000000000000000000000000000000000261223 ;
    qudt:derivedUnitOfSystem sou:PLANCK ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Area ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:V-A a qudt:Unit,
        unit:Unit ;
    rdfs:label "Volt Ampere"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:ComplexPower,
        quantitykind:NonActivePower ;
    qudt:iec61360Code "0112/2///62720#UAA298" ;
    qudt:plainTextDescription "product of the SI derived unit volt and the SI base unit ampere" ;
    qudt:ucumCode "V.A"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D46" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:YD2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Square Yard"@en ;
    dcterms:description "The square yard is an imperial/US customary unit of area, formerly used in most of the English-speaking world but now generally replaced by the square metre outside of the U.S. , Canada and the U.K. It is defined as the area of a square with sides of one yard in length. (Gaj in Hindi)."^^rdf:HTML ;
    qudt:conversionMultiplier 0.83612736 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(yd^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Area ;
    qudt:iec61360Code "0112/2///62720#UAB034" ;
    qudt:ucumCode "[syd_i]"^^qudt:UCUMcs,
        "[yd_i]2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "YDK" ;
    qudt:unitOfSystem sou:IMPERIAL,
        sou:USCS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

sp:and a spin:Function ;
    rdfs:label "and" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType xsd:boolean ;
            rdfs:comment "the first operand of the intersection" ],
        [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType xsd:boolean ;
            rdfs:comment "the second operand of the intersection" ] ;
    spin:returnType xsd:boolean ;
    spin:symbol "&&" ;
    rdfs:comment "Return the logical AND between two (boolean) operands." ;
    rdfs:subClassOf spl:BooleanFunctions .

brick:Collection a owl:Class,
        sh:NodeShape ;
    rdfs:label "Collection" ;
    rdfs:subClassOf brick:Entity ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Collection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Collection .

brick:Enable_Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Enable Command" ;
    rdfs:subClassOf brick:Command ;
    skos:definition "Commands that enable functionality"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Enable ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Enable,
        tag:Point .

brick:Fan a owl:Class,
        sh:NodeShape ;
    rdfs:label "Fan" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "Any device with two or more blades or vanes attached to a rotating shaft used to produce an airflow for the purpose of comfort, ventilation, exhaust, heating, cooling, or any other gaseous transport."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fan ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Fan .

brick:Hot_Water a owl:Class,
        sh:NodeShape,
        brick:Hot_Water ;
    rdfs:label "Hot Water" ;
    rdfs:subClassOf brick:Water ;
    skos:definition "Hot water used for HVAC heating or supply to hot taps"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Hot ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fluid,
        tag:Hot,
        tag:Liquid,
        tag:Water .

brick:Humidity_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Humidity Setpoint" ;
    rdfs:subClassOf brick:Setpoint ;
    skos:definition "Sets humidity"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Humidity ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Humidity,
        tag:Point,
        tag:Setpoint ;
    brick:hasQuantity brick:Humidity .

brick:System a owl:Class,
        sh:NodeShape ;
    rdfs:label "System" ;
    rdfs:subClassOf brick:Collection ;
    skos:definition "A System is a combination of equipment and auxiliary devices (e.g., controls, accessories, interconnecting means, and termi­nal elements) by which energy is transformed so it performs a specific function such as HVAC, service water heating, or lighting. (ASHRAE Dictionary)."@en ;
    sh:property [ sh:or ( [ sh:class brick:Equipment ] [ sh:class brick:Point ] [ sh:class brick:Loop ] [ sh:class brick:System ] [ sh:class brick:Location ] [ sh:class brick:PV_Array ] ) ;
            sh:path brick:hasPart ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Collection ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:System ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Collection,
        tag:System .

brick:Terminal_Unit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Terminal Unit" ;
    rdfs:subClassOf brick:HVAC_Equipment ;
    skos:definition "A device that regulates the volumetric flow rate and/or the temperature of the controlled medium."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Terminal ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Unit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:Terminal,
        tag:Unit .

brick:Water_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Water Temperature Setpoint" ;
    rdfs:subClassOf brick:Temperature_Setpoint ;
    skos:definition "Sets temperature of water"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Setpoint,
        tag:Temperature,
        tag:Water ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Water .

bsh:NumericValue a rdf:List ;
    rdf:first [ sh:datatype xsd:float ] ;
    rdf:rest ( [ sh:datatype xsd:decimal ] [ sh:datatype xsd:integer ] [ sh:datatype xsd:double ] ) .

s223:Domain a s223:Class,
        sh:NodeShape ;
    rdfs:label "Root domain" ;
    rdfs:comment "This class has an enumerated set of valid instances, used to distinguish different collections of objects as belonging to one or more domains, such as lighting or HVAC." ;
    rdfs:subClassOf s223:Concept,
        sosa:Procedure ;
    sh:property [ sh:class s223:Role ;
            sh:path s223:hasRole ] .

s223:Inlet a s223:Direction ;
    rdfs:label "Inlet"@en,
        "Entrée"@fr ;
    rdfs:comment "One member of the enumerated valid values to characterize the hasDirection property. It is an instance of the Direction class."@en .

s223:Outlet a s223:Direction ;
    rdfs:label "Outlet"@en,
        "Sortie"@fr ;
    rdfs:comment "One member of the enumerated valid values to characterize the hasDirection property. It is an instance of the Direction class."@en .

qkdv:A0E0L0I0M1H-1T-3D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M1H-1T-3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature -1 ;
    qudt:dimensionExponentForTime -3 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:CoefficientOfHeatTransfer ;
    qudt:latexDefinition "\\(M T^-3  Θ^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L2I0M1H-1T-2D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L2I0M1H-1T-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature -1 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:EnergyPerTemperature ;
    qudt:latexDefinition "\\(L^2 M T^-2 Θ^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A1E0L0I0M-1H0T0D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A1E0L0I0M-1H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 1 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:AmountOfSubstancePerUnitMass ;
    qudt:latexDefinition "\\(M^-1 N\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

quantitykind:AmountOfSubstancePerUnitVolume a qudt:QuantityKind ;
    rdfs:label "Amount of Substance per Unit Volume"@en ;
    qudt:applicableUnit unit:FemtoMOL-PER-L,
        unit:KiloMOL-PER-M3,
        unit:MOL-PER-DeciM3,
        unit:MOL-PER-L,
        unit:MOL-PER-M3,
        unit:MicroMOL-PER-L,
        unit:MilliMOL-PER-L,
        unit:MilliMOL-PER-M3,
        unit:PicoMOL-PER-L,
        unit:PicoMOL-PER-M3 ;
    qudt:baseUnitDimensions "\\(M/L^3\\)"^^qudt:LatexString,
        "\\(mol/m^3\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A1E0L-3I0M0H0T0D0 ;
    qudt:informativeReference "http://www.ask.com/answers/72367781/what-is-defined-as-the-amount-of-substance-per-unit-of-volume"^^xsd:anyURI,
        "https://en.wikipedia.org/wiki/Molar_concentration"^^xsd:anyURI ;
    qudt:plainTextDescription "The amount of substance per unit volume is called the molar density. Molar density is an intensive property of a substance and depends on the temperature and pressure." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Concentration .

quantitykind:ElectricCurrentDensity a qudt:QuantityKind ;
    rdfs:label "Electric Current Density"@en ;
    dcterms:description "\"Electric Current Density\" is a measure of the density of flow of electric charge; it is the electric current per unit area of cross section. Electric current density is a vector-valued quantity. Electric current, \\(I\\), through a surface \\(S\\) is defined as \\(I = \\int_S J \\cdot e_n dA\\), where \\(e_ndA\\) is the vector surface element."^^qudt:LatexString ;
    qudt:applicableUnit unit:A-PER-CentiM2,
        unit:A-PER-M2,
        unit:A-PER-MilliM2,
        unit:A_Ab-PER-CentiM2,
        unit:A_Stat-PER-CentiM2,
        unit:KiloA-PER-M2,
        unit:MegaA-PER-M2,
        unit:PlanckCurrentDensity ;
    qudt:baseUnitDimensions "\\(A/m^2\\)"^^qudt:LatexString,
        "\\(I/L^2\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Current_density"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T0D0 ;
    qudt:informativeReference "http://maxwells-equations.com/density/current.php"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(J = \\rho v\\), where \\(\\rho\\) is electric current density and \\(v\\) is volume."^^qudt:LatexString ;
    qudt:symbol "J" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:ForcePerLength a qudt:QuantityKind ;
    rdfs:label "Force per Length"@en ;
    qudt:applicableUnit unit:DYN-PER-CentiM,
        unit:KiloGM_F-M-PER-CentiM2,
        unit:KiloLB_F-PER-FT,
        unit:LB_F-PER-FT,
        unit:LB_F-PER-IN,
        unit:MilliN-PER-M,
        unit:N-M-PER-M2,
        unit:N-PER-CentiM,
        unit:N-PER-M,
        unit:N-PER-MilliM,
        unit:PicoPA-PER-KiloM ;
    qudt:baseUnitDimensions "\\(M/T^2\\)"^^qudt:LatexString,
        "\\(kg/s^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MassPerLength a qudt:QuantityKind ;
    rdfs:label "Mass per Length"@en ;
    dcterms:description "Linear density, linear mass density or linear mass is a measure of mass per unit of length, and it is a characteristic of strings or other one-dimensional objects. The SI unit of linear density is the kilogram per metre (\\(kg/m\\))."^^qudt:LatexString ;
    qudt:applicableUnit unit:Denier,
        unit:GM-PER-KiloM,
        unit:GM-PER-M,
        unit:GM-PER-MilliM,
        unit:KiloGM-PER-M,
        unit:KiloGM-PER-MilliM,
        unit:LB-PER-FT,
        unit:LB-PER-IN,
        unit:MilliGM-PER-M,
        unit:SLUG-PER-FT,
        unit:TEX ;
    qudt:baseUnitDimensions "\\(M/L\\)"^^qudt:LatexString,
        "\\(kg/m\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Linear_density"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\mu\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

sou:CGS-ESU a qudt:SystemOfUnits ;
    rdfs:label "CGS System of Units ESU"@en ;
    qudt:abbreviation "CGS-ESU" ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Electrostatic_units"^^xsd:anyURI ;
    qudt:description "The electrostatic system of units is a system of units used to measure electrical quantities of electric charge, current, and voltage, within the centimeter gram second (or \"CGS\") metric system of units. In electrostatic units, electrical charge is defined via the force it exerts on other charges. The various units of the e.s.u. system have specific names obtained by prefixing more familiar names with $stat$, but are often referred to purely descriptively as the 'e.s. unit of capacitance', etc. "^^rdf:HTML ;
    qudt:informativeReference "http://www.oxfordreference.com/view/10.1093/acref/9780198605225.001.0001/acref-9780198605225-e-399#"^^xsd:anyURI,
        "http://www.sizes.com/units/sys_cgs_stat.htm"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/sou> .

unit:DYN a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Dyne"@en ;
    dcterms:description "In physics, the dyne is a unit of force specified in the centimetre-gram-second (CGS) system of units. One dyne is equal to In physics, the dyne is a unit of force specified in the centimetre-gram-second (CGS) system of units. One dyne is equal to \\SI{10}{\\micro\\newton}. Equivalently, the dyne is defined as 'the force required to accelerate a mass of one gram at a rate of one centimetre per square second'. The dyne per centimetre is the unit traditionally used to measure surface tension."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00001 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Dyne"^^xsd:anyURI ;
    qudt:derivedCoherentUnitOfSystem sou:CGS ;
    qudt:derivedUnitOfSystem sou:CGS,
        sou:CGS-GAUSS ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Force ;
    qudt:iec61360Code "0112/2///62720#UAA422" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Dyne?oldid=494703827"^^xsd:anyURI ;
    qudt:latexDefinition "\\(g\\cdot cm/s^{2}\\)"^^qudt:LatexString ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/dyne> ;
    qudt:symbol "dyn" ;
    qudt:ucumCode "dyn"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "DU" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Square Foot"@en ;
    dcterms:description "The square foot (plural square feet; abbreviated \\(ft^2\\) or \\(sq \\, ft\\)) is an imperial unit and U.S. customary unit of area, used mainly in the United States, Canada, United Kingdom, Hong Kong, Bangladesh, India, Pakistan and Afghanistan. It is defined as the area of a square with sides of 1 foot in length."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.09290304 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(ft^{2}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Area ;
    qudt:iec61360Code "0112/2///62720#UAA454" ;
    qudt:ucumCode "[ft_i]2"^^qudt:UCUMcs,
        "[sft_i]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "FTK" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KIP_F a qudt:Unit ;
    rdfs:label "Kip"@en ;
    dcterms:description "1000 pound-force"^^rdf:HTML ;
    qudt:conversionMultiplier 4448.222 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Kip"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Force ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Kip?oldid=492552722"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/kip> ;
    qudt:symbol "kip" ;
    qudt:ucumCode "k[lbf_av]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM_F a qudt:Unit ;
    rdfs:label "Kilogram Force"@en ;
    dcterms:description "\"Kilogram Force\" is a unit for  'Force' expressed as \\(kgf\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 9.80665 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Kilogram-force"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Force ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Kilogram-force?oldid=493375479"^^xsd:anyURI ;
    qudt:symbol "kgf" ;
    qudt:ucumCode "kgf"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloN a qudt:Unit ;
    rdfs:label "Kilonewton"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Force ;
    qudt:iec61360Code "0112/2///62720#UAA573" ;
    qudt:plainTextDescription "1 000-fold of the SI derived unit newton" ;
    qudt:ucumCode "kN"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B47" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloP a qudt:Unit ;
    rdfs:label "Kilopond"@en ;
    dcterms:description "Same as kilogramForce"^^rdf:HTML ;
    qudt:conversionMultiplier 9.80665 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Force ;
    qudt:iec61360Code "0112/2///62720#UAB059" ;
    qudt:symbol "kp" ;
    qudt:ucumCode "kgf"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B51" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloPOND a qudt:Unit ;
    rdfs:label "Kilopond"@en ;
    qudt:conversionMultiplier 9.80665 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Force ;
    qudt:iec61360Code "0112/2///62720#UAB059" ;
    qudt:plainTextDescription "illegal unit of the weight, defined as mass of 1 kg which receives a weight of 1 kp through gravitation at sea level, which equates to a force of 9,806 65 newton" ;
    qudt:uneceCommonCode "B51" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB_F a qudt:Unit ;
    rdfs:label "Pound Force"@en ;
    dcterms:description "\"Pound Force\" is an Imperial unit for  'Force' expressed as \\(lbf\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 4.448222 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Pound-force"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Force ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Pound-force?oldid=453191483"^^xsd:anyURI ;
    qudt:symbol "lbf" ;
    qudt:ucumCode "[lbf_av]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaLB_F a qudt:Unit ;
    rdfs:label "Mega Pound Force"@en ;
    qudt:conversionMultiplier 4448.222 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Pound-force"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Force ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Pound-force?oldid=453191483"^^xsd:anyURI ;
    qudt:symbol "Mlbf" ;
    qudt:ucumCode "M[lbf_av]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaN a qudt:Unit ;
    rdfs:label "Meganewton"@en ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Force ;
    qudt:iec61360Code "0112/2///62720#UAA213" ;
    qudt:plainTextDescription "1,000,000-fold of the SI derived unit newton" ;
    qudt:ucumCode "MN"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B73" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroN a qudt:Unit ;
    rdfs:label "Micronewton"@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Force ;
    qudt:iec61360Code "0112/2///62720#UAA070" ;
    qudt:plainTextDescription "0.000001-fold of the SI derived unit newton" ;
    qudt:ucumCode "uN"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B92" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliN a qudt:Unit ;
    rdfs:label "Millinewton"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Force ;
    qudt:iec61360Code "0112/2///62720#UAA793" ;
    qudt:plainTextDescription "0.001-fold of the SI derived unit newton" ;
    qudt:ucumCode "mN"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C20" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:N a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Newton"@en ;
    dcterms:description "The \"Newton\" is the SI unit of force. A force of one newton will accelerate a mass of one kilogram at the rate of one meter per second per second. The newton is named for Isaac Newton (1642-1727), the British mathematician, physicist, and natural philosopher. He was the first person to understand clearly the relationship between force (F), mass (m), and acceleration (a) expressed by the formula \\(F = m \\cdot a\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Newton"^^xsd:anyURI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Force ;
    qudt:iec61360Code "0112/2///62720#UAA235" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Newton?oldid=488427661"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/newton> ;
    qudt:symbol "N" ;
    qudt:ucumCode "N"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "NEW" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NanoM2 a qudt:Unit ;
    rdfs:label "Square Nanometre"@en,
        "Square Nanometer"@en-us ;
    qudt:conversionMultiplier 0.000000000000000001 ;
    qudt:expression "\\(sqnm\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Area,
        quantitykind:NuclearQuadrupoleMoment ;
    qudt:plainTextDescription "A unit of area equal to that of a square, of sides 1nm" ;
    qudt:ucumCode "nm2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OZ_F a qudt:Unit ;
    rdfs:label "Imperial Ounce Force"@en ;
    dcterms:description "\"Ounce Force\" is an Imperial unit for  'Force' expressed as \\(ozf\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.278013875 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Force ;
    qudt:symbol "ozf" ;
    qudt:ucumCode "[ozf_av]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PDL a qudt:Unit ;
    rdfs:label "Poundal"@en ;
    dcterms:description "The poundal is a unit of force that is part of the foot-pound-second system of units, in Imperial units introduced in 1877, and is from the specialized subsystem of English absolute (a coherent system). The poundal is defined as the force necessary to accelerate 1 pound-mass to 1 foot per second per second. \\(1 pdl = 0.138254954376 N\\) exactly."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.138254954376 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Poundal"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Force ;
    qudt:iec61360Code "0112/2///62720#UAB233" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Poundal?oldid=494626458"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/poundal> ;
    qudt:symbol "pdl" ;
    qudt:ucumCode "[lb_av].[ft_i].s-2"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PlanckForce a qudt:Unit ;
    rdfs:label "Planck Force"@en ;
    dcterms:description "Planck force is the derived unit of force resulting from the definition of the base Planck units for time, length, and mass. It is equal to the natural unit of momentum divided by the natural unit of time."^^rdf:HTML ;
    qudt:conversionMultiplier 121027000000000000000000000000000000000000000.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Planck_force"^^xsd:anyURI ;
    qudt:derivedUnitOfSystem sou:PLANCK ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Force ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Planck_force?oldid=493643031"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:TON_F_US a qudt:Unit ;
    rdfs:label "Ton Force (US Short)"@en ;
    qudt:conversionMultiplier 8896.443230521 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Force ;
    qudt:iec61360Code "0112/2///62720#UAB021" ;
    qudt:plainTextDescription "unit of the force according to the American system of units" ;
    qudt:ucumCode "[stonf_av]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L94" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:W a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Watt"@en ;
    dcterms:description "The SI unit of power. Power is the rate at which work is done, or (equivalently) the rate at which energy is expended. One watt is equal to a power rate of one joule of work per second of time. This unit is used both in mechanics and in electricity, so it links the mechanical and electrical units to one another. In mechanical terms, one watt equals about 0.001 341 02 horsepower (hp) or 0.737 562 foot-pound per second (lbf/s). In electrical terms, one watt is the power produced by a current of one ampere flowing through an electric potential of one volt. The name of the unit honors James Watt (1736-1819), the British engineer whose improvements to the steam engine are often credited with igniting the Industrial Revolution." ;
    qudt:allowedUnitOfSystem sou:PLANCK ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Watt"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:Power ;
    qudt:iec61360Code "0112/2///62720#UAA306" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Watt?oldid=494906356"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\text{W}\\ \\equiv\\ \\text{watt}\\ \\equiv\\ \\frac{\\text{J}}{\\text{s}}\\ \\equiv\\ \\frac{\\text{joule}}{\\text{second}}\\ \\equiv\\ \\frac{\\text{N.m}}{\\text{s}}\\ \\equiv\\ \\frac{\\text{newton.metre}}{\\text{second}}\\ \\equiv\\ \\text{V.A}\\ \\equiv\\ \\text{volt.amp}\\ \\equiv\\ \\Omega\\text{.A}^{2}\\ \\equiv\\ \\text{ohm.amp}^{2}\\)"^^qudt:LatexString ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/watt> ;
    qudt:symbol "W",
        "W"^^xsd:string ;
    qudt:ucumCode "W"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:W-PER-CentiM2 a qudt:Unit ;
    rdfs:label "Watt per Square Centimetre"@en,
        "Watt per Square Centimeter"@en-us ;
    dcterms:description "Watt Per Square Centimeter is a unit of heat flux or thermal flux, the rate of heat energy transfer through a given surface."^^rdf:HTML ;
    qudt:conversionMultiplier 10000.0 ;
    qudt:expression "\\(W/ft^{2}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:PowerPerArea ;
    qudt:iec61360Code "0112/2///62720#UAB224" ;
    qudt:ucumCode "W.cm-2"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:W-PER-FT2 a qudt:Unit ;
    rdfs:label "Watt per Square Foot"@en ;
    dcterms:description "Watt Per Square Foot is a unit of heat flux or thermal flux, the rate of heat energy transfer through a given surface."^^rdf:HTML ;
    qudt:conversionMultiplier 10.7639104 ;
    qudt:expression "\\(W/ft^{2}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:PowerPerArea ;
    qudt:ucumCode "W.[sft_i]-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:USCS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:W-PER-IN2 a qudt:Unit ;
    rdfs:label "Watt per Square Inch"@en ;
    dcterms:description "Watt Per Square Inch is a unit of heat flux or thermal flux, the rate of heat energy transfer through a given surface."^^rdf:HTML ;
    qudt:conversionMultiplier 1550.0031 ;
    qudt:expression "\\(W/in^{2}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:PowerPerArea ;
    qudt:iec61360Code "0112/2///62720#UAB225" ;
    qudt:ucumCode "W.[sin_i]-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:USCS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

spin:Functions a spin:Function ;
    rdfs:label "Functions" ;
    spin:abstract true ;
    rdfs:comment "An abstract base class for all defined functions. This class mainly serves as a shared root so that the various instances of the Function metaclass are grouped together." ;
    rdfs:subClassOf spin:Modules .

sh:property a rdf:Property ;
    rdfs:label "property"@en ;
    rdfs:comment "Links a shape to its property shapes."@en ;
    rdfs:domain sh:Shape ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:PropertyShape .

brick:Air_Quality a brick:Quantity ;
    rdfs:label "Air Quality" .

brick:Chilled_Water a owl:Class,
        sh:NodeShape,
        brick:Chilled_Water ;
    rdfs:label "Chilled Water" ;
    rdfs:subClassOf brick:Water ;
    skos:definition "water used as a cooling medium (particularly in air-conditioning systems or in processes) at below ambient temperature."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Chilled ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Chilled,
        tag:Fluid,
        tag:Liquid,
        tag:Water .

brick:Exhaust_Air a owl:Class,
        sh:NodeShape,
        brick:Exhaust_Air ;
    rdfs:label "Exhaust Air" ;
    rdfs:subClassOf brick:Air ;
    skos:definition "air that must be removed from a space due to contaminants, regardless of pressurization"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Exhaust ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Exhaust,
        tag:Fluid,
        tag:Gas .

brick:Limit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Limit" ;
    rdfs:subClassOf brick:Parameter ;
    skos:definition "A parameter that places a lower or upper bound on the range of permitted values of a Setpoint."@en,
        "A parameter that places an upper or lower bound on the range of permitted values of another point"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Limit ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Limit,
        tag:Parameter,
        tag:Point .

brick:hasPart a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Has part" ;
    owl:inverseOf brick:isPartOf ;
    skos:definition "The subject is composed in part of the entity given by the object"@en .

brick:hasUnit a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Has unit" ;
    rdfs:range unit:Unit ;
    skos:definition "The QUDT unit associated with this Brick entity (usually a Brick Point instance or Entity Property)"@en .

tag:Average a brick:Tag ;
    rdfs:label "Average" .

tag:CO a brick:Tag ;
    rdfs:label "CO" .

tag:Control a brick:Tag ;
    rdfs:label "Control" .

tag:Distribution a brick:Tag ;
    rdfs:label "Distribution" .

tag:Gain a brick:Tag ;
    rdfs:label "Gain" .

tag:Leaving a brick:Tag ;
    rdfs:label "Leaving" .

tag:Lockout a brick:Tag ;
    rdfs:label "Lockout" .

tag:Loop a brick:Tag ;
    rdfs:label "Loop" .

tag:Motor a brick:Tag ;
    rdfs:label "Motor" .

tag:Plenum a brick:Tag ;
    rdfs:label "Plenum" .

tag:Shade a brick:Tag ;
    rdfs:label "Shade" .

tag:Solar a brick:Tag ;
    rdfs:label "Solar" .

tag:Standby a brick:Tag ;
    rdfs:label "Standby" .

tag:Thermal a brick:Tag ;
    rdfs:label "Thermal" .

<http://data.ashrae.org/standard223/1.0/inference/model-rules> a owl:Ontology ;
    owl:imports <http://data.ashrae.org/standard223/1.0/model/all>,
        sh: ;
    owl:versionInfo "Created with TopBraid Composer" ;
    sh:declare [ sh:namespace "http://data.ashrae.org/standard223#"^^xsd:anyURI ;
            sh:prefix "s223" ],
        [ sh:namespace "http://data.ashrae.org/standard223/1.0/vocab/role#"^^xsd:anyURI ;
            sh:prefix "role" ],
        [ sh:namespace "http://www.w3.org/2000/01/rdf-schema#"^^xsd:anyURI ;
            sh:prefix "rdfs" ] .

<http://qudt.org/2.1/schema/shacl/overlay/qudt> a owl:Ontology ;
    rdfs:label "QUDT SHACL Schema Supplement- Version 2.1.15" ;
    owl:imports <http://qudt.org/2.1/schema/qudt>,
        <http://qudt.org/2.1/schema/shacl/customisations/qudt>,
        sh: ;
    sh:declare [ a sh:PrefixDeclaration ;
            sh:namespace "http://qudt.org/schema/qudt/"^^xsd:anyURI ;
            sh:prefix "qudt" ],
        [ a sh:PrefixDeclaration ;
            sh:namespace "http://qudt.org/vocab/quantitykind/"^^xsd:anyURI ;
            sh:prefix "quantitykind" ],
        [ a sh:PrefixDeclaration ;
            sh:namespace "http://qudt.org/vocab/unit/"^^xsd:anyURI ;
            sh:prefix "unit" ],
        [ a sh:PrefixDeclaration ;
            sh:namespace "http://www.w3.org/2004/02/skos/core#"^^xsd:anyURI ;
            sh:prefix "skos" ] .

<http://qudt.org/2.1/vocab/sou> a owl:Ontology ;
    vaem:hasGraphMetadata vaem:GMD_QUDT-SOU ;
    owl:imports <http://qudt.org/2.1/schema/qudt> ;
    owl:versionInfo "Created with TopBraid Composer" .

qudt:DimensionlessUnit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Dimensionless Unit" ;
    rdfs:comment "A Dimensionless Unit is a quantity for which all the exponents of the factors corresponding to the base quantities in its quantity dimension are zero."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Unit .

qkdv:A0E0L-1I0M1H0T-1D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-1I0M1H0T-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:DynamicViscosity ;
    qudt:latexDefinition "\\(L^-1 M T^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-2I1M0H0T0D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-2I1M0H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -2 ;
    qudt:dimensionExponentForLuminousIntensity 1 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:Luminance ;
    qudt:latexDefinition "\\(L^-2 J\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

quantitykind:AngularVelocity a qudt:QuantityKind ;
    rdfs:label "Angular Velocity"@en ;
    dcterms:description "Angular Velocity refers to how fast an object rotates or revolves relative to another point."^^qudt:LatexString ;
    qudt:applicableUnit unit:DEG-PER-HR,
        unit:DEG-PER-MIN,
        unit:DEG-PER-SEC,
        unit:PlanckFrequency_Ang,
        unit:RAD-PER-HR,
        unit:RAD-PER-MIN,
        unit:RAD-PER-SEC,
        unit:REV-PER-HR,
        unit:REV-PER-MIN,
        unit:REV-PER-SEC ;
    qudt:baseUnitDimensions "\\(/s\\)"^^qudt:LatexString,
        "\\(U/T\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Angular_velocity"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Angular_velocity"^^xsd:anyURI ;
    qudt:plainTextDescription "The change of angle per unit time; specifically, in celestial mechanics, the change in angle of the radius vector per unit time." ;
    qudt:qkdvDenominator qkdv:A0E0L1I0M0H0T1D0 ;
    qudt:qkdvNumerator qkdv:A0E0L1I0M0H0T0D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:NumberDensity a qudt:QuantityKind ;
    rdfs:label "Number Density"@en ;
    qudt:applicableUnit unit:NUM-PER-L,
        unit:NUM-PER-M3,
        unit:NUM-PER-MicroL,
        unit:NUM-PER-NanoL,
        unit:PER-M3 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Number_density"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Number_density"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(n = \\frac{N}{V}\\), where \\(N\\) is the number of particles and \\(V\\) is volume."^^qudt:LatexString ;
    qudt:plainTextDescription "In physics, astronomy, and chemistry, number density (symbol: n) is a kind of quantity used to describe the degree of concentration of countable objects (atoms, molecules, dust particles, galaxies, etc.) in the three-dimensional physical space." ;
    qudt:symbol "n" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:InverseVolume .

quantitykind:Resistance a qudt:QuantityKind ;
    rdfs:label "Resistance"@en ;
    qudt:applicableUnit unit:GigaOHM,
        unit:KiloOHM,
        unit:MegaOHM,
        unit:MicroOHM,
        unit:MilliOHM,
        unit:OHM,
        unit:OHM_Ab,
        unit:OHM_Stat,
        unit:PlanckImpedance,
        unit:TeraOHM ;
    qudt:baseUnitDimensions "\\(L^2 \\cdot M/I^2 \\cdot T^3\\)"^^qudt:LatexString,
        "\\(kg \\cdot m^2/A^2 \\cdot s^3\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Resistance"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E-2L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=131-12-45"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(R = \\frac{u}{i}\\), where \\(u\\) is instantaneous voltage and \\(i\\) is instantaneous electric current."^^qudt:LatexString ;
    qudt:plainTextDescription "The electrical resistance of an object is a measure of its opposition to the passage of a steady electric current." ;
    qudt:symbol "R" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricCurrent,
        quantitykind:Impedance,
        quantitykind:InstantaneousPower .

quantitykind:Speed a qudt:QuantityKind ;
    rdfs:label "Speed"@en ;
    qudt:applicableUnit unit:BFT,
        unit:FT3-PER-MIN-FT2,
        unit:GigaC-PER-M3,
        unit:GigaHZ-M,
        unit:HZ-M,
        unit:M-PER-SEC,
        unit:MegaHZ-M ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Speed"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:plainTextDescription "Speed is the magnitude of velocity." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

unit:BYTE a qudt:CountingUnit,
        qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Byte"@en ;
    dcterms:description "The byte is a unit of digital information in computing and telecommunications that most commonly consists of eight bits."^^rdf:HTML ;
    qudt:conversionMultiplier 5.5451774444795624753378569716654 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Byte"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:InformationEntropy ;
    qudt:iec61360Code "0112/2///62720#UAA354" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Byte?oldid=493588918"^^xsd:anyURI ;
    qudt:isScalingOf unit:BIT ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/byte> ;
    qudt:symbol "B" ;
    qudt:ucumCode "By"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "AD" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GR a qudt:DimensionlessUnit,
        qudt:Unit ;
    rdfs:label "Grade"@en ;
    dcterms:description "the tangent of an angle of inclination multiplied by 100"^^rdf:HTML ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Grade"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:DimensionlessRatio ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Grade?oldid=485504533"^^xsd:anyURI ;
    qudt:symbol "gr" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:K a qudt:Unit,
        unit:Unit ;
    rdfs:label "Kelvin"@en ;
    dcterms:description "\\(The SI base unit of temperature, previously called the degree Kelvin. One kelvin represents the same temperature difference as one degree Celsius. In 1967 the General Conference on Weights and Measures defined the temperature of the triple point of water (the temperature at which water exists simultaneously in the gaseous, liquid, and solid states) to be exactly 273.16 kelvins. Since this temperature is also equal to 0.01 u00b0C, the temperature in kelvins is always equal to 273.15 plus the temperature in degrees Celsius. The kelvin equals exactly 1.8 degrees Fahrenheit. The unit is named for the British mathematician and physicist William Thomson (1824-1907), later known as Lord Kelvin after he was named Baron Kelvin of Largs.\\)"^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Kelvin"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:hasQuantityKind quantitykind:Temperature,
        quantitykind:ThermodynamicTemperature ;
    qudt:iec61360Code "0112/2///62720#UAA185",
        "0112/2///62720#UAD721" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Kelvin?oldid=495075694"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/kelvin> ;
    qudt:symbol "K",
        "K"^^xsd:string ;
    qudt:ucumCode "K"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "KEL" ;
    qudt:unitOfSystem sou:SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Square Metre"@en,
        "Square Meter"@en-us ;
    dcterms:description "The S I unit of area is the square metre."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Square_metre"^^xsd:anyURI ;
    qudt:expression "\\(sq-m\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Area,
        quantitykind:NuclearQuadrupoleMoment ;
    qudt:iec61360Code "0112/2///62720#UAA744" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Square_metre?oldid=490945508"^^xsd:anyURI ;
    qudt:ucumCode "m2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "MTK" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PPTR a qudt:Unit ;
    rdfs:label "Parts per trillion"@en ;
    dcterms:description "Dimensionless unit for concentration. Recommended practice is to use specific units such as \\(ug/l\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.000000000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:DimensionlessRatio ;
    qudt:informativeReference "http://aurora.regenstrief.org/~ucum/ucum.html#section-Derived-Unit-Atoms"^^xsd:anyURI ;
    qudt:symbol "pptr" ;
    qudt:ucumCode "[pptr]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:W-PER-M2 a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Watt per Square Metre"@en,
        "Watt per Square Meter"@en-us ;
    dcterms:description "\"Watt per Square Meter} is a unit of irradiance defined as the power received per area. This is a unit in the category of Energy flux. It is also known as watts per square meter, watt per square metre, watts per square metre, watt/square meter, watt/square metre. This unit is commonly used in the SI unit system. Watt Per Square Meter (\\(W/m^2\\)) has a dimension of \\(MT^{-3\"\\) where M is mass, and T is time. This unit is the standard SI unit in this category."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(W/m^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:hasQuantityKind quantitykind:PowerPerArea,
        quantitykind:PoyntingVector ;
    qudt:iec61360Code "0112/2///62720#UAA310" ;
    qudt:informativeReference "http://www.efunda.com/glossary/units/units--energy_flux--watt_per_square_meter.cfm"^^xsd:anyURI ;
    qudt:ucumCode "W.m-2"^^qudt:UCUMcs,
        "W/m2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D54" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

sp:or a spin:Function ;
    rdfs:label "or" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType xsd:boolean ;
            rdfs:comment "the second operand" ],
        [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType xsd:boolean ;
            rdfs:comment "the first operand" ] ;
    spin:returnType xsd:boolean ;
    spin:symbol "||" ;
    rdfs:comment "Returns the logical OR between two (boolean) operands." ;
    rdfs:subClassOf spl:BooleanFunctions .

spin:violationPath a rdf:Property ;
    rdfs:label "violation path" ;
    rdfs:comment "An optional attribute of ConstraintViolations to provide a path expression from the root resource to the value that is invalid. If this is a URI then the path represents the predicate of a subject/predicate combination. Otherwise it should be a blank node of type sp:Path." ;
    rdfs:domain spin:ConstraintViolation ;
    rdfs:range rdfs:Resource ;
    rdfs:subPropertyOf spin:systemProperty .

spin:violationRoot a rdf:Property ;
    rdfs:label "violation root" ;
    rdfs:comment "The root resource of the violation (often ?this in the constraint body)." ;
    rdfs:domain spin:ConstraintViolation ;
    rdfs:range rdfs:Resource ;
    rdfs:subPropertyOf spin:systemProperty .

spl:MathematicalFunctions a spin:Function ;
    rdfs:label "Mathematical functions" ;
    spin:abstract true ;
    rdfs:comment "A collection of functions operating on numbers." ;
    rdfs:subClassOf spin:Functions .

brick:Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Parameter" ;
    rdfs:subClassOf brick:Point ;
    owl:disjointWith brick:Alarm,
        brick:Command,
        brick:Sensor,
        brick:Setpoint,
        brick:Status ;
    skos:definition "Parameter points are configuration settings used to guide the operation of equipment and control systems; for example they may provide bounds on valid setpoint values"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Parameter,
        tag:Point .

qudt:CountingUnit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Counting Unit" ;
    qudt:description "All units about counts. Examples are Atomic Number, Number, Number per Year, Percent and Sample per Second." ;
    rdfs:comment "Used for all units that express counts. Examples are Atomic Number, Number, Number per Year, Percent and Sample per Second."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.0/schema/qudt/mathematics>,
        <http://qudt.org/2.1/schema/qudt>,
        qudt:mathematics ;
    rdfs:subClassOf qudt:DimensionlessUnit ;
    skos:closeMatch <http://dbpedia.org/resource/Category:Units_of_amount> .

qudt:hasQuantityKind a owl:ObjectProperty ;
    rdfs:label "has quantity kind" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    owl:inverseOf qudt:isQuantityKindOf .

qkdv:A0E0L-1I0M1H0T0D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-1I0M1H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:MassPerLength ;
    qudt:latexDefinition "\\(L^-1 M\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L2I0M1H0T-1D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L2I0M1H0T-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:AngularMomentum ;
    qudt:latexDefinition "\\(L^2 M T^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E1L-1I0M0H0T0D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E1L-1I0M0H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 1 ;
    qudt:dimensionExponentForLength -1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:latexDefinition "\\(L^-1 I\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

quantitykind:DynamicViscosity a qudt:QuantityKind ;
    rdfs:label "Dynamic Viscosity"@en ;
    qudt:applicableUnit unit:CentiPOISE,
        unit:KiloGM-PER-M-HR,
        unit:KiloGM-PER-M-SEC,
        unit:LB-PER-FT-HR,
        unit:LB-PER-FT-SEC,
        unit:LB_F-SEC-PER-FT2,
        unit:LB_F-SEC-PER-IN2,
        unit:MicroPOISE,
        unit:MilliPA-SEC,
        unit:PA-SEC,
        unit:PA-SEC-PER-M,
        unit:POISE,
        unit:SLUG-PER-FT-SEC ;
    qudt:baseUnitDimensions "\\(M/L \\cdot T\\)"^^qudt:LatexString,
        "\\(kg/m \\cdot s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-1D0 ;
    qudt:informativeReference "http://dictionary.reference.com/browse/dynamic+viscosity"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\tau_{xz} = \\eta\\frac{dv_x}{dz}\\), where \\(\\tau_{xz}\\) is shear stress in a fluid moving with a velocity gradient \\(\\frac{dv_x}{dz}\\) perpendicular to the plane of shear. "^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\mu\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "A measure of the molecular frictional resistance of a fluid as calculated using Newton's law." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Viscosity .

quantitykind:ElectricChargePerArea a qudt:QuantityKind ;
    rdfs:label "Electric charge per area"@en ;
    dcterms:description "In electromagnetism, charge density is a measure of electric charge per unit volume of space, in one, two or three dimensions. More specifically: the linear, surface, or volume charge density is the amount of electric charge per unit length, surface area, or volume, respectively. The respective SI units are \\(C \\cdot m^{-1}\\), \\(C \\cdot m^{-2}\\) or \\(C \\cdot m^{-3}\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:C-PER-CentiM2,
        unit:C-PER-M2,
        unit:C-PER-MilliM2,
        unit:C_Ab-PER-CentiM2,
        unit:C_Stat-PER-CentiM2,
        unit:KiloC-PER-M2,
        unit:MegaC-PER-M2,
        unit:MicroC-PER-M2,
        unit:MilliC-PER-M2 ;
    qudt:baseUnitDimensions "\\(A \\cdot s/m^2\\)"^^qudt:LatexString,
        "\\(I \\cdot T/L^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L-2I0M0H0T1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Charge_density"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\sigma\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:EnergyPerArea a qudt:QuantityKind ;
    rdfs:label "Energy per Area"@en ;
    qudt:applicableUnit unit:BTU_IT-PER-FT2,
        unit:FT-LB_F-PER-FT2,
        unit:FT-LB_F-PER-M2,
        unit:J-PER-CentiM2,
        unit:J-PER-M2,
        unit:KiloCAL-PER-CentiM2,
        unit:KiloGM-PER-SEC2,
        unit:MegaJ-PER-M2,
        unit:N-M-PER-M2,
        unit:PicoPA-PER-KiloM,
        unit:W-SEC-PER-M2 ;
    qudt:baseUnitDimensions "\\(M/T^2\\)"^^qudt:LatexString,
        "\\(kg/s^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.calculator.org/property.aspx?name=energy%20per%20unit%20area"^^xsd:anyURI ;
    qudt:plainTextDescription "Energy per unit area is a measure of the energy either impinging upon or generated from a given unit of area. This can be a measure of the \"toughness\" of a material, being the amount of energy that needs to be applied per unit area of a crack to cause it to fracture. This is a constant for a given material.." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MagneticFluxDensity a qudt:QuantityKind ;
    rdfs:label "Magnetic flux density"@en ;
    dcterms:description "\"Magnetic Flux Density\" is a vector quantity and is the magnetic flux per unit area of a magnetic field at right angles to the magnetic force. It can be defined in terms of the effects the field has, for example by \\(B = F/q v \\sin \\theta\\), where \\(F\\) is the force a moving charge \\(q\\) would experience if it was travelling at a velocity \\(v\\) in a direction making an angle θ with that of the field. The magnetic field strength is also a vector quantity and is related to \\(B\\) by: \\(H = B/\\mu\\), where \\(\\mu\\) is the permeability of the medium."^^qudt:LatexString ;
    qudt:applicableUnit unit:GAUSS,
        unit:Gamma,
        unit:Gs,
        unit:KiloGAUSS,
        unit:MicroT,
        unit:MilliT,
        unit:NanoT,
        unit:T,
        unit:T_Ab ;
    qudt:baseUnitDimensions "\\(kg/A \\cdot s^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-1L0I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI,
        "http://www.oxfordreference.com/view/10.1093/acref/9780199233991.001.0001/acref-9780199233991-e-1798"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mathbf{F}  = qv \\times B\\), where \\(F\\) is force and \\(v\\) is velocity of any test particle with electric charge \\(q\\)."^^qudt:LatexString ;
    qudt:symbol "B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MassRatio a qudt:QuantityKind ;
    rdfs:label "Mass Ratio"@en ;
    qudt:applicableUnit unit:FemtoGM-PER-KiloGM,
        unit:GM-PER-GM,
        unit:GM-PER-KiloGM,
        unit:KiloGM-PER-KiloGM,
        unit:MicroGM-PER-GM,
        unit:MicroGM-PER-KiloGM,
        unit:MilliGM-PER-GM,
        unit:MilliGM-PER-KiloGM,
        unit:NanoGM-PER-KiloGM,
        unit:PicoGM-PER-GM,
        unit:PicoGM-PER-KiloGM ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:plainTextDescription "In aerospace engineering, mass ratio is a measure of the efficiency of a rocket. It describes how much more massive the vehicle is with propellant than without; that is, it is the ratio of the rocket's wet mass (vehicle plus contents plus propellant) to its dry mass (vehicle plus contents)" ;
    qudt:symbol "R or M_{R}" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

unit:DeciB_M a qudt:DimensionlessUnit,
        qudt:Unit ;
    rdfs:label "Decibel Referred to 1mw"@en ;
    dcterms:description "\"Decibel Referred to 1mw\" is a  'Dimensionless Ratio' expressed as \\(dBm\\)."^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:DimensionlessRatio ;
    qudt:symbol "dBm" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M-PER-SEC a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Metre per Second"@en,
        "Meter per Second"@en-us ;
    dcterms:description """Metre per second is an SI derived unit of both speed (scalar) and velocity (vector quantity which specifies both magnitude and a specific direction), defined by distance in metres divided by time in seconds.
The official SI symbolic abbreviation is mu00b7s-1, or equivalently either m/s."""^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:expression "\\(m/s\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:ElectromagneticWavePhaseSpeed,
        quantitykind:Speed,
        quantitykind:Velocity ;
    qudt:iec61360Code "0112/2///62720#UAA733" ;
    qudt:ucumCode "m.s-1"^^qudt:UCUMcs,
        "m/s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "MTS" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PPTH a qudt:Unit ;
    rdfs:label "Parts per thousand"@en ;
    dcterms:description "Dimensionless unit for concentration. Recommended practice is to use specific units such as \\(ug/l\\)."^^qudt:LatexString ;
    qudt:abbreviation "‰" ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:DimensionlessRatio ;
    qudt:informativeReference "http://aurora.regenstrief.org/~ucum/ucum.html#section-Derived-Unit-Atoms"^^xsd:anyURI ;
    qudt:literal "‰" ;
    qudt:symbol "‰" ;
    qudt:ucumCode "[ppth]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    skos:altLabel "per mil" .

sp:concat a spin:Function ;
    rdfs:label "concat" ;
    spin:returnType xsd:string ;
    spin:symbol "CONCAT" ;
    rdfs:comment "The CONCAT built-in function. Creates a single string by concatenating all arguments from left to right. Note that if any one of the arguments is unbound (null) then the whole result string will be unbound." ;
    rdfs:subClassOf spl:StringFunctions .

spl:instanceOf a spin:Function ;
    rdfs:label "instanceOf" ;
    spin:body [ a sp:Ask ;
            sp:where ( [ a sp:Union ;
                        sp:elements ( ( ( [ a sp:Filter ;
                                            sp:expression [ a sp:or ;
                                                    sp:arg1 [ a sp:isIRI ;
                                                            sp:arg1 spin:_arg1 ] ;
                                                    sp:arg2 [ a sp:isBlank ;
                                                            sp:arg1 spin:_arg1 ] ] ] ) [ a sp:TriplePath ;
                                        sp:object spin:_arg2 ;
                                        sp:path [ a sp:ModPath ;
                                                sp:modMax -2 ;
                                                sp:modMin 0 ;
                                                sp:subPath rdfs:subClassOf ] ;
                                        sp:subject [ sp:varName "class" ] ] [ sp:object [ sp:varName "class" ] ;
                                        sp:predicate rdf:type ;
                                        sp:subject spin:_arg1 ] ) ( ( [ a sp:Filter ;
                                            sp:expression [ a sp:isLiteral ;
                                                    sp:arg1 spin:_arg1 ] ] ) [ a sp:Bind ;
                                        sp:expression [ a sp:datatype ;
                                                sp:arg1 spin:_arg1 ] ;
                                        sp:variable [ sp:varName "datatype" ] ] [ a sp:Filter ;
                                        sp:expression [ a sp:or ;
                                                sp:arg1 [ a sp:or ;
                                                        sp:arg1 [ a sp:eq ;
                                                                sp:arg1 [ sp:varName "datatype" ] ;
                                                                sp:arg2 spin:_arg2 ] ;
                                                        sp:arg2 [ a sp:eq ;
                                                                sp:arg1 spin:_arg2 ;
                                                                sp:arg2 rdfs:Literal ] ] ;
                                                sp:arg2 [ a sp:and ;
                                                        sp:arg1 [ a sp:or ;
                                                                sp:arg1 [ a sp:not ;
                                                                        sp:arg1 [ a sp:bound ;
                                                                                sp:arg1 [ sp:varName "datatype" ] ] ] ;
                                                                sp:arg2 [ a sp:eq ;
                                                                        sp:arg1 rdf:langString ;
                                                                        sp:arg2 [ sp:varName "datatype" ] ] ] ;
                                                        sp:arg2 [ a sp:eq ;
                                                                sp:arg1 spin:_arg2 ;
                                                                sp:arg2 xsd:string ] ] ] ] ) ) ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg2 ;
            spl:valueType rdfs:Class ;
            rdfs:comment "the type that the instance must have" ],
        [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            spl:valueType rdfs:Resource ;
            rdfs:comment "the instance being tested" ] ;
    spin:labelTemplate "{?arg1} instance of {?arg2}" ;
    spin:returnType xsd:boolean ;
    rdfs:comment "Checks whether a given resource (?arg1) has a given type (?arg2). In order to fulfill this condition, there must either be a triple ?arg1 rdf:type ?arg2, or ?instance rdf:type ?subClass where ?subClass is a subclass of ?arg2. If the first argument is a literal, then the second argument must be the matching XSD datatype." ;
    rdfs:subClassOf spl:BooleanFunctions ;
    owl:versionInfo "Note that in TopBraid this function has been implemented in native Java code, for performance reasons." .

brick:Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Air Temperature Setpoint" ;
    rdfs:subClassOf brick:Temperature_Setpoint ;
    skos:definition "Sets temperature of air"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Point,
        tag:Setpoint,
        tag:Temperature ;
    brick:hasQuantity brick:Temperature ;
    brick:hasSubstance brick:Air .

brick:Humidity a brick:Quantity ;
    rdfs:label "Humidity" .

tag:Dewpoint a brick:Tag ;
    rdfs:label "Dewpoint" .

tag:Electric a brick:Tag ;
    rdfs:label "Electric" .

tag:Start a brick:Tag ;
    rdfs:label "Start" .

tag:Station a brick:Tag ;
    rdfs:label "Station" .

tag:Stop a brick:Tag ;
    rdfs:label "Stop" .

tag:Storage a brick:Tag ;
    rdfs:label "Storage" .

tag:Telecom a brick:Tag ;
    rdfs:label "Telecom" .

tag:Voltage a brick:Tag ;
    rdfs:label "Voltage" .

s223:Role a s223:Class,
        sh:NodeShape ;
    rdfs:label "Role" ;
    rdfs:comment "The Role is used to characterize the (possibly changing) function a Device or Connection is playing, such as Heating or Cooling or Supply." ;
    rdfs:subClassOf s223:Concept .

qkdv:A0E-1L2I0M1H0T-3D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E-1L2I0M1H0T-3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent -1 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -3 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:EnergyPerElectricCharge ;
    qudt:latexDefinition "\\(L^2 M T^-3 I^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-1I0M1H0T-3D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-1I0M1H0T-3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -3 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:ForcePerAreaTime ;
    qudt:latexDefinition "\\(L^-1 M T^-3\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A1E0L-3I0M0H0T0D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A1E0L-3I0M0H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 1 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -3 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:AmountOfSubstancePerUnitVolume ;
    qudt:latexDefinition "\\(L^-3 N\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

quantitykind:Conductivity a qudt:QuantityKind ;
    rdfs:label "Conductivity"@en ;
    qudt:applicableUnit unit:DeciS-PER-M,
        unit:KiloS-PER-M,
        unit:MegaS-PER-M,
        unit:MicroS-PER-CentiM,
        unit:MicroS-PER-M,
        unit:MilliS-PER-CentiM,
        unit:MilliS-PER-M,
        unit:NanoS-PER-CentiM,
        unit:NanoS-PER-M,
        unit:PicoS-PER-M,
        unit:S-PER-CentiM,
        unit:S-PER-M ;
    qudt:hasDimensionVector qkdv:A0E2L-3I0M-1H0T3D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-12-03"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mathbf{J} = \\sigma \\mathbf{E}\\), where \\(\\mathbf{J}\\) is electric current density, and \\(\\mathbf{E}\\) is electric field strength."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\gamma\\)"^^qudt:LatexString,
        "\\(\\sigma\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "\"Conductivity\" is a scalar or tensor quantity the product of which by the electric field strength in a medium is equal to the electric current density. For an isotropic medium the conductivity is a scalar quantity; for an anisotropic medium it is a tensor quantity." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricCurrentDensity,
        quantitykind:ElectricFieldStrength .

quantitykind:HeatFlowRate a qudt:QuantityKind ;
    rdfs:label "Heat Flow Rate"@en ;
    dcterms:description "The rate of heat flow between two systems is measured in watts (joules per second). The formula for rate of heat flow is \\(\\bigtriangleup Q / \\bigtriangleup t = -K \\times A \\times \\bigtriangleup T/x\\), where \\(\\bigtriangleup Q / \\bigtriangleup t\\) is the rate of heat flow; \\(-K\\) is the thermal conductivity factor; A is the surface area; \\(\\bigtriangleup T\\) is the change in temperature and \\(x\\) is the thickness of the material. \\(\\bigtriangleup  T/ x\\) is called the temperature gradient and is always negative because of the heat of flow always goes from more thermal energy to less)."^^qudt:LatexString ;
    qudt:applicableUnit unit:BTU_IT-PER-HR,
        unit:BTU_IT-PER-MIN,
        unit:BTU_IT-PER-SEC,
        unit:BTU_TH-PER-HR,
        unit:BTU_TH-PER-MIN,
        unit:BTU_TH-PER-SEC,
        unit:CAL_TH-PER-MIN,
        unit:CAL_TH-PER-SEC,
        unit:KiloCAL-PER-MIN,
        unit:KiloCAL-PER-SEC,
        unit:KiloCAL_TH-PER-HR,
        unit:KiloCAL_TH-PER-MIN,
        unit:KiloCAL_TH-PER-SEC,
        unit:TON_FG ;
    qudt:expression "\\(heat-flow-rate\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Rate_of_heat_flow"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\Phi\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Power .

quantitykind:SpecificHeatCapacity a qudt:QuantityKind ;
    rdfs:label "Specific Heat Capacity"@en ;
    qudt:applicableUnit unit:BTU_IT-PER-LB-DEG_F,
        unit:BTU_IT-PER-LB-DEG_R,
        unit:BTU_IT-PER-LB_F-DEG_F,
        unit:BTU_IT-PER-LB_F-DEG_R,
        unit:BTU_TH-PER-LB-DEG_F,
        unit:CAL_IT-PER-GM-DEG_C,
        unit:CAL_IT-PER-GM-K,
        unit:CAL_TH-PER-GM-DEG_C,
        unit:CAL_TH-PER-GM-K,
        unit:J-PER-KiloGM-K,
        unit:KiloCAL-PER-GM-DEG_C ;
    qudt:baseUnitDimensions "\\(L^2/\\Theta \\cdot T^2\\)"^^qudt:LatexString,
        "\\(m^2/K \\cdot s^2\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Specific_heat_capacity"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H-1T-2D0 ;
    qudt:informativeReference "http://www.taftan.com/thermodynamics/CP.HTM"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Specific Heat Capacity} of a solid or liquid is defined as the heat required to raise unit mass of substance by one degree of temperature. This is \\textit{Heat Capacity} divied by \\textit{Mass\". Note that there are corresponding molar quantities." ;
    qudt:symbol "c" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:HeatCapacity,
        quantitykind:Mass,
        quantitykind:SpecificHeatCapacityAtConstantPressure,
        quantitykind:SpecificHeatCapacityAtConstantVolume,
        quantitykind:SpecificHeatCapacityAtSaturation .

quantitykind:Temperature a qudt:QuantityKind ;
    rdfs:label "Temperature"@en ;
    qudt:applicableUnit unit:DEG_C,
        unit:DEG_F,
        unit:DEG_R,
        unit:K,
        unit:MilliDEG_C,
        unit:PlanckTemperature ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Temperature"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T0D0 ;
    qudt:plainTextDescription "Temperature is a physical property of matter that quantitatively expresses the common notions of hot and cold. Objects of low temperature are cold, while various degrees of higher temperatures are referred to as warm or hot. Heat spontaneously flows from bodies of a higher temperature to bodies of lower temperature, at a rate that increases with the temperature difference and the thermal conductivity." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ThermodynamicTemperature .

unit:A a qudt:Unit,
        unit:Unit ;
    rdfs:label "Ampere"@en ;
    dcterms:description """The  \\(\\textit{ampere}\\), often shortened to \\(\\textit{amp}\\), is the SI unit of electric current and is one of the seven SI base units.
\\(\\text{A}\\ \\equiv\\ \\text{amp (or ampere)}\\ \\equiv\\ \\frac{\\text{C}}{\\text{s}}\\ \\equiv\\ \\frac{\\text{coulomb}}{\\text{second}}\\ \\equiv\\ \\frac{\\text{J}}{\\text{Wb}}\\ \\equiv\\ \\frac{\\text{joule}}{\\text{weber}}\\)
Note that SI supports only the use of symbols and deprecates the use of any abbreviations for units."""^^qudt:LatexString ;
    qudt:allowedUnitOfSystem sou:CGS-EMU,
        sou:CGS-GAUSS,
        sou:PLANCK ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Ampere"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:CurrentLinkage,
        quantitykind:DisplacementCurrent,
        quantitykind:ElectricCurrent,
        quantitykind:ElectricCurrentPhasor,
        quantitykind:MagneticTension,
        quantitykind:MagnetomotiveForce,
        quantitykind:TotalCurrent ;
    qudt:iec61360Code "0112/2///62720#UAA101",
        "0112/2///62720#UAD717" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Ampere?oldid=494026699"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/ampere> ;
    qudt:symbol "A",
        "A"^^xsd:string ;
    qudt:ucumCode "A"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "AMP" ;
    qudt:unitOfSystem sou:SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    skos:altLabel "amp" .

unit:ARCSEC a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "ArcSecond"@en ;
    dcterms:description "\"Arc Second\" is a unit of angular measure, also called the \\(\\textit{second of arc}\\), equal to \\(1/60 \\; arcminute\\). One arcsecond is a very small angle: there are 1,296,000 in a circle. The SI recommends \\(\\textit{double prime}\\) (\\(''\\)) as the symbol for the arcsecond. The symbol has become common in astronomy, where very small angles are stated in milliarcseconds (\\(mas\\))."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00000484813681 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Angle ;
    qudt:iec61360Code "0112/2///62720#UAA096" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Minute_of_arc#Symbols.2C_abbreviations_and_subdivisions"^^xsd:anyURI ;
    qudt:symbol "\"",
        "\""^^xsd:string ;
    qudt:ucumCode "''"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D62" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG a qudt:Unit,
        unit:Unit ;
    rdfs:label "Degree"@en ;
    dcterms:description "A degree (in full, a degree of arc, arc degree, or arcdegree), usually denoted by \\(^\\circ\\) (the degree symbol), is a measurement of plane angle, representing 1/360 of a full rotation; one degree is equivalent to  \\(2\\pi /360 rad\\), \\(0.017453 rad\\). It is not an SI unit, as the SI unit for angles is radian, but is an accepted SI unit."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0174532925 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Angle ;
    qudt:iec61360Code "0112/2///62720#UAA024" ;
    qudt:informativeReference "http://www.oxfordreference.com/view/10.1093/acref/9780198605225.001.0001/acref-9780198605225-e-331"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/degree> ;
    qudt:symbol "°",
        "°"^^xsd:string ;
    qudt:ucumCode "deg"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "DD" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MIL a qudt:Unit,
        unit:Unit ;
    rdfs:label "Mil Angle (NATO)"@en ;
    dcterms:description "The Mil unit of plane angle, as defined by NATO to be 1/6400 of a circle."^^rdf:HTML ;
    qudt:conversionMultiplier 0.000490873852 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Angle ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroRAD a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "microradian"@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:guidance "<p>See NIST section <a href=\"http://physics.nist.gov/Pubs/SP811/sec07.html#7.10\">SP811 section7.10</a></p>"^^rdf:HTML ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Angle ;
    qudt:iec61360Code "0112/2///62720#UAA094" ;
    qudt:isScalingOf unit:RAD ;
    qudt:prefix prefix:Micro ;
    qudt:symbol "μrad",
        "μrad"^^xsd:string ;
    qudt:ucumCode "urad"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B97" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliRAD a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "milliradian"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:guidance "<http://physics.nist.gov/Pubs/SP811/sec07.html#7.10>"^^rdf:HTML ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Angle ;
    qudt:iec61360Code "0112/2///62720#UAA897" ;
    qudt:isScalingOf unit:RAD ;
    qudt:prefix prefix:Milli ;
    qudt:symbol "mrad",
        "mrad"^^xsd:string ;
    qudt:ucumCode "mrad"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C25" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:REV a qudt:Unit,
        unit:Unit ;
    rdfs:label "Revolution"@en ;
    dcterms:description "\"Revolution\" is a unit for  'Plane Angle' expressed as \\(rev\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 6.28318531 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Revolution"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Angle ;
    qudt:iec61360Code "0112/2///62720#UAB206" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Revolution?oldid=494110330"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/revolution> ;
    qudt:symbol "rev",
        "rev"^^xsd:string ;
    qudt:ucumCode "{#}"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Second"@en ;
    dcterms:description """The \\(Second\\) (symbol: \\(s\\)) is the base unit of time in the International System of Units (SI) and is also a unit of time in other systems of measurement. Between the years1000 (when al-Biruni used seconds) and 1960 the second was defined as \\(1/86400\\) of a mean solar day (that definition still applies in some astronomical and legal contexts). Between 1960 and 1967, it was defined in terms of the period of the Earth's orbit around the Sun in 1900, but it is now defined more precisely in atomic terms.
Under the International System of Units (via the International Committee for Weights and Measures, or CIPM), since 1967 the second has been defined as the duration of \\({9192631770}\\) periods of the radiation corresponding to the transition between the two hyperfine levels of the ground state of the caesium 133 atom.In 1997 CIPM added that the periods would be defined for a caesium atom at rest, and approaching the theoretical temperature of absolute zero, and in 1999, it included corrections from ambient radiation."""^^qudt:LatexString ;
    qudt:allowedUnitOfSystem sou:SI ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Second"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:Period,
        quantitykind:Time ;
    qudt:iec61360Code "0112/2///62720#UAA972",
        "0112/2///62720#UAD722" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Second?oldid=495241006"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/second-Time> ;
    qudt:symbol "s",
        "s"^^xsd:string ;
    qudt:ucumCode "s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "SEC" ;
    qudt:unitOfSystem sou:CGS,
        sou:SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

brick:Outside_Air a owl:Class,
        sh:NodeShape,
        brick:Outside_Air ;
    rdfs:label "Outside Air" ;
    rdfs:subClassOf brick:Air ;
    skos:definition "air external to a defined zone (e.g., corridors)."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Outside ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Fluid,
        tag:Gas,
        tag:Outside .

brick:Return_Air a owl:Class,
        sh:NodeShape,
        brick:Return_Air ;
    rdfs:label "Return Air" ;
    rdfs:subClassOf brick:Air ;
    skos:definition "air removed from a space to be recirculated or exhausted. Air extracted from a space and totally or partially returned to an air conditioner, furnace, or other heating, cooling, or ventilating system."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Return ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Fluid,
        tag:Gas,
        tag:Return .

brick:Static_Pressure a brick:Quantity ;
    rdfs:label "Static Pressure" ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CM_H2O,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PlanckPressure,
        unit:TORR ;
    skos:broader brick:Pressure ;
    brick:hasQUDTReference quantitykind:StaticPressure .

brick:Temperature_Parameter a owl:Class,
        sh:NodeShape ;
    rdfs:label "Temperature Parameter" ;
    rdfs:subClassOf brick:Parameter ;
    skos:definition "Parameters relevant to temperature-related systems and points"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Parameter ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Temperature ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Parameter,
        tag:Point,
        tag:Temperature .

s223:EnumerationKind a s223:Class,
        sh:NodeShape ;
    rdfs:label "Enumeration kind" ;
    rdfs:subClassOf s223:Concept ;
    sh:property [ sh:class s223:EnumerationValue ;
            sh:path s223:hasMember ],
        [ sh:class s223:EnumerationKind ;
            sh:path s223:includes ] .

qudt:MathsFunctionType a owl:Class ;
    rdfs:label "Maths Function Type" ;
    rdfs:isDefinedBy <http://qudt.org/2.0/schema/qudt/mathematics>,
        qudt:mathematics ;
    rdfs:subClassOf qudt:EnumeratedValue ;
    skos:prefLabel "Maths Algorithmn Type" .

qkdv:A0E-2L2I0M1H0T-3D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E-2L2I0M1H0T-3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent -2 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -3 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:Resistance ;
    qudt:latexDefinition "\\(L^2 M T^-3 I^-2\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L-2I0M1H0T-1D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-2I0M1H0T-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:MassPerAreaTime ;
    qudt:latexDefinition "\\(L^{-2} M T^{-1}\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L2I0M0H0T-1D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L2I0M0H0T-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:AreaPerTime ;
    qudt:latexDefinition "\\(L^2 T^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E1L-2I0M0H0T1D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E1L-2I0M0H0T1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 1 ;
    qudt:dimensionExponentForLength -2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:ElectricChargePerArea ;
    qudt:latexDefinition "\\(L^-2 T I\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

quantitykind:Acceleration a qudt:QuantityKind ;
    rdfs:label "Acceleration"@en ;
    dcterms:description "Acceleration is the (instantaneous) rate of change of velocity. Acceleration may be either linear acceleration, or angular acceleration. It is a vector quantity with dimension \\(length/time^{2}\\) for linear acceleration, or in the case of angular acceleration, with dimension \\(angle/time^{2}\\). In SI units, linear acceleration is measured in \\(meters/second^{2}\\) (\\(m \\cdot s^{-2}\\)) and angular acceleration is measured in \\(radians/second^{2}\\). In physics, any increase or decrease in speed is referred to as acceleration and similarly, motion in a circle at constant speed is also an acceleration, since the direction component of the velocity is changing."^^qudt:LatexString ;
    qudt:applicableUnit unit:CentiM-PER-SEC2,
        unit:FT-PER-SEC2,
        unit:G,
        unit:GALILEO,
        unit:IN-PER-SEC2,
        unit:KN-PER-SEC,
        unit:KiloPA-M2-PER-GM,
        unit:M-PER-SEC2,
        unit:MicroG,
        unit:MilliG,
        unit:MilliGAL ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Acceleration"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Acceleration"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:LinearAcceleration .

quantitykind:ElectricFieldStrength a qudt:QuantityKind ;
    rdfs:label "Electric Field Strength"@en ;
    dcterms:description "\\(\\textbf{Electric Field Strength}\\) is the magnitude and direction of an electric field, expressed by the value of \\(E\\), also referred to as \\(\\color{indigo} {\\textit{electric field intensity}}\\) or simply the electric field."^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloV-PER-M,
        unit:MegaV-PER-M,
        unit:MicroV-PER-M,
        unit:MilliV-PER-M,
        unit:V-PER-CentiM,
        unit:V-PER-IN,
        unit:V-PER-M,
        unit:V-PER-MilliM,
        unit:V_Ab-PER-CentiM,
        unit:V_Stat-PER-CentiM ;
    qudt:baseUnitDimensions "\\(kg \\cdot m/A \\cdot s^3\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-1L1I0M1H0T-3D0 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mathbf{E} = \\mathbf{F}/q\\), where \\(\\mathbf{F}\\) is force and \\(q\\) is electric charge, of a test particle at rest."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\mathbf{E} \\)"^^qudt:LatexString ;
    qudt:symbol "E" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:EnergyPerElectricCharge a qudt:QuantityKind ;
    rdfs:label "Energy per electric charge"@en ;
    dcterms:description "Voltage is a representation of the electric potential energy per unit charge. If a unit of electrical charge were placed in a location, the voltage indicates the potential energy of it at that point. In other words, it is a measurement of the energy contained within an electric field, or an electric circuit, at a given point. Voltage is a scalar quantity. The SI unit of voltage is the volt, such that \\(1 volt = 1 joule/coulomb\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:KiloV,
        unit:MegaV,
        unit:MicroV,
        unit:MilliV,
        unit:PlanckVolt,
        unit:V,
        unit:V_Ab,
        unit:V_Stat ;
    qudt:baseUnitDimensions "\\(L^2 \\cdot M/I \\cdot T^3\\)"^^qudt:LatexString,
        "\\(kg \\cdot m^2/A \\cdot s^3\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E-1L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://physics.about.com/od/glossary/g/voltage.htm"^^xsd:anyURI ;
    qudt:symbol "V" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:ElectricPotential,
        quantitykind:ElectricPotentialDifference,
        quantitykind:Voltage .

quantitykind:MassPerArea a qudt:QuantityKind ;
    rdfs:label "Mass per Area"@en ;
    dcterms:description "The area density (also known as areal density, surface density, or superficial density) of a two-dimensional object is calculated as the mass per unit area. The SI derived unit is: kilogram per square metre  (\\(kg \\cdot m^{-2}\\))."^^qudt:LatexString ;
    qudt:applicableUnit unit:GM-PER-CentiM2,
        unit:GM-PER-M2,
        unit:KiloGM-PER-CentiM2,
        unit:KiloGM-PER-HA,
        unit:KiloGM-PER-KiloM2,
        unit:KiloGM-PER-M2,
        unit:LB-PER-FT2,
        unit:LB-PER-IN2,
        unit:MilliGM-PER-CentiM2,
        unit:MilliGM-PER-M2,
        unit:OZ_PER-FT2,
        unit:OZ_PER-YD2,
        unit:SLUG-PER-FT2,
        unit:TONNE-PER-HA,
        unit:TON_Metric-PER-HA ;
    qudt:baseUnitDimensions "\\(M/L^2\\)"^^qudt:LatexString,
        "\\(kg/m^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-2I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Area_density"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\rho_A = \\frac {m} {A}\\)"^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\rho_A \\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:TemperaturePerTime a qudt:QuantityKind ;
    rdfs:label "Temperature per Time"@en ;
    qudt:applicableUnit unit:DEG_C-PER-HR,
        unit:DEG_C-PER-MIN,
        unit:DEG_C-PER-SEC,
        unit:DEG_C-PER-YR,
        unit:DEG_F-PER-HR,
        unit:DEG_F-PER-MIN,
        unit:DEG_F-PER-SEC,
        unit:DEG_F-PER-SEC2,
        unit:DEG_R-PER-HR,
        unit:DEG_R-PER-MIN,
        unit:DEG_R-PER-SEC,
        unit:K-PER-HR,
        unit:K-PER-MIN,
        unit:K-PER-SEC ;
    qudt:baseUnitDimensions "\\(K/s\\)"^^qudt:LatexString,
        "\\(\\Theta/T\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H1T-1D0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

unit:ARCMIN a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "ArcMinute"@en ;
    dcterms:description "A minute of arc, arcminute, or minute arc (MOA), is a unit of angular measurement equal to one sixtieth (1/60) of one degree (circle/21,600), or \\(\\pi /10,800 radians\\). In turn, a second of arc or arcsecond is one sixtieth (1/60) of one minute of arc. Since one degree is defined as one three hundred and sixtieth (1/360) of a rotation, one minute of arc is 1/21,600 of a rotation. "^^qudt:LatexString ;
    qudt:conversionMultiplier 0.000290888209 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Angle ;
    qudt:iec61360Code "0112/2///62720#UAA097" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Minute_of_arc"^^xsd:anyURI ;
    qudt:siUnitsExpression "1" ;
    qudt:symbol "'",
        "'"^^xsd:string ;
    qudt:ucumCode "'"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D61" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:MIN_Angle .

unit:GON a qudt:Unit,
        unit:Unit ;
    rdfs:label "Gon"@en ;
    dcterms:description "\"Gon\" is a C.G.S System unit for  'Plane Angle' expressed as \\(gon\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.015707963267949 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Gon"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Angle ;
    qudt:iec61360Code "0112/2///62720#UAA522" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Gon?oldid=424098171"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/gon> ;
    qudt:symbol "gon",
        "gon"^^xsd:string,
        "grad"^^xsd:string ;
    qudt:ucumCode "gon"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A91" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:GRAD .

unit:GRAD a qudt:Unit,
        unit:Unit ;
    rdfs:label "Grad"@en ;
    dcterms:description "\"Grad\" is a unit for  'Plane Angle' expressed as \\(grad\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0157079633 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Grad"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Angle ;
    qudt:iec61360Code "0112/2///62720#UAA522" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Grad?oldid=490906645"^^xsd:anyURI ;
    qudt:symbol "gon"^^xsd:string,
        "grad",
        "grad"^^xsd:string ;
    qudt:uneceCommonCode "A91" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:GON .

unit:GigaHZ-M a qudt:Unit,
        unit:Unit ;
    rdfs:label "Gigahertz Metre"@en,
        "Gigahertz Meter"@en-us ;
    qudt:conversionMultiplier 1000000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:hasQuantityKind quantitykind:ConductionSpeed,
        quantitykind:GroupSpeedOfSound,
        quantitykind:PhaseSpeedOfSound,
        quantitykind:SoundParticleVelocity,
        quantitykind:Speed,
        quantitykind:Velocity ;
    qudt:iec61360Code "0112/2///62720#UAA151" ;
    qudt:plainTextDescription "product of the 1 000 000 000-fold of the SI derived unit hertz and the SI base unit metre" ;
    qudt:ucumCode "GHz.m"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "M18" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliARCSEC a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Milli ArcSecond"@en ;
    dcterms:description "A minute of arc, arcminute, or minute arc (MOA), is a unit of angular measurement equal to one sixtieth (1/60) of one degree (circle/21,600), or \\(\\pi /10,800 radians\\). In turn, a second of arc or arcsecond is one sixtieth (1/60) of one minute of arc. Since one degree is defined as one three hundred and sixtieth (1/360) of a rotation, one minute of arc is 1/21,600 of a rotation.  the milliarcsecond, abbreviated mas, is used in astronomy."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.000000290888209 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Angle ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Minute_of_arc"^^xsd:anyURI ;
    qudt:symbol "mas",
        "mas"^^xsd:string,
        "rad"^^xsd:string ;
    qudt:ucumCode "m\""^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:RAD .

sp:bound a spin:Function ;
    rdfs:label "bound" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            rdfs:comment "the variable or expression that is checked" ] ;
    spin:returnType xsd:boolean ;
    spin:symbol "bound" ;
    rdfs:comment "Returns true if ?arg1 is bound to a value. Returns false otherwise. Variables with the value NaN or INF are considered bound." ;
    rdfs:subClassOf spl:BooleanFunctions .

tag:Box a brick:Tag ;
    rdfs:label "Box" .

tag:Coil a brick:Tag ;
    rdfs:label "Coil" .

tag:Current a brick:Tag ;
    rdfs:label "Current" .

tag:Disable a brick:Tag ;
    rdfs:label "Disable" .

tag:Domestic a brick:Tag ;
    rdfs:label "Domestic" .

tag:Effective a brick:Tag ;
    rdfs:label "Effective" .

tag:Electrical a brick:Tag ;
    rdfs:label "Electrical" .

tag:Mode a brick:Tag ;
    rdfs:label "Mode" .

tag:Office a brick:Tag ;
    rdfs:label "Office" .

tag:Radiator a brick:Tag ;
    rdfs:label "Radiator" .

tag:Relative a brick:Tag ;
    rdfs:label "Relative" .

tag:Steam a brick:Tag ;
    rdfs:label "Steam" .

s223:ConnectionPoint a s223:Class,
        sh:NodeShape ;
    rdfs:label "ConnectionPoint" ;
    rdfs:comment """A connection point belongs to exactly one Device, DomainSpace or PhysicalSpace. Any Device, DomainSpace or PhysicalSpace connectedThrough a Connection is connected at one of its connection points to that connection. 
ConnectionPoint has explicit subClasses when the hasDirection value is Inlet or Outlet.""" ;
    rdfs:subClassOf s223:Concept ;
    sh:property [ sh:message "This ConnectionPoint must (eventually) be associated with a Device or PhysicalSpace using s223:hasConnectionPoint." ;
            sh:minCount 1 ;
            sh:path s223:isConnectionPointOf ;
            sh:severity sh:Info ],
        [ sh:class s223:Connection ;
            sh:maxCount 1 ;
            sh:message "This ConnectionPoint must be associated with exactly 1 Connection." ;
            sh:minCount 1 ;
            sh:name "ConnectionPointToConnectionShape" ;
            sh:path s223:connectsThrough ;
            sh:severity sh:Info ],
        [ sh:maxCount 1 ;
            sh:name "ConnectionPoint direction" ;
            sh:or ( [ sh:hasValue s223:Inlet ] [ sh:hasValue s223:Outlet ] [ sh:hasValue s223:Bidirectional ] ) ;
            sh:path s223:hasDirection ],
        [ sh:maxCount 1 ;
            sh:name "ConnectionPoint substance" ;
            sh:or ( [ sh:hasValue enum:Substance-Air ] [ sh:hasValue enum:Water-ChilledWater ] [ sh:hasValue enum:Water-HotWater ] ) ;
            sh:path s223:hasSubstance ],
        [ sh:class s223:Connectable ;
            sh:maxCount 1 ;
            sh:name "ConnectionPointToDeviceShape" ;
            sh:path s223:isConnectionPointOf ],
        s223:hasPropertyShape ;
    sh:rule [ a sh:TripleRule ;
            rdfs:comment "If a ConnectionPoint instance has a value of s223:Bidirectional for property hasDirection, then declare it as an instance of BidirectionalConnectionPoint." ;
            sh:condition [ sh:property [ sh:hasValue s223:Bidirectional ;
                            sh:path s223:hasDirection ] ] ;
            sh:object s223:BidirectionalConnectionPoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            rdfs:comment "If a ConnectionPoint instance has a value of s223:Inlet for property hasDirection, then declare it as an instance of InletConnectionPoint." ;
            sh:condition [ sh:property [ sh:hasValue s223:Inlet ;
                            sh:path s223:hasDirection ] ] ;
            sh:object s223:InletConnectionPoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            rdfs:comment "If a ConnectionPoint instance has a value of s223:Outlet for property hasDirection, then declare it as an instance of OutletConnectionPoint." ;
            sh:condition [ sh:property [ sh:hasValue s223:Outlet ;
                            sh:path s223:hasDirection ] ] ;
            sh:object s223:OutletConnectionPoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

qkdv:A0E0L0I0M0H1T-1D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M0H1T-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 1 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:TemperaturePerTime ;
    qudt:latexDefinition "\\(T^-1 Θ\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L1I0M1H-1T-3D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L1I0M1H-1T-3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature -1 ;
    qudt:dimensionExponentForTime -3 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:ThermalConductivity ;
    qudt:latexSymbol "\\(L \\cdot M /( T^3 \\cdot \\Theta^1)\\)"^^qudt:LatexString,
        "\\(L.M.T^{-3} .\\Theta^{-1}\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

quantitykind:ElectricCurrent a qudt:QuantityKind ;
    rdfs:label "Electric Current"@en ;
    qudt:applicableUnit unit:A,
        unit:A_Ab,
        unit:A_Stat,
        unit:BIOT,
        unit:KiloA,
        unit:MegaA,
        unit:MicroA,
        unit:MilliA,
        unit:NanoA,
        unit:PicoA,
        unit:PlanckCurrent ;
    qudt:baseUnitDimensions "\\(A\\)"^^qudt:LatexString,
        "\\(I\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Electric_current"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T0D0 ;
    qudt:informativeReference "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:plainTextDescription "\"Electric Current\" is the flow (movement) of electric charge. The amount of electric current through some surface, for example, a section through a copper conductor, is defined as the amount of electric charge flowing through that surface over time. Current is a scalar-valued quantity. Electric current is one of the base quantities in the International System of Quantities, ISQ, on which the International System of Units, SI, is based. " ;
    qudt:symbol "I" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:Pressure a qudt:QuantityKind ;
    rdfs:label "Pressure"@en ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CM_H2O,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Pressure"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Pressure"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(p = \\frac{dF}{dA}\\), where \\(dF\\) is the force component perpendicular to the surface element of area \\(dA\\)."^^qudt:LatexString ;
    qudt:plainTextDescription "Pressure is an effect which occurs when a force is applied on a surface. Pressure is the amount of force acting on a unit area. Pressure is distinct from stress, as the former is the ratio of the component of force normal to a surface to the surface area. Stress is a tensor that relates the vector force to the vector area." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ForcePerArea .

quantitykind:ThermalConductivity a qudt:QuantityKind ;
    rdfs:label "Thermal Conductivity"@en ;
    dcterms:description "In physics, thermal conductivity, \\(k\\) (also denoted as \\(\\lambda\\)), is the property of a material's ability to conduct heat. It appears primarily in Fourier's Law for heat conduction and is the areic heat flow rate divided by temperature gradient."^^qudt:LatexString ;
    qudt:applicableUnit unit:BTU_IT-FT-PER-FT2-HR-DEG_F,
        unit:BTU_IT-IN-PER-FT2-HR-DEG_F,
        unit:BTU_IT-IN-PER-FT2-SEC-DEG_F,
        unit:BTU_IT-IN-PER-HR-FT2-DEG_F,
        unit:BTU_IT-IN-PER-SEC-FT2-DEG_F,
        unit:BTU_IT-PER-SEC-FT-DEG_R,
        unit:BTU_TH-FT-PER-FT2-HR-DEG_F,
        unit:BTU_TH-FT-PER-HR-FT2-DEG_F,
        unit:BTU_TH-IN-PER-FT2-HR-DEG_F,
        unit:BTU_TH-IN-PER-FT2-SEC-DEG_F,
        unit:CAL_IT-PER-SEC-CentiM-K,
        unit:CAL_TH-PER-CentiM-SEC-DEG_C,
        unit:CAL_TH-PER-SEC-CentiM-K,
        unit:KiloCAL-PER-CentiM-SEC-DEG_C,
        unit:KiloCAL_IT-PER-HR-M-DEG_C,
        unit:W-PER-M-K ;
    qudt:baseUnitDimensions "\\(L \\cdot M/\\Theta \\cdot T^3\\)"^^qudt:LatexString,
        "\\(kg \\cdot m/K \\cdot s^3\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Thermal_conductivity"^^xsd:anyURI ;
    qudt:expression "\\(thermal-k\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H-1T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Thermal_conductivity"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\lambda = \\frac{\\varphi}{T}\\), where \\(\\varphi\\) is areic heat flow rate and \\(T\\) is temperature gradient."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\lambda\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

brick:value a rdf:Property,
        owl:DatatypeProperty ;
    rdfs:label "Value" ;
    rdfs:subPropertyOf qudt:value ;
    skos:definition "The basic value of an entity property" .

qkdv:A0E0L1I0M0H0T-2D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L1I0M0H0T-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:LinearAcceleration,
        quantitykind:ThrustToMassRatio ;
    qudt:latexDefinition "\\(L T^-2\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

quantitykind:Torque a qudt:QuantityKind ;
    rdfs:label "Torque"@en ;
    dcterms:description """In physics, a torque (\\(\\tau\\)) is a vector that measures the tendency of a force to rotate an object about some axis. The magnitude of a torque is defined as force times its lever arm. Just as a force is a push or a pull, a torque can be thought of as a twist. The SI unit for torque is newton meters (\\(N m\\)). In U.S. customary units, it is measured in foot pounds (ft lbf) (also known as "pounds feet").
Mathematically, the torque on a particle (which has the position r in some reference frame) can be defined as the cross product: \\(τ = r x F\\)
where,
r is the particle's position vector relative to the fulcrum
F is the force acting on the particles,
or, more generally, torque can be defined as the rate of change of angular momentum: \\(τ = dL/dt\\)
where,
L is the angular momentum vector
t stands for time."""^^qudt:LatexString ;
    qudt:applicableUnit unit:CentiN-M,
        unit:DYN-CentiM,
        unit:DeciN-M,
        unit:KiloGM_F-M,
        unit:KiloGM_F-PER-M,
        unit:KiloN-M,
        unit:LB_F-FT,
        unit:LB_F-IN,
        unit:MegaN-M,
        unit:MicroN-M,
        unit:MilliN-M,
        unit:N-CentiM,
        unit:N-M,
        unit:OZ_F-IN ;
    qudt:baseUnitDimensions "\\(L^2 \\cdot M/T^2\\)"^^qudt:LatexString,
        "\\(kg \\cdot m^2/s^2\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Torque"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Torque"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\tau = M \\cdot e_Q\\), where \\(M\\) is the momentof force and \\(e_Q\\) is a unit vector directed along a \\(Q-axis\\) with respect to which the torque is considered."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\tau\\)"^^qudt:LatexString ;
    qudt:url "http://en.wikipedia.org/wiki/Torque"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:MomentOfForce .

unit:RAD a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Radian"@en ;
    dcterms:description "The radian is the standard unit of angular measure, used in many areas of mathematics. It describes the plane angle subtended by a circular arc as the length of the arc divided by the radius of the arc. In the absence of any symbol radians are assumed, and when degrees are meant the symbol \\(^{\\ circ}\\) is used. "^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Radian"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:guidance "<p>See NIST section <a href=\"http://physics.nist.gov/Pubs/SP811/sec07.html#7.10\">SP811 section7.10</a></p>"^^rdf:HTML ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Angle ;
    qudt:iec61360Code "0112/2///62720#UAA966" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Radian?oldid=492309312"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/radian> ;
    qudt:plainTextDescription "The radian is the standard unit of angular measure, used in many areas of mathematics. It describes the plane angle subtended by a circular arc as the length of the arc divided by the radius of the arc. The unit was formerly a SI supplementary unit, but this category was abolished in 1995 and the radian is now considered a SI derived unit. The SI unit of solid angle measurement is the steradian.  The radian is represented by the symbol \"rad\" or, more rarely, by the superscript c (for \"circular measure\"). For example, an angle of 1.2 radians would be written as \"1.2 rad\" or \"1.2c\" (the second symbol is often mistaken for a degree: \"1.2u00b0\"). As the ratio of two lengths, the radian is a \"pure number\" that needs no unit symbol, and in mathematical writing the symbol \"rad\" is almost always omitted. In the absence of any symbol radians are assumed, and when degrees are meant the symbol u00b0 is used. [Wikipedia]" ;
    qudt:symbol "mas"^^xsd:string,
        "rad",
        "rad"^^xsd:string ;
    qudt:ucumCode "rad"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C81" ;
    rdfs:comment "The radian and steradian are special names for the number one that may be used to convey information about the quantity concerned. In practice the symbols rad and sr are used where appropriate, but the symbol for the derived unit one is generally omitted in specifying the values of dimensionless quantities." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:MilliARCSEC .

spl:OntologyFunctions a spin:Function ;
    rdfs:label "Ontology functions" ;
    spin:abstract true ;
    rdfs:comment "A collection of functions performing ontology-related operations." ;
    rdfs:subClassOf spin:Functions .

spl:StringFunctions a spin:Function ;
    rdfs:label "String functions" ;
    spin:abstract true ;
    rdfs:comment "A collection of functions that return strings." ;
    rdfs:subClassOf spin:Functions .

vaem:GraphRole a owl:Class ;
    rdfs:label "Graph role"^^xsd:string ;
    dcterms:description "GraphRole is used to characterize how a graph of resources participates in an ontology set.  For example, a graph can be a schema, vocabulary, dataset, script, or ruleset"^^xsd:string ;
    rdfs:isDefinedBy <http://www.linkedmodel.org/2.0/schema/vaem>,
        <http://www.linkedmodel.org/schema/vaem> ;
    rdfs:subClassOf [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty vaem:filePrefix ],
        [ a owl:Restriction ;
            owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty vaem:description ],
        owl:Thing .

brick:Supply_Air a owl:Class,
        sh:NodeShape,
        brick:Supply_Air ;
    rdfs:label "Supply Air" ;
    rdfs:subClassOf brick:Air ;
    owl:equivalentClass brick:Discharge_Air ;
    skos:definition "(1) air delivered by mechanical or natural ventilation to a space, composed of any combination of outdoor air, recirculated air, or transfer air. (2) air entering a space from an air-conditioning, heating, or ventilating apparatus for the purpose of comfort conditioning. Supply air is generally filtered, fan forced, and either heated, cooled, humidified, or dehumidified as necessary to maintain specified conditions. Only the quantity of outdoor air within the supply airflow may be used as replacement air."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Supply ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Fluid,
        tag:Gas,
        tag:Supply .

tag:Energy a brick:Tag ;
    rdfs:label "Energy" .

tag:Enthalpy a brick:Tag ;
    rdfs:label "Enthalpy" .

tag:Matter a brick:Tag ;
    rdfs:label "Matter" .

tag:Mixed a brick:Tag ;
    rdfs:label "Mixed" .

tag:Particulate a brick:Tag ;
    rdfs:label "Particulate" .

tag:Unit a brick:Tag ;
    rdfs:label "Unit" .

quantitykind:MagneticFieldStrength_H a qudt:QuantityKind ;
    rdfs:label "Magnetic Field Strength"@en ;
    dcterms:description "\\(\\textbf{Magnetic Field Strength}\\) is a vector quantity obtained at a given point by subtracting the magnetization \\(M\\) from the magnetic flux density \\(B\\) divided by the magnetic constant \\(\\mu_0\\). The magnetic field strength is related to the total current density \\(J_{tot}\\) via: \\(\\text{rot} H = J_{tot}\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:A-PER-CentiM,
        unit:A-PER-M,
        unit:A-PER-MilliM,
        unit:AT-PER-IN,
        unit:AT-PER-M,
        unit:KiloA-PER-M,
        unit:MilliA-PER-IN,
        unit:MilliA-PER-MilliM,
        unit:OERSTED ;
    qudt:hasDimensionVector qkdv:A0E1L-1I0M0H0T0D0 ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=121-11-56"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\mathbf{H} = \\frac{\\mathbf{B} }{\\mu_0} - M\\), where \\(\\mathbf{B} \\) is magnetic flux density, \\(\\mu_0\\) is the magnetic constant and \\(M\\) is magnetization."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\mathbf{H} \\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:ElectricCurrentPerUnitLength .

quantitykind:ThermalEnergy a qudt:QuantityKind ;
    rdfs:label "Thermal Energy"@en ;
    dcterms:description "\"Thermal Energy} is the portion of the thermodynamic or internal energy of a system that is responsible for the temperature of the system. From a macroscopic thermodynamic description, the thermal energy of a system is given by its constant volume specific heat capacity C(T), a temperature coefficient also called thermal capacity, at any given absolute temperature (T): \\(U_{thermal} = C(T) \\cdot T\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:BTU_IT,
        unit:BTU_MEAN,
        unit:BTU_TH,
        unit:CAL_15_DEG_C,
        unit:CAL_IT,
        unit:CAL_MEAN,
        unit:CAL_TH,
        unit:GigaJ,
        unit:J,
        unit:KiloCAL,
        unit:KiloCAL_IT,
        unit:KiloCAL_Mean,
        unit:KiloCAL_TH,
        unit:KiloJ,
        unit:MegaJ,
        unit:THM_EEC,
        unit:THM_US ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Thermal_energy"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Thermal_energy"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Energy .

spin:_arg2 a sp:Variable ;
    sp:varName "arg2" .

brick:Discharge_Air a owl:Class,
        sh:NodeShape,
        brick:Discharge_Air ;
    rdfs:label "Discharge Air" ;
    rdfs:subClassOf brick:Air ;
    skos:definition "the air exiting the registers (vents)."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Discharge ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Discharge,
        tag:Fluid,
        tag:Gas .

qudt:IdentifiersAndDescriptionsPropertyGroup a sh:PropertyGroup ;
    rdfs:label "Identifiers and Descriptions" ;
    sh:order 10.0 .

qudt:SystemOfUnits a owl:Class,
        sh:NodeShape ;
    rdfs:label "System of Units" ;
    qudt:informativeReference "http://dbpedia.org/resource/Category:Systems_of_units"^^xsd:anyURI,
        "http://www.ieeeghn.org/wiki/index.php/System_of_Measurement_Units"^^xsd:anyURI ;
    rdfs:comment "A system of units is a set of units which are chosen as the reference scales for some set of quantity kinds together with the definitions of each unit. Units may be defined by experimental observation or by proportion to another unit not included in the system. If the unit system is explicitly associated with a quantity kind system, then the unit system must define at least one unit for each quantity kind."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Concept ;
    sh:property qudt:SystemOfUnits-qudt_applicablePhysicalConstant,
        qudt:SystemOfUnits-qudt_hasAllowedUnit,
        qudt:SystemOfUnits-qudt_hasBaseUnit,
        qudt:SystemOfUnits-qudt_hasCoherentUnit,
        qudt:SystemOfUnits-qudt_hasDefinedUnit,
        qudt:SystemOfUnits-qudt_hasDerivedCoherentUnit,
        qudt:SystemOfUnits-qudt_hasDerivedUnit,
        qudt:SystemOfUnits-qudt_hasUnit .

qkdv:A0E0L-2I0M1H0T0D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-2I0M1H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:MassPerArea ;
    qudt:latexDefinition "\\(L^-2 M\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

quantitykind:Density a qudt:QuantityKind ;
    rdfs:label "Density"@en ;
    dcterms:description "The mass density or density of a material is defined as its mass per unit volume. The symbol most often used for density is \\(\\rho\\).  Mathematically, density is defined as mass divided by volume: \\(\\rho = m/V\\), where \\(\\rho\\) is the density, \\(m\\) is the mass, and \\(V\\) is the volume. In some cases, density is also defined as its weight per unit volume, although this quantity is more properly called specific weight."^^qudt:LatexString ;
    qudt:applicableUnit unit:GRAIN-PER-GAL,
        unit:KiloGM-PER-M3,
        unit:LB-PER-FT3,
        unit:LB-PER-GAL,
        unit:LB-PER-GAL_UK,
        unit:LB-PER-GAL_US,
        unit:LB-PER-IN3,
        unit:LB-PER-M3,
        unit:LB-PER-YD3,
        unit:MilliGM-PER-DeciL,
        unit:OZ_PER-GAL,
        unit:OZ_PER-IN3,
        unit:PlanckDensity,
        unit:SLUG-PER-FT3,
        unit:TON_LONG-PER-YD3,
        unit:TON_SHORT-PER-YD3 ;
    qudt:baseUnitDimensions "\\(M/L^3\\)"^^qudt:LatexString,
        "\\(kg/m^3\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Density"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Density"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\rho = m/V\\), where \\(\\rho\\) is the density, \\(m\\) is the mass, and \\(V\\) is the volume."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\rho\\)"^^qudt:LatexString ;
    vaem:todo "belongs to SOQ-ISO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:MassDensity .

quantitykind:Force a qudt:QuantityKind ;
    rdfs:label "Force"@en ;
    dcterms:description "\"Force\" is an influence that causes mass to accelerate. It may be experienced as a lift, a push, or a pull. Force is defined by Newton's Second Law as \\(F = m \\times a \\), where \\(F\\) is force, \\(m\\) is mass and \\(a\\) is acceleration. Net force is mathematically equal to the time rate of change of the momentum of the body on which it acts. Since momentum is a vector quantity (has both a magnitude and direction), force also is a vector quantity."^^qudt:LatexString ;
    qudt:applicableUnit unit:DYN,
        unit:KIP_F,
        unit:KiloGM_F,
        unit:KiloN,
        unit:KiloP,
        unit:KiloPOND,
        unit:LB_F,
        unit:MegaLB_F,
        unit:MegaN,
        unit:MicroN,
        unit:MilliN,
        unit:N,
        unit:OZ_F,
        unit:PDL,
        unit:PlanckForce,
        unit:TON_F_US ;
    qudt:baseUnitDimensions "\\(L \\cdot M/T^2\\)"^^qudt:LatexString,
        "\\(kg \\cdot m/s^2\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Force"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M1H0T-2D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Force"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=43012"^^xsd:anyURI ;
    qudt:latexDefinition "\\(F = \\frac{dp}{dt}\\), where \\(F\\) is the resultant force acting on a body, \\(p\\) is momentum of a body, and \\(t\\) is time."^^qudt:LatexString ;
    qudt:symbol "F" ;
    qudt:url "http://en.wikipedia.org/wiki/Force"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

tag:Bypass a brick:Tag ;
    rdfs:label "Bypass" .

tag:Common a brick:Tag ;
    rdfs:label "Common" .

tag:Pump a brick:Tag ;
    rdfs:label "Pump" .

tag:Step a brick:Tag ;
    rdfs:label "Step" .

qudt:Concept a owl:Class,
        sh:NodeShape ;
    rdfs:label "QUDT Concept" ;
    rdfs:comment "The root class for all QUDT concepts."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf owl:Thing ;
    sh:property qudt:Concept-dcterms_description,
        qudt:Concept-qudt_abbreviation,
        qudt:Concept-qudt_code,
        qudt:Concept-qudt_description,
        qudt:Concept-qudt_guidance,
        qudt:Concept-qudt_hasRule,
        qudt:Concept-qudt_id,
        qudt:Concept-qudt_plainTextDescription,
        qudt:Concept-rdf_type,
        qudt:Concept-rdfs_label,
        qudt:Concept-rdfs_seeAlso .

qudt:DecimalPrefix a owl:Class,
        sh:NodeShape ;
    rdfs:label "Decimal Prefix" ;
    rdfs:comment "A <em>Decimal Prefix</em> is a prefix for multiples of units that are powers of 10." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Prefix .

qudt:PropertiesGroup a sh:PropertyGroup ;
    rdfs:label "Properties" ;
    sh:order 20.0 .

qkdv:A0E0L0I0M0H1T0D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M0H1T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 1 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:ThermodynamicTemperature ;
    qudt:latexDefinition "\\(H\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L2I0M0H-1T-2D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L2I0M0H-1T-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature -1 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:SpecificHeatCapacity ;
    qudt:latexDefinition "\\(L^2 T^-2  Θ^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A1E0L0I0M0H0T0D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A1E0L0I0M0H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 1 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:AmountOfSubstance ;
    qudt:latexDefinition "\\(N\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

quantitykind:Angle a qudt:QuantityKind ;
    rdfs:label "Angle"@en ;
    dcterms:description "The abstract notion of angle. Narrow concepts include plane angle and solid angle. While both plane angle and solid angle are dimensionless, they are actually length/length and area/area respectively."^^qudt:LatexString ;
    qudt:applicableUnit unit:ARCMIN,
        unit:ARCSEC,
        unit:DEG,
        unit:GON,
        unit:GRAD,
        unit:MIL,
        unit:MIN_Angle,
        unit:MicroRAD,
        unit:MilliARCSEC,
        unit:MilliRAD,
        unit:RAD,
        unit:REV ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Angle"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:PlaneAngle ;
    skos:broader quantitykind:DimensionlessRatio .

brick:Setpoint a owl:Class,
        sh:NodeShape ;
    rdfs:label "Setpoint" ;
    rdfs:seeAlso <https://xp20.ashrae.org/terminology/index.php?term=setpoint>,
        "https://xp20.ashrae.org/terminology/index.php?term=setpoint" ;
    rdfs:subClassOf brick:Point ;
    owl:disjointWith brick:Alarm,
        brick:Command,
        brick:Parameter,
        brick:Sensor,
        brick:Status ;
    skos:definition "A Setpoint is an input value at which the desired property is set"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Setpoint ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Setpoint .

qkdv:A0E-1L1I0M1H0T-3D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E-1L1I0M1H0T-3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent -1 ;
    qudt:dimensionExponentForLength 1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -3 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:ElectricFieldStrength ;
    qudt:latexDefinition "\\(L M T^-3 I^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

sou:CGS-GAUSS a qudt:SystemOfUnits ;
    rdfs:label "CGS System of Units - Gaussian"@en ;
    qudt:abbreviation "CGS-GAUSS" ;
    qudt:description "Gaussian units constitute a metric system of physical units. This system is the most common of the several electromagnetic unit systems based on cgs (centimetre–gram–second) units. It is also called the Gaussian unit system, Gaussian-cgs units, or often just cgs units. The term \"cgs units\" is ambiguous and therefore to be avoided if possible: there are several variants of cgs with conflicting definitions of electromagnetic quantities and units. [Wikipedia]"^^rdf:HTML ;
    qudt:hasBaseUnit unit:CentiM,
        unit:GM,
        unit:SEC,
        unit:UNITLESS ;
    qudt:informativeReference "https://en.wikipedia.org/wiki/Gaussian_units"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/sou> ;
    rdfs:seeAlso sou:CGS .

unit:CARAT a qudt:Unit,
        unit:Unit ;
    rdfs:label "Carat"@en ;
    dcterms:description "The carat is a unit of mass equal to 200 mg and is used for measuring gemstones and pearls. The current definition, sometimes known as the metric carat, was adopted in 1907 at the Fourth General Conference on Weights and Measures, and soon afterward in many countries around the world. The carat is divisible into one hundred points of two milligrams each. Other subdivisions, and slightly different mass values, have been used in the past in different locations. In terms of diamonds, a paragon is a flawless stone of at least 100 carats (20 g). The ANSI X.12 EDI standard abbreviation for the carat is \\(CD\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0002 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Carat"^^xsd:anyURI ;
    qudt:expression "\\(Nm/ct\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:iec61360Code "0112/2///62720#UAB166" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Carat?oldid=477129057"^^xsd:anyURI ;
    qudt:ucumCode "[car_m]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "CTM" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    skos:altLabel "metric carat" .

unit:CentiGM a qudt:Unit,
        unit:Unit ;
    rdfs:label "Centigram"@en ;
    qudt:conversionMultiplier 0.00001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:iec61360Code "0112/2///62720#UAB077" ;
    qudt:plainTextDescription "0,000 01-fold of the SI base unit kilogram" ;
    qudt:ucumCode "cg"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "CGM" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DRAM_UK a qudt:Unit,
        unit:Unit ;
    rdfs:label "Dram (UK)"@en ;
    qudt:conversionMultiplier 0.0017718451953125 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:iec61360Code "0112/2///62720#UAB181" ;
    qudt:plainTextDescription "non SI-conforming unit of mass comes from the Anglo-American Troy or Apothecaries' Weight System of units which is  mainly used in England, in the Netherlands and in the USA as a commercial weight" ;
    qudt:ucumCode "[dr_ap]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "DRI" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DRAM_US a qudt:Unit,
        unit:Unit ;
    rdfs:label "Dram (US)"@en ;
    qudt:conversionMultiplier 0.0038879346 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:iec61360Code "0112/2///62720#UAB180" ;
    qudt:plainTextDescription "non SI-conform unit of the mass according to the avoirdupois system of units: 1 dram (av. ) = 1/16 ounce (av. ) = 1/256 pound (av.)" ;
    qudt:ucumCode "[dr_av]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "DRA" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DWT a qudt:Unit,
        unit:Unit ;
    rdfs:label "Penny Weight"@en ;
    dcterms:description "\"Penny Weight\" is a unit for  'Mass' expressed as \\(dwt\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00155517384 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Pennyweight"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Pennyweight?oldid=486693644"^^xsd:anyURI ;
    qudt:symbol "dwt",
        "dwt"^^xsd:string ;
    qudt:ucumCode "[pwt_tr]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    skos:altLabel "dryquartus" .

unit:DecaGM a qudt:Unit,
        unit:Unit ;
    rdfs:label "Decagram"@en ;
    qudt:conversionMultiplier 0.01 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:iec61360Code "0112/2///62720#UAB075" ;
    qudt:plainTextDescription "0,01-fold of the SI base unit kilogram" ;
    qudt:ucumCode "dag"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "DJ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DeciGM a qudt:Unit,
        unit:Unit ;
    rdfs:label "Decigram"@en ;
    qudt:conversionMultiplier 0.0001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:iec61360Code "0112/2///62720#UAB076" ;
    qudt:plainTextDescription "0.0001-fold of the SI base unit kilogram" ;
    qudt:ucumCode "dg"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "DG" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:EarthMass a qudt:Unit,
        unit:Unit ;
    rdfs:label "Earth mass"@en ;
    dcterms:description "Earth mass (\\(M_{\\oplus}\\)) is the unit of mass equal to that of the Earth. In SI Units, \\(1 M_{\\oplus} = 5.9722 \\times 1024 kg\\). Earth mass is often used to describe masses of rocky terrestrial planets. The four terrestrial planets of the Solar System, Mercury, Venus, Earth, and Mars, have masses of 0.055, 0.815, 1.000, and 0.107 Earth masses respectively."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Earth_mass"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Earth_mass?oldid=495457885"^^xsd:anyURI ;
    qudt:latexDefinition """One Earth mass can be converted to related units:

81.3 Lunar mass (ML)
0.00315 Jupiter mass (MJ) (Jupiter has 317.83 Earth masses)[1]
0.0105 Saturn mass (Saturn has 95.16 Earth masses)[3]
0.0583 Neptune mass (Neptune has 17.147 Earth masses)[4]
0.000 003 003 Solar mass (\\(M_{\\odot}\\)) (The Sun has 332946 Earth masses)"""^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HectoGM a qudt:Unit,
        unit:Unit ;
    rdfs:label "Hectogram"@en ;
    qudt:conversionMultiplier 0.1 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:iec61360Code "0112/2///62720#UAB079" ;
    qudt:plainTextDescription "0.1-fold of the SI base unit kilogram" ;
    qudt:ucumCode "hg"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "HGM" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB a qudt:Unit,
        unit:Unit ;
    rdfs:label "Pound Mass"@en ;
    dcterms:description "A pound of mass, based on the international standard definition of the pound as exactly 0.45359237 kg."^^rdf:HTML ;
    qudt:conversionMultiplier 0.45359237 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:symbol "lbm",
        "lbm"^^xsd:string ;
    qudt:ucumCode "[lb_av]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS,
        sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB_T a qudt:Unit,
        unit:Unit ;
    rdfs:label "Pound Troy"@en ;
    dcterms:description "An obsolete unit of mass; the Troy Pound has been defined as exactly 5760 grains, or 0.3732417216 kg. A Troy Ounce is 1/12th of a Troy Pound."^^rdf:HTML ;
    qudt:conversionMultiplier 0.3732417216 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:symbol "lbt",
        "lbt"^^xsd:string ;
    qudt:ucumCode "[lb_tr]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS,
        sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LunarMass a qudt:Unit,
        unit:Unit ;
    rdfs:label "Lunar mass"@en ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Moon"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Moon?oldid=494566371"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaGM a qudt:Unit,
        unit:Unit ;
    rdfs:label "Megagram"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:iec61360Code "0112/2///62720#UAA228" ;
    qudt:plainTextDescription "1 000-fold of the SI base unit kilogram" ;
    qudt:ucumCode "Mg"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "2U" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroGM a qudt:Unit,
        unit:Unit ;
    rdfs:label "Microgram"@en ;
    qudt:conversionMultiplier 0.000000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:iec61360Code "0112/2///62720#UAA082" ;
    qudt:plainTextDescription "0.000000001-fold of the SI base unit kilogram" ;
    qudt:ucumCode "ug"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "MC" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliGM a qudt:Unit,
        unit:Unit ;
    rdfs:label "Milligram"@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:iec61360Code "0112/2///62720#UAA815" ;
    qudt:plainTextDescription "0.000001-fold of the SI base unit kilogram" ;
    qudt:ucumCode "mg"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "MGM" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NanoGM a qudt:Unit,
        unit:Unit ;
    rdfs:label "Nanograms"@en ;
    dcterms:description "10**-9 grams or one 10**-12 of the SI standard unit of mass (kilogram)."@en ;
    qudt:conversionMultiplier 0.000000000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:ucumCode "ng"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OZ a qudt:Unit,
        unit:Unit ;
    rdfs:label "Ounce Mass"@en ;
    dcterms:description "An ounce of mass is 1/16th of a pound of mass, based on the international standard definition of the pound as exactly 0.45359237 kg."^^rdf:HTML ;
    qudt:conversionMultiplier 0.028349523125 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:symbol "ozm",
        "ozm"^^xsd:string ;
    qudt:ucumCode "[oz_av]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:OZ_TROY a qudt:Unit,
        unit:Unit ;
    rdfs:label "Ounce Troy"@en ;
    dcterms:description "An obsolete unit of mass; the Troy Ounce is 1/12th of a Troy Pound. Based on the international definition of a Troy Pound as 5760 grains, the Troy Ounce is exactly 480 grains, or 0.0311034768 kg."^^rdf:HTML ;
    qudt:conversionMultiplier 0.0311034768 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:symbol "oz",
        "oz"^^xsd:string ;
    qudt:ucumCode "[oz_tr]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Pennyweight a qudt:Unit,
        unit:Unit ;
    rdfs:label "Pennyweight"@en ;
    qudt:conversionMultiplier 0.001555174 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:iec61360Code "0112/2///62720#UAB182" ;
    qudt:plainTextDescription "non SI-conforming unit of mass which comes from the Anglo-American Troy or Apothecaries' Weight System of units according to NIST of 1 pwt = 1.555174 10^3 kg" ;
    qudt:ucumCode "[pwt_tr]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "DWT" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PicoGM a qudt:Unit,
        unit:Unit ;
    rdfs:label "Picograms"@en ;
    dcterms:description "10**-12 grams or one 10**-15 of the SI standard unit of mass (kilogram)."@en ;
    qudt:conversionMultiplier 0.15 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:ucumCode "pg"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Quarter_UK a qudt:Unit,
        unit:Unit ;
    rdfs:label "Quarter (UK)"@en ;
    qudt:conversionMultiplier 12.70058636 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:iec61360Code "0112/2///62720#UAB202" ;
    qudt:plainTextDescription "unit of the mass according to the avoirdupois system of units: 1 qr. l. = 28 lb" ;
    qudt:ucumCode "28.[lb_av]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "QTR" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SLUG a qudt:Unit,
        unit:Unit ;
    rdfs:label "Slug"@en ;
    dcterms:description "The slug is a unit of mass associated with Imperial units. It is a mass that accelerates by \\(1 ft/s\\) when a force of one pound-force (\\(lbF\\)) is exerted on it. With standard gravity \\(gc = 9.80665 m/s\\), the international foot of \\(0.3048 m\\) and the avoirdupois pound of \\(0.45359237 kg\\), one slug therefore has a mass of approximately \\(32.17405 lbm\\) or \\(14.593903 kg\\). At the surface of the Earth, an object with a mass of 1 slug exerts a force of about \\(32.17 lbF\\) or \\(143 N\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 14.593903 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Slug"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:IMPERIAL ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:iec61360Code "0112/2///62720#UAA978" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Slug?oldid=495010998"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/slug> ;
    qudt:symbol "slug",
        "slug"^^xsd:string ;
    qudt:uneceCommonCode "F13" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:SolarMass a qudt:Unit,
        unit:Unit ;
    rdfs:label "Solar mass"@en ;
    dcterms:description "The astronomical unit of mass is the solar mass.The symbol \\(S\\) is often used in astronomy to refer to this unit, although \\(M_{\\odot}\\) is also common. The solar mass, \\(1.98892 \\time 1030 kg\\), is a standard way to express mass in astronomy, used to describe the masses of other stars and galaxies. It is equal to the mass of the Sun, about 333,000 times the mass of the Earth or 1,048 times the mass of Jupiter. In practice, the masses of celestial bodies appear in the dynamics of the solar system only through the products GM, where G is the constant of gravitation."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Solar_mass"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Solar_mass?oldid=494074016"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/solarMass> ;
    qudt:symbol "S",
        "S"^^xsd:string ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Stone_UK a qudt:Unit,
        unit:Unit ;
    rdfs:label "Stone (UK)"@en ;
    qudt:conversionMultiplier 6.35029318 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:iec61360Code "0112/2///62720#UAB081" ;
    qudt:plainTextDescription "unit of the mass which is commonly used for the determination of the weight of living beings regarding to the conversion to the avoirdupois system of units: 1 st = 14 lb (av)" ;
    qudt:ucumCode "[stone_av]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "STI" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:TON_Assay a qudt:Unit,
        unit:Unit ;
    rdfs:label "Assay Ton"@en ;
    dcterms:description "In the United States, a unit of mass, approximately \\(29.167\\, grams\\). The number of milligrams of precious metal in one assay ton of the ore being tested is equal to the number of troy ounces of pure precious metal in one 2000-pound ton of the ore. i.e. a bead is obtained that weights 3 milligrams, thus the precious metals in the bead would equal three troy ounces to each ton of ore with the understanding that this varies considerably in the real world as the amount of precious values in each ton of ore varies considerably."^^qudt:LatexString ;
    qudt:allowedUnitOfSystem sou:SI ;
    qudt:conversionMultiplier 0.02916667 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:informativeReference "http://www.assaying.org/assayton.htm"^^xsd:anyURI ;
    qudt:symbol "AT",
        "AT"^^xsd:string ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

sp:str a spin:Function ;
    rdfs:label "str" ;
    spin:constraint [ a spl:Argument ;
            spl:predicate sp:arg1 ;
            rdfs:comment "the node to convert to string" ] ;
    spin:returnType xsd:string ;
    spin:symbol "str" ;
    rdfs:comment "Returns the lexical form of ?arg1 (a literal); returns the codepoint representation of ?arg1 (an IRI). This is useful for examining parts of an IRI, for instance, the host-name." ;
    rdfs:subClassOf spl:StringFunctions .

<http://www.linkedmodel.org/1.1/schema/dtype> rdfs:label "Datatype Ontology"^^xsd:string ;
    dc:author "Ralph Hodgson"^^xsd:string ;
    dc:subject "Datatype schema"^^xsd:string ;
    dc:title "Datatype Ontology"^^xsd:string ;
    vaem:dateCreated "2011-05-29"^^vaem:dateUnion ;
    vaem:description "The ontology \"dtype\" provides a specification of simple data types such as enumerations and codelists. These are needed in support of the conversion of XML Schemas and UML Models to OWL. The purpose of \"dtype\" is to provide a foundation for expressing rich data types. These data types are typically needed when dealing with OWL representations of data structures derived from XML Schema."^^xsd:string ;
    vaem:hasGraphRole vaem:SchemaGraph ;
    vaem:hasLicenseType voag1:CC-SHAREALIKE_3PT0-US ;
    vaem:lastUpdated "2014-06-28"^^vaem:dateUnion ;
    vaem:name "DTYPE"^^xsd:string ;
    vaem:namespace "http://www.linkedmodel.org/schema/dtype"^^xsd:anyURI ;
    vaem:namespacePrefix "dtype"^^xsd:string ;
    vaem:owner "TopQuadrant"^^xsd:string ;
    vaem:revision "1.1"^^xsd:string ;
    vaem:usesNonImportedResource dc:author,
        dc:contributor,
        dc:description,
        dc:subject,
        dc:title ;
    vaem:withAttributionTo voag1:TopQuadrantAttribution ;
    owl:versionIRI <http://www.linkedmodel.org/1.1/schema/dtype> ;
    owl:versionInfo "Created with TopBraid Composer"^^xsd:string .

brick:Differential_Pressure a brick:Quantity ;
    rdfs:label "Differential Pressure" ;
    qudt:isDeltaQuantity true ;
    skos:broader brick:Pressure .

tag:CO2 a brick:Tag ;
    rdfs:label "CO2" .

tag:Collection a brick:Tag ;
    rdfs:label "Collection" .

tag:Damper a brick:Tag ;
    rdfs:label "Damper" .

tag:Filter a brick:Tag ;
    rdfs:label "Filter" .

tag:Position a brick:Tag ;
    rdfs:label "Position" .

s223:Concept a s223:Class,
        sh:NodeShape ;
    rdfs:label "Root concept for standard 223" ;
    rdfs:comment "This is the superclass of all classes defined in the 223 standard." ;
    rdfs:subClassOf rdfs:Resource ;
    sh:not [ a sh:PropertyShape ;
            sh:hasValue true ;
            sh:message "You cannot have an instance of an abstract class" ;
            sh:path ( rdf:type s223:abstract ) ] ;
    sh:property [ sh:path s223:cnx ],
        [ sh:path s223:hasProperty ],
        [ sh:path rdfs:label ] .

qkdv:A0E0L-3I0M0H0T0D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-3I0M0H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -3 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:latexDefinition "\\(L^-3\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E1L0I0M0H0T0D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E1L0I0M0H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 1 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:ElectricCurrent ;
    qudt:latexDefinition "\\(I\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

sou:CGS-EMU a qudt:SystemOfUnits ;
    rdfs:label "CGS System of Units - EMU"@en ;
    qudt:abbreviation "CGS-EMU" ;
    qudt:description "The units in this system are formed in a manner similar to that of the cgs electrostatic system of units: the unit of electric current was defined using the law that describes the force between current-carrying wires. To do this, the permeability of free space (the magnetic constant, relating the magnetic flux density in a vacuum to the strength of the external magnetic field), was set at 1. To distinguish cgs electromagnetic units from units in the international system, they were often given the prefix “ab-”. However, most are often referred to purely descriptively as the 'e.m. unit of capacitance', etc. "^^rdf:HTML ;
    qudt:hasBaseUnit unit:BIOT,
        unit:CentiM,
        unit:GM,
        unit:SEC,
        unit:UNITLESS ;
    qudt:informativeReference "http://www.sizes.com/units/sys_cgs_em.htm"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/sou> .

sou:PLANCK a qudt:SystemOfUnits ;
    rdfs:label "Planck System of Units"@en ;
    dcterms:description "Originally proposed in 1899 by German physicist Max Planck, these units are also known as natural units because the origin of their definition comes only from properties of nature and not from any human construct. Planck units are unique among systems of natural units, because they are not defined in terms of properties of any prototype, physical object, or even elementary particle."^^rdf:HTML ;
    qudt:abbreviation "PLANCK" ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Planck_units"^^xsd:anyURI ;
    qudt:description """In physics, Planck units are physical units of measurement defined exclusively in terms of five universal physical constants listed below, in such a manner that these five physical constants take on the numerical value of 1 when expressed in terms of these units. Planck units elegantly simplify particular algebraic expressions appearing in physical law.  

Unlike the meter and second, which exist as fundamental units in the SI system for (human) historical reasons, the Planck length and Planck time are conceptually linked at a fundamental physical level. Natural units help physicists to reframe questions."""^^rdf:HTML ;
    qudt:hasBaseUnit unit:PlanckCharge,
        unit:PlanckLength,
        unit:PlanckMass,
        unit:PlanckTemperature,
        unit:PlanckTime ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Planck_units?oldid=495407713"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/sou> .

unit:CWT_LONG a qudt:Unit,
        unit:Unit ;
    rdfs:label "Long Hundred Weight"@en ;
    dcterms:description "\"Hundred Weight - Long\" is a unit for  'Mass' expressed as \\(cwt\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 50.80235 ;
    qudt:expression "\\(cwt long\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:ucumCode "[lcwt_av]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:Hundredweight_UK ;
    skos:altLabel "British hundredweight" .

unit:CWT_SHORT a qudt:Unit,
        unit:Unit ;
    rdfs:label "Hundred Weight - Short"@en ;
    dcterms:description "\"Hundred Weight - Short\" is a unit for  'Mass' expressed as \\(cwt\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 45.359237 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:expression "\\(cwt\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:ucumCode "[scwt_av]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:Hundredweight_US ;
    skos:altLabel "U.S. hundredweight" .

unit:DeciTONNE a qudt:Unit,
        unit:Unit ;
    rdfs:label "DeciTonne"@en ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:DeciTON_Metric .

unit:DeciTON_Metric a qudt:Unit,
        unit:Unit ;
    rdfs:label "Metric DeciTON"@en ;
    qudt:conversionMultiplier 1.02 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:iec61360Code "0112/2///62720#UAB078" ;
    qudt:plainTextDescription "100-fold of the SI base unit kilogram" ;
    qudt:ucumCode "dt"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "DTN" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:DeciTONNE .

unit:GRAIN a qudt:Unit,
        unit:Unit ;
    rdfs:label "Grain"@en ;
    dcterms:description "A grain is a unit of measurement of mass that is nominally based upon the mass of a single seed of a cereal.  The grain is the only unit of mass measure common to the three traditional English mass and weight systems; the obsolete Tower grain was, by definition, exactly  /64 of a troy grain. Since 1958, the grain or troy grain measure has been defined in terms of units of mass in the International System of Units as precisely 64.79891 milligrams. Thus, \\(1 gram \\approx 15.4323584 grains\\).  There are precisely 7,000 grains per avoirdupois pound in the imperial and U.S. customary units, and 5,760 grains in the Troy pound."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00006479891 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Cereal"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:iec61360Code "0112/2///62720#UAA523" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Cereal?oldid=495222949"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/grain> ;
    qudt:symbol "gr",
        "gr"^^xsd:string ;
    qudt:ucumCode "[gr]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "GRN" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:Hundredweight_UK a qudt:Unit,
        unit:Unit ;
    rdfs:label "Hundredweight (UK)"@en ;
    qudt:conversionMultiplier 50.80235 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:iec61360Code "0112/2///62720#UAA405" ;
    qudt:plainTextDescription "out of use unit of the mass according to the Imperial system of units" ;
    qudt:ucumCode "[lcwt_av]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "CWI" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:CWT_LONG .

unit:Hundredweight_US a qudt:Unit,
        unit:Unit ;
    rdfs:label "Hundredweight (US)"@en ;
    qudt:conversionMultiplier 45.35924 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:iec61360Code "0112/2///62720#UAA406" ;
    qudt:plainTextDescription "out of use unit of the mass according to the Imperial system of units" ;
    qudt:ucumCode "[scwt_av]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "CWA" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:CWT_SHORT .

unit:KiloGM a qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilogram"@en ;
    qudt:allowedUnitOfSystem sou:CGS-EMU,
        sou:CGS-GAUSS ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Kilogram"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:iec61360Code "0112/2///62720#UAA594",
        "0112/2///62720#UAD720" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Kilogram?oldid=493633626"^^xsd:anyURI ;
    qudt:plainTextDescription "The kilogram or kilogramme (SI symbol: kg), also known as the kilo, is the base unit of mass in the International System of Units and is defined as being equal to the mass of the International Prototype Kilogram (IPK), which is almost exactly equal to the mass of one liter of water. The avoirdupois (or international) pound, used in both the Imperial system and U.S. customary units, is defined as exactly 0.45359237 kg, making one kilogram approximately equal to 2.2046 avoirdupois pounds." ;
    qudt:symbol "kg",
        "kg"^^xsd:string ;
    qudt:ucumCode "kg"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "KGM" ;
    qudt:unitOfSystem sou:CGS,
        sou:SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloTON_Metric a qudt:Unit,
        unit:Unit ;
    rdfs:label "Metric KiloTON"@en ;
    qudt:conversionMultiplier 907184.7 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:iec61360Code "0112/2///62720#UAB080" ;
    qudt:plainTextDescription "1 000 000-fold of the SI base unit kilogram" ;
    qudt:ucumCode "kt"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "KTN" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:KiloTONNE .

unit:PlanckMass a qudt:Unit,
        unit:Unit ;
    rdfs:label "Planck Mass"@en ;
    dcterms:description "In physics, the Planck mass, denoted by \\(m_P\\), is the unit of mass in the system of natural units known as Planck units. It is defined so that \\(\\approx  1.2209 \\times 10 GeV/c_0 = 2.17651(13) \\times 10 kg\\), (or \\(21.7651 \\mu g\\)), where \\(c_0\\) is the speed of light in a vacuum, \\(G\\) is the gravitational constant, and \\(\\hbar\\) is the reduced Planck constant. Particle physicists and cosmologists often use the reduced Planck mass, which is \\(\\approx  4.341 \\times 10 kg = 2.435  \\times 10 GeV/c\\). The added factor of \\(1/{\\sqrt{8\\pi}}\\) simplifies a number of equations in general relativity. Quantum effects are typified by the magnitude of Planck's constant."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0000000217644 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Planck_mass"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Planck_mass?oldid=493648632"^^xsd:anyURI,
        "https://en.wikipedia.org/wiki/Planck_units"^^xsd:anyURI ;
    qudt:latexDefinition "\\(m_P = \\sqrt{\\frac{ \\hbar c^3}{G}} \\approx 1.2209 \\times 10^{19} GeV/c^2 = 2.17651(13) \\times 10^{-8}\\), where \\(c\\) is the speed of light in a vacuum, \\(\\hbar\\) is the reduced Planck's constant, and \\(G\\) is the gravitational constant. The two digits enclosed by parentheses are the estimated standard error associated with the reported numerical value."^^qudt:LatexString ;
    qudt:latexSymbol "\\(m_P\\)"^^qudt:LatexString ;
    qudt:unitOfSystem sou:PLANCK ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:TONNE a qudt:Unit,
        unit:Unit ;
    rdfs:label "Tonne"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:plainTextDescription "1,000-fold of the SI base unit kilogram" ;
    qudt:symbol "mT"^^xsd:string ;
    qudt:ucumCode "t"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "TN" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:TON_Metric .

unit:TON_LONG a qudt:Unit,
        unit:Unit ;
    rdfs:label "Long Ton"@en ;
    dcterms:description """Long ton (weight ton or imperial ton) is the name for the unit called the "ton" in the avoirdupois or Imperial system of measurements, as used in the United Kingdom and several other Commonwealth countries. One long ton is equal to 2,240 pounds (1,016 kg), 1.12 times as much as a short ton, or 35 cubic feet (0.9911 m3) of salt water with a density of 64 lb/ft3 (1.025 g/ml).</p>
<p>It has some limited use in the United States, most commonly in measuring the displacement of ships, and was the unit prescribed for warships by the Washington Naval Treaty 1922-for example battleships were limited to a mass of 35,000 long tons (36,000 t; 39,000 short tons).</p>"""^^rdf:HTML ;
    qudt:conversionMultiplier 1016.0469088 ;
    qudt:definedUnitOfSystem sou:IMPERIAL ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Long_ton"^^xsd:anyURI ;
    qudt:symbol "ton",
        "ton"^^xsd:string ;
    qudt:ucumCode "[lton_av]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:TON_UK .

unit:TON_Metric a qudt:Unit,
        unit:Unit ;
    rdfs:label "Metric Ton"@en ;
    dcterms:description "The tonne (SI unit symbol: t) is a metric system unit of mass equal to 1,000 kilograms (2,204.6 pounds). It is a non-SI unit accepted for use with SI. To avoid confusion with the ton, it is also known as the metric tonne and metric ton in the United States[3] and occasionally in the United Kingdom. In SI units and prefixes, the tonne is a megagram (Mg), a rarely-used symbol, easily confused with mg, for milligram."^^rdf:HTML ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Tonne"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Tonne?oldid=492526238"^^xsd:anyURI ;
    qudt:plainTextDescription "1,000-fold of the SI base unit kilogram" ;
    qudt:symbol "mT",
        "mT"^^xsd:string ;
    qudt:ucumCode "t"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "TN" ;
    qudt:unitOfSystem sou:CGS,
        sou:SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:TONNE ;
    skos:altLabel "metric-tonne" .

unit:TON_SHORT a qudt:Unit,
        unit:Unit ;
    rdfs:label "Short Ton"@en ;
    dcterms:description "<p>The short ton is a unit of mass equal to 2,000 pounds (907.18474 kg). In the United States it is often called simply ton without distinguishing it from the metric ton (tonne, 1,000 kilograms / 2,204.62262 pounds) or the long ton (2,240 pounds / 1,016.0469088 kilograms); rather, the other two are specifically noted. There are, however, some U.S. applications for which unspecified tons normally means long tons.</p>"^^rdf:HTML ;
    qudt:conversionMultiplier 907.18474 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Short_ton"^^xsd:anyURI ;
    qudt:symbol "ton",
        "ton"^^xsd:string ;
    qudt:ucumCode "[ston_av]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:TON_US .

unit:TON_UK a qudt:Unit,
        unit:Unit ;
    rdfs:label "Ton (UK)"@en ;
    qudt:conversionMultiplier 1016.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:iec61360Code "0112/2///62720#UAB008",
        "0112/2///62720#UAB009" ;
    qudt:plainTextDescription "traditional Imperial unit for volume of cargo, especially in the shipping sector" ;
    qudt:symbol "ton"^^xsd:string ;
    qudt:ucumCode "[lton_av]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "L84",
        "LTN" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:TON_LONG .

unit:TON_US a qudt:Unit,
        unit:Unit ;
    rdfs:label "Ton (US)"@en ;
    qudt:conversionMultiplier 907.1847 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:iec61360Code "0112/2///62720#UAB012" ;
    qudt:plainTextDescription "unit of the mass according to the Anglo-American system of units" ;
    qudt:symbol "ton"^^xsd:string ;
    qudt:ucumCode "[ston_av]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "STN" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:TON_SHORT .

<http://www.linkedmodel.org/schema/dtype> a owl:Ontology ;
    vaem:namespace "http://www.linkedmodel.org/schema/dtype#"^^xsd:anyURI ;
    vaem:namespacePrefix "dtype" ;
    owl:imports <http://www.linkedmodel.org/schema/vaem> .

brick:Point a owl:Class,
        sh:NodeShape ;
    rdfs:label "Point" ;
    rdfs:subClassOf brick:Entity ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point .

quantitykind:SpecificEnergy a qudt:QuantityKind ;
    rdfs:label "Specific Energy"@en ;
    dcterms:description "\\(\\textbf{Specific Energy}\\) is defined as the energy per unit mass. Common metric units are \\(J/kg\\). It is an intensive property. Contrast this with energy, which is an extensive property. There are two main types of specific energy: potential energy and specific kinetic energy. Others are the \\(\\textbf{gray}\\) and \\(\\textbf{sievert}\\), which are measures for the absorption of radiation. The concept of specific energy applies to a particular or theoretical way of extracting useful energy from the material considered that is usually implied by context. These intensive properties are each symbolized by using the lower case letter of the symbol for the corresponding extensive property, which is symbolized by a capital letter. For example, the extensive thermodynamic property enthalpy is symbolized by \\(H\\); specific enthalpy is symbolized by \\(h\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:BTU_IT-PER-LB,
        unit:BTU_TH-PER-LB,
        unit:CAL_IT-PER-GM,
        unit:CAL_TH-PER-G,
        unit:CAL_TH-PER-GM,
        unit:ERG-PER-G,
        unit:ERG-PER-GM,
        unit:J-PER-GM,
        unit:J-PER-KiloGM,
        unit:KiloCAL-PER-GM,
        unit:KiloJ-PER-KiloGM,
        unit:KiloLB_F-FT-PER-LB,
        unit:MegaJ-PER-KiloGM,
        unit:N-M-PER-KiloGM ;
    qudt:baseUnitDimensions "\\(L^2/T^2\\)"^^qudt:LatexString,
        "\\(m^2/s^2\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Specific_energy"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T-2D0 ;
    qudt:informativeReference "http://en.citizendium.org/wiki/Enthalpy"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Specific_energy"^^xsd:anyURI ;
    qudt:latexDefinition "\\(e = E/m\\), where \\(E\\) is energy and \\(m\\) is mass."^^qudt:LatexString ;
    qudt:symbol "e" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Enthalpy,
        quantitykind:MassieuFunction,
        quantitykind:PlanckFunction,
        quantitykind:SpecificEnthalpy,
        quantitykind:SpecificGibbsEnergy,
        quantitykind:SpecificHelmholtzEnergy,
        quantitykind:SpecificInternalEnergy,
        unit:GRAY,
        unit:SV .

unit:AMU a qudt:Unit,
        unit:Unit ;
    rdfs:label "Atomic mass unit"@en ;
    dcterms:description "The \\(\\textit{Unified Atomic Mass Unit}\\) (symbol: \\(\\mu\\)) or \\(\\textit{dalton}\\) (symbol: Da) is a unit that is used for indicating mass on an atomic or molecular scale. It is defined as one twelfth of the rest mass of an unbound atom of carbon-12 in its nuclear and electronic ground state, and has a value of \\(1.660538782(83) \\times 10^{-27} kg\\).  One \\(Da\\) is approximately equal to the mass of one proton or one neutron. The CIPM have categorised it as a \\(\\textit{\"non-SI unit whose values in SI units must be obtained experimentally\"}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00000000000000000000000000166053878283 ;
    qudt:exactMatch unit:Da,
        unit:U ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Atomic_mass_unit"^^xsd:anyURI ;
    qudt:symbol "Da"^^xsd:string,
        "u"^^xsd:string,
        "μ",
        "μ"^^xsd:string ;
    qudt:ucumCode "u"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:Da,
        unit:U .

brick:Location a owl:Class,
        sh:NodeShape ;
    rdfs:label "Location" ;
    rdfs:subClassOf brick:Entity ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location .

tag:Fire a brick:Tag ;
    rdfs:label "Fire" .

tag:Security a brick:Tag ;
    rdfs:label "Security" .

tag:Service a brick:Tag ;
    rdfs:label "Service" .

tag:Speed a brick:Tag ;
    rdfs:label "Speed" .

unit:GM a qudt:Unit,
        unit:Unit ;
    rdfs:label "Gram"@en ;
    dcterms:description "A unit of mass in the metric system. The name comes from the Greek gramma, a small weight identified in later Roman and Byzantine times with the Latin scripulum or scruple (the English scruple is equal to about 1.3 grams). The gram was originally defined to be the mass of one cubic centimeter of pure water, but to provide precise standards it was necessary to construct physical objects of specified mass. One gram is now defined to be 1/1000 of the mass of the standard kilogram, a platinum-iridium bar carefully guarded by the International Bureau of Weights and Measures in Paris for more than a century. (The kilogram, rather than the gram, is considered the base unit of mass in the SI.) The gram is a small mass, equal to about 15.432 grains or 0.035 273 966 ounce. "^^rdf:HTML ;
    qudt:allowedUnitOfSystem sou:SI ;
    qudt:conversionMultiplier 0.001 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Gram"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:iec61360Code "0112/2///62720#UAA465" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Gram?oldid=493995797"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/gram> ;
    qudt:symbol "g",
        "g"^^xsd:string ;
    qudt:ucumCode "g"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "GRM" ;
    qudt:unitOfSystem sou:CGS,
        sou:SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PPB a qudt:Unit ;
    rdfs:label "Parts per billion"@en ;
    dcterms:description "Dimensionless unit for concentration. Recommended practice is to use specific units such as \\(ug/l\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.000000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:DimensionlessRatio ;
    qudt:informativeReference "http://aurora.regenstrief.org/~ucum/ucum.html#section-Derived-Unit-Atoms"^^xsd:anyURI ;
    qudt:symbol "ppb" ;
    qudt:ucumCode "[ppb]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PPM a qudt:Unit ;
    rdfs:label "Parts per million"@en ;
    dcterms:description "Dimensionless unit for concentration. Recommended practice is to use specific units such as \\(ug/l\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:DimensionlessRatio ;
    qudt:informativeReference "http://aurora.regenstrief.org/~ucum/ucum.html#section-Derived-Unit-Atoms"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/partsPerMillion> ;
    qudt:symbol "ppm" ;
    qudt:ucumCode "[ppm]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:U a qudt:Unit,
        unit:Unit ;
    rdfs:label "Unified Atomic Mass Unit"@en ;
    dcterms:description "The unified atomic mass unit (symbol: \\(u\\)) or dalton (symbol: \\(Da\\)) is the standard unit that is used for indicating mass on an atomic or molecular scale (atomic mass). It is defined as one twelfth of the mass of an unbound neutral atom of carbon-12 in its nuclear and electronic ground state,[ and has a value of \\(1.660538921(73) \\times 10^{-27} kg\\). One dalton is approximately equal to the mass of one nucleon; an equivalence of saying \\(1 g mol^{-1}\\). The CIPM have categorised it as a 'non-SI unit' because units values in SI units must be obtained experimentally."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00000000000000000000000000166053878283 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Atomic_mass_unit"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Mass ;
    qudt:iec61360Code "0112/2///62720#UAB083" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Atomic_mass_unit"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/unifiedAtomicMassUnit> ;
    qudt:symbol "Da"^^xsd:string,
        "u",
        "u"^^xsd:string,
        "μ"^^xsd:string ;
    qudt:ucumCode "u"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D43" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:AMU,
        unit:Da .

spin:systemProperty a rdf:Property ;
    rdfs:label "system property" ;
    rdfs:comment "An \"abstract\" base property that groups together those system properties that the user will hardly ever need to see in property trees. This property may be dropped in future versions of this ontology - right now it's mainly here for convenience." .

spl:BooleanFunctions a spin:Function ;
    rdfs:label "Boolean functions" ;
    spin:abstract true ;
    rdfs:comment "A collection of functions that return a boolean value (true or false)." ;
    rdfs:subClassOf spin:Functions .

brick:Alarm a owl:Class,
        sh:NodeShape ;
    rdfs:label "Alarm" ;
    rdfs:seeAlso <https://xp20.ashrae.org/terminology/index.php?term=alarm> ;
    rdfs:subClassOf brick:Point ;
    owl:disjointWith brick:Command,
        brick:Parameter,
        brick:Sensor,
        brick:Setpoint,
        brick:Status ;
    skos:definition "Alarm points are signals (either audible or visual) that alert an operator to an off-normal condition which requires some form of corrective action"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Alarm ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Alarm,
        tag:Point .

s223:hasDirection a rdf:Property ;
    rdfs:label "has Direction" .

qkdv:A0E2L-3I0M-1H0T3D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E2L-3I0M-1H0T3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 2 ;
    qudt:dimensionExponentForLength -3 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass -1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 3 ;
    qudt:dimensionlessExponent 0 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

quantitykind:Area a qudt:QuantityKind ;
    rdfs:label "Area"@en ;
    qudt:applicableUnit unit:AC,
        unit:ARE,
        unit:BARN,
        unit:CentiM2,
        unit:DecaARE,
        unit:DeciM2,
        unit:FT2,
        unit:HA,
        unit:IN2,
        unit:M2,
        unit:MI2,
        unit:MIL_Circ,
        unit:MicroM2,
        unit:MilliM2,
        unit:NanoM2,
        unit:PlanckArea,
        unit:YD2 ;
    qudt:baseCGSUnitDimensions "cm^2" ;
    qudt:baseSIUnitDimensions "\\(m^2\\)"^^qudt:LatexString ;
    qudt:baseUnitDimensions "\\(L^2\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Area"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M0H0T0D0 ;
    qudt:plainTextDescription "Area is a quantity expressing the two-dimensional size of a defined part of a surface, typically a region bounded by a closed curve." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:PowerPerArea a qudt:QuantityKind ;
    rdfs:label "Power Per Area"@en ;
    qudt:applicableUnit unit:BTU_IT-PER-HR-FT2,
        unit:BTU_IT-PER-SEC-FT2,
        unit:ERG-PER-CentiM2-SEC,
        unit:FT-LB_F-PER-FT2-SEC,
        unit:J-PER-CentiM2-DAY,
        unit:KiloCAL-PER-CentiM2-MIN,
        unit:KiloCAL-PER-CentiM2-SEC,
        unit:MicroW-PER-M2,
        unit:MilliW-PER-M2,
        unit:PSI-L-PER-SEC,
        unit:PicoW-PER-M2,
        unit:W-PER-CentiM2,
        unit:W-PER-FT2,
        unit:W-PER-IN2,
        unit:W-PER-M2 ;
    qudt:baseUnitDimensions "\\(M/T^3\\)"^^qudt:LatexString,
        "\\(kg/s^3\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-3D0 ;
    qudt:url "http://www.physicsforums.com/library.php?do=view_item&itemid=406"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

unit:ATM a qudt:Unit,
        unit:Unit ;
    rdfs:label "Standard Atmosphere"@en ;
    dcterms:description "The standard atmosphere (symbol: atm) is an international reference pressure defined as \\(101.325 \\,kPa\\) and formerly used as unit of pressure. For practical purposes it has been replaced by the bar which is \\(100 kPa\\). The difference of about 1% is not significant for many applications, and is within the error range of common pressure gauges."^^qudt:LatexString ;
    qudt:conversionMultiplier 101325.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAA322" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Atmosphere_(unit)"^^xsd:anyURI ;
    qudt:symbol "atm",
        "atm"^^xsd:string ;
    qudt:ucumCode "atm"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "ATM" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:ATM_T a qudt:Unit,
        unit:Unit ;
    rdfs:label "Technical Atmosphere"@en ;
    dcterms:description "A technical atmosphere (symbol: at) is a non-SI unit of pressure equal to one kilogram-force per square centimeter. The symbol 'at' clashes with that of the katal (symbol: 'kat'), the SI unit of catalytic activity; a kilotechnical atmosphere would have the symbol 'kat', indistinguishable from the symbol for the katal. It also clashes with that of the non-SI unit, the attotonne, but that unit would be more likely be rendered as the equivalent SI unit. Assay ton (abbreviation 'AT') is not a unit of measurement, but a standard quantity used in assaying ores of precious metals; it is \\(29 1D6 \\,grams\\) (short assay ton) or \\(32 2D3 \\,grams\\) (long assay ton), the amount which bears the same ratio to a milligram as a short or long ton bears to a troy ounce. In other words, the number of milligrams of a particular metal found in a sample of this size gives the number of troy ounces contained in a short or long ton of ore."^^qudt:LatexString ;
    qudt:conversionMultiplier 98066.5 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAA321" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Technical_atmosphere"^^xsd:anyURI ;
    qudt:latexDefinition "\\(1 at = 98.0665 kPa \\approx 0.96784 standard atmospheres\\)"^^qudt:LatexString ;
    qudt:symbol "at",
        "at"^^xsd:string ;
    qudt:ucumCode "att"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "ATT" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CM_H2O a qudt:Unit,
        unit:Unit ;
    rdfs:label "Centimetre of Water"@en,
        "Centimeter of Water"@en-us ;
    dcterms:isReplacedBy unit:CentiM_H2O ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:symbol "cmH2O",
        "cmH2O"^^xsd:string ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:deprecated true .

unit:CentiBAR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Centibar"@en ;
    dcterms:description "The bar is a non-SI unit of pressure, defined by the IUPAC as exactly equal to 100,000 Pa. It is about equal to the atmospheric pressure on Earth at sea level, and since 1982 the IUPAC has recommended that the standard for atmospheric pressure should be harmonized to \\(100,000\\,Pa = 1 bar \\approx 750.0616827 Torr\\). Units derived from the bar are the megabar (symbol: Mbar), kilobar (symbol: kbar), decibar (symbol: dbar), centibar (symbol: cbar), and millibar (symbol: mbar or mb). They are not SI or cgs units, but they are accepted for use with the SI."^^qudt:LatexString ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Bar_(unit)"^^xsd:anyURI ;
    qudt:isScalingOf unit:BAR ;
    qudt:prefix prefix:Centi ;
    qudt:symbol "cbar",
        "cbar"^^xsd:string ;
    qudt:ucumCode "cbar"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CentiM_HG a qudt:Unit,
        unit:Unit ;
    rdfs:label "Centimetre Of Mercury"@en,
        "Centimeter Of Mercury"@en-us ;
    qudt:conversionMultiplier 1333.224 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAA403" ;
    qudt:plainTextDescription "not SI conform unit of the pressure, that corresponds with the static pressure generated by a mercury column with the height of 1 centimetre" ;
    qudt:ucumCode "cm[Hg]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J89" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DYN-PER-CentiM2 a qudt:Unit,
        unit:Unit ;
    rdfs:label "Dyne per Square Centimetre"@en,
        "Dyne per Square Centimeter"@en-us ;
    dcterms:description "\"Dyne per Square Centimeter\" is a C.G.S System unit for  'Force Per Area' expressed as \\(dyn/cm^{2}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.1 ;
    qudt:derivedUnitOfSystem sou:CGS,
        sou:CGS-GAUSS ;
    qudt:expression "\\(dyn/cm^{2}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAA424" ;
    qudt:ucumCode "dyn.cm-2"^^qudt:UCUMcs,
        "dyn/cm2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D9" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DecaPA a qudt:Unit,
        unit:Unit ;
    rdfs:label "Decapascal"@en ;
    qudt:conversionMultiplier 10.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAB375" ;
    qudt:plainTextDescription "10-fold of the derived SI unit pascal" ;
    qudt:ucumCode "daPa"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H75" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DeciBAR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Decibar"@en ;
    dcterms:description "The bar is a non-SI unit of pressure, defined by the IUPAC as exactly equal to 100,000 Pa. It is about equal to the atmospheric pressure on Earth at sea level, and since 1982 the IUPAC has recommended that the standard for atmospheric pressure should be harmonized to \\(100,000 Pa = 1 bar \\approx 750.0616827 Torr\\). Units derived from the bar are the megabar (symbol: Mbar), kilobar (symbol: kbar), decibar (symbol: dbar), centibar (symbol: cbar), and millibar (symbol: mbar or mb). They are not SI or cgs units, but they are accepted for use with the SI."^^qudt:LatexString ;
    qudt:conversionMultiplier 10000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Bar_(unit)"^^xsd:anyURI ;
    qudt:isScalingOf unit:BAR ;
    qudt:prefix prefix:Deci ;
    qudt:symbol "dbar",
        "dbar"^^xsd:string ;
    qudt:ucumCode "dbar"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT_H2O a qudt:Unit,
        unit:Unit ;
    rdfs:label "Foot of Water"@en ;
    dcterms:description "\"Foot of Water\" is a unit for  'Force Per Area' expressed as \\(ftH2O\\)."^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAA463" ;
    qudt:symbol "ftH2O",
        "ftH2O"^^xsd:string ;
    qudt:ucumCode "[ft_i'H2O]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K24" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT_HG a qudt:Unit,
        unit:Unit ;
    rdfs:label "Foot Of Mercury"@en ;
    qudt:conversionMultiplier 40636.66 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAA464" ;
    qudt:plainTextDescription "not SI conform unit of the pressure, at which 1 ftHg corresponds to the static pressure, which is excited by a mercury column with a height of 1 foot" ;
    qudt:ucumCode "[ft_i'Hg]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K25" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GM_F-PER-CentiM2 a qudt:Unit,
        unit:Unit ;
    rdfs:label "Gram Force Per Square Centimetre"@en,
        "Gram Force Per Square Centimeter"@en-us ;
    qudt:conversionMultiplier 98.0665 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAA510" ;
    qudt:plainTextDescription "not SI conform unit of the pressure" ;
    qudt:ucumCode "gf.cm-2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K31" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GigaPA a qudt:Unit,
        unit:Unit ;
    rdfs:label "Gigapascal"@en ;
    qudt:conversionMultiplier 1000000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAA153" ;
    qudt:plainTextDescription "1 000 000 000-fold of the SI derived unit pascal" ;
    qudt:ucumCode "GP"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A89" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HectoBAR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Hectobar"@en ;
    qudt:conversionMultiplier 10000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAB087" ;
    qudt:plainTextDescription "100-fold of the unit bar" ;
    qudt:ucumCode "hbar"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "HBA" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:IN_H2O a qudt:Unit,
        unit:Unit ;
    rdfs:label "Inch of Water"@en ;
    dcterms:description "Inches of water, wc, inch water column (inch WC), inAq, Aq, or inH2O is a non-SI unit for pressure. The units are by convention and due to the historical measurement of certain pressure differentials. It is used for measuring small pressure differences across an orifice, or in a pipeline or shaft. Inches of water can be converted to a pressure unit using the formula for pressure head. It is defined as the pressure exerted by a column of water of 1 inch in height at defined conditions for example \\(39 ^\\circ F\\) at the standard acceleration of gravity; 1 inAq is approximately equal to 249 pascals at \\(0 ^\\circ C\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 249.080024 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Inch_of_water"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAA553" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Inch_of_water?oldid=466175519"^^xsd:anyURI ;
    qudt:symbol "inAq",
        "inAq"^^xsd:string ;
    qudt:ucumCode "[in_i'H2O]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F78" ;
    qudt:unitOfSystem sou:USCS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:IN_HG a qudt:Unit,
        unit:Unit ;
    rdfs:label "Inch of Mercury"@en ;
    dcterms:description "Inches of mercury, (inHg) is a unit of measurement for pressure. It is still widely used for barometric pressure in weather reports, refrigeration and aviation in the United States, but is seldom used elsewhere. It is defined as the pressure exerted by a column of mercury of 1 inch in height at \\(32 ^\\circ F\\) at the standard acceleration of gravity. 1 inHg = 3,386.389 pascals at \\(0 ^\\circ C\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 3386.389 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Inch_of_mercury"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAA554" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Inch_of_mercury?oldid=486634645"^^xsd:anyURI ;
    qudt:symbol "inHg",
        "inHg"^^xsd:string ;
    qudt:ucumCode "[in_i'Hg]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F79" ;
    qudt:unitOfSystem sou:USCS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KIP_F-PER-IN2 a qudt:Unit,
        unit:Unit ;
    rdfs:label "Kip per Square Inch"@en ;
    dcterms:description "\"Kip per Square Inch\" is a unit for  'Force Per Area' expressed as \\(kip/in^{2}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 6894757.89 ;
    qudt:expression "\\(kip/in^{2}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAB242" ;
    qudt:ucumCode "k[lbf_av].[in_i]-2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloBAR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilobar"@en ;
    dcterms:description "The bar is a non-SI unit of pressure, defined by the IUPAC as exactly equal to 100,000 Pa. It is about equal to the atmospheric pressure on Earth at sea level, and since 1982 the IUPAC has recommended that the standard for atmospheric pressure should be harmonized to \\(100,000 Pa = 1 bar \\approx 750.0616827 Torr\\). Units derived from the bar are the megabar (symbol: Mbar), kilobar (symbol: kbar), decibar (symbol: dbar), centibar (symbol: cbar), and millibar (symbol: mbar or mb). They are not SI or cgs units, but they are accepted for use with the SI."^^qudt:LatexString ;
    qudt:conversionMultiplier 100000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAB088" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Bar_(unit)"^^xsd:anyURI ;
    qudt:isScalingOf unit:BAR ;
    qudt:prefix prefix:Kilo ;
    qudt:symbol "kbar",
        "kbar"^^xsd:string ;
    qudt:ucumCode "kbar"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "KBA" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM-PER-M-SEC2 a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilograms per metre per square second"@en ;
    dcterms:description "The SI unit of pressure. The pascal is the standard pressure unit in the MKS metric system, equal to one newton per square meter or one \"kilogram per meter per second per second.\" The unit is named for Blaise Pascal (1623-1662), French philosopher and mathematician, who was the first person to use a barometer to measure differences in altitude."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Pascal"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:siUnitsExpression "kg/m/s^2" ;
    qudt:symbol "Pa"^^xsd:string ;
    qudt:ucumCode "kg.m-1.s-2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:PA .

unit:KiloGM_F-PER-CentiM2 a qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilogram Force per Square Centimetre"@en,
        "Kilogram Force per Square Centimeter"@en-us ;
    dcterms:description "\"Kilogram Force per Square Centimeter\" is a unit for  'Force Per Area' expressed as \\(kgf/cm^{2}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 98066.5 ;
    qudt:expression "\\(kgf/cm^{2}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:ucumCode "kgf.cm-2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM_F-PER-M2 a qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilogram Force Per Square Metre"@en,
        "Kilogram Force Per Square Meter"@en-us ;
    qudt:conversionMultiplier 9.80665 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAA635" ;
    qudt:plainTextDescription "not SI conform unit of the pressure" ;
    qudt:ucumCode "kgf.m-2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B40" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloGM_F-PER-MilliM2 a qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilogram Force Per Square Millimetre"@en,
        "Kilogram Force Per Square Millimeter"@en-us ;
    qudt:conversionMultiplier 9806650.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAA636" ;
    qudt:plainTextDescription "not SI conform unit of the pressure" ;
    qudt:ucumCode "kgf.mm-2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "E41" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloLB_F-PER-IN2 a qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilopound Force Per Square Inch"@en ;
    qudt:conversionMultiplier 6894757.89 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAB138" ;
    qudt:plainTextDescription "1 000-fold of the unit for pressure psi as a compounded unit pound-force according to the Anglo-American system of units divided by the power of the unit Inch according to the Anglo-American and Imperial system of units by exponent 2" ;
    qudt:ucumCode "k[lbf_av].[sin_i]-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "84" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloPA a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilopascal"@en ;
    dcterms:description "Kilopascal is a unit of pressure. 1 kPa is approximately the pressure exerted by a 10-g mass resting on a 1-cm2 area. 101.3 kPa = 1 atm. There are 1,000 pascals in 1 kilopascal."^^rdf:HTML ;
    qudt:allowedUnitOfSystem sou:SI ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Pascal_%28unit%29"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAA575" ;
    qudt:isScalingOf unit:PA ;
    qudt:symbol "kPa",
        "kPa"^^xsd:string ;
    qudt:ucumCode "kPa"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "KPA" ;
    qudt:unitOfSystem sou:SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloPA_A a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilopascal Absolute"@en ;
    dcterms:description "\\(\\textbf{Kilopascal Absolute} is a SI System unit for 'Force Per Area' expressed as \\(KPaA\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:symbol "KPaA",
        "KPaA"^^xsd:string ;
    qudt:ucumCode "kPa{absolute}"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:LB_F-PER-FT2 a qudt:Unit,
        unit:Unit ;
    rdfs:label "Pound Force per Square Foot"@en ;
    dcterms:description "Pounds or Pounds Force per Square Foot is a British (Imperial) and American pressure unit which is directly related to the psi pressure unit by a factor of 144 (1 sq ft = 12 in x 12 in = 144 sq in). 1 Pound per Square Foot equals 47.8803 Pascals. The psf pressure unit is mostly for lower pressure applications such as specifying building structures to withstand a certain wind force or rating a building floor for maximum weight load."^^rdf:HTML ;
    qudt:conversionMultiplier 47.8802631 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(lbf/ft^{2}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:ucumCode "[lbf_av].[sft_i]-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaBAR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Megabar"@en ;
    dcterms:description "The bar is a non-SI unit of pressure, defined by the IUPAC as exactly equal to 100,000 Pa. It is about equal to the atmospheric pressure on Earth at sea level, and since 1982 the IUPAC has recommended that the standard for atmospheric pressure should be harmonized to \\(100,000 Pa = 1 bar \\approx 750.0616827 Torr\\). Units derived from the bar are the megabar (symbol: Mbar), kilobar (symbol: kbar), decibar (symbol: dbar), centibar (symbol: cbar), and millibar (symbol: mbar or mb). They are not SI or cgs units, but they are accepted for use with the SI."^^qudt:LatexString ;
    qudt:conversionMultiplier 100000000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Bar_(unit)"^^xsd:anyURI ;
    qudt:isScalingOf unit:BAR ;
    qudt:prefix prefix:Mega ;
    qudt:symbol "Mbar",
        "Mbar"^^xsd:string ;
    qudt:ucumCode "Mbar"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaPA a qudt:Unit,
        unit:Unit ;
    rdfs:label "Megapascal"@en ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAA215" ;
    qudt:plainTextDescription "1,000,000-fold of the derived unit pascal" ;
    qudt:ucumCode "MPa"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "MPA" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroATM a qudt:Unit,
        unit:Unit ;
    rdfs:label "Microatmospheres"@en ;
    dcterms:description "Unavailable"@en ;
    qudt:conversionMultiplier 0.101325 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:ucumCode "uatm"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroBAR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Microbar"@en ;
    qudt:conversionMultiplier 0.1 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAB089" ;
    qudt:plainTextDescription "0.000001-fold of the unit bar" ;
    qudt:ucumCode "ubar"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B85" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroPA a qudt:Unit,
        unit:Unit ;
    rdfs:label "Micropascal"@en ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAA073" ;
    qudt:plainTextDescription "0.000001-fold of the SI derived unit pascal" ;
    qudt:ucumCode "uPa"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B96" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroTORR a qudt:Unit,
        unit:Unit ;
    rdfs:label "MicroTorr"@en ;
    dcterms:description "\"MicroTorr\" is a unit for  'Force Per Area' expressed as \\(microtorr\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.000133322 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:symbol "μTorr",
        "μTorr"^^xsd:string ;
    qudt:ucumCode "uTorr"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliM_H2O a qudt:Unit,
        unit:Unit ;
    rdfs:label "Conventional Millimetre Of Water"@en,
        "Conventional Millimeter Of Water"@en-us ;
    qudt:conversionMultiplier 9.80665 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAA875" ;
    qudt:plainTextDescription "unit of pressure - 1 mmH2O is the static pressure exerted by a water column with a height of 1 mm" ;
    qudt:ucumCode "mm[H2O]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "HP" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliM_HG a qudt:Unit,
        unit:Unit ;
    rdfs:label "Millimetre of Mercury"@en,
        "Millimeter of Mercury"@en-us ;
    dcterms:description "The millimeter of mercury is defined as the pressure exerted at the base of a column of fluid exactly 1 mm high, when the density of the fluid is exactly \\(13.5951 g/cm^{3}\\), at a place where the acceleration of gravity is exactly \\(9.80665 m/s^{2}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 133.322387415 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Torr"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Torr?oldid=495199381"^^xsd:anyURI ;
    qudt:symbol "mm Hg",
        "mm Hg"^^xsd:string ;
    qudt:ucumCode "mm[Hg]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliM_HGA a qudt:Unit,
        unit:Unit ;
    rdfs:label "Millimetre of Mercury - Absolute"@en,
        "Millimeter of Mercury - Absolute"@en-us ;
    dcterms:description "Millimeters of Mercury inclusive of atmospheric pressure"^^rdf:HTML ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:symbol "mmHgA",
        "mmHgA"^^xsd:string ;
    qudt:ucumCode "mm[Hg]{absolute}"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliPA a qudt:Unit,
        unit:Unit ;
    rdfs:label "Millipascal"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAA796" ;
    qudt:plainTextDescription "0.001-fold of the SI derived unit pascal" ;
    qudt:ucumCode "mPa"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "74" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliTORR a qudt:Unit,
        unit:Unit ;
    rdfs:label "MilliTorr"@en ;
    dcterms:description "\"MilliTorr\" is a unit for  'Force Per Area' expressed as \\(utorr\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.133322 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:symbol "utorr",
        "utorr"^^xsd:string ;
    qudt:ucumCode "mTorr"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:N-PER-CentiM2 a qudt:Unit,
        unit:Unit ;
    rdfs:label "Newton Per Square Centimetre"@en,
        "Newton Per Square Centimeter"@en-us ;
    qudt:conversionMultiplier 10000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAB183" ;
    qudt:plainTextDescription "derived SI unit newton divided by the 0.0001-fold of the power of the SI base unit metre by exponent 2" ;
    qudt:ucumCode "N.cm-1"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "E01" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:N-PER-MilliM2 a qudt:Unit,
        unit:Unit ;
    rdfs:label "Newton Per Square Millimetre"@en,
        "Newton Per Square Millimeter"@en-us ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAA250" ;
    qudt:plainTextDescription "SI derived unit newton divided by the 0.000001-fold of the power of the SI base unit metre with the exponent 2" ;
    qudt:ucumCode "N.mm-2"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C56" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PDL-PER-FT2 a qudt:Unit,
        unit:Unit ;
    rdfs:label "Poundal per Square Foot"@en ;
    dcterms:description "Poundal Per Square Foot (\\(pdl/ft^2\\)) is a unit in the category of Pressure. It is also known as poundals per square foot, poundal/square foot. This unit is commonly used in the UK, US unit systems. Poundal Per Square Foot has a dimension of \\(ML^{-1}T^{-2}\\), where M is mass, L is length, and T is time. It can be converted to the corresponding standard SI unit \\si{Pa} by multiplying its value by a factor of 1.488163944."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.48816443 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(pdl/ft^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAB243" ;
    qudt:informativeReference "http://www.efunda.com/glossary/units/units--pressure--poundal_per_square_foot.cfm"^^xsd:anyURI ;
    qudt:ucumCode "[lb_av].[ft_i].s-2.[sft_i]-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PERCENT a qudt:Unit ;
    rdfs:label "Percent"@en ;
    dcterms:description "\"Percent\" is a unit for  'Dimensionless Ratio' expressed as \\(\\%\\)."^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Percentage"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:DimensionlessRatio,
        quantitykind:LengthPercentage,
        quantitykind:PressurePercentage,
        quantitykind:Prevalence,
        quantitykind:ResistancePercentage,
        quantitykind:TimePercentage,
        quantitykind:VoltagePercentage ;
    qudt:iec61360Code "0112/2///62720#UAA000" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Percentage?oldid=495284540"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/percent> ;
    qudt:symbol "%" ;
    qudt:ucumCode "%"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "P1" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PlanckPressure a qudt:Unit,
        unit:Unit ;
    rdfs:label "Planck Pressure"@en ;
    qudt:conversionMultiplier 463309000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Planck_pressure"^^xsd:anyURI ;
    qudt:derivedUnitOfSystem sou:PLANCK ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Planck_pressure?oldid=493640883"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:TORR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Torr"@en ;
    dcterms:description "<p>The \\textit{torr} is a non-SI unit of pressure with the ratio of 760 to 1 standard atmosphere, chosen to be roughly equal to the fluid pressure exerted by a millimeter of mercury, i.e. , a pressure of 1 torr is approximately equal to one millimeter of mercury. Note that the symbol (Torr) is spelled exactly the same as the unit (torr), but the letter case differs. The unit is written lower-case, while the symbol of the unit (Torr) is capitalized (as upper-case), as is customary in metric units derived from names. Thus, it is correctly written either way, and is only incorrect when specification is first made that the word is being used as a unit, or else a symbol of the unit, and then the incorrect letter case for the specified use is employed.</p>"^^rdf:HTML ;
    qudt:conversionMultiplier 133.322 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Torr"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAB022" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Torr?oldid=495199381"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/torr> ;
    qudt:symbol "Torr",
        "Torr"^^xsd:string ;
    qudt:ucumCode "Torr"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "UA" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

brick:Command a owl:Class,
        sh:NodeShape ;
    rdfs:label "Command" ;
    rdfs:subClassOf brick:Point ;
    owl:disjointWith brick:Alarm,
        brick:Parameter,
        brick:Sensor,
        brick:Setpoint,
        brick:Status ;
    skos:definition "A Command is an output point that directly determines the behavior of equipment and/or affects relevant operational points."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Command ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Command,
        tag:Point .

tag:Building a brick:Tag ;
    rdfs:label "Building" .

tag:Demand a brick:Tag ;
    rdfs:label "Demand" .

tag:Medium a brick:Tag ;
    rdfs:label "Medium" .

tag:Meter a brick:Tag ;
    rdfs:label "Meter" .

tag:Panel a brick:Tag ;
    rdfs:label "Panel" .

s223:Device a s223:Class,
        sh:NodeShape ;
    rdfs:label "Device" ;
    rdfs:comment "A Device is normally a physical entity that one might buy from a vendor - a tangible object designed to accomplish a specific task." ;
    rdfs:subClassOf s223:Connectable ;
    sh:property [ a sh:PropertyShape ;
            sh:class s223:Device ;
            sh:minCount 0 ;
            sh:name "device contains shape" ;
            sh:path s223:contains ],
        [ sh:description "The commanded state of a device" ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:name "commanded State" ;
            sh:path s223:commandedState ],
        [ sh:class s223:PhysicalSpace ;
            sh:path s223:hasLocation ],
        [ sh:class s223:Role ;
            sh:path s223:hasRole ],
        s223:hasContextualRoleShape,
        s223:hasPropertyShape .

qkdv:A0E0L-1I0M0H0T0D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-1I0M0H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:Curvature,
        quantitykind:InverseLength ;
    qudt:latexDefinition "\\(L^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L0I0M1H0T-2D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M1H0T-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:EnergyPerArea,
        quantitykind:ForcePerLength ;
    qudt:latexDefinition "\\(M T^-2\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

unit:BARAD a qudt:Unit,
        unit:Unit ;
    rdfs:label "Barad"@en ;
    dcterms:description "A barad is a dyne per square centimetre (\\(dyn \\cdot cm^{-2}\\)), and is equal to \\(0.1 Pa \\) (\\(1 \\, micro \\, bar\\), \\(0.000014504 \\, p.s.i.\\)). Note that this is precisely the microbar, the confusable bar being related in size to the normal atmospheric pressure, at \\(100\\,dyn \\cdot cm^{-2}\\). Accordingly barad was not abbreviated, so occurs prefixed as in \\(cbarad = centibarad\\). Despite being the coherent unit for pressure in c.g.s., barad was probably much less common than the non-coherent bar. Barad is sometimes called \\(barye\\), a name also used for \\(bar\\)."^^qudt:LatexString ;
    qudt:exactMatch unit:BARYE ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:symbol "ρ"^^xsd:string ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:BARYE .

unit:CentiM_H2O a qudt:Unit,
        unit:Unit ;
    rdfs:label "Centimetre of Water"@en,
        "Conventional Centimetre Of Water"@en,
        "Centimeter of Water"@en-us,
        "Conventional Centimeter Of Water"@en-us ;
    dcterms:description "\\(\\textbf{Centimeter of Water}\\) is a C.G.S System unit for  'Force Per Area' expressed as \\(cm_{H2O}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 98.0665 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Centimetre_of_water"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAA402" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Centimetre_of_water?oldid=487656894"^^xsd:anyURI ;
    qudt:plainTextDescription "non SI conforming unit of pressure that corresponds to the static pressure generated by a water column with a height of 1 centimetre" ;
    qudt:symbol "cmH2O",
        "cmH2O"^^xsd:string ;
    qudt:ucumCode "cm[H2O]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H78" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HectoPA a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Hectopascal"@en ;
    dcterms:description "Hectopascal is a unit of pressure. 1 Pa is approximately the pressure exerted by a 10-g mass resting on a 1-cm2 area. 1013 hPa = 1 atm. There are 100 pascals in 1 hectopascal."^^rdf:HTML ;
    qudt:conversionMultiplier 100.0 ;
    qudt:exactMatch unit:MilliBAR ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAA527" ;
    qudt:isScalingOf unit:PA ;
    qudt:symbol "hPa",
        "hPa"^^xsd:string,
        "mbar"^^xsd:string ;
    qudt:ucumCode "hPa"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A97" ;
    qudt:unitOfSystem sou:SI ;
    rdfs:comment "Hectopascal is commonly used in meteorology to report values for atmospheric pressure. It is equivalent to millibar." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:MilliBAR .

unit:LB_F-PER-IN2 a qudt:Unit,
        unit:Unit ;
    rdfs:label "Pound Force per Square Inch"@en ;
    dcterms:description "\"Pound Force per Square Inch\" is an Imperial unit for  'Force Per Area' expressed as \\(psia\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 6894.75789 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Pounds_per_square_inch"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Pounds_per_square_inch?oldid=485678341"^^xsd:anyURI ;
    qudt:symbol "psia",
        "psia"^^xsd:string ;
    qudt:ucumCode "[lbf_av].[sin_i]-1"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:PSI .

unit:N-PER-M2 a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "N-PER-M2"@en ;
    dcterms:description "The SI unit of pressure. The pascal is the standard pressure unit in the MKS metric system, equal to one newton per square meter or one \"kilogram per meter per second per second.\" The unit is named for Blaise Pascal (1623-1662), French philosopher and mathematician, who was the first person to use a barometer to measure differences in altitude."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Pascal"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Pascal?oldid=492989202"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:siUnitsExpression "N/m^2" ;
    qudt:symbol "Pa",
        "Pa"^^xsd:string ;
    qudt:ucumCode "N.m-2"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:PA .

unit:PSI a qudt:Unit,
        unit:Unit ;
    rdfs:label "PSI"@en ;
    qudt:conversionMultiplier 6894.75789 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:plainTextDescription "Pounds of force per square inch, the unit for pressure as a compounded unit pound-force according to the Anglo-American system of units divided by the power of the unit Inch according to the Anglo-American and Imperial system of units by exponent 2" ;
    qudt:symbol "psia"^^xsd:string ;
    qudt:ucumCode "[psi]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:LB_F-PER-IN2 .

sp:arg a rdf:Property ;
    rdfs:label "arg" ;
    rdfs:comment "Abstract superproperty for the enumerated arg1, arg2 etc." .

brick:Water a owl:Class,
        sh:NodeShape,
        brick:Water ;
    rdfs:label "Water" ;
    rdfs:subClassOf brick:Liquid ;
    skos:definition "transparent, odorless, tasteless liquid; a compound of hydrogen and oxygen (H2O), containing 11.188% hydrogen and 88.812% oxygen by mass; freezing at 32°F (0°C); boiling near 212°F (100°C)."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Liquid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Water ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Fluid,
        tag:Liquid,
        tag:Water .

quantitykind:Frequency a qudt:QuantityKind ;
    rdfs:label "Frequency"@en ;
    dcterms:description "\"Frequency\" is the number of occurrences of a repeating event per unit time. The repetition of the events may be periodic (that is. the length of time between event repetitions is fixed) or aperiodic (i.e. the length of time between event repetitions varies). Therefore, we distinguish between periodic and aperiodic frequencies. In the SI system, periodic frequency is measured in hertz (Hz) or multiples of hertz, while aperiodic frequency is measured in becquerel (Bq).  In spectroscopy, \\(\\nu\\) is mostly used. Light passing through different media keeps its frequency, but not its wavelength or wavenumber."^^qudt:LatexString ;
    qudt:applicableUnit unit:GigaHZ,
        unit:HZ,
        unit:KiloHZ,
        unit:MegaHZ,
        unit:NUM-PER-HR,
        unit:NUM-PER-SEC,
        unit:NUM-PER-YR,
        unit:PER-DAY,
        unit:PER-HR,
        unit:PER-MIN,
        unit:PER-MO,
        unit:PER-MilliSEC,
        unit:PER-SEC,
        unit:PER-WK,
        unit:PER-YR,
        unit:PERCENT-PER-DAY,
        unit:PERCENT-PER-HR,
        unit:PERCENT-PER-WK,
        unit:PlanckFrequency,
        unit:SAMPLE-PER-SEC,
        unit:TeraHZ,
        unit:failures-in-time ;
    qudt:baseUnitDimensions "\\(/T\\)"^^qudt:LatexString,
        "\\(/s\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Frequency"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T-1D0 ;
    qudt:latexDefinition """\\(f = 1/T\\), where \\(T\\) is a period.

Alternatively,

\\(\\nu = 1/T\\)"""^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\nu, f\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:InverseTime .

unit:BARYE a qudt:Unit,
        unit:Unit ;
    rdfs:label "Barye"@en ;
    dcterms:description "<p>The barye, or sometimes barad, barrie, bary, baryd, baryed, or barie, is the centimetre-gram-second (CGS) unit of pressure. It is equal to 1 dyne per square centimetre.</p>"^^rdf:HTML ;
    qudt:conversionMultiplier 0.1 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Barye"^^xsd:anyURI ;
    qudt:derivedCoherentUnitOfSystem sou:CGS ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Barye?oldid=478631158"^^xsd:anyURI ;
    qudt:latexDefinition "\\(g/(cm\\cdot s{2}\\)"^^qudt:LatexString ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/barye> ;
    qudt:symbol "ρ",
        "ρ"^^xsd:string ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:BARAD ;
    skos:altLabel "barad",
        "barie",
        "bary",
        "baryd",
        "baryed" .

unit:MilliBAR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Millibar"@en ;
    dcterms:description "The bar is a non-SI unit of pressure, defined by the IUPAC as exactly equal to 100,000 Pa. It is about equal to the atmospheric pressure on Earth at sea level, and since 1982 the IUPAC has recommended that the standard for atmospheric pressure should be harmonized to \\(100,000 Pa = 1 bar \\approx 750.0616827 Torr\\). Units derived from the bar are the megabar (symbol: Mbar), kilobar (symbol: kbar), decibar (symbol: dbar), centibar (symbol: cbar), and millibar (symbol: mbar or mb). They are not SI or cgs units, but they are accepted for use with the SI."^^qudt:LatexString ;
    qudt:conversionMultiplier 100.0 ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAA810" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Bar_(unit)"^^xsd:anyURI ;
    qudt:isScalingOf unit:BAR ;
    qudt:prefix prefix:Milli ;
    qudt:symbol "hPa"^^xsd:string,
        "mbar",
        "mbar"^^xsd:string ;
    qudt:ucumCode "mbar"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "MBR" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:HectoPA .

tag:Power a brick:Tag ;
    rdfs:label "Power" .

<http://qudt.org/2.0/schema/qudt/mathematics> a owl:Ontology ;
    rdfs:label "QUDT Mathematics Schema" ;
    vaem:hasGraphMetadata qudt:GMD_QUDT-SCHEMA-MATHEMATICS ;
    owl:imports <http://qudt.org/2.1/schema/qudt>,
        <http://www.linkedmodel.org/schema/dtype>,
        <http://www.linkedmodel.org/schema/vaem>,
        <http://www.w3.org/2004/02/skos/core> ;
    owl:versionIRI <http://qudt.org/2.0/schema/qudt/engineering> .

qkdv:A0E0L0I0M1H0T-3D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M1H0T-3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -3 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:PowerPerArea ;
    qudt:latexDefinition "\\(M T^-3\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

spin:_arg1 a sp:Variable ;
    sp:varName "arg1" .

tag:Emergency a brick:Tag ;
    rdfs:label "Emergency" .

tag:On a brick:Tag ;
    rdfs:label "On" .

qudt:Prefix a owl:Class,
        sh:NodeShape ;
    rdfs:label "Prefix" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Concept,
        qudt:Verifiable ;
    sh:property qudt:Prefix-qudt_latexSymbol,
        qudt:Prefix-qudt_prefixMultiplier,
        qudt:Prefix-qudt_symbol,
        qudt:Prefix-qudt_ucumCode .

quantitykind:Velocity a qudt:QuantityKind ;
    rdfs:label "Velocity"@en ;
    qudt:applicableUnit unit:CentiM-PER-HR,
        unit:CentiM-PER-KiloYR,
        unit:CentiM-PER-SEC,
        unit:FT-PER-HR,
        unit:FT-PER-MIN,
        unit:FT-PER-SEC,
        unit:GigaHZ-M,
        unit:IN-PER-SEC,
        unit:KN,
        unit:KiloM-PER-DAY,
        unit:KiloM-PER-HR,
        unit:KiloM-PER-SEC,
        unit:M-PER-HR,
        unit:M-PER-MIN,
        unit:M-PER-SEC,
        unit:M-PER-YR,
        unit:MI-PER-HR,
        unit:MI-PER-MIN,
        unit:MI_N-PER-HR,
        unit:MI_N-PER-MIN,
        unit:MilliM-PER-DAY,
        unit:MilliM-PER-HR,
        unit:MilliM-PER-MIN,
        unit:MilliM-PER-SEC,
        unit:MilliM-PER-YR ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Velocity"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Velocity"^^xsd:anyURI ;
    qudt:plainTextDescription "In kinematics, velocity is the speed of an object and a specification of its direction of motion. Speed describes only how fast an object is moving, whereas velocity gives both how fast and in what direction the object is moving. " ;
    qudt:symbol "v" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

unit:BAR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Bar"@en ;
    dcterms:description "The bar is a non-SI unit of pressure, defined by the IUPAC as exactly equal to \\(100,000\\,Pa\\). It is about equal to the atmospheric pressure on Earth at sea level, and since 1982 the IUPAC has recommended that the standard for atmospheric pressure should be harmonized to \\(100,000\\,Pa = 1 \\,bar \\approx 750.0616827\\, Torr\\). Units derived from the bar are the megabar (symbol: Mbar), kilobar (symbol: kbar), decibar (symbol: dbar), centibar (symbol: cbar), and millibar (symbol: mbar or mb). They are not SI or cgs units, but they are accepted for use with the SI."^^qudt:LatexString ;
    qudt:conversionMultiplier 100000.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Bar"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:ForcePerArea ;
    qudt:iec61360Code "0112/2///62720#UAA323" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Bar?oldid=493875987"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Bar_(unit)"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/bar> ;
    qudt:symbol "bar",
        "bar"^^xsd:string ;
    qudt:ucumCode "bar"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "BAR" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

brick:HVAC_Equipment a owl:Class,
        sh:NodeShape ;
    rdfs:label "HVAC Equipment" ;
    rdfs:subClassOf brick:Equipment ;
    skos:definition "See Heating_Ventilation_Air_Conditioning_System"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:HVAC ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment,
        tag:HVAC .

<http://qudt.org/2.1/vocab/prefix> a owl:Ontology ;
    vaem:hasGraphMetadata vaem:GMD_QUDT-PREFIXES ;
    owl:imports <http://qudt.org/2.1/schema/qudt> ;
    owl:versionIRI <http://qudt.org/2.1/vocab/prefix> ;
    owl:versionInfo "Created with TopBraid Composer" .

unit:MicroJ a qudt:Unit ;
    rdfs:label "Mikrojoule "@de,
        "Micro Joule"@en,
        "Micro Joule"@en-us ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:conversionOffset 0.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:plainTextDescription "0.000001-fold of the SI derived unit joule" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:NUM a qudt:CountingUnit,
        qudt:Unit ;
    rdfs:label "Number"@en ;
    dcterms:description "\"Number\" is a unit for  'Dimensionless' expressed as (\\#\\)."^^rdf:HTML ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:ChargeNumber,
        quantitykind:Dimensionless,
        quantitykind:DimensionlessRatio,
        quantitykind:FrictionCoefficient,
        quantitykind:HyperfineStructureQuantumNumber,
        quantitykind:IonTransportNumber,
        quantitykind:Landau-GinzburgNumber,
        quantitykind:MagneticQuantumNumber,
        quantitykind:MassNumber,
        quantitykind:NeutronNumber,
        quantitykind:NuclearSpinQuantumNumber,
        quantitykind:NucleonNumber,
        quantitykind:OrbitalAngularMomentumQuantumNumber,
        quantitykind:PrincipalQuantumNumber,
        quantitykind:QuantumNumber,
        quantitykind:ReynoldsNumber,
        quantitykind:SpinQuantumNumber,
        quantitykind:StoichiometricNumber,
        quantitykind:TotalAngularMomentumQuantumNumber ;
    qudt:symbol "#" ;
    qudt:ucumCode "1"^^qudt:UCUMcs,
        "{#}"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

brick:Room a owl:Class,
        sh:NodeShape ;
    rdfs:label "Room" ;
    rdfs:subClassOf brick:Space ;
    skos:definition "Base class for all more specific room types."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Location ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Room ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Location,
        tag:Room .

quantitykind:ElectricCharge a qudt:QuantityKind ;
    rdfs:label "Electric Charge"@en ;
    dcterms:description "\"Electric Charge\" is a fundamental conserved property of some subatomic particles, which determines their electromagnetic interaction. Electrically charged matter is influenced by, and produces, electromagnetic fields. The electric charge on a body may be positive or negative. Two positively charged bodies experience a mutual repulsive force, as do two negatively charged bodies. A positively charged body and a negatively charged body experience an attractive force. Electric charge is carried by discrete particles and can be positive or negative. The sign convention is such that the elementary electric charge \\(e\\), that is, the charge of the proton, is positive. The SI derived unit of electric charge is the coulomb."^^qudt:LatexString ;
    qudt:applicableUnit unit:A-HR,
        unit:A-SEC,
        unit:AttoC,
        unit:C,
        unit:C_Ab,
        unit:C_Stat,
        unit:CentiC,
        unit:DecaC,
        unit:DeciC,
        unit:E,
        unit:ElementaryCharge,
        unit:ExaC,
        unit:F,
        unit:FR,
        unit:FemtoC,
        unit:GigaC,
        unit:HectoC,
        unit:KiloA-HR,
        unit:KiloC,
        unit:MegaC,
        unit:MicroC,
        unit:MilliA-HR,
        unit:MilliC,
        unit:NanoC,
        unit:PetaC,
        unit:PicoC,
        unit:PlanckCharge,
        unit:TeraC,
        unit:YoctoC,
        unit:YottaC,
        unit:ZeptoC,
        unit:ZettaC ;
    qudt:baseUnitDimensions "\\(A \\cdot s\\)"^^qudt:LatexString,
        "\\(I \\cdot T\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Electric_charge"^^xsd:anyURI,
        "http://en.wikipedia.org/wiki/Electric_charge?oldid=492961669"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=31891"^^xsd:anyURI ;
    qudt:latexDefinition "\\(dQ = Idt\\), where \\(I\\) is electric current."^^qudt:LatexString ;
    qudt:symbol "Q" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:ElectricCurrent .

unit:AttoJ a qudt:Unit,
        unit:Unit ;
    rdfs:label "Attojoule"@en ;
    qudt:conversionMultiplier 0.000000000000000001 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:iec61360Code "0112/2///62720#UAB125" ;
    qudt:plainTextDescription "0,000 000 000 000 000 001-fold of the derived SI unit joule" ;
    qudt:ucumCode "aJ"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A13" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:EV a qudt:Unit,
        unit:Unit ;
    rdfs:label "Electron Volt"@en ;
    dcterms:description "An electron volt (eV) is the energy that an electron gains when it travels through a potential of one volt. You can imagine that the electron starts at the negative plate of a parallel plate capacitor and accelerates to the positive plate, which is at one volt higher potential. Numerically \\(1 eV\\) equals \\(1.6x10^{-19} joules\\), where \\(1 joule\\) is \\(6.2x10^{18} eV\\). For example, it would take \\(6.2x10^{20} eV/sec\\) to light a 100 watt light bulb."^^qudt:LatexString ;
    qudt:allowedUnitOfSystem sou:SI ;
    qudt:conversionMultiplier 0.00000000000000000016021765314 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Electron_volt"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Electron_volt?oldid=344021738"^^xsd:anyURI,
        "http://physics.nist.gov/cuu/Constants/bibliography.html"^^xsd:anyURI ;
    qudt:quantityValue qudt:ValueForElectronVolt ;
    qudt:symbol "eV",
        "eV"^^xsd:string ;
    qudt:ucumCode "eV"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:E_h a qudt:Unit,
        unit:Unit ;
    rdfs:label "Hartree"@en ;
    dcterms:description """<p>The \\(\\textit{Hartree}\\) (symbol: \\(E_h\\) or \\(Ha\\)), also known as the \\(\\text{Hartree\\,Energy}\\), is the atomic unit of energy. The hartree energy is equal to the absolute value of the electric potential energy of the hydrogen atom in its ground state. The energy of the electron in an H-atom in its ground state is \\(-E_H\\), where \\(E_H= 2 R_\\infty \\cdot hc_0\\). The 2006 CODATA recommended value was \\(E_H = 4.35974394(22) \\times 10^{-18} J = 27.21138386(68) eV\\).</p>
<dt class="size-14">Definition:</dt>
<dd>\\(E_H= \\frac{e^2}{4\\pi \\epsilon_0 a_0 }\\)<br/>
where, \\(e\\) is the elementary charge, \\(\\epsilon_0\\) is the electric constant, and \\(a_0\\) is the Bohr radius.'</dd>"""^^qudt:LatexString ;
    qudt:allowedUnitOfSystem sou:SI ;
    qudt:conversionMultiplier 0.00000000000000000435974394 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Hartree"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Hartree?oldid=489318053"^^xsd:anyURI ;
    qudt:symbol "E_h",
        "E_h"^^xsd:string ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:ExaJ a qudt:Unit,
        unit:Unit ;
    rdfs:label "Exajoule"@en ;
    qudt:conversionMultiplier 1000000000000000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:iec61360Code "0112/2///62720#UAB122" ;
    qudt:plainTextDescription "1 000 000 000 000 000 000-fold of the derived SI unit joule" ;
    qudt:ucumCode "EJ"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A68" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT-LB_F a qudt:Unit,
        unit:Unit ;
    rdfs:label "Foot Pound Force"@en ;
    dcterms:description "\"Foot Pound Force\" is an Imperial unit for  'Energy And Work' expressed as \\(ft-lbf\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.35581807 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Foot-pound_force"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(ft-lbf\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Foot-pound_force?oldid=453269257"^^xsd:anyURI ;
    qudt:ucumCode "[ft_i].[lbf_av]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT-PDL a qudt:Unit,
        unit:Unit ;
    rdfs:label "Foot Poundal"@en ;
    dcterms:description "\"Foot Poundal\" is an Imperial unit for  'Energy And Work' expressed as \\(ft-pdl\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0421401100938048 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:iec61360Code "0112/2///62720#UAB220" ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/footPoundal> ;
    qudt:symbol "ft-pdl",
        "ft-pdl"^^xsd:string ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FemtoJ a qudt:Unit,
        unit:Unit ;
    rdfs:label "Femtojoule"@en ;
    qudt:conversionMultiplier 0.000000000000001 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:iec61360Code "0112/2///62720#UAB124" ;
    qudt:plainTextDescription "0,000 000 000 000 001-fold of the derived SI unit joule" ;
    qudt:ucumCode "fJ"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A70" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GigaEV a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Giga Electron Volt"@en ;
    dcterms:description "\"Giga Electron Volt\" is a unit for  'Energy And Work' expressed as \\(GeV\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00000000016021765314 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:symbol "GeV",
        "GeV"^^xsd:string ;
    qudt:ucumCode "GeV"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GigaW-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Gigawatt Hour"@en ;
    qudt:conversionMultiplier 3600000000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:iec61360Code "0112/2///62720#UAA155" ;
    qudt:plainTextDescription "1 000 000 000-fold of the product of the SI derived unit watt and the unit hour" ;
    qudt:ucumCode "GW.h"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "GWH" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloEV a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilo Electron Volt"@en ;
    dcterms:description "\"Kilo Electron Volt\" is a unit for  'Energy And Work' expressed as \\(keV\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00000000000000016021765314 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:symbol "keV",
        "keV"^^xsd:string ;
    qudt:ucumCode "keV"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloV-A_Reactive-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilovolt Ampere Reactive Hour"@en ;
    qudt:conversionMultiplier 3600000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:iec61360Code "0112/2///62720#UAB195" ;
    qudt:plainTextDescription "product of the 1 000-fold of the unit volt ampere reactive and the unit hour" ;
    qudt:ucumCode "kV.A.h{reactive}"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "K3" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaEV a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Mega Electron Volt"@en ;
    dcterms:description "\\(\\textbf{Mega Electron Volt} is a unit for  'Energy And Work' expressed as \\(MeV\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00000000000016021765314 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:symbol "MeV",
        "MeV"^^xsd:string ;
    qudt:ucumCode "MeV"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaTOE a qudt:Unit,
        unit:Unit ;
    rdfs:label "Megaton of Oil Equivalent"@en ;
    dcterms:description """The tonne of oil equivalent (toe) is a unit of energy: the amount of energy released by burning one tonne of crude oil, approximately 42 GJ (as different crude oils have different calorific values, the exact value of the toe is defined by convention; unfortunately there are several slightly different definitions as discussed below). The toe is sometimes used for large amounts of energy, as it can be more intuitive to visualise, say, the energy released by burning 1000 tonnes of oil than 42,000 billion joules (the SI unit of energy).</p>
<p>Multiples of the toe are used, in particular the megatoe (Mtoe, one million toe) and the gigatoe (Gtoe, one billion toe).</p>"""^^rdf:HTML ;
    qudt:conversionMultiplier 41868000000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Tonne_of_oil_equivalent"^^xsd:anyURI ;
    qudt:symbol "megatoe",
        "megatoe"^^xsd:string ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaV-A-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Megavolt Ampere Hour"@en ;
    qudt:conversionMultiplier 3600000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:plainTextDescription "product of the 1,000,000-fold of the unit for apparent by ampere and the unit hour" ;
    qudt:ucumCode "MV.A.h"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaV-A_Reactive-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Megavolt Ampere Reactive Hour"@en ;
    qudt:conversionMultiplier 3600000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:iec61360Code "0112/2///62720#UAB198" ;
    qudt:plainTextDescription "product of the 1,000,000-fold of the unit volt ampere reactive and the unit hour" ;
    qudt:ucumCode "MV.A{reactive).h"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "MAH" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliJ a qudt:Unit,
        unit:Unit ;
    rdfs:label "Millijoule"@en ;
    qudt:conversionMultiplier 0.001 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:iec61360Code "0112/2///62720#UAA792" ;
    qudt:plainTextDescription "0.001-fold of the SI derived unit joule" ;
    qudt:ucumCode "mJ"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C15" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PA a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Pascal"@en ;
    dcterms:description "The SI unit of pressure. The pascal is the standard pressure unit in the MKS metric system, equal to one newton per square meter or one \"kilogram per meter per second per second.\" The unit is named for Blaise Pascal (1623-1662), French philosopher and mathematician, who was the first person to use a barometer to measure differences in altitude."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Pascal"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:BulkModulus,
        quantitykind:ForcePerArea,
        quantitykind:Fugacity,
        quantitykind:ModulusOfElasticity,
        quantitykind:ShearModulus ;
    qudt:iec61360Code "0112/2///62720#UAA258" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Pascal?oldid=492989202"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/pascal> ;
    qudt:siUnitsExpression "N/m^2" ;
    qudt:symbol "Pa",
        "Pa"^^xsd:string ;
    qudt:ucumCode "Pa"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "PAL" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:N-PER-M2 .

unit:PetaJ a qudt:Unit,
        unit:Unit ;
    rdfs:label "Petajoule"@en ;
    qudt:conversionMultiplier 1000000000000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:iec61360Code "0112/2///62720#UAB123" ;
    qudt:plainTextDescription "1,000,000,000,000,000-fold of the derived SI unit joule" ;
    qudt:ucumCode "PJ"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C68" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PlanckEnergy a qudt:Unit,
        unit:Unit ;
    rdfs:label "Planck Energy"@en ;
    dcterms:description "In physics, the unit of energy in the system of natural units known as Planck units is called the Planck energy, denoted by \\(E_P\\). \\(E_P\\) is a derived, as opposed to basic, Planck unit. An equivalent definition is:\\(E_P = \\hbar / T_P\\) where \\(T_P\\) is the Planck time. Also: \\(E_P = m_P c^2\\) where \\(m_P\\) is the Planck mass."^^qudt:LatexString ;
    qudt:conversionMultiplier 1956100000.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Planck_energy"^^xsd:anyURI ;
    qudt:derivedUnitOfSystem sou:PLANCK ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Planck_energy?oldid=493639955"^^xsd:anyURI ;
    qudt:latexDefinition "\\(E_\\rho = \\sqrt{\\frac{ \\hbar c^5}{G}} \\approx 1.936 \\times 10^9 J \\approx 1.22 \\times 10^{28} eV \\approx 0.5433 MWh\\), where  \\(c\\) is the speed of light in a vacuum, \\(\\hbar\\) is the reduced Planck's constant, and \\(G\\) is the gravitational constant."^^qudt:LatexString ;
    qudt:symbol "Eᵨ",
        "Eᵨ"^^xsd:string ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:QUAD a qudt:Unit,
        unit:Unit ;
    rdfs:label "Quad"@en ;
    dcterms:description "A quad is a unit of energy equal to \\(10 BTU\\), or \\(1.055 \\times \\SI{10}{\\joule}\\), which is \\(1.055 exajoule\\) or \\(EJ\\) in SI units. The unit is used by the U.S. Department of Energy in discussing world and national energy budgets. Some common types of an energy carrier approximately equal 1 quad are: 8,007,000,000 Gallons (US) of gasoline 293,083,000,000 Kilowatt-hours (kWh) 36,000,000 Tonnes of coal 970,434,000,000 Cubic feet of natural gas 5,996,000,000 UK gallons of diesel oil 25,200,000 Tonnes of oil 252,000,000 tonnes of TNT or five times the energy of the Tsar Bomba nuclear test."^^qudt:LatexString ;
    qudt:conversionMultiplier 1055000000000000000.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Quad"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Quad?oldid=492086827"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/quad> ;
    qudt:symbol "quad",
        "quad"^^xsd:string ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:TOE a qudt:Unit,
        unit:Unit ;
    rdfs:label "Ton of Oil Equivalent"@en ;
    dcterms:description "<p>The tonne of oil equivalent (toe) is a unit of energy: the amount of energy released by burning one tonne of crude oil, approximately 42 GJ (as different crude oils have different calorific values, the exact value of the toe is defined by convention; unfortunately there are several slightly different definitions as discussed below). The toe is sometimes used for large amounts of energy, as it can be more intuitive to visualise, say, the energy released by burning 1000 tonnes of oil than 42,000 billion joules (the SI unit of energy). Multiples of the toe are used, in particular the megatoe (Mtoe, one million toe) and the gigatoe (Gtoe, one billion toe).</p>"^^rdf:HTML ;
    qudt:conversionMultiplier 41868000000.0 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Tonne_of_oil_equivalent"^^xsd:anyURI ;
    qudt:symbol "toe",
        "toe"^^xsd:string ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:TeraJ a qudt:Unit,
        unit:Unit ;
    rdfs:label "Terajoule"@en ;
    qudt:conversionMultiplier 1000000000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:iec61360Code "0112/2///62720#UAA288" ;
    qudt:plainTextDescription "1 000 000 000 000-fold of the SI derived unit joule" ;
    qudt:ucumCode "TJ"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D30" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:TeraW-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Terawatt Hour"@en ;
    qudt:conversionMultiplier 3600000000000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:iec61360Code "0112/2///62720#UAA290" ;
    qudt:plainTextDescription "1,000,000,000,000-fold of the product of the SI derived unit watt and the unit hour" ;
    qudt:ucumCode "TW/h"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "D32" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:TonEnergy a qudt:Unit,
        unit:Unit ;
    rdfs:label "Ton Energy"@en ;
    dcterms:description "Energy equivalent of one ton of TNT"^^rdf:HTML ;
    qudt:conversionMultiplier 4184000000.0 ;
    qudt:expression "\\(t/lbf\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:ucumCode "Gcal"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:V-A-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Volt Ampere Hour"@en ;
    qudt:conversionMultiplier 3600.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:plainTextDescription "product of the unit for apparent by ampere and the unit hour" ;
    qudt:ucumCode "V.A.h"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:V-A_Reactive-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Volt Ampere Reactive Hour"@en ;
    qudt:conversionMultiplier 3600.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:plainTextDescription "product of the unit volt ampere reactive and the unit hour" ;
    qudt:ucumCode "V.A{reactive}.h"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:W-SEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "Watt Second"@en ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:iec61360Code "0112/2///62720#UAA313" ;
    qudt:plainTextDescription "product of the SI derived unit watt and SI base unit second" ;
    qudt:ucumCode "W.s"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "J55" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

<http://www.w3.org/2004/02/skos/core> a owl:Ontology ;
    dcterms:contributor "Dave Beckett",
        "Nikki Rogers",
        "Participants in W3C's Semantic Web Deployment Working Group." ;
    dcterms:creator "Alistair Miles",
        "Sean Bechhofer" ;
    dcterms:description "An RDF vocabulary for describing the basic structure and content of concept schemes such as thesauri, classification schemes, subject heading lists, taxonomies, 'folksonomies', other types of controlled vocabulary, and also concept schemes embedded in glossaries and terminologies."@en ;
    dcterms:title "SKOS Vocabulary"@en ;
    vaem:namespace "http://www.w3.org/2004/02/skos/core#"^^xsd:anyURI ;
    vaem:namespacePrefix "skos" ;
    rdfs:seeAlso <http://www.w3.org/TR/skos-reference/> .

tag:Condenser a brick:Tag ;
    rdfs:label "Condenser" .

tag:Fan a brick:Tag ;
    rdfs:label "Fan" .

qkdv:A0E1L0I0M0H0T1D0 a qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E1L0I0M0H0T1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 1 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:ElectricCharge ;
    qudt:latexDefinition "\\(T I\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

unit:KiloV-A-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilovolt Ampere Hour"@en ;
    qudt:conversionMultiplier 3600000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:iec61360Code "0112/2///62720#UAB160" ;
    qudt:plainTextDescription "product of the 1 000-fold of the unit for apparent by ampere and the unit hour" ;
    qudt:ucumCode "kV.A.h"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C79" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloW-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilowatthour"@en ;
    dcterms:description "The kilowatt hour, or kilowatt-hour, (symbol \\(kW \\cdot h\\), \\(kW h\\) or \\(kWh\\)) is a unit of energy equal to 1000 watt hours or 3.6 megajoules. For constant power, energy in watt hours is the product of power in watts and time in hours. The kilowatt hour is most commonly known as a billing unit for energy delivered to consumers by electric utilities."^^qudt:LatexString ;
    qudt:conversionMultiplier 3600000.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Kilowatt_hour"^^xsd:anyURI ;
    qudt:expression "\\(kW-h\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Kilowatt_hour?oldid=494927235"^^xsd:anyURI ;
    qudt:ucumCode "kW.h"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaW-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Megawatt Hour"@en ;
    qudt:conversionMultiplier 3600000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:iec61360Code "0112/2///62720#UAA225" ;
    qudt:plainTextDescription "1 000 000-fold of the product of the SI derived unit watt and the unit hour" ;
    qudt:ucumCode "MW.h"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "MWH" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:W-HR a qudt:Unit,
        unit:Unit ;
    rdfs:label "Watthour"@en ;
    dcterms:description "The watt hour is a unit of energy, equal to 3,600 joule."^^rdf:HTML ;
    qudt:conversionMultiplier 3600.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy ;
    qudt:symbol "W-hr",
        "W-hr"^^xsd:string ;
    qudt:ucumCode "W.h"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

brick:Equipment a owl:Class,
        sh:NodeShape ;
    rdfs:label "Equipment" ;
    rdfs:subClassOf brick:Entity ;
    skos:definition "devices that serve all or part of the building and may include electric power, lighting, transportation, or service water heating, including, but not limited to, furnaces, boilers, air conditioners, heat pumps, chillers, water heaters, lamps, luminaires, ballasts, elevators, escalators, or other devices or installations."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Equipment ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Equipment .

unit:ERG a qudt:Unit,
        unit:Unit ;
    rdfs:label "Erg"@en ;
    dcterms:description "An erg is the unit of energy and mechanical work in the centimetre-gram-second (CGS) system of units, symbol 'erg'. Its name is derived from the Greek ergon, meaning 'work'. An erg is the amount of work done by a force of one dyne exerted for a distance of one centimeter. In the CGS base units, it is equal to one gram centimeter-squared per second-squared (\\(g \\cdot cm^2/s^2\\)). It is thus equal to \\(10^{-7}\\) joules or 100 nanojoules in SI units. \\(1 erg = 10^{-7} J = 100 nJ\\),  \\(1 erg = 624.15 GeV = 6.2415 \\times 10^{11} eV\\), \\(1 erg = 1 dyne\\cdot cm = 1 g \\cdot cm^2/s^2\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0000001 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Erg"^^xsd:anyURI ;
    qudt:derivedCoherentUnitOfSystem sou:CGS ;
    qudt:derivedUnitOfSystem sou:CGS,
        sou:CGS-GAUSS ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy,
        quantitykind:ForceMagnitude ;
    qudt:iec61360Code "0112/2///62720#UAA429" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Erg?oldid=490293432"^^xsd:anyURI ;
    qudt:latexDefinition "\\(g\\cdot cm^{2}/s^{2}\\)"^^qudt:LatexString ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/erg> ;
    qudt:symbol "erg",
        "erg"^^xsd:string ;
    qudt:ucumCode "erg"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A57" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

tag:Level a brick:Tag ;
    rdfs:label "Level" .

tag:Off a brick:Tag ;
    rdfs:label "Off" .

quantitykind:Dimensionless a qudt:QuantityKind ;
    rdfs:label "Dimensionless"@en ;
    dcterms:description "In dimensional analysis, a dimensionless quantity or quantity of dimension one is a quantity without an associated physical dimension. It is thus a \"pure\" number, and as such always has a dimension of 1. Dimensionless quantities are widely used in mathematics, physics, engineering, economics, and in everyday life (such as in counting). Numerous well-known quantities, such as \\(\\pi\\), \\(\\epsilon\\), and \\(\\psi\\), are dimensionless. By contrast, non-dimensionless quantities are measured in units of length, area, time, etc. Dimensionless quantities are often defined as products or ratios of quantities that are not dimensionless, but whose dimensions cancel out when their powers are multiplied."^^qudt:LatexString ;
    qudt:applicableUnit unit:DECADE,
        unit:ExaBYTE,
        unit:ExbiBYTE,
        unit:GibiBYTE,
        unit:GigaBYTE,
        unit:KibiBYTE,
        unit:KiloBYTE,
        unit:KiloBYTE-PER-SEC,
        unit:MebiBYTE,
        unit:MegaBYTE,
        unit:NP,
        unit:NUM,
        unit:OCT,
        unit:PebiBYTE,
        unit:PetaBYTE,
        unit:SUSCEPTIBILITY_ELEC,
        unit:SUSCEPTIBILITY_MAG,
        unit:TebiBYTE,
        unit:TeraBYTE,
        unit:UNITLESS ;
    qudt:baseUnitDimensions "\\(U\\)"^^qudt:LatexString,
        "\\(\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Dimensionless_quantity"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Dimensionless_quantity"^^xsd:anyURI ;
    qudt:symbol "U" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

quantitykind:MassFlowRate a qudt:QuantityKind ;
    rdfs:label "Mass Flow Rate"@en ;
    dcterms:description "\"Mass Flow Rate\" is a measure of Mass flux. The common symbol is \\(\\dot{m}\\) (pronounced \"m-dot\"), although sometimes \\(\\mu\\) is used. The SI units are \\(kg s-1\\)."^^qudt:LatexString ;
    qudt:applicableUnit unit:DYN-SEC-PER-CentiM,
        unit:GM-PER-DAY,
        unit:GM-PER-HR,
        unit:GM-PER-MIN,
        unit:GM-PER-SEC,
        unit:KiloGM-PER-DAY,
        unit:KiloGM-PER-HR,
        unit:KiloGM-PER-MIN,
        unit:KiloGM-PER-SEC,
        unit:LB-PER-DAY,
        unit:LB-PER-HR,
        unit:LB-PER-MIN,
        unit:LB-PER-SEC,
        unit:MilliGM-PER-DAY,
        unit:MilliGM-PER-HR,
        unit:MilliGM-PER-MIN,
        unit:MilliGM-PER-SEC,
        unit:OZ-PER-DAY,
        unit:OZ-PER-HR,
        unit:OZ-PER-MIN,
        unit:OZ-PER-SEC,
        unit:SLUG-PER-DAY,
        unit:SLUG-PER-HR,
        unit:SLUG-PER-MIN,
        unit:SLUG-PER-SEC,
        unit:TONNE-PER-DAY,
        unit:TONNE-PER-MIN,
        unit:TONNE-PER-SEC,
        unit:TON_Metric-PER-DAY,
        unit:TON_Metric-PER-MIN,
        unit:TON_Metric-PER-SEC,
        unit:TON_SHORT-PER-HR,
        unit:TON_UK-PER-DAY,
        unit:TON_US-PER-DAY,
        unit:TON_US-PER-HR ;
    qudt:baseUnitDimensions "\\(kg sec^{-1}\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Mass_flow_rate"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mass_flow_rate"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(q_m = \\frac{dm}{dt}\\), where \\(m\\) is mass and \\(t\\) is time."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\dot{m}\\)"^^qudt:LatexString ;
    qudt:symbol "q_m" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:SpecificImpulse .

unit:BTU_TH a qudt:Unit,
        unit:Unit ;
    rdfs:label "British Thermal Unit (Thermochemical Definition)"@en ;
    dcterms:description "(\\{\\bf (BTU_{th}}\\), British Thermal Unit (thermochemical definition), is a traditional unit of energy equal to about \\(1.0543502645 kilojoule\\). It is approximately the amount of energy needed to heat 1 pound (0.454 kg) of water from \\(39 \\,^{\\circ}{\\rm F}\\) (\\(39 \\,^{\\circ}{\\rm C}\\)) to \\(40 \\,^{\\circ}{\\rm F}\\) (\\(4.4 \\,^{\\circ}{\\rm C}\\)). The unit is most often used in the power, steam generation, heating and air conditioning industries. In scientific contexts the BTU has largely been replaced by the SI unit of energy, the \\(joule\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1054.3502645 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy,
        quantitykind:ThermalEnergy ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/British_thermal_unit"^^xsd:anyURI,
        "http://physics.nist.gov/Pubs/SP811/appenB9.html"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_ics/catalogue_detail_ics.htm?csnumber=31890"^^xsd:anyURI,
        "http://www.knowledgedoor.com/2/units_and_constants_handbook/british-thermal-unit_group.html"^^xsd:anyURI ;
    qudt:symbol "Btu_{th}",
        "Btu_{th}"^^xsd:string ;
    qudt:ucumCode "[Btu_th]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CAL_IT a qudt:Unit,
        unit:Unit ;
    rdfs:label "International Table calorie"@en ;
    dcterms:description "International Table calorie."^^qudt:LatexString ;
    qudt:conversionMultiplier 4.1868 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy,
        quantitykind:ThermalEnergy ;
    qudt:informativeReference "http://physics.nist.gov/Pubs/SP811/appenB9.html"^^xsd:anyURI ;
    qudt:ucumCode "cal_IT"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CAL_TH a qudt:Unit,
        unit:Unit ;
    rdfs:label "Thermochemical Calorie"@en ;
    dcterms:description "The energy needed to increase the temperature of a given mass of water by \\(1 ^\\circ C\\) at atmospheric pressure depends on the starting temperature and is difficult to measure precisely. Accordingly, there have been several definitions of the calorie. The two perhaps most popular definitions used in older literature are the \\(15 ^\\circ C\\) calorie and the thermochemical calorie."^^qudt:LatexString ;
    qudt:conversionMultiplier 4.184 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy,
        quantitykind:ThermalEnergy ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Calorie"^^xsd:anyURI ;
    qudt:latexDefinition """\\(1 \\; cal_{th} = 4.184 J\\)

\\(\\approx 0.003964 BTU\\)

\\(\\approx 1.163 \\times 10^{-6} kWh\\)

\\(\\approx 2.611 \\times 10^{19} eV\\)"""^^qudt:LatexString ;
    qudt:symbol "cal_{th}",
        "cal_{th}"^^xsd:string ;
    qudt:ucumCode "cal_th"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GigaJ a qudt:Unit,
        unit:Unit ;
    rdfs:label "Gigajoule"@en ;
    qudt:conversionMultiplier 1000000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy,
        quantitykind:ThermalEnergy ;
    qudt:iec61360Code "0112/2///62720#UAA152" ;
    qudt:plainTextDescription "1 000 000 000-fold of the SI derived unit joule" ;
    qudt:ucumCode "GJ"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "GV" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloCAL a qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilocalorie"@en ;
    dcterms:description "\\(\\textbf{Kilocalorie} is a unit for \\textit{Energy And Work} expressed as \\(kcal\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 4184.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Calorie"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy,
        quantitykind:ThermalEnergy ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Calorie?oldid=494307622"^^xsd:anyURI ;
    qudt:symbol "kcal",
        "kcal"^^xsd:string ;
    qudt:ucumCode "kcal"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:KiloJ a qudt:Unit,
        unit:Unit ;
    rdfs:label "Kilojoule"@en ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy,
        quantitykind:ThermalEnergy ;
    qudt:iec61360Code "0112/2///62720#UAA568" ;
    qudt:plainTextDescription "1 000-fold of the SI derived unit joule" ;
    qudt:ucumCode "kJ"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "KJO" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MegaJ a qudt:Unit,
        unit:Unit ;
    rdfs:label "Megajoule"@en ;
    qudt:conversionMultiplier 1000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy,
        quantitykind:ThermalEnergy ;
    qudt:iec61360Code "0112/2///62720#UAA211" ;
    qudt:plainTextDescription "1,000,000-fold of the derived unit joule" ;
    qudt:ucumCode "MJ"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "3B" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:THM_EEC a qudt:Unit,
        unit:Unit ;
    rdfs:label "THM_EEC"@en ;
    qudt:expression "\\(therm-eec\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy,
        quantitykind:ThermalEnergy ;
    qudt:ucumCode "100000.[Btu_IT]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:THM_US a qudt:Unit,
        unit:Unit ;
    rdfs:label "Therm US"@en ;
    dcterms:description "\\(\\textbf{Therm} (symbol \\(thm\\)) is a non-SI unit of heat energy. It was defined in the United States in 1968 as the energy equivalent of burning 100 cubic feet of natural gas at standard temperature and pressure. In the US gas industry its SI equivalent is defined as exactly \\(100,000 BTU59^\\circ F\\) or \\(105.4804 megajoules\\). Public utilities in the U.S. use the therm unit for measuring customer usage of gas and calculating the monthly bills."^^qudt:LatexString ;
    qudt:conversionMultiplier 105480400.0 ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy,
        quantitykind:ThermalEnergy ;
    qudt:informativeReference "http://www.convertunits.com/info/therm%2B%5BU.S.%5D"^^xsd:anyURI ;
    qudt:symbol "thm",
        "thm"^^xsd:string ;
    qudt:ucumCode "100000.[Btu_59]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

sosa: a voaf:Vocabulary,
        owl:Ontology ;
    dcterms:created "2017-04-17"^^xsd:date ;
    dcterms:creator [ a foaf:Agent ;
            foaf:name "W3C/OGC Spatial Data on the Web Working Group"@en ] ;
    dcterms:description "This ontology is based on the SSN Ontology by the W3C Semantic Sensor Networks Incubator Group (SSN-XG), together with considerations from the W3C/OGC Spatial Data on the Web Working Group."@en ;
    dcterms:license <http://www.opengeospatial.org/ogc/Software>,
        <http://www.w3.org/Consortium/Legal/2015/copyright-software-and-document> ;
    dcterms:rights "Copyright 2017 W3C/OGC." ;
    dcterms:title "Sensor, Observation, Sample, and Actuator (SOSA) Ontology"@en ;
    vann:preferredNamespacePrefix "sosa" ;
    vann:preferredNamespaceUri "http://www.w3.org/ns/sosa/" .

brick:Status a owl:Class,
        sh:NodeShape ;
    rdfs:label "Status" ;
    rdfs:subClassOf brick:Point ;
    owl:disjointWith brick:Alarm,
        brick:Command,
        brick:Parameter,
        brick:Sensor,
        brick:Setpoint ;
    skos:definition "A Status is input point that reports the current operating mode, state, position, or condition of an item. Statuses are observations and should be considered 'read-only'"@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Status ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Status .

qkdv:A0E0L2I0M0H0T0D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L2I0M0H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:Area ;
    qudt:latexDefinition "\\(L^2\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

tag:Integral a brick:Tag ;
    rdfs:label "Integral" .

tag:Safety a brick:Tag ;
    rdfs:label "Safety" .

qkdv:A0E0L2I0M0H0T-2D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L2I0M0H0T-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:SpecificEnergy ;
    qudt:latexDefinition "\\(L^2 T^-2\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

quantitykind:MassDensity a qudt:QuantityKind ;
    rdfs:label "Mass Density"@en ;
    qudt:applicableUnit unit:DEGREE_BALLING,
        unit:DEGREE_BAUME,
        unit:DEGREE_BAUME_US_HEAVY,
        unit:DEGREE_BAUME_US_LIGHT,
        unit:DEGREE_BRIX,
        unit:DEGREE_OECHSLE,
        unit:DEGREE_PLATO,
        unit:DEGREE_TWADDELL,
        unit:FemtoGM-PER-L,
        unit:GM-PER-CentiM3,
        unit:GM-PER-DeciM3,
        unit:GM-PER-L,
        unit:GM-PER-M3,
        unit:GM-PER-MilliL,
        unit:GRAIN-PER-GAL_US,
        unit:KiloGM-PER-CentiM3,
        unit:KiloGM-PER-DeciM3,
        unit:KiloGM-PER-L,
        unit:KiloGM-PER-M3,
        unit:MegaGM-PER-M3,
        unit:MicroGM-PER-L,
        unit:MicroGM-PER-M3,
        unit:MicroGM-PER-MilliL,
        unit:MilliGM-PER-L,
        unit:MilliGM-PER-M3,
        unit:NanoGM-PER-L,
        unit:NanoGM-PER-M3,
        unit:NanoGM-PER-MicroL,
        unit:NanoGM-PER-MilliL,
        unit:OZ-PER-GAL_US,
        unit:OZ-PER-YD3,
        unit:OZ_PER-GAL_UK,
        unit:PicoGM-PER-L,
        unit:PicoGM-PER-MilliL,
        unit:TONNE-PER-M3,
        unit:TON_Metric-PER-M3,
        unit:TON_UK-PER-YD3,
        unit:TON_US-PER-YD3 ;
    qudt:baseUnitDimensions "\\(kg m^{-3}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-3I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Density"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI,
        "http://www.iso.org/iso/catalogue_detail?csnumber=31894"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\rho = \\frac{dm}{dV}\\), where \\(m\\) is mass and \\(V\\) is volume."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\rho\\)"^^qudt:LatexString ;
    qudt:plainTextDescription "The mass density or density of a material is its mass per unit volume." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:Density .

quantitykind:Time a qudt:QuantityKind ;
    rdfs:label "Time"@en ;
    qudt:applicableUnit unit:CentiPOISE-PER-BAR,
        unit:DAY,
        unit:DAY_Sidereal,
        unit:H-PER-KiloOHM,
        unit:H-PER-OHM,
        unit:HR,
        unit:HR_Sidereal,
        unit:KiloSEC,
        unit:MIN,
        unit:MIN_Sidereal,
        unit:MO,
        unit:MO_MeanGREGORIAN,
        unit:MO_MeanJulian,
        unit:MO_Synodic,
        unit:MegaYR,
        unit:MicroH-PER-KiloOHM,
        unit:MicroH-PER-OHM,
        unit:MicroSEC,
        unit:MilliH-PER-KiloOHM,
        unit:MilliH-PER-OHM,
        unit:MilliPA-SEC-PER-BAR,
        unit:MilliSEC,
        unit:NanoSEC,
        unit:PA-SEC-PER-BAR,
        unit:POISE-PER-BAR,
        unit:PicoSEC,
        unit:PlanckTime,
        unit:SEC,
        unit:SH,
        unit:WK,
        unit:YR,
        unit:YR_Common,
        unit:YR_Sidereal,
        unit:YR_TROPICAL ;
    qudt:baseUnitDimensions "\\(T\\)"^^qudt:LatexString,
        "\\(s\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Time"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T1D0 ;
    qudt:plainTextDescription "Time is a basic component of the measuring system used to sequence events, to compare the durations of events and the intervals between them, and to quantify the motions of objects." ;
    qudt:symbol "t" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

tag:Band a brick:Tag ;
    rdfs:label "Band" .

tag:Unoccupied a brick:Tag ;
    rdfs:label "Unoccupied" .

qkdv:A0E0L0I0M1H0T-1D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M1H0T-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:MassFlowRate ;
    qudt:latexDefinition "\\(M T^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

quantitykind:DimensionlessRatio a qudt:QuantityKind ;
    rdfs:label "Dimensionless Ratio"@en ;
    qudt:applicableUnit unit:DeciB_M,
        unit:GR,
        unit:NUM,
        unit:PERCENT,
        unit:PPB,
        unit:PPM,
        unit:PPTH,
        unit:PPTR,
        unit:UNITLESS ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Dimensionless .

unit:BTU_IT a qudt:Unit,
        unit:Unit ;
    rdfs:label "British Thermal Unit (International Definition)"@en ;
    dcterms:description "\\(\\textit{British Thermal Unit}\\) (BTU or Btu) is a traditional unit of energy equal to about \\(1.0550558526 \\textit{ kilojoule}\\). It is approximately the amount of energy needed to heat 1 pound (0.454 kg) of water from \\(39 \\,^{\\circ}{\\rm F}\\)  to \\(40 \\,^{\\circ}{\\rm F}\\) . The unit is most often used in the power, steam generation, heating and air conditioning industries. In scientific contexts the BTU has largely been replaced by the SI unit of energy, the \\(joule\\), though it may be used as a measure of agricultural energy production (BTU/kg). It is still used unofficially in metric English-speaking countries (such as Canada), and remains the standard unit of classification for air conditioning units manufactured and sold in many non-English-speaking metric countries."^^qudt:LatexString ;
    qudt:conversionMultiplier 1055.05585262 ;
    qudt:definedUnitOfSystem sou:IMPERIAL ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy,
        quantitykind:ThermalEnergy ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/British_thermal_unit"^^xsd:anyURI,
        "http://physics.nist.gov/Pubs/SP811/appenB9.html"^^xsd:anyURI,
        "http://www.iso.org/iso/home/store/catalogue_ics/catalogue_detail_ics.htm?csnumber=31890"^^xsd:anyURI,
        "http://www.knowledgedoor.com/2/units_and_constants_handbook/british-thermal-unit_group.html"^^xsd:anyURI ;
    qudt:symbol "Btu_{it}",
        "Btu_{it}"^^xsd:string ;
    qudt:ucumCode "[Btu_IT]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

sp:arg2 a rdf:Property ;
    rdfs:label "arg2" ;
    rdfs:comment "The second argument of a function call." ;
    rdfs:subPropertyOf sp:arg .

brick:Air a owl:Class,
        sh:NodeShape,
        brick:Air ;
    rdfs:label "Air" ;
    rdfs:subClassOf brick:Gas ;
    skos:definition "the invisible gaseous substance surrounding the earth, a mixture mainly of oxygen and nitrogen."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Air ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Fluid ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Gas ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Air,
        tag:Fluid,
        tag:Gas .

tag:Enable a brick:Tag ;
    rdfs:label "Enable" .

tag:Shed a brick:Tag ;
    rdfs:label "Shed" .

tag:Zone a brick:Tag ;
    rdfs:label "Zone" .

unit:C a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Coulomb"@en ;
    dcterms:description "The SI unit of electric charge. One coulomb is the amount of charge accumulated in one second by a current of one ampere. Electricity is actually a flow of charged particles, such as electrons, protons, or ions. The charge on one of these particles is a whole-number multiple of the charge e on a single electron, and one coulomb represents a charge of approximately 6.241 506 x 1018 e. The coulomb is named for a French physicist, Charles-Augustin de Coulomb (1736-1806), who was the first to measure accurately the forces exerted between electric charges."^^rdf:HTML ;
    qudt:allowedUnitOfSystem sou:PLANCK ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Coulomb"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:derivedCoherentUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E1L0I0M0H0T1D0 ;
    qudt:hasQuantityKind quantitykind:ElectricCharge,
        quantitykind:ElementaryCharge ;
    qudt:iec61360Code "0112/2///62720#UAA130" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Coulomb?oldid=491815163"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/coulomb> ;
    qudt:symbol "C" ;
    qudt:ucumCode "C"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "COU" ;
    qudt:unitOfSystem sou:CGS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

quantitykind:Volume a qudt:QuantityKind ;
    rdfs:label "Volume"@en ;
    qudt:applicableUnit unit:AC-FT,
        unit:BBL,
        unit:BBL_UK_PET,
        unit:BBL_US,
        unit:CentiM3,
        unit:DecaL,
        unit:DecaM3,
        unit:DeciL,
        unit:DeciM3,
        unit:FBM,
        unit:FT3,
        unit:GI_UK,
        unit:GI_US,
        unit:GT,
        unit:HectoL,
        unit:IN3,
        unit:KiloL,
        unit:L,
        unit:M3,
        unit:MI3,
        unit:MegaL,
        unit:MicroL,
        unit:MicroM3,
        unit:MilliL,
        unit:MilliM3,
        unit:OZ_VOL_UK,
        unit:PINT,
        unit:PINT_UK,
        unit:PK_UK,
        unit:PlanckVolume,
        unit:QT_UK,
        unit:QT_US,
        unit:RT,
        unit:STR,
        unit:Standard,
        unit:TBSP,
        unit:TON_SHIPPING_US,
        unit:TSP,
        unit:YD3 ;
    qudt:baseUnitDimensions "\\(L^3\\)"^^qudt:LatexString,
        "\\(m^3\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Volume"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T0D0 ;
    qudt:plainTextDescription "The volume of a solid object is the three-dimensional concept of how much space it occupies, often quantified numerically. One-dimensional figures (such as lines) and two-dimensional shapes (such as squares) are assigned zero volume in the three-dimensional space." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

spin:_this a sp:Variable ;
    rdfs:label "_this" ;
    sp:varName "this" ;
    rdfs:comment "A system variable representing the current context instance in a rule or constraint." .

brick:Sensor a owl:Class,
        sh:NodeShape ;
    rdfs:label "Sensor" ;
    rdfs:seeAlso "https://xp20.ashrae.org/terminology/index.php?term=Sensor" ;
    rdfs:subClassOf brick:Point ;
    owl:disjointWith brick:Alarm,
        brick:Command,
        brick:Parameter,
        brick:Setpoint,
        brick:Status ;
    skos:definition "A Sensor is an input point that represents the value of a device or instrument designed to detect and measure a variable (ASHRAE Dictionary)."@en ;
    sh:rule [ a sh:TripleRule ;
            sh:object tag:Point ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object tag:Sensor ;
            sh:predicate brick:hasTag ;
            sh:subject sh:this ] ;
    brick:hasAssociatedTag tag:Point,
        tag:Sensor .

tag:Deadband a brick:Tag ;
    rdfs:label "Deadband" .

tag:Proportional a brick:Tag ;
    rdfs:label "Proportional" .

owl:Ontology vaem:hasGraphMetadata vaem:GMD_VAEM .

s223:EnumerationValue a s223:Class,
        sh:NodeShape ;
    rdfs:label "Enumeration value" ;
    rdfs:subClassOf s223:Concept ;
    sh:property [ sh:maxCount 1 ;
            sh:message "An EnumerationValue must be a memeber of an EnumerationKind " ;
            sh:minCount 1 ;
            sh:path [ sh:inversePath s223:hasMember ] ] .

unit:ANGSTROM a qudt:Unit ;
    rdfs:label "Angstrom"@en ;
    dcterms:description "The \\(Angstr\\ddot{o}m\\) is an internationally recognized unit of length equal to \\(0.1 \\,nanometre\\) or \\(1 \\times 10^{-10}\\,metres\\).  Although accepted for use, it is not formally defined within the International System of Units(SI). The angstrom is often used in the natural sciences to express the sizes of atoms, lengths of chemical bonds and the wavelengths of electromagnetic radiation, and in technology for the dimensions of parts of integrated circuits. It is also commonly used in structural biology."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0000000001 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/%C3%85ngstr%C3%B6m"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:iec61360Code "0112/2///62720#UAA023" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Ångström?oldid=436192495"^^xsd:anyURI ;
    qudt:latexSymbol "\\(\\AA\\)"^^qudt:LatexString ;
    qudt:symbol "Å" ;
    qudt:ucumCode "Ao"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A11" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:AU a qudt:Unit ;
    rdfs:label "astronomical-unit"@en ;
    dcterms:description "An astronomical unit (abbreviated as AU, au, a.u., or ua) is a unit of length equal to \\(149,597,870,700 metres\\) (\\(92,955,807.273 mi\\)) or approximately the mean Earth Sun distance."^^qudt:LatexString ;
    qudt:allowedUnitOfSystem sou:SI ;
    qudt:conversionMultiplier 149597870691.6 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Astronomical_unit"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:iec61360Code "0112/2///62720#UAB066" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Astronomical_unit"^^xsd:anyURI ;
    qudt:plainTextDescription "An astronomical unit (abbreviated as AU, au, a.u., or ua) is a unit of length equal to 149,597,870,700 metres (92,955,807.273 mi) or approximately the mean Earth Sun distance. The symbol ua is recommended by the International Bureau of Weights and Measures, and the international standard ISO 80000, while au is recommended by the International Astronomical Union, and is more common in Anglosphere countries. In general, the International System of Units only uses capital letters for the symbols of units which are named after individual scientists, while au or a.u. can also mean atomic unit or even arbitrary unit. However, the use of AU to refer to the astronomical unit is widespread. The astronomical constant whose value is one astronomical unit is referred to as unit distance and is given the symbol A. [Wikipedia]" ;
    qudt:symbol "AU",
        "au" ;
    qudt:ucumCode "AU"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A12" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:BTU_IT-PER-LB_F a qudt:Unit ;
    rdfs:label "British Thermal Unit (international Table) Per Pound of Force"@en ;
    qudt:conversionMultiplier 237.18597062376833 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:iec61360Code "0112/2///62720#UAB150" ;
    qudt:plainTextDescription "unit of the heat energy according to the Imperial system of units divided by the unit avoirdupois pound of force according to the avoirdupois system of units" ;
    qudt:ucumCode "[Btu_IT].[lbf_av]-1"^^qudt:UCUMcs,
        "[Btu_IT]/[lbf_av]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "AZ" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:CH a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "chain"@en ;
    dcterms:description "A chain is a unit of length. It measures 66 feet, or 22 yards, or 100 links, or 4 rods. There are 10 chains in a furlong, and 80 chains in one statute mile. An acre is the area of 10 square chains (that is, an area of one chain by one furlong). The chain has been used for several centuries in Britain and in some other countries influenced by British practice."^^rdf:HTML ;
    qudt:conversionMultiplier 20.1168 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Chain"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:iec61360Code "0112/2///62720#UAB203" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Chain?oldid=494116185"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/chain> ;
    qudt:symbol "ch" ;
    qudt:ucumCode "[ch_br]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "X1" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    skos:altLabel "Gunter's chain" .

unit:DecaM a qudt:Unit ;
    rdfs:label "Decametre"@en,
        "Decameter"@en-us ;
    qudt:conversionMultiplier 10.0 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:iec61360Code "0112/2///62720#UAB064" ;
    qudt:plainTextDescription "10-fold of the SI base unit metre" ;
    qudt:ucumCode "dam"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A45" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FATH a qudt:Unit ;
    rdfs:label "Fathom"@en ;
    dcterms:description "A fathom = 1.8288 meters, is a unit of length in the imperial and the U.S. customary systems, used especially for measuring the depth of water. There are two yards in an imperial or U.S. fathom. Originally based on the distance between the man's outstretched arms, the size of a fathom has varied slightly depending on whether it was defined as a thousandth of an (Admiralty) nautical mile or as a multiple of the imperial yard.  Abbreviations: f, fath, fm, fth, fthm."^^rdf:HTML ;
    qudt:conversionMultiplier 1.8288 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Fathom"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Fathom?oldid=493265429"^^xsd:anyURI ;
    qudt:symbol "fath" ;
    qudt:ucumCode "[fth_i]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL,
        sou:USCS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FT_US a qudt:Unit ;
    rdfs:label "US Survey Foot"@en ;
    dcterms:description "\\(\\textit{US Survey Foot}\\) is a unit for 'Length' expressed as \\(ftUS\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.3048006 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:symbol "ft_us" ;
    qudt:ucumCode "[ft_us]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:USCS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FUR a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Furlong"@en ;
    dcterms:description "A furlong is a measure of distance in imperial units and U.S. customary units equal to one-eighth of a mile, equivalent to 220 yards, 660 feet, 40 rods, or 10 chains. The exact value of the furlong varies slightly among English-speaking countries. Five furlongs are approximately 1 kilometre (1.0058 km is a closer approximation). Since the original definition of the metre was one-quarter of one ten-millionth of the circumference of the Earth (along the great circle coincident with the meridian of longitude passing through Paris), the circumference of the Earth is about 40,000 km or about 200,000 furlongs. "^^rdf:HTML ;
    qudt:conversionMultiplier 201.168 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Furlong"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:iec61360Code "0112/2///62720#UAB204" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Furlong?oldid=492237369"^^xsd:anyURI ;
    qudt:symbol "fur" ;
    qudt:ucumCode "[fur_us]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL,
        sou:USCS ;
    rdfs:comment "Check if this is US-Survey or International Customary definition (multiplier)" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FUR_Long a qudt:Unit ;
    rdfs:label "Long Furlong"@en ;
    qudt:expression "\\(longfur\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:GAUGE_FR a qudt:Unit ;
    rdfs:label "French Gauge"@en ;
    qudt:conversionMultiplier 0.0003333333 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:iec61360Code "0112/2///62720#UAB377" ;
    qudt:plainTextDescription "unit for the diameter of thin tubes in the medical technology (e.g. catheter) and telecommunications engineering (e.g. fiberglasses)." ;
    qudt:ucumCode "[Ch]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "H79" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:HectoM a qudt:Unit ;
    rdfs:label "Hectometre"@en,
        "Hectometer"@en-us ;
    qudt:conversionMultiplier 100.0 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:iec61360Code "0112/2///62720#UAB062" ;
    qudt:plainTextDescription "100-fold of the SI base unit metre" ;
    qudt:ucumCode "hm"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "HMT" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:J a qudt:DerivedUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Joule"@en ;
    dcterms:description "The SI unit of work or energy, defined to be the work done by a force of one newton acting to move an object through a distance of one meter in the direction in which the force is applied. Equivalently, since kinetic energy is one half the mass times the square of the velocity, one joule is the kinetic energy of a mass of two kilograms moving at a velocity of \\(1 m/s\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Joule"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:hasQuantityKind quantitykind:Energy,
        quantitykind:ExchangeIntegral,
        quantitykind:ForceMagnitude,
        quantitykind:HamiltonFunction,
        quantitykind:LagrangeFunction,
        quantitykind:LevelWidth,
        quantitykind:ThermalEnergy ;
    qudt:iec61360Code "0112/2///62720#UAA172" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Joule?oldid=494340406"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\text{J}\\ \\equiv\\ \\text{joule}\\ \\equiv\\ \\text{CV}\\ \\equiv\\ \\text{coulomb.volt}\\ \\equiv\\ \\frac{\\text{eV}}{1.602\\ 10^{-19}}\\ \\equiv\\ \\frac{\\text{electron.volt}}{1.602\\ 10^{-19}}\\)"^^qudt:LatexString ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/joule> ;
    qudt:plainTextDescription "The SI unit of work or energy, defined to be the work done by a force of one newton acting to move an object through a distance of one meter in the direction in which the force is applied. Equivalently, since kinetic energy is one half the mass times the square of the velocity, one joule is the kinetic energy of a mass of two kilograms moving at a velocity of 1 m/s. This is the same as 107 ergs in the CGS system, or approximately 0.737 562 foot-pound in the traditional English system. In other energy units, one joule equals about 9.478 170 x 10-4 Btu, 0.238 846 (small) calories, or 2.777 778 x 10-4 watt hour. The joule is named for the British physicist James Prescott Joule (1818-1889), who demonstrated the equivalence of mechanical and thermal energy in a famous experiment in 1843. " ;
    qudt:symbol "J",
        "J"^^xsd:string,
        "N m"^^xsd:string ;
    qudt:ucumCode "J"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "JOU" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:N-M .

unit:LY a qudt:Unit ;
    rdfs:label "Light Year"@en ;
    dcterms:description "A unit of length defining the distance, in meters, that light travels in a vacuum in one year."^^rdf:HTML ;
    qudt:conversionMultiplier 9460730472580800.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Light-year"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:iec61360Code "0112/2///62720#UAB069" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Light-year?oldid=495083584"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/lightYear> ;
    qudt:symbol "ly" ;
    qudt:ucumCode "[ly]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "B57" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MI a qudt:Unit ;
    rdfs:label "International Mile"@en ;
    dcterms:description "The exact length of the land mile varied slightly among English-speaking countries until the international yard and pound agreement in 1959 established the yard as exactly 0.9144 metres, giving a mile of exactly 1,609.344 metres. The United States adopted this international mile for most purposes, but retained the pre-1959 mile for some land-survey data, terming it the US survey mile. In the US, statute mile formally refers to the survey mile, about 3.219 mm (1/8 inch) longer than the international mile (the international mile is exactly 0.0002% less than the US survey mile)."^^rdf:HTML ;
    qudt:conversionMultiplier 1609.344 ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mile"^^xsd:anyURI ;
    qudt:symbol "mi" ;
    qudt:ucumCode "[mi_i]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MI_N a qudt:Unit ;
    rdfs:label "Nautical Mile"@en ;
    dcterms:description "A unit of distance used primarily at sea and in aviation. The nautical mile is defined to be the average distance on the Earth's surface represented by one minute of latitude.  In 1929 an international conference in Monaco redefined the nautical mile to be exactly 1852 meters or 6076.115 49 feet, a distance known as the international nautical mile. The international nautical mile equals about 1.1508 statute miles. There are usually 3 nautical miles in a league. The unit is designed to equal 1/60 degree, although actual degrees of latitude vary from about 59.7 to 60.3 nautical miles. (Note: using data from the Geodetic Reference System 1980, the \"true\" length of a nautical mile would be 1852.216 meters.)"^^rdf:HTML ;
    qudt:conversionMultiplier 1852.0 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:iec61360Code "0112/2///62720#UAB065" ;
    qudt:symbol "n mile" ;
    qudt:ucumCode "[nmi_i]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "NMI" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MI_US a qudt:Unit ;
    rdfs:label "Mile US Statute"@en ;
    dcterms:description "The exact length of the land mile varied slightly among English-speaking countries until the international yard and pound agreement in 1959 established the yard as exactly 0.9144 metres, giving a mile of exactly 1,609.344 metres. The United States adopted this international mile for most purposes, but retained the pre-1959 mile for some land-survey data, terming it the US survey mile. In the US, statute mile formally refers to the survey mile, about 3.219 mm (1/8 inch) longer than the international mile (the international mile is exactly 0.0002\\% less than the US survey mile)."^^rdf:HTML ;
    qudt:conversionMultiplier 1609.347 ;
    qudt:definedUnitOfSystem sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mile"^^xsd:anyURI ;
    qudt:symbol "mi" ;
    qudt:ucumCode "[mi_us]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroIN a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Microinch"@en ;
    dcterms:description "\"Microinch\" is an Imperial unit for  'Length' expressed as \\(in^{-6}\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.0000000254 ;
    qudt:definedUnitOfSystem sou:IMPERIAL ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:isScalingOf unit:IN ;
    qudt:latexSymbol "\\(\\mu in\\)"^^qudt:LatexString ;
    qudt:prefix prefix:Micro ;
    qudt:symbol "µin" ;
    qudt:ucumCode "u[in_i]"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilLength a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Mil Length"@en ;
    dcterms:description "\"Mil Length\" is a C.G.S System unit for  'Length' expressed as \\(mil\\)."^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:symbol "mil" ;
    qudt:ucumCode "[mil_i]"^^qudt:UCUMcs ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliIN a qudt:Unit ;
    rdfs:label "Milli-inch"@en ;
    qudt:conversionMultiplier 0.0000254 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:iec61360Code "0112/2///62720#UAA841" ;
    qudt:plainTextDescription "0.001-fold of the unit inch according to the Anglo-American and Imperial system of units" ;
    qudt:ucumCode "m[in_i]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "77" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    skos:altLabel "thou"@en-gb,
        "mil"@en-us .

unit:NanoM a qudt:Unit ;
    rdfs:label "Nanometre"@en,
        "Nanometer"@en-us ;
    qudt:conversionMultiplier 0.000000001 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:iec61360Code "0112/2///62720#UAA912" ;
    qudt:plainTextDescription "0.000000001-fold of the SI base unit metre" ;
    qudt:ucumCode "nm"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C45" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PARSEC a qudt:Unit ;
    rdfs:label "Parsec"@en ;
    dcterms:description "The parsec (parallax of one arcsecond; symbol: pc) is a unit of length, equal to just under 31 trillion (\\(31 \\times 10^{12}\\)) kilometres (about 19 trillion miles), 206265 AU, or about 3.26 light-years. The parsec measurement unit is used in astronomy. It is defined as the length of the adjacent side of an imaginary right triangle in space. The two dimensions that specify this triangle are the parallax angle (defined as 1 arcsecond) and the opposite side (defined as 1 astronomical unit (AU), the distance from the Earth to the Sun). Given these two measurements, along with the rules of trigonometry, the length of the adjacent side (the parsec) can be found."^^qudt:LatexString ;
    qudt:conversionMultiplier 30856780000000000.0 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:iec61360Code "0112/2///62720#UAB067" ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/parsec> ;
    qudt:symbol "pc" ;
    qudt:ucumCode "pc"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C63" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PCA a qudt:Unit ;
    rdfs:label "Pica"@en ;
    dcterms:description "A pica is a typographic unit of measure corresponding to 1/72 of its respective foot, and therefore to 1/6 of an inch. The pica contains 12 point units of measure. Notably, Adobe PostScript promoted the pica unit of measure that is the standard in contemporary printing, as in home computers and printers. Usually, pica measurements are represented with an upper-case 'P' with an upper-right-to-lower-left virgule (slash) starting in the upper right portion of the 'P' and ending at the lower left of the upright portion of the 'P'; essentially drawing a virgule (/) through a 'P'.  Note that these definitions are different from a typewriter's pica setting, which denotes a type size of ten characters per horizontal inch."^^rdf:HTML ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Pica"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:iec61360Code "0112/2///62720#UAB606" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Pica?oldid=458102937"^^xsd:anyURI ;
    qudt:symbol "PCA" ;
    qudt:ucumCode "[pca]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "R1" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PT a qudt:Unit ;
    rdfs:label "Point"@en ;
    dcterms:description "In typography, a point is the smallest unit of measure, being a subdivision of the larger pica. It is commonly abbreviated as pt. The point has long been the usual unit for measuring font size and leading and other minute items on a printed page."^^rdf:HTML ;
    qudt:conversionMultiplier 0.0000254 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:iec61360Code "0112/2///62720#UAB605" ;
    qudt:symbol "pt" ;
    qudt:ucumCode "[pnt]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "N3" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:PicoM a qudt:Unit ;
    rdfs:label "Picometre"@en,
        "Picometer"@en-us ;
    qudt:conversionMultiplier 0.000000000001 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:iec61360Code "0112/2///62720#UAA949" ;
    qudt:plainTextDescription "0.000000000001-fold of the SI base unit metre" ;
    qudt:ucumCode "pm"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "C52" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:ROD a qudt:Unit ;
    rdfs:label "Rod"@en ;
    dcterms:description "A unit of distance equal to 5.5 yards (16 feet 6 inches)."^^rdf:HTML ;
    qudt:conversionMultiplier 5.02921 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Rod"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:expression "\\(rd\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:iec61360Code "0112/2///62720#UAA970" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Rod?oldid=492590086"^^xsd:anyURI ;
    qudt:ucumCode "[rd_br]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "F49" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

brick:EntityProperty a owl:Class ;
    rdfs:subClassOf owl:ObjectProperty .

brick:Flow a brick:Quantity ;
    rdfs:label "Flow" ;
    qudt:applicableUnit unit:BBL_UK_PET-PER-DAY,
        unit:BBL_UK_PET-PER-HR,
        unit:BBL_UK_PET-PER-MIN,
        unit:BBL_UK_PET-PER-SEC,
        unit:BBL_US-PER-DAY,
        unit:BBL_US-PER-MIN,
        unit:BBL_US_PET-PER-HR,
        unit:BBL_US_PET-PER-SEC,
        unit:BU_UK-PER-DAY,
        unit:BU_UK-PER-HR,
        unit:BU_UK-PER-MIN,
        unit:BU_UK-PER-SEC,
        unit:BU_US_DRY-PER-DAY,
        unit:BU_US_DRY-PER-HR,
        unit:BU_US_DRY-PER-MIN,
        unit:BU_US_DRY-PER-SEC,
        unit:CentiM3-PER-DAY,
        unit:CentiM3-PER-HR,
        unit:CentiM3-PER-MIN,
        unit:CentiM3-PER-SEC,
        unit:DeciM3-PER-DAY,
        unit:DeciM3-PER-HR,
        unit:DeciM3-PER-MIN,
        unit:DeciM3-PER-SEC,
        unit:FT3-PER-DAY,
        unit:FT3-PER-HR,
        unit:FT3-PER-MIN,
        unit:FT3-PER-SEC,
        unit:GAL_UK-PER-DAY,
        unit:GAL_UK-PER-HR,
        unit:GAL_UK-PER-MIN,
        unit:GAL_UK-PER-SEC,
        unit:GAL_US-PER-DAY,
        unit:GAL_US-PER-HR,
        unit:GAL_US-PER-MIN,
        unit:GAL_US-PER-SEC,
        unit:GI_UK-PER-DAY,
        unit:GI_UK-PER-HR,
        unit:GI_UK-PER-MIN,
        unit:GI_UK-PER-SEC,
        unit:GI_US-PER-DAY,
        unit:GI_US-PER-HR,
        unit:GI_US-PER-MIN,
        unit:GI_US-PER-SEC,
        unit:IN3-PER-HR,
        unit:IN3-PER-MIN,
        unit:IN3-PER-SEC,
        unit:KiloL-PER-HR,
        unit:L-PER-DAY,
        unit:L-PER-HR,
        unit:L-PER-MIN,
        unit:L-PER-SEC,
        unit:M3-PER-DAY,
        unit:M3-PER-HR,
        unit:M3-PER-MIN,
        unit:M3-PER-SEC,
        unit:MilliL-PER-DAY,
        unit:MilliL-PER-HR,
        unit:MilliL-PER-MIN,
        unit:MilliL-PER-SEC,
        unit:OZ_VOL_UK-PER-DAY,
        unit:OZ_VOL_UK-PER-HR,
        unit:OZ_VOL_UK-PER-MIN,
        unit:OZ_VOL_UK-PER-SEC,
        unit:OZ_VOL_US-PER-DAY,
        unit:OZ_VOL_US-PER-HR,
        unit:OZ_VOL_US-PER-MIN,
        unit:OZ_VOL_US-PER-SEC,
        unit:PINT_UK-PER-DAY,
        unit:PINT_UK-PER-HR,
        unit:PINT_UK-PER-MIN,
        unit:PINT_UK-PER-SEC,
        unit:PINT_US-PER-DAY,
        unit:PINT_US-PER-HR,
        unit:PINT_US-PER-MIN,
        unit:PINT_US-PER-SEC,
        unit:PK_UK-PER-DAY,
        unit:PK_UK-PER-HR,
        unit:PK_UK-PER-MIN,
        unit:PK_UK-PER-SEC,
        unit:PK_US_DRY-PER-DAY,
        unit:PK_US_DRY-PER-HR,
        unit:PK_US_DRY-PER-MIN,
        unit:PK_US_DRY-PER-SEC,
        unit:QT_UK-PER-DAY,
        unit:QT_UK-PER-HR,
        unit:QT_UK-PER-MIN,
        unit:QT_UK-PER-SEC,
        unit:QT_US-PER-DAY,
        unit:QT_US-PER-HR,
        unit:QT_US-PER-MIN,
        unit:QT_US-PER-SEC,
        unit:YD3-PER-DAY,
        unit:YD3-PER-HR,
        unit:YD3-PER-MIN,
        unit:YD3-PER-SEC ;
    brick:hasQUDTReference quantitykind:VolumeFlowRate .

tag:High a brick:Tag ;
    rdfs:label "High" .

tag:Low a brick:Tag ;
    rdfs:label "Low" .

tag:Time a brick:Tag ;
    rdfs:label "Time" .

qkdv:A0E0L1I0M1H0T-2D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L1I0M1H0T-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:Force ;
    qudt:latexDefinition "\\(L M T^-2\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

unit:PlanckLength a qudt:Unit ;
    rdfs:label "Planck Length"@en ;
    dcterms:description "In physics, the Planck length, denoted \\(\\ell_P\\), is a unit of length, equal to \\(1.616199(97)×10^{-35}\\) metres. It is a base unit in the system of Planck units. The Planck length can be defined from three fundamental physical constants: the speed of light in a vacuum, Planck's constant, and the gravitational constant. "^^qudt:LatexString ;
    qudt:conversionMultiplier 0.00000000000000000000000000000000001616252 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Planck_length"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Planck_length?oldid=495093067"^^xsd:anyURI,
        "https://en.wikipedia.org/wiki/Planck_units"^^xsd:anyURI ;
    qudt:latexDefinition "\\(\\ell_P = \\sqrt{\\frac{ \\hbar G}{c^3}} \\approx 1.616199(97)) \\times 10^{-35} m\\), where \\(c\\) is the speed of light in a vacuum, \\(\\hbar\\) is the reduced Planck's constant, and \\(G\\) is the gravitational constant. The two digits enclosed by parentheses are the estimated standard error associated with the reported numerical value."^^qudt:LatexString ;
    qudt:latexSymbol "\\(\\ell_P\\)"^^qudt:LatexString ;
    qudt:unitOfSystem sou:PLANCK ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DeciM a qudt:Unit ;
    rdfs:label "Decimetre"@en,
        "Decimeter"@en-us ;
    dcterms:description "A decimeter is a tenth of a meter."^^rdf:HTML ;
    qudt:conversionMultiplier 0.1 ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:iec61360Code "0112/2///62720#UAA412" ;
    qudt:isScalingOf unit:M ;
    qudt:prefix prefix:Deci ;
    qudt:ucumCode "dm"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "DMT" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FM a qudt:Unit ;
    rdfs:label "fermi"@en ;
    dcterms:description "The \\(\\textit{fermi}\\), or \\(\\textit{femtometer}\\) (other spelling \\(femtometre\\), symbol \\(fm\\)) is an SI unit of length equal to \\(10^{-15} metre\\). This distance is often encountered in nuclear physics as a characteristic of this scale. The symbol for the fermi is also \\(fm\\)."^^qudt:LatexString ;
    qudt:conversionCoefficient 0.0 ;
    qudt:conversionMultiplier 0.000000000000001 ;
    qudt:exactMatch unit:FemtoM ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Fermi_(unit)"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/fermi> ;
    qudt:symbol "fm" ;
    qudt:unitOfSystem sou:SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:FemtoM .

unit:FT a qudt:Unit ;
    rdfs:label "Foot"@en ;
    dcterms:description "A foot is a unit of length defined as being 0.3048 m exactly and used in the imperial system of units and United States customary units. It is subdivided into 12 inches. The foot is still officially used in Canada and still commonly used in the United Kingdom, although the latter has partially metricated its units of measurement. "^^rdf:HTML ;
    qudt:conversionMultiplier 0.3048 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Foot_%28length%29"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:iec61360Code "0112/2///62720#UAA440" ;
    qudt:symbol "ft" ;
    qudt:ucumCode "[ft_i]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "FOT" ;
    qudt:unitOfSystem sou:IMPERIAL,
        sou:USCS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:FemtoM a qudt:Unit ;
    rdfs:label "Femtometre"@en,
        "Femtometer"@en-us ;
    dcterms:description "The \\(\\textit{femtometre}\\) is an SI unit of length equal to \\(10^{-15} meter\\). This distance can also be called \\(\\textit{fermi}\\) and was so named in honour of Enrico Fermi. It is often encountered in nuclear physics as a characteristic of this scale. The symbol for the fermi is also \\(fm\\)."^^qudt:LatexString ;
    qudt:allowedUnitOfSystem sou:SI ;
    qudt:conversionMultiplier 0.000000000000001 ;
    qudt:exactMatch unit:FM ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:iec61360Code "0112/2///62720#UAB063" ;
    qudt:symbol "fm" ;
    qudt:ucumCode "fm"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "A71" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:sameAs unit:FM .

unit:KiloM a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Kilometre"@en,
        "Kilometer"@en-us ;
    dcterms:description "A common metric unit of length or distance. One kilometer equals exactly 1000 meters, about 0.621 371 19 mile, 1093.6133 yards, or 3280.8399 feet. Oddly, higher multiples of the meter are rarely used; even the distances to the farthest galaxies are usually measured in kilometers. "^^rdf:HTML ;
    qudt:allowedUnitOfSystem sou:CGS-EMU,
        sou:CGS-GAUSS,
        sou:SI ;
    qudt:conversionMultiplier 1000.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Kilometre"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Kilometre?oldid=494821851"^^xsd:anyURI ;
    qudt:symbol "km" ;
    qudt:ucumCode "km"^^qudt:UCUMcs ;
    qudt:unitOfSystem sou:SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MicroM a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Micrometre"@en,
        "Micrometer"@en-us ;
    dcterms:description "\"Micrometer\" is a unit for  'Length' expressed as \\(microm\\)."^^qudt:LatexString ;
    qudt:conversionMultiplier 0.000001 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Micrometer"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:iec61360Code "0112/2///62720#UAA090" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Micrometer?oldid=491270437"^^xsd:anyURI ;
    qudt:symbol "μm" ;
    qudt:ucumCode "um"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "4H" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:MilliM a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Millimetre"@en,
        "Millimeter"@en-us ;
    dcterms:description "The millimetre (International spelling as used by the International Bureau of Weights and Measures) or millimeter (American spelling) (SI unit symbol mm) is a unit of length in the metric system, equal to one thousandth of a metre, which is the SI base unit of length. It is equal to 1000 micrometres or 1000000 nanometres. A millimetre is equal to exactly 5/127 (approximately 0.039370) of an inch."^^rdf:HTML ;
    qudt:conversionMultiplier 0.001 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Millimetre"^^xsd:anyURI ;
    qudt:expression "\\(mm\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:iec61360Code "0112/2///62720#UAA862" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Millimetre?oldid=493032457"^^xsd:anyURI ;
    qudt:ucumCode "mm"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "MMT" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    skos:altLabel "mil"@en-gb .

unit:YD a qudt:Unit ;
    rdfs:label "Yard"@en ;
    dcterms:description "A yard is a unit of length in several different systems including United States customary units, Imperial units and the former English units. It is equal to 3 feet or 36 inches. Under an agreement in 1959 between Australia, Canada, New Zealand, South Africa, the United Kingdom and the United States, the yard (known as the \"international yard\" in the United States) was legally defined to be exactly 0.9144 metres."^^rdf:HTML ;
    qudt:conversionMultiplier 0.9144 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Yard"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:iec61360Code "0112/2///62720#UAB030" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Yard?oldid=492334628"^^xsd:anyURI ;
    qudt:symbol "yd" ;
    qudt:ucumCode "[yd_i]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "YRD" ;
    qudt:unitOfSystem sou:IMPERIAL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

tag:Gas a brick:Tag ;
    rdfs:label "Gas" .

quantitykind:Power a qudt:QuantityKind ;
    rdfs:label "Power"@en ;
    dcterms:description "Power is the rate at which work is performed or energy is transmitted, or the amount of energy required or expended for a given unit of time. As a rate of change of work done or the energy of a subsystem, power is: \\(P = W/t\\), where \\(P\\) is power, \\(W\\) is work and {t} is time."^^qudt:LatexString ;
    qudt:applicableUnit unit:BAR-L-PER-SEC,
        unit:BAR-M3-PER-SEC,
        unit:BTU_IT-PER-HR,
        unit:BTU_IT-PER-SEC,
        unit:ERG-PER-SEC,
        unit:FT-LB_F-PER-HR,
        unit:FT-LB_F-PER-MIN,
        unit:FT-LB_F-PER-SEC,
        unit:GigaW,
        unit:HP,
        unit:HP-PER-M,
        unit:HP-PER-V,
        unit:HP_Boiler,
        unit:HP_Brake,
        unit:HP_Electric,
        unit:HP_Metric,
        unit:J-PER-HR,
        unit:J-PER-SEC,
        unit:KiloCAL-PER-MIN,
        unit:KiloCAL-PER-SEC,
        unit:KiloW,
        unit:MegaJ-PER-SEC,
        unit:MegaPA-L-PER-SEC,
        unit:MegaPA-M3-PER-SEC,
        unit:MegaW,
        unit:MicroW,
        unit:MilliBAR-L-PER-SEC,
        unit:MilliBAR-M3-PER-SEC,
        unit:MilliW,
        unit:NanoW,
        unit:PA-L-PER-SEC,
        unit:PA-M3-PER-SEC,
        unit:PSI-IN3-PER-SEC,
        unit:PSI-M3-PER-SEC,
        unit:PSI-YD3-PER-SEC,
        unit:PicoW,
        unit:PlanckPower,
        unit:TON_FG,
        unit:TeraW,
        unit:W ;
    qudt:baseUnitDimensions "\\(L^2 \\cdot M/T^3\\)"^^qudt:LatexString,
        "\\(kg \\cdot m^2/s^3\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Power"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-3D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Power"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(P = F \\cdot v\\), where \\(F\\) is force and \\(v\\) is velocity."^^qudt:LatexString ;
    qudt:symbol "P",
        "p" ;
    qudt:url "http://en.wikipedia.org/wiki/Power_%28physics%29"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

unit:IN a qudt:Unit ;
    rdfs:label "Inch"@en ;
    dcterms:description "An inch is the name of a unit of length in a number of different systems, including Imperial units, and United States customary units. There are 36 inches in a yard and 12 inches in a foot. Corresponding units of area and volume are the square inch and the cubic inch."^^rdf:HTML ;
    qudt:conversionMultiplier 0.0254 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Inch"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:IMPERIAL,
        sou:USCS ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:iec61360Code "0112/2///62720#UAA539" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Inch?oldid=492522790"^^xsd:anyURI ;
    qudt:symbol "in" ;
    qudt:ucumCode "[in_i]"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "INH" ;
    qudt:unitOfSystem sou:IMPERIAL,
        sou:USCS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

qkdv:A0E0L0I0M0H0T1D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M0H0T1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:Time ;
    qudt:latexDefinition "\\(T\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

sp:systemProperty a rdf:Property ;
    rdfs:label "SP system property" ;
    rdfs:comment "An abstract base proprerty that groups together the SP system properties. Users typically don't need to see them anyway." .

tag:Load a brick:Tag ;
    rdfs:label "Load" .

unit:CentiM a qudt:DerivedUnit,
        qudt:Unit ;
    rdfs:label "Centimetre"@en,
        "Centimeter"@en-us ;
    dcterms:description "A centimetre is a unit of length in the metric system, equal to one hundredth of a metre, which is the SI base unit of length. Centi is the SI prefix for a factor of 10.  The centimetre is the base unit of length in the now deprecated centimetre-gram-second (CGS) system of units."^^rdf:HTML ;
    qudt:conversionMultiplier 0.01 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Centimetre"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:iec61360Code "0112/2///62720#UAA375" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Centimetre?oldid=494931891"^^xsd:anyURI ;
    qudt:isScalingOf unit:M ;
    qudt:prefix prefix:Centi ;
    qudt:symbol "cm" ;
    qudt:ucumCode "cm"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "CMT" ;
    qudt:unitOfSystem sou:CGS,
        sou:SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:M a qudt:Unit ;
    rdfs:label "Metre"@en,
        "Meter"@en-us ;
    dcterms:description "The metric and SI base unit of distance.  The 17th General Conference on Weights and Measures in 1983 defined the meter as that distance that makes the speed of light in a vacuum equal to exactly 299 792 458 meters per second. The speed of light in a vacuum, \\(c\\), is one of the fundamental constants of nature. The meter is equal to approximately 1.093 613 3 yards, 3.280 840 feet, or 39.370 079 inches."^^qudt:LatexString ;
    qudt:allowedUnitOfSystem sou:CGS-EMU,
        sou:CGS-GAUSS ;
    qudt:conversionMultiplier 1.0 ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Metre"^^xsd:anyURI ;
    qudt:definedUnitOfSystem sou:SI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:hasQuantityKind quantitykind:Length ;
    qudt:iec61360Code "0112/2///62720#UAA726" ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Metre?oldid=495145797"^^xsd:anyURI ;
    qudt:omUnit <http://www.ontology-of-units-of-measure.org/resource/om-2/metre> ;
    qudt:plainTextDescription "The metric and SI base unit of distance.   The meter is equal to approximately 1.093 613 3 yards, 3.280 840 feet, or 39.370 079 inches." ;
    qudt:symbol "m" ;
    qudt:ucumCode "m"^^qudt:UCUMcs ;
    qudt:uneceCommonCode "MTR" ;
    qudt:unitOfSystem sou:CGS,
        sou:SI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

tag:Exhaust a brick:Tag ;
    rdfs:label "Exhaust" .

tag:Occupied a brick:Tag ;
    rdfs:label "Occupied" .

tag:Valve a brick:Tag ;
    rdfs:label "Valve" .

quantitykind:ForcePerArea a qudt:QuantityKind ;
    rdfs:label "Force Per Area"@en ;
    qudt:applicableUnit unit:ATM,
        unit:ATM_T,
        unit:BAR,
        unit:BARAD,
        unit:BARYE,
        unit:CM_H2O,
        unit:CentiBAR,
        unit:CentiM_H2O,
        unit:CentiM_HG,
        unit:DYN-PER-CentiM2,
        unit:DecaPA,
        unit:DeciBAR,
        unit:FT_H2O,
        unit:FT_HG,
        unit:GM_F-PER-CentiM2,
        unit:GigaPA,
        unit:HectoBAR,
        unit:HectoPA,
        unit:IN_H2O,
        unit:IN_HG,
        unit:KIP_F-PER-IN2,
        unit:KiloBAR,
        unit:KiloGM-PER-M-SEC2,
        unit:KiloGM_F-PER-CentiM2,
        unit:KiloGM_F-PER-M2,
        unit:KiloGM_F-PER-MilliM2,
        unit:KiloLB_F-PER-IN2,
        unit:KiloPA,
        unit:KiloPA_A,
        unit:LB_F-PER-FT2,
        unit:LB_F-PER-IN2,
        unit:MegaBAR,
        unit:MegaPA,
        unit:MicroATM,
        unit:MicroBAR,
        unit:MicroPA,
        unit:MicroTORR,
        unit:MilliBAR,
        unit:MilliM_H2O,
        unit:MilliM_HG,
        unit:MilliM_HGA,
        unit:MilliPA,
        unit:MilliTORR,
        unit:N-PER-CentiM2,
        unit:N-PER-M2,
        unit:N-PER-MilliM2,
        unit:PA,
        unit:PDL-PER-FT2,
        unit:PSI,
        unit:PlanckPressure,
        unit:TORR ;
    qudt:baseUnitDimensions "\\(M/L \\cdot T^2\\)"^^qudt:LatexString,
        "\\(kg/m \\cdot s^2\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L-1I0M1H0T-2D0 ;
    qudt:informativeReference "http://www.thefreedictionary.com/force+per+unit+area"^^xsd:anyURI ;
    qudt:outOfScope true ;
    qudt:plainTextDescription "The force applied to a unit area of surface; measured in pascals (SI unit) or in dynes (cgs unit)" ;
    qudt:symbol "p" ;
    qudt:url "http://en.wikipedia.org/wiki/Pressure"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

tag:Humidity a brick:Tag ;
    rdfs:label "Humidity" .

tag:Max a brick:Tag ;
    rdfs:label "Max" .

tag:Min a brick:Tag ;
    rdfs:label "Min" .

qkdv:A0E0L1I0M0H0T-1D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L1I0M0H0T-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:LinearVelocity ;
    qudt:latexDefinition "\\(L T^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

tag:Reset a brick:Tag ;
    rdfs:label "Reset" .

tag:Liquid a brick:Tag ;
    rdfs:label "Liquid" .

qkdv:A0E0L-3I0M1H0T0D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-3I0M1H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -3 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:Density ;
    qudt:latexDefinition "\\(L^-3 M\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

tag:Outside a brick:Tag ;
    rdfs:label "Outside" .

<http://www.linkedmodel.org/2.0/schema/vaem> vaem:hasGraphMetadata vaem:GMD_VAEM ;
    owl:versionIRI <http://www.linkedmodel.org/2.0/schema/vaem> .

quantitykind:Mass a qudt:QuantityKind ;
    rdfs:label "Mass"@en ;
    dcterms:description "In physics, mass, more specifically inertial mass, can be defined as a quantitative measure of an object's resistance to acceleration. The SI unit of mass is the kilogram (\\(kg\\))"^^qudt:LatexString ;
    qudt:applicableUnit unit:AMU,
        unit:CARAT,
        unit:CWT_LONG,
        unit:CWT_SHORT,
        unit:CentiGM,
        unit:DRAM_UK,
        unit:DRAM_US,
        unit:DWT,
        unit:DecaGM,
        unit:DeciGM,
        unit:DeciTONNE,
        unit:DeciTON_Metric,
        unit:EarthMass,
        unit:GM,
        unit:GRAIN,
        unit:HectoGM,
        unit:Hundredweight_UK,
        unit:Hundredweight_US,
        unit:KiloGM,
        unit:KiloTON_Metric,
        unit:LB,
        unit:LB_T,
        unit:LunarMass,
        unit:MegaGM,
        unit:MicroGM,
        unit:MilliGM,
        unit:NanoGM,
        unit:OZ,
        unit:OZ_TROY,
        unit:Pennyweight,
        unit:PicoGM,
        unit:PlanckMass,
        unit:Quarter_UK,
        unit:SLUG,
        unit:SolarMass,
        unit:Stone_UK,
        unit:TONNE,
        unit:TON_Assay,
        unit:TON_LONG,
        unit:TON_Metric,
        unit:TON_SHORT,
        unit:TON_UK,
        unit:TON_US,
        unit:U ;
    qudt:baseUnitDimensions "\\(M\\)"^^qudt:LatexString,
        "\\(kg\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Mass"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M1H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Mass"^^xsd:anyURI ;
    qudt:symbol "m" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

<http://www.linkedmodel.org/schema/vaem> a owl:Ontology .

qkdv:A0E0L3I0M0H0T0D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L3I0M0H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 3 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:Volume ;
    qudt:latexDefinition "\\(L^3\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

qkdv:A0E0L2I0M1H0T-3D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L2I0M1H0T-3D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -3 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:Power ;
    qudt:latexDefinition "\\(L^2 M T^-3\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

tag:Static a brick:Tag ;
    rdfs:label "Static" .

qkdv:A0E0L0I0M0H0T-1D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M0H0T-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:Frequency ;
    qudt:latexDefinition "\\(T^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

brick:Temperature a brick:Quantity ;
    rdfs:label "Temperature" ;
    qudt:applicableUnit unit:DEG_C,
        unit:DEG_F,
        unit:DEG_R,
        unit:K,
        unit:MilliDEG_C,
        unit:PlanckTemperature ;
    brick:hasQUDTReference quantitykind:Temperature .

quantitykind:Energy a qudt:QuantityKind ;
    rdfs:label "Energy"@en ;
    qudt:applicableUnit unit:AttoJ,
        unit:BTU_IT,
        unit:BTU_TH,
        unit:CAL_IT,
        unit:CAL_TH,
        unit:ERG,
        unit:EV,
        unit:E_h,
        unit:ExaJ,
        unit:FT-LB_F,
        unit:FT-PDL,
        unit:FemtoJ,
        unit:GigaEV,
        unit:GigaJ,
        unit:GigaW-HR,
        unit:J,
        unit:KiloCAL,
        unit:KiloEV,
        unit:KiloJ,
        unit:KiloV-A-HR,
        unit:KiloV-A_Reactive-HR,
        unit:KiloW-HR,
        unit:MegaEV,
        unit:MegaJ,
        unit:MegaTOE,
        unit:MegaV-A-HR,
        unit:MegaV-A_Reactive-HR,
        unit:MegaW-HR,
        unit:MicroJ,
        unit:MilliJ,
        unit:PetaJ,
        unit:PlanckEnergy,
        unit:QUAD,
        unit:THM_EEC,
        unit:THM_US,
        unit:TOE,
        unit:TeraJ,
        unit:TeraW-HR,
        unit:TonEnergy,
        unit:V-A-HR,
        unit:V-A_Reactive-HR,
        unit:W-HR,
        unit:W-SEC ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Energy"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L2I0M1H0T-2D0 ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31890"^^xsd:anyURI ;
    qudt:plainTextDescription "Energy is the quantity characterizing the ability of a system to do work." ;
    qudt:symbol "E" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    rdfs:seeAlso quantitykind:Enthalpy,
        quantitykind:Entropy,
        quantitykind:GibbsEnergy,
        quantitykind:HelmholtzEnergy,
        quantitykind:InternalEnergy,
        quantitykind:Work .

quantitykind:Length a qudt:QuantityKind ;
    rdfs:label "Length"@en ;
    qudt:applicableUnit unit:ANGSTROM,
        unit:AU,
        unit:BTU_IT-PER-LB_F,
        unit:CH,
        unit:CentiM,
        unit:DecaM,
        unit:DeciM,
        unit:FATH,
        unit:FM,
        unit:FT,
        unit:FT_US,
        unit:FUR,
        unit:FUR_Long,
        unit:FemtoM,
        unit:GAUGE_FR,
        unit:HectoM,
        unit:IN,
        unit:KiloM,
        unit:LY,
        unit:M,
        unit:MI,
        unit:MI_N,
        unit:MI_US,
        unit:MicroIN,
        unit:MicroM,
        unit:MilLength,
        unit:MilliIN,
        unit:MilliM,
        unit:NanoM,
        unit:PARSEC,
        unit:PCA,
        unit:PT,
        unit:PicoM,
        unit:PlanckLength,
        unit:ROD,
        unit:YD ;
    qudt:baseUnitDimensions "\\(L\\)"^^qudt:LatexString,
        "\\(m\\)"^^qudt:LatexString ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Length"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L1I0M0H0T0D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Length"^^xsd:anyURI ;
    qudt:plainTextDescription "In geometric measurements, length most commonly refers to the est dimension of an object. In some contexts, the term \"length\" is reserved for a certain dimension of an object along which the length is measured." ;
    qudt:symbol "l" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

sp:arg1 a rdf:Property ;
    rdfs:label "arg1" ;
    rdfs:comment "The first argument of a function call." ;
    rdfs:subPropertyOf sp:arg .

tag:Chilled a brick:Tag ;
    rdfs:label "Chilled" .

tag:Cool a brick:Tag ;
    rdfs:label "Cool" .

tag:System a brick:Tag ;
    rdfs:label "System" .

qkdv:A0E0L1I0M0H0T0D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L1I0M0H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:Length ;
    qudt:latexDefinition "\\(L\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

tag:PID a brick:Tag ;
    rdfs:label "PID" .

tag:Return a brick:Tag ;
    rdfs:label "Return" .

qkdv:A0E0L-1I0M1H0T-2D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L-1I0M1H0T-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength -1 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:EnergyDensity,
        quantitykind:ForcePerArea ;
    qudt:latexDefinition "\\(L^-1 M T^-2\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

tag:Fluid a brick:Tag ;
    rdfs:label "Fluid" .

qkdv:A0E0L0I0M1H0T0D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M1H0T0D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:Mass ;
    qudt:latexDefinition "\\(M\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

quantitykind:VolumeFlowRate a qudt:QuantityKind ;
    rdfs:label "Volume Flow Rate"@en ;
    qudt:applicableUnit unit:BBL_UK_PET-PER-DAY,
        unit:BBL_UK_PET-PER-HR,
        unit:BBL_UK_PET-PER-MIN,
        unit:BBL_UK_PET-PER-SEC,
        unit:BBL_US-PER-DAY,
        unit:BBL_US-PER-MIN,
        unit:BBL_US_PET-PER-HR,
        unit:BBL_US_PET-PER-SEC,
        unit:BU_UK-PER-DAY,
        unit:BU_UK-PER-HR,
        unit:BU_UK-PER-MIN,
        unit:BU_UK-PER-SEC,
        unit:BU_US_DRY-PER-DAY,
        unit:BU_US_DRY-PER-HR,
        unit:BU_US_DRY-PER-MIN,
        unit:BU_US_DRY-PER-SEC,
        unit:CentiM3-PER-DAY,
        unit:CentiM3-PER-HR,
        unit:CentiM3-PER-MIN,
        unit:CentiM3-PER-SEC,
        unit:DeciM3-PER-DAY,
        unit:DeciM3-PER-HR,
        unit:DeciM3-PER-MIN,
        unit:DeciM3-PER-SEC,
        unit:FT3-PER-DAY,
        unit:FT3-PER-HR,
        unit:FT3-PER-MIN,
        unit:FT3-PER-SEC,
        unit:GAL_UK-PER-DAY,
        unit:GAL_UK-PER-HR,
        unit:GAL_UK-PER-MIN,
        unit:GAL_UK-PER-SEC,
        unit:GAL_US-PER-HR,
        unit:GAL_US-PER-SEC,
        unit:GI_UK-PER-DAY,
        unit:GI_UK-PER-HR,
        unit:GI_UK-PER-MIN,
        unit:GI_UK-PER-SEC,
        unit:GI_US-PER-DAY,
        unit:GI_US-PER-HR,
        unit:GI_US-PER-MIN,
        unit:GI_US-PER-SEC,
        unit:IN3-PER-HR,
        unit:IN3-PER-MIN,
        unit:IN3-PER-SEC,
        unit:KiloL-PER-HR,
        unit:L-PER-DAY,
        unit:L-PER-HR,
        unit:L-PER-MIN,
        unit:L-PER-SEC,
        unit:M3-PER-DAY,
        unit:M3-PER-HR,
        unit:M3-PER-MIN,
        unit:M3-PER-SEC,
        unit:MilliL-PER-DAY,
        unit:MilliL-PER-HR,
        unit:MilliL-PER-MIN,
        unit:MilliL-PER-SEC,
        unit:OZ_VOL_UK-PER-DAY,
        unit:OZ_VOL_UK-PER-HR,
        unit:OZ_VOL_UK-PER-MIN,
        unit:OZ_VOL_UK-PER-SEC,
        unit:OZ_VOL_US-PER-DAY,
        unit:OZ_VOL_US-PER-HR,
        unit:OZ_VOL_US-PER-MIN,
        unit:OZ_VOL_US-PER-SEC,
        unit:PINT_UK-PER-DAY,
        unit:PINT_UK-PER-HR,
        unit:PINT_UK-PER-MIN,
        unit:PINT_UK-PER-SEC,
        unit:PINT_US-PER-DAY,
        unit:PINT_US-PER-HR,
        unit:PINT_US-PER-MIN,
        unit:PINT_US-PER-SEC,
        unit:PK_UK-PER-DAY,
        unit:PK_UK-PER-HR,
        unit:PK_UK-PER-MIN,
        unit:PK_UK-PER-SEC,
        unit:PK_US_DRY-PER-DAY,
        unit:PK_US_DRY-PER-HR,
        unit:PK_US_DRY-PER-MIN,
        unit:PK_US_DRY-PER-SEC,
        unit:QT_UK-PER-DAY,
        unit:QT_UK-PER-HR,
        unit:QT_UK-PER-MIN,
        unit:QT_UK-PER-SEC,
        unit:QT_US-PER-DAY,
        unit:QT_US-PER-HR,
        unit:QT_US-PER-MIN,
        unit:QT_US-PER-SEC,
        unit:YD3-PER-DAY,
        unit:YD3-PER-HR,
        unit:YD3-PER-MIN,
        unit:YD3-PER-SEC ;
    qudt:baseUnitDimensions "\\(m^{3} sec^{-1}\\)"^^qudt:LatexString ;
    qudt:hasDimensionVector qkdv:A0E0L3I0M0H0T-1D0 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Volumetric_flow_rate"^^xsd:anyURI ;
    qudt:isoNormativeReference "http://www.iso.org/iso/catalogue_detail?csnumber=31889"^^xsd:anyURI ;
    qudt:latexDefinition "\\(q_V = \\frac{dV}{dt}\\), where \\(V\\) is volume and \\(t\\) is time."^^qudt:LatexString ;
    qudt:plainTextDescription "Volumetric Flow Rate, (also known as volume flow rate, rate of fluid flow or volume velocity) is the volume of fluid which passes through a given surface per unit time." ;
    qudt:symbol "q_V" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:sameAs quantitykind:VolumePerUnitTime .

brick:Quantity a owl:Class ;
    rdfs:label "Quantity" ;
    rdfs:subClassOf skos:Concept,
        sosa:ObservableProperty,
        brick:Measurable .

qudt:QuantityKindDimensionVector_CGS a owl:Class,
        sh:NodeShape ;
    rdfs:label "CGS Dimension vector" ;
    rdfs:comment "A <em>CGS Dimension Vector</em> is used to specify the dimensions for a C.G.S. quantity kind."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:QuantityKindDimensionVector .

qkdv:A0E0L3I0M0H0T-1D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L3I0M0H0T-1D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 3 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -1 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:VolumeFlowRate ;
    qudt:latexDefinition "\\(L^3 T^-1\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

unit:UNITLESS a qudt:CountingUnit,
        qudt:DimensionlessUnit,
        qudt:Unit,
        unit:Unit ;
    rdfs:label "Unitless"@en ;
    dcterms:description "An explicit unit to say something has no units."^^rdf:HTML ;
    qudt:conversionMultiplier 1.0 ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:hasQuantityKind quantitykind:Absorptance,
        quantitykind:ActivityCoefficient,
        quantitykind:AmountOfSubstanceFractionOfB,
        quantitykind:AtomScatteringFactor,
        quantitykind:AverageLogarithmicEnergyDecrement,
        quantitykind:BindingFraction,
        quantitykind:CanonicalPartitionFunction,
        quantitykind:CouplingFactor,
        quantitykind:Debye-WallerFactor,
        quantitykind:DegreeOfDissociation,
        quantitykind:Dimensionless,
        quantitykind:DimensionlessRatio,
        quantitykind:Dissipance,
        quantitykind:DoseEquivalentQualityFactor,
        quantitykind:EinsteinTransitionProbability,
        quantitykind:ElectricSusceptibility,
        quantitykind:Emissivity,
        quantitykind:EquilibriumConstant,
        quantitykind:FastFissionFactor,
        quantitykind:FrictionCoefficient,
        quantitykind:GFactorOfNucleus,
        quantitykind:GeneralizedCoordinate,
        quantitykind:GeneralizedForce,
        quantitykind:GeneralizedMomentum,
        quantitykind:GeneralizedVelocity,
        quantitykind:GruneisenParameter,
        quantitykind:InternalConversionFactor,
        quantitykind:IsentropicExponent,
        quantitykind:LandeGFactor,
        quantitykind:LeakageFactor,
        quantitykind:Lethargy,
        quantitykind:LogarithmicFrequencyInterval,
        quantitykind:Long-RangeOrderParameter,
        quantitykind:LossFactor,
        quantitykind:MadelungConstant,
        quantitykind:MagneticSusceptability,
        quantitykind:MassFraction,
        quantitykind:MassFractionOfDryMatter,
        quantitykind:MassFractionOfWater,
        quantitykind:MassRatioOfWaterToDryMatter,
        quantitykind:MassRatioOfWaterVapourToDryGas,
        quantitykind:MobilityRatio,
        quantitykind:MultiplicationFactor,
        quantitykind:NapierianAbsorbance,
        quantitykind:NeutronYieldPerAbsorption,
        quantitykind:NeutronYieldPerFission,
        quantitykind:Non-LeakageProbability,
        quantitykind:NumberOfParticles,
        quantitykind:OrderOfReflection,
        quantitykind:OsmoticCoefficient,
        quantitykind:PackingFraction,
        quantitykind:PoissonRatio,
        quantitykind:PowerFactor,
        quantitykind:QualityFactor,
        quantitykind:RadianceFactor,
        quantitykind:RatioOfSpecificHeatCapacities,
        quantitykind:Reactivity,
        quantitykind:Refectance,
        quantitykind:Reflectance,
        quantitykind:ReflectanceFactor,
        quantitykind:RefractiveIndex,
        quantitykind:RelativeHumidity,
        quantitykind:RelativeMassConcentrationOfVapour,
        quantitykind:RelativeMassDensity,
        quantitykind:RelativeMassExcess,
        quantitykind:RelativeMassRatioOfVapour,
        quantitykind:RelativePartialPressure,
        quantitykind:RelativePermittivity,
        quantitykind:ResonanceEscapeProbability,
        quantitykind:Short-RangeOrderParameter,
        quantitykind:StandardAbsoluteActivity,
        quantitykind:StatisticalWeight,
        quantitykind:StructureFactor,
        quantitykind:ThermalDiffusionFactor,
        quantitykind:ThermalDiffusionRatio,
        quantitykind:ThermalUtilizationFactor,
        quantitykind:TotalIonization,
        quantitykind:Transmittance,
        quantitykind:TransmittanceDensity,
        quantitykind:Turns ;
    qudt:symbol "U",
        "U"^^xsd:string ;
    qudt:unitOfSystem sou:CGS,
        sou:IMPERIAL,
        sou:SI,
        sou:USCS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

qkdv:A0E0L2I0M1H0T-2D0 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L2I0M1H0T-2D0" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 2 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 1 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime -2 ;
    qudt:dimensionlessExponent 0 ;
    qudt:hasReferenceQuantityKind quantitykind:Energy,
        quantitykind:Torque ;
    qudt:latexDefinition "\\(L^2\\,M\\,T^{-2}\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

tag:Command a brick:Tag ;
    rdfs:label "Command" .

tag:Limit a brick:Tag ;
    rdfs:label "Limit" .

tag:Heat a brick:Tag ;
    rdfs:label "Heat" .

tag:Hot a brick:Tag ;
    rdfs:label "Hot" .

tag:Alarm a brick:Tag ;
    rdfs:label "Alarm" .

tag:Room a brick:Tag ;
    rdfs:label "Room" .

sou:CGS a qudt:SystemOfUnits ;
    rdfs:label "CGS System of Units"@en ;
    qudt:abbreviation "CGS" ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Centimetre_gram_second_system_of_units"^^xsd:anyURI ;
    qudt:description "<p>The centimetre-gram-second system (abbreviated CGS or cgs) is a variant of the metric system of physical units based on centimetre as the unit of length, gram as a unit of mass, and second as a unit of time. All CGS mechanical units are unambiguously derived from these three base units, but there are several different ways of extending the CGS system to cover electromagnetism. The CGS system has been largely supplanted by the MKS system, based on metre, kilogram, and second. Note that the term cgs is ambiguous, since there are several variants with conflicting definitions of electromagnetic quantities and units. The unqualified term is generally associated with the Gaussian system of units, so this more precise URI is preferred.</p>"^^rdf:HTML ;
    qudt:hasBaseUnit unit:CentiM,
        unit:GM,
        unit:SEC,
        unit:UNITLESS ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Centimetre–gram–second_system_of_units"^^xsd:anyURI,
        "http://scienceworld.wolfram.com/physics/cgs.html"^^xsd:anyURI,
        "http://www.tf.uni-kiel.de/matwis/amat/mw1_ge/kap_2/basics/b2_1_14.html"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/sou> ;
    rdfs:seeAlso sou:CGS-EMU,
        sou:CGS-ESU,
        sou:CGS-GAUSS .

tag:Status a brick:Tag ;
    rdfs:label "Status" .

tag:Differential a brick:Tag ;
    rdfs:label "Differential" .

tag:Space a brick:Tag ;
    rdfs:label "Space" .

sou:USCS a qudt:SystemOfUnits ;
    rdfs:label "US Customary Unit System"@en ;
    qudt:abbreviation "US Customary" ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/United_States_customary_units"^^xsd:anyURI ;
    qudt:description "United States customary units are a system of measurements commonly used in the United States. Many U.S. units are virtually identical to their imperial counterparts, but the U.S. customary system developed from English units used in the British Empire before the system of imperial units was standardized in 1824. Several numerical differences from the imperial system are present. The vast majority of U.S. customary units have been defined in terms of the meter and the kilogram since the Mendenhall Order of 1893 (and, in practice, for many years before that date). These definitions were refined in 1959. The United States is the only industrialized nation that does not mainly use the metric system in its commercial and standards activities, although the International System of Units (SI, often referred to as \"metric\") is commonly used in the U.S. Armed Forces, in fields relating to science, and increasingly in medicine, aviation, and government as well as various sectors of industry. [Wikipedia]"^^rdf:HTML ;
    vaem:url "http://en.wikipedia.org/wiki/US_customary_units"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/sou> .

spl:Argument a spin:ConstructTemplate ;
    rdfs:label "Argument" ;
    spin:body [ a sp:Construct ;
            sp:templates ( [ sp:object spin:ConstraintViolation ;
                        sp:predicate rdf:type ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b1075 ] [ sp:object spin:_this ;
                        sp:predicate spin:violationRoot ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b1075 ] [ sp:object [ sp:varName "predicate" ] ;
                        sp:predicate spin:violationPath ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b1075 ] [ sp:object [ sp:varName "label" ] ;
                        sp:predicate rdfs:label ;
                        sp:subject _:n8c858f3f56d040bda9867753070ea430b1075 ] ) ;
            sp:where ( ( [ a sp:Filter ;
                            sp:expression [ a sp:isIRI ;
                                    sp:arg1 spin:_this ] ] ) [ a sp:Union ;
                        sp:elements ( ( ( ( [ a sp:Filter ;
                                                sp:expression [ a sp:or ;
                                                        sp:arg1 [ a sp:not ;
                                                                sp:arg1 [ a sp:bound ;
                                                                        sp:arg1 [ sp:varName "optional" ] ] ] ;
                                                        sp:arg2 [ a sp:eq ;
                                                                sp:arg1 [ sp:varName "optional" ] ;
                                                                sp:arg2 false ] ] ] ) [ a sp:Filter ;
                                            sp:expression [ a sp:notExists ;
                                                    sp:elements ( [ sp:object [ sp:varName "value" ] ;
                                                                sp:predicate [ sp:varName "predicate" ] ;
                                                                sp:subject spin:_this ] ) ] ] [ a sp:Filter ;
                                            sp:expression [ a sp:notExists ;
                                                    sp:elements ( [ sp:object [ sp:varName "template" ] ;
                                                                sp:predicate rdf:type ;
                                                                sp:subject spin:_this ] [ a sp:Filter ;
                                                                sp:expression [ a spl:instanceOf ;
                                                                        sp:arg1 [ sp:varName "template" ] ;
                                                                        sp:arg2 spl:UnionTemplate ] ] ) ] ] ) [ a sp:Bind ;
                                        sp:expression [ a sp:concat ;
                                                sp:arg1 "Missing value for argument " ;
                                                sp:arg2 [ a afn:localname ;
                                                        sp:arg1 [ sp:varName "predicate" ] ] ] ;
                                        sp:variable [ sp:varName "label" ] ] ) ( ( ( [ a sp:Filter ;
                                                sp:expression [ a sp:bound ;
                                                        sp:arg1 [ sp:varName "valueType" ] ] ] ) [ sp:object [ sp:varName "value" ] ;
                                            sp:predicate [ sp:varName "predicate" ] ;
                                            sp:subject spin:_this ] [ a sp:Filter ;
                                            sp:expression [ a sp:and ;
                                                    sp:arg1 [ a sp:not ;
                                                            sp:arg1 [ a spl:instanceOf ;
                                                                    sp:arg1 [ sp:varName "value" ] ;
                                                                    sp:arg2 [ sp:varName "valueType" ] ] ] ;
                                                    sp:arg2 [ a sp:or ;
                                                            sp:arg1 [ a sp:ne ;
                                                                    sp:arg1 [ sp:varName "valueType" ] ;
                                                                    sp:arg2 rdfs:Resource ] ;
                                                            sp:arg2 [ a sp:isLiteral ;
                                                                    sp:arg1 [ sp:varName "value" ] ] ] ] ] ) [ a sp:Bind ;
                                        sp:expression [ a sp:concat ;
                                                sp:arg1 "Incorrect type of argument " ;
                                                sp:arg2 [ a afn:localname ;
                                                        sp:arg1 [ sp:varName "predicate" ] ] ;
                                                sp:arg3 " (expected: " ;
                                                sp:arg4 [ a afn:localname ;
                                                        sp:arg1 [ sp:varName "valueType" ] ] ;
                                                sp:arg5 ")" ] ;
                                        sp:variable [ sp:varName "label" ] ] ) ) ] ) ] ;
    spin:constraint [ a spl:Argument ;
            spl:optional true ;
            spl:predicate spl:defaultValue ;
            rdfs:comment "the default value for the argument" ],
        [ a spl:Argument ;
            spl:optional true ;
            spl:predicate rdfs:comment ;
            spl:valueType xsd:string ;
            rdfs:comment "a comment describing the argument" ],
        [ a spl:Argument ;
            spl:optional true ;
            spl:predicate spl:valueType ;
            spl:valueType rdfs:Class ;
            rdfs:comment "the value type of the argument" ],
        [ a spl:Argument ;
            spl:predicate spl:predicate ;
            spl:valueType rdf:Property ;
            rdfs:comment "the property holding the values of each function call" ],
        [ a spl:Argument ;
            spl:optional true ;
            spl:predicate spl:optional ;
            spl:valueType xsd:boolean ;
            rdfs:comment "indicates whether the argument is optional" ] ;
    spin:labelTemplate "Argument {?predicate} : {?valueType}" ;
    rdfs:comment "Provides metadata about an argument of a SPIN Function or Template. Arguments wrap a given rdf:Property (predicate) and specify its value type and whether the argument is optional. When used as spin:constraint, the body of this template will verify that a non-optional value exists and that it has the specified value type. Arguments that have been declared spl:optional true become optional if the type of ?this is spl:UnionTemplate. " ;
    rdfs:subClassOf spin:ConstructTemplates .

tag:Discharge a brick:Tag ;
    rdfs:label "Discharge" .

qudt:CurrencyUnit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Currency Unit" ;
    rdfs:comment "Currency Units have their own subclass of unit because: (a) they have additonal properites such as 'country' and (b) their URIs do not conform to the same rules as other units."^^rdf:HTML,
        "Used for all units that express currency."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:DimensionlessUnit .

quantitykind:Currency a qudt:QuantityKind ;
    rdfs:label "Currency"@en ;
    qudt:applicableUnit unit:AFN,
        unit:AMD,
        unit:ARS,
        unit:AUD,
        unit:AWG,
        unit:AZN,
        unit:BBD,
        unit:BDT,
        unit:BHD,
        unit:BSD,
        unit:BYR,
        unit:BelizeDollar,
        unit:BermudaDollar,
        unit:BolivianMvdol,
        unit:Boliviano,
        unit:BrazilianReal,
        unit:BruneiDollar,
        unit:BulgarianLev,
        unit:BurundianFranc,
        unit:CAD,
        unit:CapeVerdeEscudo,
        unit:CaymanIslandsDollar,
        unit:Cedi,
        unit:ChileanPeso,
        unit:ColombianPeso,
        unit:ComoroFranc,
        unit:ConvertibleMark,
        unit:CordobaOro,
        unit:CostaRicanColon,
        unit:CroatianKuna,
        unit:CubanPeso,
        unit:CyprusPound,
        unit:CzechKoruna,
        unit:DZD,
        unit:Dalasi,
        unit:DanishKrone,
        unit:Denar,
        unit:DjiboutiFranc,
        unit:Dobra,
        unit:DominicanPeso,
        unit:EastCaribbeanDollar,
        unit:EgyptianPound,
        unit:EthiopianBirr,
        unit:Euro,
        unit:EuropeanCompositeUnit,
        unit:EuropeanMonetaryUnit,
        unit:EuropeanUnitOfAccount17,
        unit:EuropeanUnitOfAccount9,
        unit:FalklandIslandsPound,
        unit:FijiDollar,
        unit:Flight,
        unit:Forint,
        unit:FrancCongolais,
        unit:GibraltarPound,
        unit:Gold-OunceTroy,
        unit:GoldFranc,
        unit:Guarani,
        unit:GuineaFranc,
        unit:GuyanaDollar,
        unit:HaitiGourde,
        unit:HeartBeat,
        unit:HongKongDollar,
        unit:Hryvnia,
        unit:IcelandKrona,
        unit:IndianRupee,
        unit:IranianRial,
        unit:IraqiDinar,
        unit:JamaicanDollar,
        unit:JapaneseYen,
        unit:JordanianDinar,
        unit:KenyanShilling,
        unit:KiloGM-SEC2,
        unit:Kina,
        unit:Kroon,
        unit:KuwaitiDinar,
        unit:Kwanza,
        unit:Kyat,
        unit:LaoKip,
        unit:Lari,
        unit:LatvianLats,
        unit:LebanesePound,
        unit:Lek,
        unit:Lempira,
        unit:Leone,
        unit:LiberianDollar,
        unit:LibyanDinar,
        unit:Lilangeni,
        unit:LithuanianLitas,
        unit:Loti,
        unit:MDOLLAR-PER-FLIGHT,
        unit:MalagasyAriary,
        unit:MalawiKwacha,
        unit:MalaysianRinggit,
        unit:MalteseLira,
        unit:Manat,
        unit:MauritiusRupee,
        unit:Metical,
        unit:MexicanPeso,
        unit:MexicanUnidadDeInversion,
        unit:MillionUSD,
        unit:MillionUSD-PER-YR,
        unit:MoldovanLeu,
        unit:MoroccanDirham,
        unit:Naira,
        unit:Nakfa,
        unit:NamibianDollar,
        unit:NepaleseRupee,
        unit:NetherlandsAntillianGuilder,
        unit:NewIsraeliShekel,
        unit:NewTaiwanDollar,
        unit:NewTurkishLira,
        unit:NewZealandDollar,
        unit:Ngultrum,
        unit:NorthKoreanWon,
        unit:NorwegianKrone,
        unit:NuevoSol,
        unit:OmaniRial,
        unit:Ouguiya,
        unit:PAB,
        unit:PER-H,
        unit:Paanga,
        unit:PakistanRupee,
        unit:Palladium-OunceTroy,
        unit:Pataca,
        unit:PhilippinePeso,
        unit:Platinum-OunceTroy,
        unit:PoundSterling,
        unit:Pula,
        unit:QatariRial,
        unit:Quetzal,
        unit:Riel,
        unit:RomanianNeLeu,
        unit:Rufiyaa,
        unit:Rupiah,
        unit:RussianRuble,
        unit:RwandaFranc,
        unit:SaintHelenaPound,
        unit:SamoanTala,
        unit:SaudiRiyal,
        unit:SerbianDinar,
        unit:SeychellesRupee,
        unit:Silver-OunceTroy,
        unit:SingaporeDollar,
        unit:SlovakKoruna,
        unit:SolomonIslandsDollar,
        unit:Som,
        unit:SomaliShilling,
        unit:Somoni,
        unit:SouthAfricanRand,
        unit:SouthKoreanWon,
        unit:SpecialDrawingRights,
        unit:SriLankaRupee,
        unit:SudanesePound,
        unit:SurinamDollar,
        unit:SwedishKrona,
        unit:SwissFranc,
        unit:SyrianPound,
        unit:THB,
        unit:TanzanianShilling,
        unit:Tenge,
        unit:TrinidadAndTobagoDollar,
        unit:Tugrik,
        unit:TunisianDinar,
        unit:UAEDirham,
        unit:UICFranc,
        unit:USDollar,
        unit:USDollar-NextDay,
        unit:USDollar-SameDay,
        unit:UgandaShilling,
        unit:UnidadDeValorReal,
        unit:UnidadesDeFormento,
        unit:UruguayPeso,
        unit:UzbekistanSom,
        unit:Vatu,
        unit:VenezuelanBolvar,
        unit:VietnameseDong,
        unit:WIREuro,
        unit:WIRFranc,
        unit:XAF,
        unit:XOF,
        unit:XPF,
        unit:YemeniRial,
        unit:YuanRenminbi,
        unit:ZambianKwacha,
        unit:ZimbabweDollar,
        unit:Zloty ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Currency"^^xsd:anyURI ;
    qudt:hasDimensionVector qkdv:A0E0L0I0M0H0T0D1 ;
    qudt:informativeReference "http://en.wikipedia.org/wiki/Currency"^^xsd:anyURI ;
    qudt:plainTextDescription "In economics, currency is a generally accepted medium of exchange. These are usually the coins and banknotes of a particular government, which comprise the physical aspects of a nation's money supply. The other part of a nation's money supply consists of bank deposits (sometimes called deposit money), ownership of which can be transferred by means of cheques, debit cards, or other forms of money transfer. Deposit money and currency are money in the sense that both are acceptable as a means of payment." ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    skos:broader quantitykind:Asset .

tag:Supply a brick:Tag ;
    rdfs:label "Supply" .

qudt:QuantityKindDimensionVector_ISO a owl:Class,
        sh:NodeShape ;
    rdfs:label "ISO Dimension vector" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:QuantityKindDimensionVector .

qudt:QuantityKindDimensionVector_Imperial a owl:Class,
        sh:NodeShape ;
    rdfs:label "Imperial dimension vector" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:QuantityKindDimensionVector .

qudt:QuantityKindDimensionVector_SI a owl:Class,
        sh:NodeShape ;
    rdfs:label "Quantity Kind Dimension vector (SI)" ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:QuantityKindDimensionVector .

tag:Pressure a brick:Tag ;
    rdfs:label "Pressure" .

<http://qudt.org/2.1/vocab/dimensionvector> a owl:Ontology ;
    vaem:hasGraphMetadata vaem:GMD_QUDT-DIMENSION-VECTORS ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> ;
    owl:imports <http://qudt.org/2.1/schema/qudt> ;
    owl:versionIRI <http://qudt.org/2.1/vocab/dimensionvector> .

tag:Flow a brick:Tag ;
    rdfs:label "Flow" .

tag:Location a brick:Tag ;
    rdfs:label "Location" .

sh: a owl:Ontology ;
    rdfs:label "W3C Shapes Constraint Language (SHACL) Vocabulary"@en ;
    rdfs:comment "This vocabulary defines terms used in SHACL, the W3C Shapes Constraint Language."@en ;
    sh:declare [ sh:namespace "http://www.w3.org/ns/shacl#"^^xsd:anyURI ;
            sh:prefix "sh" ] ;
    sh:suggestedShapesGraph <http://www.w3.org/ns/shacl-shacl#> .

tag:Parameter a brick:Tag ;
    rdfs:label "Parameter" .

sou:IMPERIAL a qudt:SystemOfUnits ;
    rdfs:label "Imperial System of Units"@en ;
    qudt:abbreviation "Imperial" ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Imperial_units"^^xsd:anyURI ;
    qudt:description "A system of units formerly widely used in the UK and the rest of the English-speaking world. It includes the pound (lb), quarter (qt), hundredweight (cwt), and ton (ton); the foot (ft), yard (yd), and mile (mi); and the gallon (gal), British thermal unit (btu), etc. These units have been largely replaced by metric units, although Imperial units persist in some contexts. In January 2000 an EU regulation outlawing the sale of goods in Imperial measures was adopted into British law; an exception was made for the sale of beer and milk in pints. "^^rdf:HTML ;
    qudt:informativeReference "http://www.oxfordreference.com/view/10.1093/acref/9780199234899.001.0001/acref-9780199234899-e-3147"^^xsd:anyURI ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/sou> .

sou:SI a qudt:SystemOfUnits ;
    rdfs:label "International System of Units"@en ;
    qudt:abbreviation "SI" ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/International_System_of_Units"^^xsd:anyURI ;
    qudt:description "The International System of Units (abbreviated \\(SI\\) from French: Système international d'unités) is the modern form of the metric system and is generally a system of units of measurement devised around seven base units and the convenience of the number ten. The older metric system included several groups of units. The SI was established in 1960, based on the metre-kilogram-second system, rather than the centimetre-gram-second system, which, in turn, had a few variants."^^rdf:HTML ;
    qudt:hasBaseUnit unit:A,
        unit:CD,
        unit:K,
        unit:KiloGM,
        unit:M,
        unit:MOL,
        unit:SEC,
        unit:UNITLESS ;
    qudt:informativeReference "http://aurora.regenstrief.org/~ucum/ucum.html"^^xsd:anyURI,
        "http://physics.info/system-international/"^^xsd:anyURI,
        "http://physics.nist.gov/Pubs/SP811"^^xsd:anyURI,
        "http://www.nist.gov/pml/pubs/sp811/index.cfm"^^xsd:anyURI,
        "http://www.oxfordreference.com/view/10.1093/acref/9780198605225.001.0001/acref-9780198605225-e-1292"^^xsd:anyURI,
        "http://www.oxfordreference.com/view/10.1093/acref/9780199233991.001.0001/acref-9780199233991-appendix-0003"^^xsd:anyURI,
        "http://www.oxfordreference.com/view/10.1093/acref/9780199233991.001.0001/acref-9780199233991-e-2791"^^xsd:anyURI,
        "https://www.govinfo.gov/content/pkg/GOVPUB-C13-f10c2ff9e7af2091314396a2d53213e4/pdf/GOVPUB-C13-f10c2ff9e7af2091314396a2d53213e4.pdf"^^xsd:anyURI ;
    qudt:prefix prefix:Atto,
        prefix:Centi,
        prefix:Deca,
        prefix:Deci,
        prefix:Exa,
        prefix:Femto,
        prefix:Giga,
        prefix:Hecto,
        prefix:Kilo,
        prefix:Mega,
        prefix:Micro,
        prefix:Milli,
        prefix:Nano,
        prefix:Peta,
        prefix:Pico,
        prefix:Tera,
        prefix:Yocto,
        prefix:Yotta,
        prefix:Zepto,
        prefix:Zetta ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/sou> .

qudt:DerivedUnit a owl:Class,
        owl:DeprecatedClass,
        sh:NodeShape ;
    rdfs:label "Derived Unit" ;
    qudt:dbpediaMatch "http://dbpedia.org/resource/Category:SI_derived_units"^^xsd:anyURI ;
    rdfs:comment "A DerivedUnit is a type specification for units that are derived from other units."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Unit .

rdf:Property a sh:NodeShape ;
    sh:property [ sh:path rdfs:label ;
            sh:sparql [ a sh:SPARQLConstraint ;
                    sh:message "{$this} must have an  rdfs:label" ;
                    sh:prefixes <http://data.ashrae.org/standard223/1.0/validation/schema> ;
                    sh:select """
SELECT $this
WHERE {
BIND(REPLACE(STR($this), "^(.*)(/|#)([^#/]*)$", "$1") AS ?prop) .
FILTER (?prop = "http://data.ashrae.org/standard223") .
FILTER (NOT EXISTS {$this rdfs:label ?something}) .
}
""" ] ] .

tag:Water a brick:Tag ;
    rdfs:label "Water" .

tag:Equipment a brick:Tag ;
    rdfs:label "Equipment" .

tag:Temperature a brick:Tag ;
    rdfs:label "Temperature" .

qkdv:A0E0L0I0M0H0T0D1 a qudt:QuantityKindDimensionVector_CGS,
        qudt:QuantityKindDimensionVector_ISO,
        qudt:QuantityKindDimensionVector_Imperial,
        qudt:QuantityKindDimensionVector_SI ;
    rdfs:label "A0E0L0I0M0H0T0D1" ;
    qudt:dimensionExponentForAmountOfSubstance 0 ;
    qudt:dimensionExponentForElectricCurrent 0 ;
    qudt:dimensionExponentForLength 0 ;
    qudt:dimensionExponentForLuminousIntensity 0 ;
    qudt:dimensionExponentForMass 0 ;
    qudt:dimensionExponentForThermodynamicTemperature 0 ;
    qudt:dimensionExponentForTime 0 ;
    qudt:dimensionlessExponent 1 ;
    qudt:hasReferenceQuantityKind quantitykind:Dimensionless ;
    qudt:latexDefinition "\\(U\\)"^^qudt:LatexString ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/dimensionvector> .

tag:Sensor a brick:Tag ;
    rdfs:label "Sensor" .

<http://qudt.org/2.1/schema/qudt> a owl:Ontology ;
    rdfs:label "QUDT Schema - Version 2.1.15" ;
    ns1:createPropertyShapeURIsWithPrefixes true ;
    vaem:hasGraphMetadata vaem:GMD_QUDT-SCHEMA-SHACL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    owl:imports <http://qudt.org/2.1/schema/extensions/imports>,
        <http://qudt.org/2.1/schema/shacl/customisations/qudt>,
        <http://qudt.org/2.1/schema/shacl/overlay/qudt>,
        <http://www.linkedmodel.org/schema/dtype>,
        <http://www.linkedmodel.org/schema/vaem>,
        <http://www.w3.org/2004/02/skos/core> ;
    owl:versionIRI <http://qudt.org/2.1/schema/qudt> .

brick:Tag a owl:Class .

tag:Setpoint a brick:Tag ;
    rdfs:label "Setpoint" .

tag:Air a brick:Tag ;
    rdfs:label "Air" .

<http://qudt.org/2.1/vocab/quantitykind> a owl:Ontology ;
    rdfs:label "QUDT VOCAB Quantity Kinds  Release 2.1.15" ;
    vaem:hasGraphMetadata vaem:GMD_QUDT-QUANTITY-KINDS-ALL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> ;
    owl:imports <http://qudt.org/2.1/schema/qudt>,
        <http://qudt.org/2.1/vocab/dimensionvector> ;
    owl:versionIRI <http://qudt.org/2.1/vocab/quantitykind> .

qudt:QuantityKind a owl:Class,
        sh:NodeShape ;
    rdfs:label "Quantity Kind" ;
    qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=112-01-04"^^xsd:anyURI ;
    rdfs:comment "A <b>Quantity Kind</b> is any observable property that can be  measured and quantified numerically. Familiar examples include physical properties such as length, mass, time, force, energy, power, electric charge, etc. Less familiar examples include currency, interest rate, price to earning ratio, and information capacity."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:AbstractQuantityKind,
        qudt:Verifiable ;
    sh:property qudt:QuantityKind-qudt_applicableCGSUnit,
        qudt:QuantityKind-qudt_applicableISOUnit,
        qudt:QuantityKind-qudt_applicableImperialUnit,
        qudt:QuantityKind-qudt_applicableSIUnit,
        qudt:QuantityKind-qudt_applicableUSCustomaryUnit,
        qudt:QuantityKind-qudt_applicableUnit,
        qudt:QuantityKind-qudt_baseCGSUnitDimensions,
        qudt:QuantityKind-qudt_baseISOUnitDimensions,
        qudt:QuantityKind-qudt_baseImperialUnitDimensions,
        qudt:QuantityKind-qudt_baseSIUnitDimensions,
        qudt:QuantityKind-qudt_baseUSCustomaryUnitDimensions,
        qudt:QuantityKind-qudt_baseUnitDimensions,
        qudt:QuantityKind-qudt_belongsToSystemOfQuantities,
        qudt:QuantityKind-qudt_dimensionVectorForSI,
        qudt:QuantityKind-qudt_expression,
        qudt:QuantityKind-qudt_generalization,
        qudt:QuantityKind-qudt_hasDimensionVector,
        qudt:QuantityKind-qudt_latexDefinition,
        qudt:QuantityKind-qudt_mathMLdefinition,
        qudt:QuantityKind-qudt_qkdvDenominator,
        qudt:QuantityKind-qudt_qkdvNumerator .

tag:Point a brick:Tag ;
    rdfs:label "Point" .

<http://qudt.org/2.1/vocab/unit> a owl:Ontology ;
    rdfs:label "QUDT Units of Measure for All Units Release 2.1.15" ;
    vaem:hasGraphMetadata vaem:GMD_QUDT-UNITS-ALL ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> ;
    owl:imports <http://qudt.org/2.1/schema/qudt>,
        <http://qudt.org/2.1/vocab/prefix>,
        <http://qudt.org/2.1/vocab/quantitykind>,
        <http://qudt.org/2.1/vocab/sou> ;
    owl:versionIRI <http://qudt.org/2.1/vocab/unit> .

qudt:Unit a owl:Class,
        sh:NodeShape ;
    rdfs:label "Unit" ;
    qudt:informativeReference "http://dbpedia.org/resource/Category:Units_of_measure"^^xsd:anyURI,
        "http://www.allmeasures.com/Fullconversion.asp"^^xsd:anyURI ;
    rdfs:comment "A unit of measure, or unit, is a particular quantity value that has been chosen as a scale for measuring other quantities the same kind (more generally of equivalent dimension). For example, the meter is a quantity of length that has been rigorously defined and standardized by the BIPM (International Board of Weights and Measures). Any measurement of the length can be expressed as a number multiplied by the unit meter. More formally, the value of a physical quantity Q with respect to a unit (U) is expressed as the scalar multiple of a real number (n) and U, as  \\(Q = nU\\)."^^rdf:HTML ;
    rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
    rdfs:subClassOf qudt:Concept,
        qudt:Narratable,
        qudt:Verifiable ;
    sh:property qudt:Unit-qudt_abbreviation,
        qudt:Unit-qudt_conversionMultiplier,
        qudt:Unit-qudt_conversionOffset,
        qudt:Unit-qudt_denominatorDimensionVector,
        qudt:Unit-qudt_expression,
        qudt:Unit-qudt_hasDimensionVector,
        qudt:Unit-qudt_hasQuantityKind,
        qudt:Unit-qudt_iec61360Code,
        qudt:Unit-qudt_latexDefinition,
        qudt:Unit-qudt_latexSymbol,
        qudt:Unit-qudt_mathMLdefinition,
        qudt:Unit-qudt_numeratorDimensionVector,
        qudt:Unit-qudt_omUnit,
        qudt:Unit-qudt_siUnitsExpression,
        qudt:Unit-qudt_symbol,
        qudt:Unit-qudt_ucumCode,
        qudt:Unit-qudt_uneceCommonCode,
        qudt:Unit-qudt_unitOfSystem .

brick:hasTag a owl:AsymmetricProperty,
        owl:IrreflexiveProperty,
        owl:ObjectProperty ;
    rdfs:label "Has tag" ;
    rdfs:range brick:Tag ;
    owl:inverseOf brick:isTagOf ;
    skos:definition "The subject has the given tag"@en .

sh:this a rdfs:Resource ;
    rdfs:label "this"@en ;
    rdfs:comment "A node expression that represents the current focus node."@en ;
    rdfs:isDefinedBy sh: .

[] sh:class s223:EnumerationValue .

[] sh:description "This shape will only be satisfied by a complete model, but not by model fragments such as those provided by vendors, since the systemConnectionPoints will not be connected. For this reason, the shape is by default deactivated." .

